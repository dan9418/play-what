{"version":3,"file":"component---src-components-pages-pod-list-page-tsx-ad1fcb3a22b62dbbafe0.js","mappings":"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","sources":["webpack://play-what/./src/components/collection/CollectionTable.tsx","webpack://play-what/./src/components/layout/PageBody.tsx","webpack://play-what/./src/components/layout/Pane.tsx","webpack://play-what/./src/viewers/grand-staff/GrandStaff.tsx","webpack://play-what/./src/components/cards/DetailsCard.tsx","webpack://play-what/./src/components/cards/GuitarCard.tsx","webpack://play-what/./src/components/cards/ModeCard.tsx","webpack://play-what/./src/components/cards/PianoCard.tsx","webpack://play-what/./src/components/collection/CollectionList.tsx","webpack://play-what/./src/components/cards/RelatedCard.tsx","webpack://play-what/./src/components/cards/RomanNumeralsCard.tsx","webpack://play-what/./src/components/inputs/RootInput.tsx","webpack://play-what/./src/components/cards/RootCard.tsx","webpack://play-what/./src/components/pages/PodListPage.tsx","webpack://play-what/./src/viewers/fretboard/Fretboard.styles.tsx","webpack://play-what/./src/viewers/fretboard/FretLabel.tsx","webpack://play-what/./src/viewers/fretboard/Fretboard.tsx","webpack://play-what/./src/viewers/fretboard/Fretboard.tuning.ts","webpack://play-what/./src/viewers/fretboard/Fretboard.utils.ts","webpack://play-what/./src/viewers/keyboard/Keyboard.defaults.ts","webpack://play-what/./src/viewers/keyboard/Keyboard.styles.tsx","webpack://play-what/./src/viewers/keyboard/KeyboardKey.tsx","webpack://play-what/./src/viewers/keyboard/Keyboard.tsx"],"sourcesContent":["import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { useRoot, useRootSuffix } from \"../../contexts/PagePropsContext\";\r\nimport Chord from \"../../core/models/Chord\";\r\nimport { IModelConfig, ModelType } from \"../../core/models/Model.constants\";\r\nimport Scale from \"../../core/models/Scale\";\r\n\r\nconst StyledCollectionTable = styled.table`\r\n    width: 100%;\r\n    margin: auto;\r\n    border-collapse: collapse;\r\n    white-space: nowrap;\r\n\r\n    td {  \r\n        &:not(:first-child) {\r\n            font-size: 80%;\r\n        }\r\n    }\r\n\r\n    td, th {\r\n        line-height: 32px;\r\n        text-align: center;\r\n        \r\n        &:not(:first-child) {\r\n            width: 32px;\r\n            height: 32px;\r\n\r\n            display: none;\r\n            @media(min-width: 512px) {\r\n                display: table-cell;\r\n            }\r\n        }\r\n\r\n        &:first-child {\r\n            text-align: left;\r\n            padding: 0 8px;\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    td {\r\n        //border-right: 1px solid ${props => props.theme.utils.border};\r\n        //border-bottom: 1px solid ${props => props.theme.utils.border};\r\n        &.active {\r\n            background-color: ${props => props.theme.surface.bg};\r\n        }\r\n    }\r\n\r\n    thead {\r\n        text-transform: uppercase;\r\n        font-size: 80%;\r\n        \r\n        @media(max-width: 511px) {\r\n            display: none;\r\n        }\r\n        tr th {\r\n            background-color: ${props => props.theme.surface.nav};\r\n            color: ${({ theme }) => theme.text.inverted};\r\n        }\r\n        \r\n        th:first-child {\r\n            border-radius: 8px 0 0 8px;\r\n        }\r\n        th:last-child {\r\n            border-radius: 0 8px 8px 0;\r\n        }\r\n    }\r\n\r\n    a {\r\n        display: block;\r\n    }\r\n`;\r\n\r\nexport interface ICollectionTableProps {\r\n    data: IModelConfig[];\r\n    semitones?: number[];\r\n}\r\n\r\nconst SEMITONES = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\r\n\r\nconst CollectionTable: React.FC<ICollectionTableProps> = ({ data, semitones = [] }) => {\r\n    const rootSuffix = useRootSuffix();\r\n    const root = useRoot();\r\n    return (\r\n        <StyledCollectionTable>\r\n            <thead>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th colSpan={12}>{root ? 'Notes' : 'Intervals'}</th>\r\n                    {/*SEMITONES.map((h, i) => <th key={i}>{h}</th>)*/}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    data.map((d, i) => {\r\n                        const cl = d.modelType === ModelType.Chord ? Chord : Scale;\r\n                        const model = new cl(d.modelId, { root });\r\n\r\n                        return (\r\n                            <tr key={i}>\r\n                                <td>\r\n                                    <Link to={`/browse/${model.modelType}/${model.modelId}/${rootSuffix}`}>\r\n                                        {model.getShortName()}\r\n                                    </Link>\r\n                                </td>\r\n                                {SEMITONES.map((h, i) => {\r\n                                    const index = model.intervals.findIndex(ivl => ivl.pod[0] + 1 === h);\r\n                                    const className = semitones.includes(h) ? 'active' : '';\r\n                                    if (index < 0) return <td key={i} className={className} />;\r\n                                    const mod = root ? model.notes[index] : model.intervals[index];\r\n                                    return (\r\n                                        <td key={i} className={className}>\r\n                                            {mod.getName()}\r\n                                        </td>\r\n                                    );\r\n                                })}\r\n                            </tr>\r\n                        );\r\n                    })\r\n                }\r\n            </tbody>\r\n        </StyledCollectionTable>\r\n    );\r\n};\r\n\r\nexport default CollectionTable;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledPageBody = styled.div`\r\n\twidth: 100%;\r\n\t//max-width: 1920px;\r\n\tmax-width: 1024px;\r\n\tmin-height: calc(100vh - 96px);\r\n    \r\n\tmargin: auto;\r\n\tpadding: 16px;\r\n`\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledDoublePane = styled.div`\r\n\tdisplay: grid;\r\n\tgap: 16px;\r\n\tgrid-template-columns: 1fr;\r\n\t@media(min-width: 512px) {\r\n\t\tgrid-template-columns: 3fr 2fr;\r\n\t}\r\n`\r\n\r\nexport const StyledPane = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: 16px;\r\n\tmargin: 16px 0;\r\n`\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Card, { CardHeader } from '../../components/ui/Card';\r\n\r\nconst NOTES = [\r\n    {\r\n        note: 'F5',\r\n        staff: 'treble',\r\n        line: true\r\n    },\r\n    {\r\n        note: 'E5',\r\n        staff: 'treble',\r\n        line: false\r\n    },\r\n    {\r\n        note: 'D5',\r\n        staff: 'treble',\r\n        line: true\r\n    },\r\n    {\r\n        note: 'C5',\r\n        staff: 'treble',\r\n        line: false\r\n    },\r\n    {\r\n        note: 'B5',\r\n        staff: 'treble',\r\n        line: true\r\n    },\r\n    {\r\n        note: 'A5',\r\n        staff: 'treble',\r\n        line: false\r\n    },\r\n    {\r\n        note: 'G4',\r\n        staff: 'treble',\r\n        line: true\r\n    },\r\n    {\r\n        note: 'F4',\r\n        staff: 'treble',\r\n        line: false\r\n    },\r\n    {\r\n        note: 'E4',\r\n        staff: 'treble',\r\n        line: true\r\n    },\r\n    {\r\n        note: 'D4',\r\n        staff: 'treble',\r\n        line: false\r\n    },\r\n    {\r\n        note: 'C4',\r\n        staff: null,\r\n        line: true\r\n    },\r\n    {\r\n        note: 'B4',\r\n        staff: 'bass',\r\n        line: false\r\n    },\r\n    {\r\n        note: 'A4',\r\n        staff: 'bass',\r\n        line: true\r\n    },\r\n    {\r\n        note: 'G3',\r\n        staff: 'bass',\r\n        line: false\r\n    },\r\n    {\r\n        note: 'F3',\r\n        staff: 'bass',\r\n        line: true\r\n    },\r\n    {\r\n        note: 'E3',\r\n        staff: 'bass',\r\n        line: false\r\n    },\r\n    {\r\n        note: 'D3',\r\n        staff: 'bass',\r\n        line: true\r\n    },\r\n    {\r\n        note: 'C3',\r\n        staff: 'bass',\r\n        line: false\r\n    },\r\n    {\r\n        note: 'B3',\r\n        staff: 'bass',\r\n        line: true\r\n    },\r\n    {\r\n        note: 'A3',\r\n        staff: 'bass',\r\n        line: false\r\n    },\r\n    {\r\n        note: 'G2',\r\n        staff: 'bass',\r\n        line: true\r\n    },\r\n];\r\n\r\nconst StyledGrandStaff = styled.div`\r\n    .staff {\r\n        border-right: 4px solid black;\r\n        border-left: 4px solid black;\r\n    }\r\n\r\n    .note {\r\n        margin: auto;\r\n        width: 32px;\r\n        &.treble, &.bass {\r\n            width: 100%;\r\n        }\r\n        &.line {\r\n            border-top: 1px solid black;\r\n        }\r\n        &:not(.line) {\r\n            height: 12px;\r\n        }\r\n    }\r\n`\r\n\r\nconst GrandStaff = ({ model }) => {\r\n    return null;\r\n    return (\r\n        <StyledGrandStaff>\r\n            <Card >\r\n                <CardHeader title=\"Grand Staff\" />\r\n                <div className='staff'>\r\n                    {NOTES.map(n => <div className={`note ${n.note} ${n.line ? 'line' : ''} ${n.staff || ''}`} />)}\r\n                </div>\r\n            </Card>\r\n        </StyledGrandStaff>\r\n    );\r\n}\r\n\r\nexport default GrandStaff;\r\n","import React from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport NumberUtils from \"../../core/general/Number.utils\";\r\nimport Note from \"../../core/models/Note\";\r\nimport { octaveState } from \"../../state/state\";\r\nimport { CardHeader, StyledCard } from \"../ui/Card\";\r\n\r\nconst StyledDetailsCard = styled(StyledCard)`\r\n    .header {\r\n        display: none;\r\n        @media(min-width: 512px) {\r\n            display: unset;\r\n        }\r\n    }\r\n    table {\r\n        margin: auto;\r\n        border-collapse: collapse;\r\n\r\n        &.mobile {\r\n            display: table;\r\n            @media(min-width: 512px) {\r\n                display: none;\r\n            }\r\n        }\r\n        &.desktop {\r\n            display: none;\r\n            @media(min-width: 512px) {\r\n                display: table;\r\n            }\r\n            th {\r\n                display: none;\r\n            }\r\n        }\r\n\r\n        td, th {\r\n            padding: 4px;\r\n            @media(min-width: 512px) {\r\n                padding: 4px 8px;\r\n            }\r\n            text-align: center;\r\n        }\r\n\r\n        th {\r\n            text-transform: uppercase;\r\n            font-size: 80%;\r\n        }\r\n\r\n        .featured {\r\n            font-weight: bold;\r\n            font-size: 150%;\r\n            @media(min-width: 512px) {\r\n                font-size: 200%;\r\n            }\r\n        }\r\n\r\n        .interval {\r\n            font-size: 120%;\r\n            @media(min-width: 512px) {\r\n                font-size: 150%;\r\n            }\r\n        }\r\n\r\n        .ratio, .frequency {\r\n            color: ${props => props.theme.text.secondary};\r\n            font-size: 80%;\r\n            @media(min-width: 512px) {\r\n                font-size: 100%;\r\n            }\r\n        }\r\n\r\n        .root {\r\n            color: red;\r\n        }\r\n    }\r\n`;\r\n\r\nconst NoteCell = ({ note, i }) => {\r\n    if (!note) return null;\r\n    return (\r\n        <td className={`note featured ${i === 0 ? 'root' : ''}`}>{note.name}<sub>{note.getOctave()}</sub></td>\r\n    );\r\n};\r\n\r\nconst IntervalCell = ({ interval, isFeatured }) => {\r\n    return (\r\n        <td className={`interval ${isFeatured ? 'featured' : ''}`}>{interval.getName()}</td>\r\n    );\r\n};\r\n\r\nconst PitchCell = ({ note }) => {\r\n    if (!note) return null;\r\n    return (\r\n        <td className={`frequency`}>{note.getFrequency(true)}</td>\r\n    );\r\n};\r\n\r\nconst RatioCell = ({ interval }) => {\r\n    return (\r\n        <td className={`ratio`}>{interval.getRatio()}</td>\r\n    );\r\n};\r\n\r\nconst DetailsCard: React.FC<any> = ({ model }) => {\r\n    const intervals = model.intervals;\r\n    const octave = useRecoilValue(octaveState);\r\n    const notes = model.notes && model.notes.map(n => new Note([\r\n        (octave - 4) * 12 + NumberUtils.modulo(n.pod[0], 12),\r\n        n.pod[1]\r\n    ]));\r\n\r\n    if (!intervals && !notes) return null;\r\n\r\n    return (\r\n        <StyledDetailsCard $n={intervals.length}>\r\n            <CardHeader title={notes ? 'Notes' : 'Intervals'} />\r\n            <table className=\"mobile\">\r\n                <thead>\r\n                    <tr>\r\n                        {notes && <th>Note</th>}\r\n                        <th>Interval</th>\r\n                        {notes && <th>Pitch</th>}\r\n                        <th>Ratio</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {intervals.map((ivl, i) => {\r\n                        const note = notes && notes[i];\r\n                        return (\r\n                            <tr key={ivl.modelId}>\r\n                                <NoteCell note={note} i={i} />\r\n                                <IntervalCell interval={ivl} isFeatured={!note} />\r\n                                <PitchCell note={note} />\r\n                                <RatioCell interval={ivl} />\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n            <table className=\"desktop\">\r\n                <tbody>\r\n                    {notes && <tr>\r\n                        <th>Note</th>\r\n                        {notes.map((note, i) => <NoteCell note={note} key={i} i={i} />)}\r\n                    </tr>}\r\n                    <tr>\r\n                        <th>Interval</th>\r\n                        {intervals.map((ivl, i) => <IntervalCell interval={ivl} key={i} isFeatured={!notes} />)}\r\n                    </tr>\r\n                    {notes && <tr>\r\n                        <th>Pitch</th>\r\n                        {notes.map((note, i) => <PitchCell note={note} key={i} />)}\r\n                    </tr>}\r\n                    <tr>\r\n                        <th>Ratio</th>\r\n                        {intervals.map((ivl, i) => <RatioCell interval={ivl} key={i} />)}\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </StyledDetailsCard >\r\n    );\r\n};\r\n\r\nexport default DetailsCard;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport Fretboard from \"../../viewers/fretboard/Fretboard\";\r\nimport Card from \"../ui/Card\";\r\n\r\nconst StyledGuitarCard = styled.div`\r\n\r\n`;\r\n\r\n\r\nconst GuitarCard: React.FC<any> = ({ model }) => {\r\n\r\n    if (!model.root || !model.intervals) return null;\r\n\r\n    const qp = new URLSearchParams({\r\n        modelId: model.modelId,\r\n        modelType: model.modelType,\r\n        rootId: model.root.modelId,\r\n    });\r\n\r\n    return (\r\n        <Card title=\"Fretboard\" action={<Link to={`/view/fretboard?${qp.toString()}`}>Edit</Link>}>\r\n            <StyledGuitarCard>\r\n                <Fretboard\r\n                    model={model}\r\n                />\r\n            </StyledGuitarCard>\r\n        </Card >\r\n    );\r\n};\r\n\r\nexport default GuitarCard;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { useRootSuffix } from \"../../contexts/PagePropsContext\";\r\nimport { Tag } from \"../../core/models/Model.constants\";\r\nimport { SCALE_PRESETS } from \"../../core/models/Model.presets\";\r\nimport Card from \"../ui/Card\";\r\n\r\nconst StyledModeCard = styled.div`\r\n    ul {\r\n        display: flex;\r\n        justify-content: space-around;\r\n        gap: 4px;\r\n        flex-wrap: wrap;\r\n        a {\r\n            padding: 4px;\r\n            &.active {\r\n                font-weight: bold;\r\n                text-decoration: underline;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst ModeCard: React.FC<any> = ({ model }) => {\r\n\r\n    const rootSuffix = useRootSuffix();\r\n\r\n    const type = model.tags.find(t =>\r\n        t === Tag.Diatonic ||\r\n        t === Tag.Pentatonic ||\r\n        t === Tag.MelodicMode ||\r\n        t === Tag.HarmonicMode\r\n    );\r\n\r\n    if (!type) return null;\r\n\r\n    let modeType = '';\r\n    switch (type) {\r\n        case Tag.Diatonic:\r\n            modeType = 'Diatonic';\r\n            break;\r\n        case Tag.Pentatonic:\r\n            modeType = 'Pentatonic';\r\n            break;\r\n        case Tag.MelodicMode:\r\n            modeType = 'Melodic Minor';\r\n            break;\r\n        case Tag.HarmonicMode:\r\n            modeType = 'Harmonic Minor';\r\n            break;\r\n    }\r\n\r\n    const modes = SCALE_PRESETS.filter(p => p.tags.includes(type));\r\n\r\n    return (\r\n        <Card\r\n            title={`${modeType} Modes`}\r\n        >\r\n            <StyledModeCard>\r\n                <ul>\r\n                    {modes.map(n => (\r\n                        <li key={n.modelId}>\r\n                            <Link to={`/browse/${n.modelType}/${n.modelId}/${rootSuffix}`} className={model.modelId === n.modelId ? 'active' : ''}>{n.name}</Link>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </StyledModeCard>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ModeCard;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport Keyboard from \"../../viewers/keyboard/Keyboard\";\r\nimport DEFAULT_KEYBOARD_PROPS from \"../../viewers/keyboard/Keyboard.defaults\";\r\nimport Card from \"../ui/Card\";\r\n\r\nconst StyledPianoCard = styled.div`\r\n   \r\n`;\r\n\r\n\r\nconst PianoCard: React.FC<any> = ({ model }) => {\r\n\r\n    if (!model.root || !model.intervals) return null;\r\n\r\n    const qp = new URLSearchParams({\r\n        modelId: model.modelId,\r\n        modelType: model.modelType,\r\n        rootId: model.root.modelId,\r\n    });\r\n\r\n    return (\r\n        <Card title=\"Keyboard\" action={<Link to={`/view/keyboard?${qp.toString()}`}>Edit</Link>}>\r\n            <StyledPianoCard>\r\n                <Keyboard\r\n                    keyRange={DEFAULT_KEYBOARD_PROPS.keyRange as [number, number]}\r\n                    model={model}\r\n                />\r\n            </StyledPianoCard>\r\n        </Card >\r\n    );\r\n};\r\n\r\nexport default PianoCard;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { useRoot, useRootSuffix } from \"../../contexts/PagePropsContext\";\r\nimport Chord from \"../../core/models/Chord\";\r\nimport { ModelType } from \"../../core/models/Model.constants\";\r\nimport Scale from \"../../core/models/Scale\";\r\n\r\nconst StyledCollectionList = styled.ul`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 8px;\r\n\r\n    a {\r\n        padding: 2px; \r\n    }\r\n    li {\r\n        &:not(:last-child) {\r\n            ::after {\r\n                content: ', ';\r\n                color: ${props => props.theme.text.secondary};\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\ninterface ICollectionListProps {\r\n    data: any[]\r\n}\r\n\r\nconst CollectionList: React.FC<ICollectionListProps> = ({ data }) => {\r\n    const rootSuffix = useRootSuffix();\r\n    const root = useRoot();\r\n    return (\r\n        <StyledCollectionList>\r\n            {\r\n                data.map(d => {\r\n                    const cl = d.modelType === ModelType.Chord ? Chord : Scale;\r\n                    // @ts-ignore\r\n                    const model = new cl(d.modelId, { root });\r\n\r\n                    return (\r\n                        <li key={d.modelId}>\r\n                            <Link to={`/browse/${d.modelType}/${d.modelId}/${rootSuffix}`}>\r\n                                {model.name}\r\n                            </Link>\r\n                        </li>\r\n                    );\r\n                })\r\n            }\r\n        </StyledCollectionList>\r\n    );\r\n};\r\n\r\nexport default CollectionList;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { useRootSuffix } from \"../../contexts/PagePropsContext\";\r\nimport { ModelType } from \"../../core/models/Model.constants\";\r\nimport { CHORD_PRESETS, NOTE_PRESETS, SCALE_PRESETS } from \"../../core/models/Model.presets\";\r\nimport CollectionList from \"../collection/CollectionList\";\r\nimport CollectionTable from \"../collection/CollectionTable\";\r\nimport Card from \"../ui/Card\";\r\n\r\nconst RelatedCard: React.FC<any> = ({ model }) => {\r\n\r\n    const rootSuffix = useRootSuffix();\r\n\r\n    const subchords = model.getSubchords();\r\n    const subscales = model.getSubscales();\r\n    const superchords = model.getSuperchords();\r\n    const superscales = model.getSuperscales();\r\n\r\n    const semitones = model.intervals.map(ivl => ivl.pod[0] + 1);\r\n\r\n    return (\r\n        <>\r\n\r\n            {false && <Card title=\"Other Roots\">\r\n                <ul>\r\n                    {NOTE_PRESETS.map(s => (\r\n                        <li key={s.modelId}><Link to={`/browse/chords/${model.modelId}/${s.modelId}/${rootSuffix}`}>{s.name} {/*model.name*/}</Link></li>\r\n                    ))}\r\n                </ul>\r\n            </Card>}\r\n\r\n            {subchords.length > 0 &&\r\n                <Card title=\"Child Chords\">\r\n                    <CollectionTable data={subchords} semitones={semitones} />\r\n                </Card>\r\n            }\r\n            {superchords.length > 0 &&\r\n                <Card title=\"Parent Chords\">\r\n                    <CollectionTable data={superchords} semitones={semitones} />\r\n                </Card>\r\n            }\r\n            {subscales.length > 0 &&\r\n                <Card title=\"Child Scales\">\r\n                    <CollectionTable data={subscales} semitones={semitones} />\r\n                </Card>\r\n            }\r\n            {superscales.length > 0 &&\r\n                <Card title=\"Parent Scales\">\r\n                    <CollectionTable data={superscales} semitones={semitones} />\r\n                </Card>\r\n            }\r\n            {model.modelType === ModelType.Chord &&\r\n                <Card title=\"Other Chords\">\r\n                    <CollectionList data={CHORD_PRESETS} />\r\n                </Card>\r\n            }\r\n            {model.modelType === ModelType.Scale &&\r\n                <Card title=\"Other Scales\">\r\n                    <CollectionList data={SCALE_PRESETS} />\r\n                </Card>\r\n            }\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RelatedCard;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport Card from \"../ui/Card\";\r\n\r\nconst StyledRomanNumeralsCard = styled.div`\r\n    table {\r\n        border-collapse: collapse;\r\n        width: 100%;\r\n\r\n        th {\r\n            //color: ${props => props.theme.brand.accent};\r\n            &:first-child {\r\n                text-align: right;\r\n            }\r\n            padding: 4px;\r\n        }\r\n        \r\n        td {\r\n            padding: 4px;\r\n            text-align: center;\r\n        }\r\n\r\n        .numeral td {\r\n            font-size: 160%;\r\n            font-family: serif;\r\n        }\r\n    }\r\n\r\n    sup {\r\n        font-size: 80%;\r\n    }\r\n`;\r\n\r\nconst RomanNumeralsCard: React.FC<any> = ({ model }) => {\r\n\r\n    const numerals = model.getAllNumerals();\r\n\r\n    if (!numerals.length) return null;\r\n\r\n    return (\r\n        <Card\r\n            title=\"Roman Numerals\"\r\n        >\r\n            <StyledRomanNumeralsCard>\r\n                <table>\r\n                    <tbody>\r\n                        <tr className=\"numeral\">\r\n                            <th>Numeral</th>\r\n                            {numerals.map((n, i) => {\r\n                                const [numeral, symbol] = n.getNumeralParts(i + 1)\r\n                                return (\r\n                                    <td key={i} className=\"numeral\">\r\n                                        {numeral}\r\n                                        <sup className=\"symbol\">{symbol}</sup>\r\n                                    </td>\r\n                                );\r\n                            })}\r\n                        </tr>\r\n                        <tr>\r\n                            <th>Degree</th>\r\n                            {numerals.map((n, i) => (\r\n                                <th key={i}>\r\n                                    {i + 1}\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            {numerals.map((n, i) => (\r\n                                <td key={i}>\r\n                                    <Link to={`/browse/${n.modelType}/${n.modelId}/${n.root ? `root/${n.root.modelId}` : ''}`}>{n.getShortName()}</Link>\r\n                                </td>\r\n                            ))}\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </StyledRomanNumeralsCard>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default RomanNumeralsCard;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport styled from 'styled-components';\r\nimport { usePageProps, useRoot } from \"../../contexts/PagePropsContext\";\r\nimport { NoteId } from \"../../core/models/Model.constants\";\r\nimport { NOTE_PRESET_MAP } from \"../../core/models/Model.presets\";\r\nimport { octaveState } from \"../../state/state\";\r\nimport InputRow from \"../ui/InputRow\";\r\nimport DropdownInput from \"./DropdownInput\";\r\n\r\nconst StyledRootInput = styled.div`\r\n    display: grid;\r\n    grid-template-rows: repeat(3, 1fr);\r\n    width: 100%;\r\n\r\n    @media(min-width: 512px) {\r\n\r\n    }\r\n\r\n    .spelling, .accidental {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        gap: 4px;\r\n    }\r\n\r\n    .accidental > a:nth-child(2) {\r\n        width: 64px\r\n    }\r\n\r\n    a {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n\r\n        height: 32px;\r\n        width: 32px;\r\n        border-radius: 4px;\r\n\r\n        &:hover, &.active {\r\n            background-color: ${props => props.theme.action.active};\r\n            color: white;\r\n        }\r\n    }\r\n`;\r\n\r\nconst OCTAVE_OPTIONS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map((x, i) => ({ id: i + 1, name: i + 1 }))\r\n\r\nconst RootInput: React.FC<any> = () => {\r\n    const root = useRoot();\r\n    const pageProps = usePageProps();\r\n    const { path } = pageProps;\r\n\r\n    const rootIndex = pageProps.path.lastIndexOf('root');\r\n    const basePath = root ?\r\n        path.slice(0, rootIndex) :\r\n        path;\r\n    const rootKey = root ?\r\n        path.slice(rootIndex + 5, rootIndex + 6) :\r\n        path;\r\n\r\n    const [octave, setOctave] = useRecoilState(octaveState);\r\n\r\n    return (\r\n        <StyledRootInput>\r\n            <InputRow label=\"Spelling\" y>\r\n                <div className=\"spelling\">\r\n                    <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.C}`} >{NOTE_PRESET_MAP.get(NoteId.C).name}</Link>\r\n                    <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.D}`} >{NOTE_PRESET_MAP.get(NoteId.D).name}</Link>\r\n                    <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.E}`} >{NOTE_PRESET_MAP.get(NoteId.E).name}</Link>\r\n                    <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.F}`} >{NOTE_PRESET_MAP.get(NoteId.F).name}</Link>\r\n                    <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.G}`} >{NOTE_PRESET_MAP.get(NoteId.G).name}</Link>\r\n                    <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.A}`} >{NOTE_PRESET_MAP.get(NoteId.A).name}</Link>\r\n                    <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.B}`} >{NOTE_PRESET_MAP.get(NoteId.B).name}</Link>\r\n                </div>\r\n            </InputRow>\r\n            {root && (\r\n                <>\r\n                    <InputRow label=\"Accidental\" y>\r\n                        <div className=\"accidental\">\r\n                            <Link activeClassName=\"active\" to={`${basePath}root/${rootKey}-flat`} >b</Link>\r\n                            <Link activeClassName=\"active\" to={`${basePath}root/${rootKey}`} >none</Link>\r\n                            <Link activeClassName=\"active\" to={`${basePath}root/${rootKey}-sharp`} >#</Link>\r\n                        </div>\r\n                    </InputRow>\r\n                    <InputRow label=\"Octave\" y>\r\n                        <DropdownInput options={OCTAVE_OPTIONS} value={{ id: octave }} setValue={o => setOctave(o.id)} />\r\n                    </InputRow>\r\n                </>\r\n            )}\r\n        </StyledRootInput>\r\n    );\r\n};\r\n\r\nexport default RootInput;\r\n","import { navigate } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport styled from 'styled-components';\r\nimport { usePageProps, useRoot } from \"../../contexts/PagePropsContext\";\r\nimport { isEditingKeyState, octaveState } from \"../../state/state\";\r\nimport ButtonInput from \"../inputs/ButtonInput\";\r\nimport RootInput from \"../inputs/RootInput\";\r\nimport Card from \"../ui/Card\";\r\n\r\nconst StyledRoot = styled.div`\r\n    margin-top: 8px;\r\n    .preview {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        font-size: 300%;\r\n    }\r\n    .rootless {\r\n        margin: 8px 0 16px;\r\n    }\r\n`;\r\n\r\nconst RootCard: React.FC<any> = () => {\r\n    const root = useRoot();\r\n    const pageProps = usePageProps();\r\n    const [octave, setOctave] = useRecoilState(octaveState);\r\n    const [isEditing, setIsEditing] = useRecoilState(isEditingKeyState);\r\n\r\n    const modelType = pageProps.path.includes('chord') ? 'chord' : 'scale';\r\n\r\n    const onClear = () => {\r\n        const rootIndex = pageProps.path.lastIndexOf('root');\r\n        const sanitized = rootIndex === -1 ?\r\n            pageProps.path :\r\n            pageProps.path.slice(0, rootIndex);\r\n        navigate(sanitized);\r\n    }\r\n\r\n    const toggle = (\r\n        <ButtonInput isLink onClick={() => setIsEditing(!isEditing)}>\r\n            {isEditing ? 'Done' : 'Edit'}\r\n        </ButtonInput>\r\n    );\r\n\r\n    const remove = root ? (\r\n        <ButtonInput isLink onClick={onClear}>\r\n            Remove\r\n        </ButtonInput>\r\n    ) : null;\r\n\r\n    return (\r\n        <Card title=\"Root\" action={root && toggle}>\r\n            <StyledRoot>\r\n                {!root && (\r\n                    <div className=\"rootless\">\r\n                        <b>This {modelType} does not have a root.</b>\r\n                        <br />\r\n                        Please select a root to see the notes.\r\n                    </div>\r\n                )}\r\n                {(isEditing || !root) && (\r\n                    <RootInput />\r\n                )}\r\n\r\n                {(!isEditing && root) && (\r\n                    <div className=\"preview\">\r\n                        <b>{root.name}</b>\r\n                        <sub>{octave}</sub>\r\n                    </div>\r\n                )}\r\n            </StyledRoot>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default RootCard;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { useRoot } from \"../../contexts/PagePropsContext\";\r\nimport { getModelIdClass, getModelIdText, ModelType } from \"../../core/models/Model.constants\";\r\nimport GrandStaff from \"../../viewers/grand-staff/GrandStaff\";\r\nimport DetailsCard from \"../cards/DetailsCard\";\r\nimport GuitarCard from \"../cards/GuitarCard\";\r\nimport ModeCard from \"../cards/ModeCard\";\r\nimport PianoCard from \"../cards/PianoCard\";\r\nimport RelatedCard from \"../cards/RelatedCard\";\r\nimport RomanNumeralsCard from \"../cards/RomanNumeralsCard\";\r\nimport RootCard from \"../cards/RootCard\";\r\nimport ColumnManager from \"../column-manager/ColumnManager\";\r\nimport { StyledPageBody } from \"../layout/PageBody\";\r\nimport PageTitle from \"../layout/PageTitle\";\r\nimport { StyledPane } from \"../layout/Pane\";\r\n\r\nconst StyledPodlistPage = styled(StyledPageBody)`\r\n\r\n`;\r\n\r\ninterface IPodListPageProps {\r\n    pageContext: any;\r\n}\r\n\r\nconst PodlistPage: React.FC<IPodListPageProps> = props => {\r\n\r\n    const { modelType, modelId } = props.pageContext;\r\n    const root = useRoot();\r\n\r\n    const cl = getModelIdClass(modelType);\r\n    const clText = getModelIdText(modelType);\r\n\r\n    const podList = new cl(modelId, { root });\r\n    const title = `${podList.name} ${clText}`;\r\n\r\n    //const subtitle = podList.aliases.length ? `Also known as ${podList.aliases.join(', ')}` : 'Podlist';\r\n\r\n    return (\r\n        <StyledPodlistPage>\r\n            <PageTitle title={title} />\r\n            <StyledPane>\r\n                <ColumnManager tablet={['300px', 'auto']}>\r\n                    <RootCard />\r\n                    <DetailsCard model={podList} />\r\n                </ColumnManager>\r\n\r\n                {modelType === ModelType.Scale && <RomanNumeralsCard model={podList} />}\r\n                {modelType === ModelType.Scale && <ModeCard model={podList} />}\r\n                <GrandStaff model={podList} />\r\n                <ColumnManager tablet={['1fr', '1fr']}>\r\n                    <GuitarCard model={podList} />\r\n                    <PianoCard model={podList} />\r\n                </ColumnManager>\r\n                <RelatedCard model={podList} />\r\n            </StyledPane>\r\n        </StyledPodlistPage >\r\n    );\r\n};\r\n\r\nexport default PodlistPage;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledFretboard = styled.div`\r\n    display: inline-grid;\r\n\twidth: 100%;\r\n\tbackground-image: radial-gradient(ellipse, #E8DBB8 0%, #D0B27C 100%);\r\n\tfont-size: 90%;\r\n\tmargin: 16px 0;\r\n\r\n    .fret {\r\n        display: inline-flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        position: relative;\r\n        border-right: 2px solid darkgrey;\r\n    }\r\n\r\n    .fret.open {\r\n        border-right: 3px solid grey;\r\n        background-color: #D0B27C;;\r\n    }\r\n\r\n    /* Used to maintain aspect ratio */\r\n\r\n    .fret::before {\r\n        content: \"\";\r\n        display: block;\r\n        height: 0;\r\n        width: 0;\r\n        margin-top: calc(1/2 * 100%);\r\n    }\r\n\r\n    /* Fret String */\r\n\r\n    .fret-string {\r\n        border-top: 1px solid grey;\r\n        width: 100%;\r\n    }\r\n\r\n    /* Fret Numbers */\r\n\r\n    .fret-number {\r\n        position: absolute;\r\n        bottom: 100%;\r\n    }\r\n\r\n    /* Fret Dots */\r\n\r\n    .fret-dots {\r\n        position: absolute;\r\n        top: 95%;\r\n        font-size: 16px;\r\n        white-space: nowrap;\r\n    }\r\n\r\n    .fret-number, .fret-dots {\r\n        color: #888;\r\n    }\r\n`;\r\n\r\nexport default StyledFretboard;\r\n","\r\nimport * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { IFretProps } from \"./Fretboard.utils\";\r\n\r\nconst StyledFretLabel = styled.div`\r\n\tposition: absolute;\r\n\theight: 60%;\r\n\taspect-ratio: 1;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tborder-radius: 100%;\r\n\tbackground-color: ${({ $bgColor }) => $bgColor ? $bgColor : 'transparent'};\r\n\tcolor: ${({ $fgColor }) => $fgColor ? $fgColor : ''};\r\n\r\n\t/*cursor: pointer;\r\n\t&:hover {\r\n\t\theight: 80%;\r\n\t}*/\r\n`;\r\n\r\n\r\nconst FretLabel: React.FC<IFretProps> = props => {\r\n\r\n\tconst bgColor = props.colorMapFn(props);\r\n\r\n\tlet fgColor = 'white';\r\n\r\n\treturn (\r\n\t\t<StyledFretLabel $bgColor={bgColor} $fgColor={fgColor} onClick={null} className=\"fret-label\">\r\n\t\t\t{null}\r\n\t\t</StyledFretLabel>\r\n\t);\r\n};\r\n\r\nexport default FretLabel;\r\n","import * as React from \"react\";\r\nimport StyledFretboard from \"./Fretboard.styles\";\r\nimport { DEFAULT_FRETBOARD_PROPS, getDotsForFret, getFretRatios, IFretboardProps, IFretProps } from \"./Fretboard.utils\";\r\nimport FretLabel from \"./FretLabel\";\r\n\r\nexport const Fret: React.FC<IFretProps> = props => {\r\n\r\n\tconst { tuning, stringIndex, fretIndex, showFretNumbers, showFretDots } = props;\r\n\r\n\tconst classes = ['fret'];\r\n\tif (fretIndex === 0)\r\n\t\tclasses.push('open');\r\n\r\n\tconst isLowString = stringIndex === tuning.length - 1;\r\n\tconst isHighString = stringIndex === 0;\r\n\r\n\treturn (\r\n\t\t<div className={classes.join(' ')}>\r\n\t\t\t<div className=\"fret-number\">\r\n\t\t\t\t{showFretNumbers && isHighString && fretIndex > 0 && fretIndex}\r\n\t\t\t</div>\r\n\t\t\t<div className='fret-string' />\r\n\t\t\t<FretLabel {...props} />\r\n\t\t\t<div className=\"fret-dots\">\r\n\t\t\t\t{showFretDots && isLowString && fretIndex > 0 && getDotsForFret(fretIndex)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst getFrets = (props: IFretboardProps) => {\r\n\tconst { fretRange, tuning } = props;\r\n\tconst [lo, hi] = fretRange;\r\n\r\n\tconst allFrets = [];\r\n\tfor (let s = 0; s < tuning.length; s++) {\r\n\t\tfor (let f = lo; f <= hi; f++) {\r\n\t\t\tallFrets.push(\r\n\t\t\t\t<Fret\r\n\t\t\t\t\tkey={`s${s}-f${f}`}\r\n\t\t\t\t\tstringIndex={s}\r\n\t\t\t\t\tfretIndex={f}\r\n\t\t\t\t\ttuning={tuning}\r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\treturn allFrets;\r\n};\r\n\r\nconst Fretboard: React.FC<IFretboardProps> = (userProps) => {\r\n\tconst props = { ...DEFAULT_FRETBOARD_PROPS, ...userProps };\r\n\r\n\tconst [lo, hi] = props.fretRange;\r\n\tconst numFrets = hi - lo + 1;\r\n\tconst numStrings = props.tuning.length;\r\n\tconst gridTemplateColumns = getFretRatios(numFrets).map(n => n + 'fr').join(' ');\r\n\tconst gridTemplateRows = `repeat(${numStrings}, 1fr)`;\r\n\tconst fretboardStyles = {\r\n\t\tgridTemplateColumns,\r\n\t\tgridTemplateRows\r\n\t};\r\n\r\n\treturn (\r\n\t\t<StyledFretboard className='fretboard' style={fretboardStyles}>\r\n\t\t\t{getFrets(props)}\r\n\t\t</StyledFretboard>\r\n\t);\r\n};\r\n\r\nexport default Fretboard;\r\n","import ArrayUtils from \"../../core/general/Array.utils\";\r\nimport Note from '../../core/models/Note';\r\nimport { NoteId } from './../../core/models/Model.constants';\r\n\r\nexport enum TuningId {\r\n    Standard = 'standard',\r\n    StandardSeven = 'standard-seven',\r\n    StandardBass = 'standard-bass',\r\n    Flat = 'flat',\r\n    DoubleFlat = 'double-flat',\r\n    DropD = 'drop-d',\r\n    DADGAD = 'dadgad',\r\n    Banjo = 'banjo',\r\n    Violin = 'violin',\r\n    OpenA = 'open-a',\r\n    OpenB = 'open-b',\r\n    OpenC = 'open-c',\r\n    OpenD = 'open-d',\r\n    OpenE = 'open-e',\r\n    OpenF = 'open-f',\r\n    OpenG = 'open-g',\r\n}\r\n\r\nexport interface ITuning {\r\n    id: TuningId;\r\n    name: string;\r\n    value: number[]\r\n}\r\n\r\nconst formatPreset = (id: TuningId, name: string, value: number[]): ITuning => ({\r\n    id,\r\n    name,\r\n    value\r\n});\r\n\r\nconst getPitch = (noteId: NoteId, octave: number): number => Note.getNote(noteId, octave).pod[0];\r\n\r\nexport const TUNING_PRESET_MAP = new Map<TuningId, ITuning>([\r\n    [TuningId.Standard, formatPreset(\r\n        TuningId.Standard,\r\n        'Standard',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.E, 3)\r\n        ]\r\n    )],\r\n    [TuningId.Flat, formatPreset(\r\n        TuningId.Flat,\r\n        'Flat',\r\n        [\r\n            getPitch(NoteId.Eb, 5),\r\n            getPitch(NoteId.Bb, 4),\r\n            getPitch(NoteId.Gb, 4),\r\n            getPitch(NoteId.Db, 4),\r\n            getPitch(NoteId.Ab, 3),\r\n            getPitch(NoteId.Eb, 3)\r\n        ]\r\n    )],\r\n    [TuningId.DoubleFlat, formatPreset(\r\n        TuningId.DoubleFlat,\r\n        'Double Flat',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.F, 4),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    [TuningId.StandardSeven, formatPreset(\r\n        TuningId.StandardSeven,\r\n        'Standard 7-String',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.E, 3),\r\n            getPitch(NoteId.B, 3)\r\n        ]\r\n    )],\r\n    [TuningId.StandardBass, formatPreset(\r\n        TuningId.StandardBass,\r\n        'Standard Bass',\r\n        [\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.D, 3),\r\n            getPitch(NoteId.A, 2),\r\n            getPitch(NoteId.E, 2)\r\n        ]\r\n    )],\r\n    [TuningId.DropD, formatPreset(\r\n        TuningId.DropD,\r\n        'Drop D',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    [TuningId.DADGAD, formatPreset(\r\n        TuningId.DADGAD,\r\n        'DADGAD',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    // Unconfirmed\r\n    [TuningId.Banjo, formatPreset(\r\n        TuningId.Banjo,\r\n        'Banjo',\r\n        [\r\n            getPitch(NoteId.G, 5),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    // Unconfirmed\r\n    [TuningId.Violin, formatPreset(\r\n        TuningId.Violin,\r\n        'Violin',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.G, 4)\r\n        ]\r\n    )],\r\n    [TuningId.OpenA, formatPreset(\r\n        TuningId.OpenA,\r\n        'Open A',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.E, 4),\r\n            getPitch(NoteId.Cs, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.E, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenB, formatPreset(\r\n        TuningId.OpenB,\r\n        'Open B',\r\n        [\r\n            getPitch(NoteId.Ds, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.Fs, 4),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.Fs, 3),\r\n            getPitch(NoteId.B, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenC, formatPreset(\r\n        TuningId.OpenC,\r\n        'Open C',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.C, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenD, formatPreset(\r\n        TuningId.OpenD,\r\n        'Open D',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.Fs, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenE, formatPreset(\r\n        TuningId.OpenE,\r\n        'Open E',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.Gs, 4),\r\n            getPitch(NoteId.E, 4),\r\n            getPitch(NoteId.B, 3),\r\n            getPitch(NoteId.E, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenF, formatPreset(\r\n        TuningId.OpenF,\r\n        'Open F',\r\n        [\r\n            getPitch(NoteId.F, 5),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.F, 4),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.F, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenG, formatPreset(\r\n        TuningId.OpenG,\r\n        'Open G',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )]\r\n]);\r\n\r\nexport const FRETBOARD_TUNING_VALUES = ArrayUtils.mapToArray(TUNING_PRESET_MAP);\r\n","import Chord from '../../core/models/Chord';\r\nimport IntervalSpan from '../../core/models/Interval';\r\nimport { IModelConfig } from '../../core/models/Model.constants';\r\nimport Note from '../../core/models/Note';\r\nimport Scale from '../../core/models/Scale';\r\nimport { ITuning, TuningId, TUNING_PRESET_MAP } from './Fretboard.tuning';\r\nimport { IVoicing } from './Fretboard.voicing';\r\n\r\nexport interface IFretLabelProps {\r\n\tnote?: Note;\r\n\tcolor?: string;\r\n\tfreq?: number;\r\n}\r\n\r\nexport interface IFretboardProps {\r\n\tfretRange?: [number, number];\r\n\tshowFretDots?: boolean;\r\n\tshowFretNumbers?: boolean;\r\n\tcolorMapFn?: (fretProps: IFretProps) => string | undefined;\r\n\tvoicing?: IVoicing,\r\n\ttuning?: number[]; // ITuning,\r\n\tmodel?: Chord | Scale;\r\n}\r\n\r\nexport interface IFretProps extends IFretboardProps {\r\n\tstringIndex: number;\r\n\tfretIndex: number;\r\n}\r\n\r\nexport const DOTTED_FRET_INDICES = [true, false, false, true, false, true, false, true, false, true, false, false];\r\n\r\nexport const FRET_SIZE_RATIO = Math.pow((1 / 2), (1 / 12));\r\n\r\nconst isIntervalInVoicing = (interval: IntervalSpan, voicing: IVoicing, stringIndex: number) => {\r\n\tif (!voicing || !voicing.value) return true;\r\n\tconst v = voicing.value[stringIndex];\r\n\tconst d = interval.getDegree();\r\n\tif (Array.isArray(v)) {\r\n\t\treturn v.some(n => doesVoicingValueMatch(d, n));\r\n\t}\r\n\telse if (typeof v === 'number') {\r\n\t\treturn doesVoicingValueMatch(d, v);\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nexport const getFretColor = (props: IFretProps): string | undefined => {\r\n\tconst { stringIndex, fretIndex, tuning, model, voicing } = props;\r\n\tconst noteIndex = tuning[stringIndex] + fretIndex;\r\n\tconst [interval, note] = model.tryGetPodPairAtPitch(noteIndex);\r\n\r\n\tif (!note) return;\r\n\r\n\tif (voicing && !isIntervalInVoicing(interval, voicing, stringIndex)) {\r\n\t\treturn `#00000033`\r\n\t}\r\n\r\n\treturn interval.getColor();\r\n}\r\n\r\nexport const DEFAULT_FRETBOARD_PROPS: IFretboardProps = {\r\n\tfretRange: [1, 12],\r\n\ttuning: TUNING_PRESET_MAP.get(TuningId.Standard).value,\r\n\tshowFretDots: true,\r\n\tshowFretNumbers: true,\r\n\tcolorMapFn: getFretColor\r\n};\r\n\r\nexport const getFretRatios = (numFrets: number): number[] => {\r\n\tconst ratios = [];\r\n\tfor (let i = 1; i <= numFrets; i++) {\r\n\t\tratios.push((i <= 1) ? 1 : ratios[i - 2] * FRET_SIZE_RATIO);\r\n\t}\r\n\treturn ratios;\r\n};\r\n\r\nexport const getDotsForFret = (fretNumber: number): string => {\r\n\tconst mod = fretNumber % 12;\r\n\tif (mod === 0)\r\n\t\treturn '• •';\r\n\telse if (DOTTED_FRET_INDICES[mod])\r\n\t\treturn '•';\r\n\treturn '';\r\n};\r\n\r\nconst doesVoicingValueMatch = (d: number, v: number) => {\r\n\treturn d + 1 === v;\r\n}\r\n","import Chord from \"../../core/models/Chord\";\r\nimport Scale from \"../../core/models/Scale\";\r\n\r\nexport enum KeyType {\r\n\tBlack = 'black',\r\n\tWhite = 'white'\r\n}\r\n\r\nexport interface IKeyboardProps {\r\n\tkeyRange: [number, number];\r\n\thideLabel?: boolean;\r\n\tmodel?: Chord | Scale;\r\n\tcolorMapFn?: (fretProps: IKeyboardKeyProps) => string | undefined;\r\n}\r\n\r\nexport interface IKeyboardKeyProps extends IKeyboardProps {\r\n\tnoteIndex: number;\r\n\tscale: number;\r\n\tkeyType: KeyType;\r\n}\r\n\r\nexport const BLACK_KEY_INDICES = [0, 2, 4, 5, 7, 9, 11];\r\n\r\nexport const getKeyColor = (props: IKeyboardKeyProps): string | undefined => {\r\n\tconst { noteIndex, model } = props;\r\n\r\n\tconst [interval, note] = model.tryGetPodPairAtPitch(noteIndex);\r\n\r\n\tif (!note) return;\r\n\r\n\treturn interval.getColor();\r\n}\r\n\r\nconst DEFAULT_KEYBOARD_PROPS = {\r\n\tkeyRange: [-12, 12],\r\n\tcolorMapFn: getKeyColor\r\n};\r\n\r\nexport default DEFAULT_KEYBOARD_PROPS;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledKeyboard = styled.div`\r\n    display: inline-flex;\r\n\twidth: 100%;\r\n\t//min-width: 100px;\r\n    font-size: 12px;\r\n\ttext-align: center;\r\n\tfont-family: sans-serif;\r\n\tmargin: 16px 0;\r\n\r\n    .center {\r\n        text-align: center;\r\n    }\r\n\r\n    /* Key Container */\r\n\r\n    .white-key-container {\r\n        display: inline-block;\r\n    }\r\n\r\n    .black-key-container {\r\n        display: inline-block;\r\n        width: 0px;\r\n    }\r\n\r\n    /* Key */\r\n\r\n    .keyboard-key {\r\n        vertical-align: top;\r\n        position: relative;\r\n        display: inline-flex;\r\n        justify-content: center;\r\n        cursor: pointer;\r\n    }\r\n\r\n    .white-key {\r\n        box-shadow: 0 0 1px 1px black inset;\r\n        border-radius: 0 0 5% 5%;\r\n    }\r\n\r\n    /*.white-key:hover {\r\n        box-shadow: 0 0 1px 2px black inset;\r\n    }*/\r\n\r\n    .black-key {\r\n        box-shadow: 0 0 1px 2px #555 inset;\r\n        z-index: 10;\r\n        border-radius: 0 0 10% 10%;\r\n    }\r\n\r\n    /*.black-key:hover {\r\n        background-color: #333;\r\n        box-shadow: 0 0 1px 2px black inset;\r\n    }*/\r\n\r\n    /* Colors (applied only in absence of degree class) */\r\n\r\n    .white {\r\n        background-color: white;\r\n        color: black;\r\n    }\r\n\r\n    .black {\r\n        background-color: black;\r\n        color: white;\r\n    }\r\n\r\n\r\n    /* Label */\r\n\r\n    .white-key .keyboard-key-label {\r\n        position: absolute;\r\n        height: 100%;\r\n        width: 100%;\r\n        border-radius: 0 0 5% 5%;\r\n        box-shadow: 0 0 1px 1px black inset;\r\n\r\n        padding-bottom: 4px;\r\n        display: flex;\r\n        align-items: flex-end;\r\n        justify-content: center;\r\n    }\r\n\r\n    /*.white-key .keyboard-key-label:hover {\r\n        box-shadow: 0 0 1px 2px black inset;\r\n    }*/\r\n\r\n    .black-key .keyboard-key-label {\r\n        bottom: 105%;\r\n        position: absolute;\r\n        color: black;\r\n    }\r\n`;\r\n\r\nexport default StyledKeyboard;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport ColorUtils from \"../../core/color/Color.utils\";\r\nimport { IKeyboardKeyProps, KeyType } from './Keyboard.defaults';\r\n\r\n// Key dimensions relative to white key width\r\nconst KEY__DIMS = {\r\n\tWhW_WhH: 4.6875, // White key width to white key height\r\n\tWhW_BlW: 0.6250, // White key width to black key width\r\n\tWhW_BlH: 2.9688 // White key width to black hey height\r\n}\r\n\r\nconst getScaleStyles = (keyType, scale) => {\r\n\tswitch (keyType) {\r\n\t\tcase KeyType.White:\r\n\t\t\treturn {\r\n\t\t\t\twidth: scale + 'px',\r\n\t\t\t\theight: KEY__DIMS.WhW_WhH * scale + 'px'\r\n\t\t\t};\r\n\t\tcase KeyType.Black:\r\n\t\t\treturn {\r\n\t\t\t\twidth: KEY__DIMS.WhW_BlW * scale + 'px',\r\n\t\t\t\theight: KEY__DIMS.WhW_BlH * scale + 'px',\r\n\t\t\t\tright: .5 * KEY__DIMS.WhW_BlW * scale + 'px'\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn {\r\n\t\t\t\twidth: '0px',\r\n\t\t\t\theight: '0px'\r\n\t\t\t};\r\n\t}\r\n}\r\n\r\nconst StyledKey = styled.div`\r\n\tbackground-color: ${({ $color }) => $color ? $color : 'transparent'};\r\n\tcolor: ${({ $color }) => ColorUtils.getFgColor($color)};\r\n`;\r\n\r\nconst StyledKeyLabel = styled.div`\r\n\tcolor: ${({ $color }) => ColorUtils.getFgColor($color)};\r\n`;\r\n\r\nconst KeyboardKey: React.FC<IKeyboardKeyProps> = props => {\r\n\r\n\tconst { keyType, noteIndex, scale, hideLabel, model, colorMapFn } = props;\r\n\r\n\tconst bgColor = colorMapFn(props);\r\n\r\n\tconst scaleStyles = getScaleStyles(keyType, scale);\r\n\tconst classes = ['keyboard-key', `${keyType}-key`, keyType];\r\n\r\n\tconst colorStyles = {\r\n\t\tbackgroundColor: bgColor ? bgColor : ''\r\n\t}\r\n\r\n\tconst keyStyles = keyType === KeyType.White ? scaleStyles : { ...scaleStyles, ...colorStyles };\r\n\tconst labelStyles = keyType === KeyType.White ? colorStyles : {};\r\n\r\n\treturn (\r\n\t\t<StyledKey className={`${keyType}-key-container`}>\r\n\t\t\t<div className={classes.join(' ')} style={keyStyles} >\r\n\t\t\t\t<StyledKeyLabel className='keyboard-key-label' style={labelStyles} $color={bgColor}>\r\n\t\t\t\t\t{null}\r\n\t\t\t\t</StyledKeyLabel>\r\n\t\t\t</div>\r\n\t\t</StyledKey>\r\n\t);\r\n}\r\n\r\nexport default KeyboardKey;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport NumberUtils from \"../../core/general/Number.utils\";\r\nimport DEFAULT_PROPS, { BLACK_KEY_INDICES, IKeyboardProps, KeyType } from \"./Keyboard.defaults\";\r\nimport StyledKeyboard from \"./Keyboard.styles\";\r\nimport KeyboardKey from \"./KeyboardKey\";\r\n\r\nconst getKeyboardKeys = (props: IKeyboardProps, viewerWidth: number) => {\r\n\tconst { keyRange } = props;\r\n\tconst [lo, hi] = keyRange;\r\n\tconst keys = [];\r\n\r\n\tlet numBlackKeys = 0;\r\n\tlet numWhiteKeys = 0;\r\n\tfor (let i = lo; i <= hi; i++) {\r\n\t\tconst keyType = BLACK_KEY_INDICES.includes(NumberUtils.modulo(i, 12)) ? KeyType.White : KeyType.Black;\r\n\t\tif (keyType === KeyType.Black) { numBlackKeys++ } else { numWhiteKeys++; }\r\n\t}\r\n\r\n\tfor (let i = lo; i <= hi; i++) {\r\n\t\tconst keyType = BLACK_KEY_INDICES.includes(NumberUtils.modulo(i, 12)) ? KeyType.White : KeyType.Black;\r\n\r\n\t\tkeys.push(\r\n\t\t\t<KeyboardKey\r\n\t\t\t\tkeyType={keyType}\r\n\t\t\t\tkey={i}\r\n\t\t\t\tnoteIndex={i}\r\n\t\t\t\tscale={viewerWidth / numWhiteKeys}\r\n\t\t\t\t{...props}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n\treturn keys;\r\n}\r\n\r\nconst Keyboard: React.FC<IKeyboardProps> = (userProps) => {\r\n\r\n\tconst props = { ...DEFAULT_PROPS, ...userProps };\r\n\r\n\tconst [dims, setDims] = useState([128, 128]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst resetDimensions = (e) => {\r\n\t\t\tconst el = document.getElementById('keyboard');\r\n\t\t\tsetDims([el.clientWidth, el.clientHeight])\r\n\t\t}\r\n\t\tresetDimensions(null);\r\n\t\twindow.addEventListener('resize', resetDimensions);\r\n\t\treturn () => window.removeEventListener('resize', resetDimensions);\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<StyledKeyboard className='keyboard' id='keyboard'>\r\n\t\t\t{getKeyboardKeys(props, dims[0])}\r\n\t\t</StyledKeyboard>\r\n\t);\r\n}\r\n\r\nexport default Keyboard;\r\n"],"names":["StyledCollectionTable","styled","props","theme","surface","bg","nav","text","inverted","SEMITONES","data","semitones","rootSuffix","useRootSuffix","root","useRoot","React","colSpan","map","d","i","model","modelType","ModelType","Chord","Scale","modelId","key","Link","to","getShortName","h","index","intervals","findIndex","ivl","pod","className","includes","mod","notes","getName","StyledPageBody","StyledDoublePane","StyledPane","StyledDetailsCard","StyledCard","withConfig","secondary","NoteCell","note","name","getOctave","IntervalCell","interval","isFeatured","PitchCell","getFrequency","RatioCell","getRatio","octave","useRecoilValue","octaveState","n","Note","NumberUtils","$n","length","CardHeader","title","StyledGuitarCard","qp","URLSearchParams","rootId","Card","action","toString","Fretboard","StyledModeCard","type","tags","find","t","Tag","modeType","modes","SCALE_PRESETS","p","StyledPianoCard","Keyboard","keyRange","DEFAULT_KEYBOARD_PROPS","StyledCollectionList","subchords","getSubchords","subscales","getSubscales","superchords","getSuperchords","superscales","getSuperscales","CollectionTable","CollectionList","CHORD_PRESETS","StyledRomanNumeralsCard","numerals","getAllNumerals","getNumeralParts","numeral","symbol","StyledRootInput","active","OCTAVE_OPTIONS","x","id","pageProps","usePageProps","path","rootIndex","lastIndexOf","basePath","slice","rootKey","useRecoilState","setOctave","InputRow","label","y","activeClassName","NoteId","NOTE_PRESET_MAP","DropdownInput","options","value","setValue","o","StyledRoot","isEditingKeyState","isEditing","setIsEditing","toggle","ButtonInput","isLink","onClick","RootInput","StyledPodlistPage","pageContext","cl","getModelIdClass","clText","getModelIdText","podList","PageTitle","ColumnManager","tablet","RootCard","DetailsCard","RomanNumeralsCard","ModeCard","GrandStaff","GuitarCard","PianoCard","RelatedCard","StyledFretLabel","$bgColor","$fgColor","bgColor","colorMapFn","Fret","tuning","stringIndex","fretIndex","showFretNumbers","showFretDots","classes","push","isLowString","isHighString","join","FretLabel","getDotsForFret","userProps","DEFAULT_FRETBOARD_PROPS","fretRange","lo","numFrets","numStrings","fretboardStyles","gridTemplateColumns","getFretRatios","gridTemplateRows","StyledFretboard","style","hi","allFrets","s","f","getFrets","TuningId","formatPreset","getPitch","noteId","TUNING_PRESET_MAP","Map","Standard","Flat","DoubleFlat","StandardSeven","StandardBass","DropD","DADGAD","Banjo","Violin","OpenA","OpenB","OpenC","OpenD","OpenE","OpenF","OpenG","FRETBOARD_TUNING_VALUES","ArrayUtils","DOTTED_FRET_INDICES","FRET_SIZE_RATIO","Math","pow","voicing","noteIndex","tryGetPodPairAtPitch","v","getDegree","Array","isArray","some","doesVoicingValueMatch","isIntervalInVoicing","getColor","ratios","fretNumber","KeyType","BLACK_KEY_INDICES","KEY__DIMS","StyledKey","$color","ColorUtils","StyledKeyLabel","keyType","scale","hideLabel","scaleStyles","width","height","right","getScaleStyles","colorStyles","backgroundColor","keyStyles","labelStyles","DEFAULT_PROPS","useState","dims","setDims","useEffect","resetDimensions","e","el","document","getElementById","clientWidth","clientHeight","window","addEventListener","removeEventListener","StyledKeyboard","viewerWidth","keys","numWhiteKeys","KeyboardKey","getKeyboardKeys"],"sourceRoot":""}