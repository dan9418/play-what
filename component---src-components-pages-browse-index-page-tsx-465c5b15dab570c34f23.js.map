{"version":3,"file":"component---src-components-pages-browse-index-page-tsx-465c5b15dab570c34f23.js","mappings":"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","sources":["webpack://play-what/./src/components/column-manager/ColumnManager.tsx","webpack://play-what/./src/components/pages/browse/index.page.tsx","webpack://play-what/./src/components/ui/Card.tsx","webpack://play-what/./src/components/ui/List.styles.tsx","webpack://play-what/./src/components/ui/List.tsx","webpack://play-what/./src/core/routing/Routing.utils.ts"],"sourcesContent":["import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledColumnManager = styled.div`\r\n    display: grid;\r\n    gap: 16px;\r\n    grid-template-columns: 1fr;\r\n\r\n    ${({ $tablet }) => $tablet ? `\r\n        @media(min-width: 512px) {\r\n            grid-template-columns: ${$tablet.join(' ')}\r\n        }\r\n    ` : ''}\r\n\r\n    ${({ $desktop }) => $desktop ? `\r\n        @media(min-width: 1024px) {\r\n            grid-template-columns: ${$desktop.join(' ')}\r\n        }\r\n    ` : ``}\r\n   \r\n`;\r\n\r\nexport interface IColumnManagerProps {\r\n    tablet?: string[];\r\n    desktop?: string[];\r\n}\r\n\r\nconst ColumnManager: React.FC<any> = ({ children, tablet, desktop }) => {\r\n    return (\r\n        <StyledColumnManager $tablet={tablet} $desktop={desktop}>\r\n            {children}\r\n        </StyledColumnManager >\r\n    );\r\n};\r\n\r\nexport default ColumnManager;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useRootId } from \"../../../contexts/PagePropsContext\";\r\nimport {\r\n  ChordId,\r\n  ModelType,\r\n  NoteId,\r\n  ScaleId,\r\n} from \"../../../core/models/Model.constants\";\r\nimport { getModelRoute } from \"../../../core/routing/Routing.utils\";\r\nimport ColumnManager from \"../../column-manager/ColumnManager\";\r\nimport PageLayout from \"../../layout/PageLayout\";\r\nimport Card from \"../../ui/Card\";\r\nimport Icon from \"../../ui/Icon\";\r\nimport { SimpleList } from \"../../ui/List\";\r\n\r\nconst StyledBrowsePage = styled(PageLayout)`\r\n  a.all {\r\n    display: block;\r\n    font-size: 140%;\r\n    text-align: right;\r\n    margin-top: 32px;\r\n  }\r\n`;\r\n\r\nconst Page: React.FC<any> = (props) => {\r\n  const rootId = useRootId();\r\n\r\n  return (\r\n    <StyledBrowsePage title=\"Browse\">\r\n      <ColumnManager desktop={[\"1fr\", \"1fr\"]}>\r\n        <Card title=\"Chords\">\r\n          <SimpleList\r\n            items={[\r\n              [\r\n                \"Major Triad\",\r\n                getModelRoute(ModelType.Chord, ChordId.MajTriad, rootId),\r\n              ],\r\n              [\r\n                \"Minor Triad\",\r\n                getModelRoute(ModelType.Chord, ChordId.MinTriad, rootId),\r\n              ],\r\n              [\r\n                \"Major 7th\",\r\n                getModelRoute(ModelType.Chord, ChordId.Maj7, rootId),\r\n              ],\r\n              [\r\n                \"Minor 7th\",\r\n                getModelRoute(ModelType.Chord, ChordId.Min7, rootId),\r\n              ],\r\n              [\r\n                \"Dominant 7th\",\r\n                getModelRoute(ModelType.Chord, ChordId.Dom7, rootId),\r\n              ],\r\n              [\r\n                \"Half-Diminished 7th\",\r\n                getModelRoute(ModelType.Chord, ChordId.HalfDim7, rootId),\r\n              ],\r\n            ]}\r\n          />\r\n          <Link to={getModelRoute(ModelType.Chord)} className=\"all\">\r\n            See All Chords <Icon iconId=\"next\" size={12} />\r\n          </Link>\r\n        </Card>\r\n        <Card title=\"Scales\">\r\n          <SimpleList\r\n            items={[\r\n              [\r\n                \"Major (Ionian)\",\r\n                getModelRoute(ModelType.Scale, ScaleId.Ionian, rootId),\r\n              ],\r\n              [\r\n                \"Natural Minor (Aeolian)\",\r\n                getModelRoute(ModelType.Scale, ScaleId.Aeolian, rootId),\r\n              ],\r\n              [\r\n                \"Melodic Minor\",\r\n                getModelRoute(ModelType.Scale, ScaleId.MelodicMinor, rootId),\r\n              ],\r\n              [\r\n                \"Harmonic Minor\",\r\n                getModelRoute(ModelType.Scale, ScaleId.HarmonicMinor, rootId),\r\n              ],\r\n              [\r\n                \"Major Pentatonic\",\r\n                getModelRoute(ModelType.Scale, ScaleId.MajorPentatonic, rootId),\r\n              ],\r\n              [\r\n                \"Minor Pentatonic\",\r\n                getModelRoute(ModelType.Scale, ScaleId.MinorPentatonic, rootId),\r\n              ],\r\n            ]}\r\n          />\r\n          <Link to={getModelRoute(ModelType.Scale)} className=\"all\">\r\n            See All Scales <Icon iconId=\"next\" size={12} />\r\n          </Link>\r\n        </Card>\r\n      </ColumnManager>\r\n    </StyledBrowsePage>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import React, { PropsWithChildren } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const StyledCard = styled.div`\r\n  background: ${(props) => props.theme.surface.card};\r\n  width: 100%;\r\n  border-radius: 16px;\r\n  padding: 16px;\r\n\r\n  .header {\r\n    margin-bottom: 16px;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nexport const CardHeader: React.FC<any> = ({\r\n  title,\r\n  level = 2,\r\n  action = null,\r\n}) => {\r\n  const AsTag: any = `h${level}`;\r\n  return (\r\n    <div className=\"header\">\r\n      <AsTag>{title}</AsTag>\r\n      {action}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport interface ICardProps extends PropsWithChildren<any> {\r\n  title?: string;\r\n  subtitle?: string;\r\n  action?: any;\r\n  level?: number;\r\n}\r\n\r\nconst Card: React.FC<ICardProps> = ({\r\n  title,\r\n  subtitle,\r\n  action,\r\n  children,\r\n  level = 1,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <StyledCard {...rest}>\r\n      {title && <CardHeader title={title} action={action} level={level} />}\r\n      {subtitle && <CardHeader title={subtitle} level={level + 1} />}\r\n      {children}\r\n    </StyledCard>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { css } from 'styled-components';\r\n\r\nexport const LIST_STYLES_1 = css`\r\n    li {\r\n        margin-left: 8px;\r\n        &:not(:first-child) {\r\n            margin-top: 4px;\r\n        }\r\n    }\r\n    h1, h2, h3, h4, h5, h6, h7 {\r\n        font-weight: bold;\r\n    }\r\n    section {\r\n        margin-left: 8px;\r\n        &:not(:first-child) {\r\n            margin-top: 24px;\r\n        }\r\n    }\r\n    ul {\r\n        &:not(:first-child) {\r\n            margin-top: 8px;\r\n            margin-left: 8px;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const LIST_STYLES_2 = css`\r\n    li {\r\n        list-style-type: disc;\r\n        margin: 8px 0 8px 16px;\r\n    }\r\n`;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { LIST_STYLES_2 } from \"./List.styles\";\r\n\r\nexport interface IListItem {\r\n    text: string;\r\n    link?: string;\r\n}\r\n\r\nexport interface IList {\r\n    title?: string;\r\n    subtitle?: string;\r\n    lists?: IList[];\r\n    items?: | IListItem[];\r\n}\r\n\r\nexport interface IListProps extends IList {\r\n    level?: number;\r\n    prefix?: string;\r\n    styles?: any;\r\n}\r\n\r\nconst Heading: React.FC<any> = ({ title, subtitle, level }) => {\r\n    const Title = `h${level}` as any;\r\n    const Subtitle = `h${level + 1}` as any;\r\n    return (\r\n        <>\r\n            {title && <Title>{title}</Title>}\r\n            {subtitle && <Subtitle>{subtitle}</Subtitle>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport const List: React.FC<IListProps> = ({ title, subtitle, items, lists, level = 1, prefix = '', styles }) => {\r\n    return (\r\n        // @ts-ignore\r\n        <section css={styles}>\r\n            <Heading title={title} subtitle={subtitle} level={level} />\r\n            <ul>\r\n                {items && items.length > 0 && (\r\n                    items.map(({ text, link }) => (\r\n                        <li key={text}>{\r\n                            link ? <Link to={`${prefix}${link}`}>{text}</Link> : text\r\n                        }</li>\r\n                    ))\r\n                )}\r\n                {lists && (\r\n                    <li>\r\n                        {lists.map(l => <List {...l} key={l.title} level={level + 1} prefix={prefix} />)}\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport const SimpleList: React.FC<{ items: (string | [string, string])[] }> = ({ items }) => {\r\n    const formattedItems: IListItem[] = items.map(item => {\r\n        if (Array.isArray(item)) {\r\n            const [text, link] = item;\r\n            return {\r\n                text,\r\n                link\r\n            }\r\n        }\r\n        return {\r\n            text: item\r\n        }\r\n    })\r\n    return (\r\n        <List items={formattedItems} styles={LIST_STYLES_2} />\r\n    );\r\n}\r\n","import { ModelId, ModelType, NoteId } from \"../models/Model.constants\";\r\n\r\nexport const getModelRoute = (\r\n  modelType: ModelType,\r\n  modelId?: ModelId,\r\n  rootId?: NoteId\r\n) => {\r\n  const modelSuffix = modelId ? `/${modelId}` : \"\";\r\n  const rootSuffix = rootId ? `/root/${rootId}` : \"\";\r\n\r\n  return `/browse/${modelType}${modelSuffix}${rootSuffix}/`;\r\n};\r\n"],"names":["StyledColumnManager","styled","_ref","$tablet","join","_ref2","$desktop","_ref3","children","tablet","desktop","React","StyledBrowsePage","PageLayout","displayName","componentId","props","rootId","useRootId","title","ColumnManager","Card","SimpleList","items","getModelRoute","ModelType","ChordId","Link","to","className","Icon","iconId","size","ScaleId","StyledCard","theme","surface","card","CardHeader","level","action","AsTag","subtitle","rest","LIST_STYLES_1","css","LIST_STYLES_2","Heading","Title","Subtitle","List","lists","prefix","styles","length","map","text","link","key","l","_ref4","formattedItems","item","Array","isArray","modelType","modelId"],"sourceRoot":""}