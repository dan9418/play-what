{"version":3,"file":"component---src-pages-view-fretboard-tsx-bf6eae5b1f93e70dcffb.js","mappings":"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","sources":["webpack://play-what/./src/components/column-manager/ColumnManager.tsx","webpack://play-what/./src/components/inputs/DropdownInput.tsx","webpack://play-what/./src/components/inputs/NumericInput.tsx","webpack://play-what/./src/components/pages/view/ColHeader.tsx","webpack://play-what/./src/components/layout/Modal.tsx","webpack://play-what/./src/components/pages/view/MainCol.tsx","webpack://play-what/./src/core/routing/Routing.utils.ts","webpack://play-what/./src/components/pages/view/NotesCol.tsx","webpack://play-what/./src/components/pages/view/useModelQueryParams.tsx","webpack://play-what/./src/components/pages/view/useModelState.tsx","webpack://play-what/./src/components/ui/Card.tsx","webpack://play-what/./src/components/ui/InputRow.tsx","webpack://play-what/./src/components/pages/view/FretboardCol.tsx","webpack://play-what/./src/components/pages/view/FretboardPage.tsx","webpack://play-what/./src/pages/view/fretboard.tsx","webpack://play-what/./src/viewers/fretboard/Fretboard.styles.tsx","webpack://play-what/./src/viewers/fretboard/FretLabel.tsx","webpack://play-what/./src/viewers/fretboard/Fretboard.tsx","webpack://play-what/./src/viewers/fretboard/Fretboard.tuning.ts","webpack://play-what/./src/viewers/fretboard/Fretboard.utils.ts","webpack://play-what/./src/viewers/fretboard/Fretboard.voicing.ts"],"sourcesContent":["import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledColumnManager = styled.div`\r\n    display: grid;\r\n    gap: 16px;\r\n    grid-template-columns: 1fr;\r\n\r\n    ${({ $tablet }) => $tablet ? `\r\n        @media(min-width: 512px) {\r\n            grid-template-columns: ${$tablet.join(' ')}\r\n        }\r\n    ` : ''}\r\n\r\n    ${({ $desktop }) => $desktop ? `\r\n        @media(min-width: 1024px) {\r\n            grid-template-columns: ${$desktop.join(' ')}\r\n        }\r\n    ` : ``}\r\n   \r\n`;\r\n\r\nconst ColumnManager: React.FC<any> = ({ children, tablet, desktop }) => {\r\n    return (\r\n        <StyledColumnManager $tablet={tablet} $desktop={desktop}>\r\n            {children}\r\n        </StyledColumnManager >\r\n    );\r\n};\r\n\r\nexport default ColumnManager;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nconst StyledDropdownInput = styled.select`\r\n\tfont-size: 110%;\r\n    min-width: 128px;\r\n\r\n\tpadding: 4px 8px;\r\n\r\n    cursor: pointer;\r\n    border-radius: 4px;\r\n\r\n\toption {\r\n\t\tcursor: pointer;\r\n\t}\r\n`;\r\n\r\ninterface IDropdownInputProps {\r\n\tvalue: any;\r\n\tsetValue: Function;\r\n\toptions: any[];\r\n\tidProperty?: string;\r\n\tdisplayProperty?: string;\r\n}\r\n\r\nconst DropdownInput: React.FC<IDropdownInputProps> = props => {\r\n\tconst { value, setValue, options, idProperty, displayProperty } = props;\r\n\r\n\treturn (\r\n\t\t<StyledDropdownInput\r\n\t\t\tclassName='dropdown-input'\r\n\t\t\tonChange={e => setValue(options[e.target.selectedIndex], e.target.selectedIndex)}\r\n\t\t\tvalue={value ? value[idProperty || 'id'] : ''}\r\n\t\t>\r\n\t\t\t{(options || []).map((v, i) => (\r\n\t\t\t\t<option key={i} value={v[idProperty || 'id']}>{displayProperty ? v[displayProperty] : v.name}</option>\r\n\t\t\t))}\r\n\t\t</StyledDropdownInput>\r\n\t);\r\n}\r\n\r\nexport default DropdownInput;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport Icon from \"../ui/Icon\";\r\nimport ButtonInput from \"./ButtonInput\";\r\n\r\nexport const StyledNumbericInput = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\r\n\tinput, button {\r\n\t\theight: 32px;\r\n\t\tpadding: 0;\r\n\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\tbutton {\r\n\t\twidth: 32px;\r\n\t\tborder: 1px solid ${({ theme }) => theme.utils.border};\r\n\t\tsvg, svg * {\r\n\t\t\tfill: white;\r\n\t\t}\r\n\r\n\t\tbackground-color: ${({ theme }) => theme.status.interactive};\r\n\t\tcolor: white;\r\n\t\t&:hover {\r\n\t\t\tbackground-color: ${({ theme }) => theme.status.active};\r\n\t\t}\r\n\r\n\t\t:first-child {\r\n\t\t\tborder-right: none;\r\n\t\t\tborder-radius: 8px 0 0 8px;\r\n\t\t}\r\n\t\t:last-child {\r\n\t\t\tborder-left: none;\r\n\t\t\tborder-radius: 0 8px 8px 0\r\n\t\t}\r\n\t}\r\n\r\n\tinput {\r\n\t\twidth: 48px;\r\n\t\tcursor: pointer;\r\n\t\tborder: none;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t\tbackground-color: white;\r\n\t\t&:hover {\r\n\t\t\tbackground-color: ${({ theme }) => theme.status.highlight};\r\n\t\t}\r\n\r\n\t\tborder: 1px solid ${({ theme }) => theme.utils.border};\r\n\t}\r\n    \r\n\tfont-size: 110%;\r\n\tcursor: pointer;\r\n`;\r\n\r\ninterface INumericInputProps {\r\n\tvalue: number;\r\n\tsetValue: (number) => void;\r\n\tmin?: number;\r\n\tmax?: number;\r\n}\r\n\r\nconst NumericInput: React.FC<INumericInputProps> = ({ value, setValue, ...rest }) => {\r\n\tconst onChange = e => setValue(parseInt(e.target.value));\r\n\r\n\tconst onDown = () => {\r\n\t\tlet newVal = value - 1;\r\n\t\tif (typeof rest.min !== 'undefined') {\r\n\t\t\tnewVal = Math.max(rest.min, newVal);\r\n\t\t}\r\n\t\tsetValue(newVal);\r\n\t};\r\n\r\n\tconst onUp = () => {\r\n\t\tlet newVal = value + 1;\r\n\t\tif (typeof rest.max !== 'undefined') {\r\n\t\t\tnewVal = Math.min(rest.max, newVal);\r\n\t\t}\r\n\t\tsetValue(newVal);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<StyledNumbericInput>\r\n\t\t\t<ButtonInput onClick={onDown}><Icon iconId=\"minus\" size={12} /></ButtonInput>\r\n\t\t\t<input type=\"number\" value={value} onChange={null} {...rest} />\r\n\t\t\t<ButtonInput onClick={onUp}><Icon iconId=\"plus\" size={12} /></ButtonInput>\r\n\t\t</StyledNumbericInput>\r\n\t);\r\n}\r\n\r\nexport default NumericInput;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nconst StyledColHeader = styled.div`\r\n    h2 {\r\n        text-align: center;\r\n        padding-bottom: 8px;\r\n        margin-bottom: 16px;\r\n        //font-weight: normal;\r\n        //color: ${props => props.theme.text.secondary};\r\n        border-bottom: 1px solid ${props => props.theme.utils.border};\r\n    }\r\n`;\r\n\r\nconst ColHeader: React.FC<any> = ({ title, subTitle }) => {\r\n\r\n    return (\r\n        <StyledColHeader>\r\n            <h2>{title}</h2>\r\n            {/*<h3>{subTitle}</h3>*/}\r\n        </StyledColHeader>\r\n    );\r\n};\r\n\r\nexport default ColHeader;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport ButtonInput from '../inputs/ButtonInput';\r\nimport Card, { StyledCard } from '../ui/Card';\r\nimport Icon from '../ui/Icon';\r\n\r\nconst StyledOverlay = styled.div`\r\n    //width: 100vw;\r\n    //height: 100vw;\r\n    opacity: 0.8;\r\n    background-color: black;\r\n    position: fixed;\r\n    top: 48px;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    z-index: 3000;\r\n`\r\n\r\nconst StyledContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: fixed;\r\n    top: 48px;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    z-index: 3001;\r\n\r\n    & > ${StyledCard} {\r\n        width: 80%;\r\n        height: 80%;\r\n        position: relative;\r\n        padding: 64px 16px;\r\n\r\n        overflow: auto;\r\n        resize: both;\r\n\r\n        .close {\r\n            position: absolute;\r\n            top: 16px;\r\n            right: 16px;\r\n            background-color: transparent !important;\r\n        }\r\n    }\r\n`\r\n\r\nconst Modal: React.FC<any> = ({ setIsOpen, children, ...rest }) => {\r\n    return (\r\n        <>\r\n            <StyledOverlay />\r\n            <StyledContainer >\r\n                <Card {...rest} draggable=\"true\">\r\n                    <ButtonInput onClick={() => setIsOpen(false)} className=\"close\">\r\n                        <Icon iconId='close' />\r\n                    </ButtonInput>\r\n                    {children}\r\n                </Card>\r\n            </StyledContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport styled from 'styled-components';\r\nimport ButtonInput from \"../../inputs/ButtonInput\";\r\nimport Modal from \"../../layout/Modal\";\r\nimport Card from \"../../ui/Card\";\r\nimport Icon from \"../../ui/Icon\";\r\nimport ColHeader from \"./ColHeader\";\r\n\r\nconst StyledMainCol = styled.div`\r\n    .maximize {\r\n        background-color: transparent !important;\r\n    }\r\n`;\r\n\r\ninterface IMainColProps {\r\n    title: string;\r\n    viewer: any;\r\n}\r\n\r\nconst MainCol: React.FC<IMainColProps> = (props) => {\r\n    const [isFullScreen, setIsFullScreen] = useState(false);\r\n\r\n    const { title, viewer } = props;\r\n\r\n    return (\r\n        <>\r\n            {isFullScreen && (\r\n                <Modal setIsOpen={setIsFullScreen}>\r\n                    <div className=\"resize\">\r\n                        {viewer}\r\n                    </div>\r\n                </Modal>\r\n            )}\r\n            <StyledMainCol>\r\n                <ColHeader title=\"View\" subTitle=\"...\" />\r\n                <Card title={title} className=\"view\"\r\n                    action={<ButtonInput className=\"maximize\" onClick={() => setIsFullScreen(true)}>\r\n                        <Icon iconId=\"maximize\" />\r\n                    </ButtonInput>}\r\n                >\r\n                    {viewer}\r\n                </Card>\r\n            </StyledMainCol>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MainCol;\r\n","import { ModelId, ModelType, NoteId } from \"../models/Model.constants\";\r\n\r\nexport const getModelRoute = (modelType: ModelType, modelId: ModelId, rootId?: NoteId) => {\r\n\r\n    const rootSuffix = rootId ? `/root/${rootId}` : '';\r\n\r\n    return `/browse/${modelType}/${modelId}${rootSuffix}`;\r\n}\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport Chord from \"../../../core/models/Chord\";\r\nimport { ChordId, IModelConfig, ModelId, ModelType, NoteId, ScaleId } from \"../../../core/models/Model.constants\";\r\nimport { CHORD_PRESETS, NOTE_PRESETS, SCALE_PRESETS } from \"../../../core/models/Model.presets\";\r\nimport Note from \"../../../core/models/Note\";\r\nimport Scale from \"../../../core/models/Scale\";\r\nimport { getModelRoute } from \"../../../core/routing/Routing.utils\";\r\nimport DropdownInput from \"../../inputs/DropdownInput\";\r\nimport Card from \"../../ui/Card\";\r\nimport InputRow from \"../../ui/InputRow\";\r\nimport ColHeader from \"./ColHeader\";\r\n\r\nconst StyledNotesCol = styled.div`\r\n    \r\n`;\r\n\r\nexport const MODEL_TYPE_OPTIONS = [\r\n    {\r\n        id: ModelType.Chord,\r\n        name: 'Chords',\r\n        value: ModelType.Chord,\r\n        data: CHORD_PRESETS\r\n    },\r\n    {\r\n        id: ModelType.Scale,\r\n        name: 'Scales',\r\n        value: ModelType.Scale,\r\n        data: SCALE_PRESETS\r\n    }\r\n]\r\n\r\nexport interface INotesColProps {\r\n    modelType: typeof MODEL_TYPE_OPTIONS[0];\r\n    modelConfig;\r\n    root: IModelConfig | any;\r\n    model: Chord | Scale;\r\n    setModelType?;\r\n    setModelConfig?;\r\n    setRoot?;\r\n    setModel?;\r\n}\r\n\r\nexport const DEFAULT_MODEL_TYPE = MODEL_TYPE_OPTIONS[0];\r\nexport const DEFAULT_MODEL_CONFIG = MODEL_TYPE_OPTIONS[0].data[0];\r\nexport const DEFAULT_ROOT = NOTE_PRESETS[0];\r\n//export const DEFAULT_MODEL = new Chord(DEFAULT_MODEL_CONFIG.modelId, { root: Note.fromId(DEFAULT_ROOT.modelId) })\r\n\r\nexport const getNewModel = (modelType: ModelType, modelId: ModelId, root: NoteId) => {\r\n    let newModel;\r\n    if (modelType === ModelType.Chord) {\r\n        newModel = new Chord(modelId as ChordId, { root: Note.fromId(root) })\r\n    }\r\n    else if (modelType === ModelType.Scale) {\r\n        newModel = new Scale(modelId as ScaleId, { root: Note.fromId(root) })\r\n    }\r\n    return newModel;\r\n}\r\n\r\nconst NotesCol: React.FC<INotesColProps> = props => {\r\n\r\n    const { modelType, modelConfig, root, setModelType: _setModelType, setModelConfig: _setModelConfig, setRoot: _setRoot, model, setModel } = props;\r\n    const modelOptions = modelType.data;\r\n\r\n    const setModelType = type => {\r\n        _setModelType(type);\r\n        _setModelConfig(type.data[0])\r\n    }\r\n    const setModelConfig = config => {\r\n        let newModel = getNewModel(config.modelType, config.modelId, root.modelId);\r\n        _setModelConfig(config);\r\n        setModel(newModel);\r\n    }\r\n    const setRoot = newRoot => {\r\n        let newModel = getNewModel(modelConfig.modelType, modelConfig.modelId, newRoot.modelId);\r\n        _setRoot(newRoot);\r\n        setModel(newModel);\r\n    }\r\n\r\n    console.log('dpb', MODEL_TYPE_OPTIONS, modelType, modelOptions, modelConfig)\r\n\r\n    return (\r\n        <StyledNotesCol>\r\n            <ColHeader title=\"Notes\" subTitle=\"...\" />\r\n            <Card title=\"Notes\">\r\n                <Link to={getModelRoute(modelType.id, modelConfig.modelId, root.modelId)}>{model.name}</Link>\r\n            </Card>\r\n            <Card title=\"Root\">\r\n                <ul>\r\n                    <li>\r\n                        <InputRow label=\"Key Center\">\r\n                            <DropdownInput value={root} setValue={setRoot} options={NOTE_PRESETS} idProperty=\"modelId\" />\r\n                        </InputRow>\r\n                    </li>\r\n                </ul>\r\n            </Card>\r\n            <Card title=\"Intervals\">\r\n                <ul>\r\n                    <li>\r\n                        <InputRow label=\"Model Type\">\r\n                            <DropdownInput value={modelType} setValue={setModelType} options={MODEL_TYPE_OPTIONS} idProperty=\"id\" />\r\n                        </InputRow>\r\n                    </li>\r\n                    <li>\r\n                        <InputRow label=\"Preset\">\r\n                            <DropdownInput value={modelConfig} setValue={setModelConfig} options={modelOptions} idProperty=\"modelId\" />\r\n                        </InputRow>\r\n                    </li>\r\n                </ul>\r\n            </Card>\r\n        </StyledNotesCol>\r\n    );\r\n};\r\n\r\nexport default NotesCol;\r\n","import { useQueryParam } from \"use-query-params\";\r\n\r\nconst useModelQueryParams = () => {\r\n    const [qpModelType] = useQueryParam('modelType');\r\n    const [qpModelId] = useQueryParam('modelId');\r\n    const [qpRootId] = useQueryParam('rootId');\r\n\r\n    return [qpModelType, qpModelId, qpRootId];\r\n}\r\n\r\nexport default useModelQueryParams;\r\n","import { useState } from \"react\";\r\nimport { NOTE_PRESETS } from \"../../../core/models/Model.presets\";\r\nimport { DEFAULT_MODEL_CONFIG, DEFAULT_MODEL_TYPE, DEFAULT_ROOT, getNewModel, MODEL_TYPE_OPTIONS } from \"./NotesCol\";\r\n\r\nconst getInitModelType = (qpModelType?: string) => {\r\n    const found = MODEL_TYPE_OPTIONS.find(type => type.id && type.id === qpModelType);\r\n    return found || DEFAULT_MODEL_TYPE;\r\n}\r\n\r\nconst getInitModelConfig = (modelType, qpModelId?: string) => {\r\n    const found = modelType.data.find(preset => preset.modelId === qpModelId);\r\n    return found || DEFAULT_MODEL_CONFIG;\r\n}\r\n\r\nconst getInitRoot = (qpRootId?: string) => {\r\n    const found = NOTE_PRESETS.find(note => note.modelId === qpRootId);\r\n    return found || DEFAULT_ROOT;\r\n}\r\n\r\nexport const useModelState = (initModelType, initModelId, initRootId) => {\r\n    const [modelType, setModelType] = useState(getInitModelType(initModelType));\r\n    const [modelConfig, setModelConfig] = useState(getInitModelConfig(modelType, initModelId));\r\n\r\n    const [root, setRoot] = useState(getInitRoot(initRootId));\r\n    const [model, setModel] = useState(getNewModel(modelType.id, modelConfig.modelId, root.modelId));\r\n\r\n    return {\r\n        modelType,\r\n        setModelType,\r\n        modelConfig,\r\n        setModelConfig,\r\n        root,\r\n        setRoot,\r\n        model,\r\n        setModel\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledCard = styled.div`\r\n    background: ${props => props.theme.surface.card};\r\n    width: 100%;\r\n    border-radius: 16px;\r\n    padding: 16px;\r\n\r\n    .header {\r\n        margin-bottom: 16px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n    }\r\n`;\r\n\r\nexport const CardHeader = ({ title, action = null }) => (\r\n    <div className=\"header\">\r\n        <h2>{title}</h2>\r\n        {action}\r\n    </div>\r\n);\r\n\r\nconst Card: React.FC<any> = ({ title, action, children, ...rest }) => {\r\n    return (\r\n        <StyledCard {...rest}>\r\n            {title &&\r\n                <CardHeader title={title} action={action} />\r\n            }\r\n            {children}\r\n        </StyledCard >\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledInputRow = styled.div`\r\n    display: flex;\r\n    align-items: flex-start;\r\n    flex-direction: column;\r\n    width: 100%;\r\n\r\n    ${props => props.$y ? '' : `\r\n        @media(min-width: 512px) {\r\n            align-items: center;\r\n            flex-direction: row;\r\n            justify-content: space-between;\r\n            //margin-bottom: 8px;\r\n        }\r\n    `}\r\n\r\n    > label {\r\n        color: ${({ theme }) => theme.dark3};\r\n        font-weight: bold;\r\n        margin: 8px;\r\n        white-space: nowrap;\r\n    }\r\n`;\r\n\r\nconst InputRow = ({ label, children, y = false, ...rest }) => {\r\n    return (\r\n        <StyledInputRow $y={y} {...rest}>\r\n            <label>{label}</label>\r\n            <div>\r\n                {children}\r\n            </div>\r\n        </StyledInputRow>\r\n    );\r\n}\r\n\r\nexport default InputRow;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { FRETBOARD_TUNING_VALUES, TuningId } from \"../../../viewers/fretboard/Fretboard.tuning\";\r\nimport { DEFAULT_FRETBOARD_PROPS } from \"../../../viewers/fretboard/Fretboard.utils\";\r\nimport { VoicingId, VOICING_PRESETS } from \"../../../viewers/fretboard/Fretboard.voicing\";\r\nimport DropdownInput from \"../../inputs/DropdownInput\";\r\nimport NumericInput from \"../../inputs/NumericInput\";\r\nimport Card from \"../../ui/Card\";\r\nimport InputRow from \"../../ui/InputRow\";\r\nimport ColHeader from \"./ColHeader\";\r\n\r\nconst StyledFretboardCol = styled.div`\r\n\r\n`;\r\n\r\nconst VOICING_OPTIONS = [\r\n    {\r\n        id: VoicingId.None,\r\n        name: '---',\r\n        value: undefined\r\n    },\r\n    ...VOICING_PRESETS\r\n];\r\n\r\nexport interface IFretboardColProps {\r\n    voicing;\r\n    tuning;\r\n    fretRange;\r\n    setVoicing;\r\n    setTuning;\r\n    setFretRange;\r\n    model;\r\n}\r\n\r\nexport const DEFAULT_VOICING = VOICING_OPTIONS[0];\r\nexport const DEFAULT_TUNING = FRETBOARD_TUNING_VALUES[0];\r\nexport const DEFAULT_FRET_RANGE = DEFAULT_FRETBOARD_PROPS.fretRange;\r\n\r\nconst FretboardCol: React.FC<IFretboardColProps> = ({ model, voicing, tuning, fretRange, setVoicing, setTuning, setFretRange }) => {\r\n\r\n    const filteredVoicings = VOICING_OPTIONS.filter(v => {\r\n        if (!v.value) return true;\r\n        const containsNonModelIntervals = v.value.some(x => x && !model.intervals.find(ivl => ivl.pod[1] + 1 === x));\r\n        return !containsNonModelIntervals;\r\n    });\r\n\r\n    const [fretLo, fretHi] = fretRange;\r\n\r\n    return (\r\n        <StyledFretboardCol>\r\n            <ColHeader title=\"Instrument\" subTitle=\"Fretboard\" />\r\n            <Card title=\"Tuning\">\r\n                <ul>\r\n                    <li>\r\n                        <InputRow label=\"Preset\">\r\n                            <DropdownInput value={tuning} setValue={setTuning} options={FRETBOARD_TUNING_VALUES} />\r\n                        </InputRow>\r\n                    </li>\r\n                    {tuning.id === TuningId.Standard &&\r\n                        <li>\r\n                            <InputRow label=\"Voicing\">\r\n                                <DropdownInput value={voicing} setValue={setVoicing} options={filteredVoicings} />\r\n                            </InputRow>\r\n                        </li>\r\n                    }\r\n                </ul>\r\n            </Card >\r\n            <Card title=\"Range\">\r\n                <ul>\r\n                    <li>\r\n                        <InputRow label=\"Low Fret\">\r\n                            <NumericInput value={fretLo} min={0} max={fretHi} setValue={v => setFretRange([v, fretHi])} />\r\n                        </InputRow>\r\n                    </li>\r\n                    <li>\r\n                        <InputRow label=\"High Fret\">\r\n                            <NumericInput value={fretHi} min={fretLo} max={24} setValue={v => setFretRange([fretLo, v])} />\r\n                        </InputRow>\r\n                    </li>\r\n                </ul>\r\n            </Card >\r\n        </StyledFretboardCol>\r\n    );\r\n};\r\n\r\nexport default FretboardCol;\r\n","import React, { useState } from \"react\";\r\nimport styled from 'styled-components';\r\nimport Fretboard from \"../../../viewers/fretboard/Fretboard\";\r\nimport ColumnManager, { StyledColumnManager } from \"../../column-manager/ColumnManager\";\r\nimport { StyledCard } from \"../../ui/Card\";\r\nimport FretboardCol, { DEFAULT_FRET_RANGE, DEFAULT_TUNING, DEFAULT_VOICING } from \"./FretboardCol\";\r\nimport MainCol from \"./MainCol\";\r\nimport NotesCol from \"./NotesCol\";\r\nimport useModelQueryParams from \"./useModelQueryParams\";\r\nimport { useModelState } from \"./useModelState\";\r\n\r\nconst StyledFretboardPage = styled.div`\r\n    min-height: 95vh;\r\n    padding: 16px;\r\n\r\n    ${StyledColumnManager} {\r\n        & > div > ${StyledCard}:not(:last-child) {\r\n            margin-bottom: 16px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst FretboardPage: React.FC = () => {\r\n\r\n    const [qpModelType, qpModelId, qpRootId] = useModelQueryParams();\r\n    const modelState = useModelState(qpModelType, qpModelId, qpRootId);\r\n    const {\r\n        modelType,\r\n        setModelType,\r\n        modelConfig,\r\n        setModelConfig,\r\n        root,\r\n        setRoot,\r\n        model,\r\n        setModel\r\n    } = modelState;\r\n\r\n    const [voicing, setVoicing] = useState(DEFAULT_VOICING);\r\n    const [tuning, setTuning] = useState(DEFAULT_TUNING);\r\n    const [fretRange, setFretRange] = useState(DEFAULT_FRET_RANGE);\r\n\r\n    const instrumentColProps = {\r\n        model,\r\n        voicing,\r\n        setVoicing,\r\n        tuning,\r\n        setTuning,\r\n        fretRange,\r\n        setFretRange\r\n    }\r\n\r\n    const notesColProps = {\r\n        modelType,\r\n        setModelType,\r\n        modelConfig,\r\n        setModelConfig,\r\n        root,\r\n        setRoot,\r\n        model,\r\n        setModel\r\n    }\r\n\r\n    const mainColProps = {\r\n        title: 'Fretboard',\r\n        viewer: <Fretboard\r\n            {...instrumentColProps}\r\n            {...notesColProps}\r\n            tuning={instrumentColProps.tuning.value}\r\n        />\r\n    };\r\n\r\n    return (\r\n        <StyledFretboardPage>\r\n            <ColumnManager tablet={[\"1fr\", \"2fr\"]} desktop={[\"1fr\", \"2fr\", \"1fr\"]}>\r\n                <FretboardCol {...instrumentColProps} />\r\n                <MainCol {...mainColProps} />\r\n                <NotesCol {...notesColProps} />\r\n            </ColumnManager>\r\n        </StyledFretboardPage>\r\n    );\r\n};\r\n\r\nexport default FretboardPage;\r\n","import FretboardPage from \"../../components/pages/view/FretboardPage\";\r\n\r\nexport default FretboardPage;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledFretboard = styled.div`\r\n    display: inline-grid;\r\n\twidth: 100%;\r\n\tbackground-image: radial-gradient(ellipse, #E8DBB8 0%, #D0B27C 100%);\r\n\tfont-size: 90%;\r\n\tmargin: 16px 0;\r\n\r\n    .fret {\r\n        display: inline-flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        position: relative;\r\n        border-right: 2px solid darkgrey;\r\n    }\r\n\r\n    .fret.open {\r\n        border-right: 3px solid grey;\r\n        background-color: #D0B27C;;\r\n    }\r\n\r\n    /* Used to maintain aspect ratio */\r\n\r\n    .fret::before {\r\n        content: \"\";\r\n        display: block;\r\n        height: 0;\r\n        width: 0;\r\n        margin-top: calc(1/2 * 100%);\r\n    }\r\n\r\n    /* Fret String */\r\n\r\n    .fret-string {\r\n        border-top: 1px solid grey;\r\n        width: 100%;\r\n    }\r\n\r\n    /* Fret Numbers */\r\n\r\n    .fret-number {\r\n        position: absolute;\r\n        bottom: 100%;\r\n    }\r\n\r\n    /* Fret Dots */\r\n\r\n    .fret-dots {\r\n        position: absolute;\r\n        top: 95%;\r\n        font-size: 16px;\r\n        white-space: nowrap;\r\n    }\r\n\r\n    .fret-number, .fret-dots {\r\n        color: #888;\r\n    }\r\n`;\r\n\r\nexport default StyledFretboard;\r\n","\r\nimport * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { IFretProps } from \"./Fretboard.utils\";\r\n\r\nconst StyledFretLabel = styled.div`\r\n\tposition: absolute;\r\n\theight: 60%;\r\n\taspect-ratio: 1;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tborder-radius: 100%;\r\n\tbackground-color: ${({ $bgColor }) => $bgColor ? $bgColor : 'transparent'};\r\n\tcolor: ${({ $fgColor }) => $fgColor ? $fgColor : ''};\r\n\r\n\t/*cursor: pointer;\r\n\t&:hover {\r\n\t\theight: 80%;\r\n\t}*/\r\n`;\r\n\r\n\r\nconst FretLabel: React.FC<IFretProps> = props => {\r\n\r\n\tconst bgColor = props.colorMapFn(props);\r\n\r\n\tlet fgColor = 'white';\r\n\r\n\treturn (\r\n\t\t<StyledFretLabel $bgColor={bgColor} $fgColor={fgColor} onClick={null} className=\"fret-label\">\r\n\t\t\t{null}\r\n\t\t</StyledFretLabel>\r\n\t);\r\n};\r\n\r\nexport default FretLabel;\r\n","import * as React from \"react\";\r\nimport StyledFretboard from \"./Fretboard.styles\";\r\nimport { DEFAULT_FRETBOARD_PROPS, getDotsForFret, getFretRatios, IFretboardProps, IFretProps } from \"./Fretboard.utils\";\r\nimport FretLabel from \"./FretLabel\";\r\n\r\nexport const Fret: React.FC<IFretProps> = props => {\r\n\r\n\tconst { tuning, stringIndex, fretIndex, showFretNumbers, showFretDots } = props;\r\n\r\n\tconst classes = ['fret'];\r\n\tif (fretIndex === 0)\r\n\t\tclasses.push('open');\r\n\r\n\tconst isLowString = stringIndex === tuning.length - 1;\r\n\tconst isHighString = stringIndex === 0;\r\n\r\n\treturn (\r\n\t\t<div className={classes.join(' ')}>\r\n\t\t\t<div className=\"fret-number\">\r\n\t\t\t\t{showFretNumbers && isHighString && fretIndex > 0 && fretIndex}\r\n\t\t\t</div>\r\n\t\t\t<div className='fret-string' />\r\n\t\t\t<FretLabel {...props} />\r\n\t\t\t<div className=\"fret-dots\">\r\n\t\t\t\t{showFretDots && isLowString && fretIndex > 0 && getDotsForFret(fretIndex)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst getFrets = (props: IFretboardProps) => {\r\n\tconst { fretRange, tuning } = props;\r\n\tconst [lo, hi] = fretRange;\r\n\r\n\tconst allFrets = [];\r\n\tfor (let s = 0; s < tuning.length; s++) {\r\n\t\tfor (let f = lo; f <= hi; f++) {\r\n\t\t\tallFrets.push(\r\n\t\t\t\t<Fret\r\n\t\t\t\t\tkey={`s${s}-f${f}`}\r\n\t\t\t\t\tstringIndex={s}\r\n\t\t\t\t\tfretIndex={f}\r\n\t\t\t\t\ttuning={tuning}\r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\treturn allFrets;\r\n};\r\n\r\nconst Fretboard: React.FC<IFretboardProps> = (userProps) => {\r\n\tconst props = { ...DEFAULT_FRETBOARD_PROPS, ...userProps };\r\n\r\n\tconst [lo, hi] = props.fretRange;\r\n\tconst numFrets = hi - lo + 1;\r\n\tconst numStrings = props.tuning.length;\r\n\tconst gridTemplateColumns = getFretRatios(numFrets).map(n => n + 'fr').join(' ');\r\n\tconst gridTemplateRows = `repeat(${numStrings}, 1fr)`;\r\n\tconst fretboardStyles = {\r\n\t\tgridTemplateColumns,\r\n\t\tgridTemplateRows\r\n\t};\r\n\r\n\treturn (\r\n\t\t<StyledFretboard className='fretboard' style={fretboardStyles}>\r\n\t\t\t{getFrets(props)}\r\n\t\t</StyledFretboard>\r\n\t);\r\n};\r\n\r\nexport default Fretboard;\r\n","import ArrayUtils from \"../../core/general/Array.utils\";\r\nimport Note from '../../core/models/Note';\r\nimport { NoteId } from './../../core/models/Model.constants';\r\n\r\nexport enum TuningId {\r\n    Standard = 'standard',\r\n    StandardSeven = 'standard-seven',\r\n    StandardBass = 'standard-bass',\r\n    Flat = 'flat',\r\n    DoubleFlat = 'double-flat',\r\n    DropD = 'drop-d',\r\n    DADGAD = 'dadgad',\r\n    Banjo = 'banjo',\r\n    Violin = 'violin',\r\n    OpenA = 'open-a',\r\n    OpenB = 'open-b',\r\n    OpenC = 'open-c',\r\n    OpenD = 'open-d',\r\n    OpenE = 'open-e',\r\n    OpenF = 'open-f',\r\n    OpenG = 'open-g',\r\n}\r\n\r\nexport interface ITuning {\r\n    id: TuningId;\r\n    name: string;\r\n    value: number[]\r\n}\r\n\r\nconst formatPreset = (id: TuningId, name: string, value: number[]): ITuning => ({\r\n    id,\r\n    name,\r\n    value\r\n});\r\n\r\nconst getPitch = (noteId: NoteId, octave: number): number => Note.getNote(noteId, octave).pod[0];\r\n\r\nexport const TUNING_PRESET_MAP = new Map<TuningId, ITuning>([\r\n    [TuningId.Standard, formatPreset(\r\n        TuningId.Standard,\r\n        'Standard',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.E, 3)\r\n        ]\r\n    )],\r\n    [TuningId.Flat, formatPreset(\r\n        TuningId.Flat,\r\n        'Flat',\r\n        [\r\n            getPitch(NoteId.Eb, 5),\r\n            getPitch(NoteId.Bb, 4),\r\n            getPitch(NoteId.Gb, 4),\r\n            getPitch(NoteId.Db, 4),\r\n            getPitch(NoteId.Ab, 3),\r\n            getPitch(NoteId.Eb, 3)\r\n        ]\r\n    )],\r\n    [TuningId.DoubleFlat, formatPreset(\r\n        TuningId.DoubleFlat,\r\n        'Double Flat',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.F, 4),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    [TuningId.StandardSeven, formatPreset(\r\n        TuningId.StandardSeven,\r\n        'Standard 7-String',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.E, 3),\r\n            getPitch(NoteId.B, 3)\r\n        ]\r\n    )],\r\n    [TuningId.StandardBass, formatPreset(\r\n        TuningId.StandardBass,\r\n        'Standard Bass',\r\n        [\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.D, 3),\r\n            getPitch(NoteId.A, 2),\r\n            getPitch(NoteId.E, 2)\r\n        ]\r\n    )],\r\n    [TuningId.DropD, formatPreset(\r\n        TuningId.DropD,\r\n        'Drop D',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    [TuningId.DADGAD, formatPreset(\r\n        TuningId.DADGAD,\r\n        'DADGAD',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    // Unconfirmed\r\n    [TuningId.Banjo, formatPreset(\r\n        TuningId.Banjo,\r\n        'Banjo',\r\n        [\r\n            getPitch(NoteId.G, 5),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    // Unconfirmed\r\n    [TuningId.Violin, formatPreset(\r\n        TuningId.Violin,\r\n        'Violin',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.G, 4)\r\n        ]\r\n    )],\r\n    [TuningId.OpenA, formatPreset(\r\n        TuningId.OpenA,\r\n        'Open A',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.E, 4),\r\n            getPitch(NoteId.Cs, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.E, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenB, formatPreset(\r\n        TuningId.OpenB,\r\n        'Open B',\r\n        [\r\n            getPitch(NoteId.Ds, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.Fs, 4),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.Fs, 3),\r\n            getPitch(NoteId.B, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenC, formatPreset(\r\n        TuningId.OpenC,\r\n        'Open C',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.C, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenD, formatPreset(\r\n        TuningId.OpenD,\r\n        'Open D',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.Fs, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenE, formatPreset(\r\n        TuningId.OpenE,\r\n        'Open E',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.Gs, 4),\r\n            getPitch(NoteId.E, 4),\r\n            getPitch(NoteId.B, 3),\r\n            getPitch(NoteId.E, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenF, formatPreset(\r\n        TuningId.OpenF,\r\n        'Open F',\r\n        [\r\n            getPitch(NoteId.F, 5),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.F, 4),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.F, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenG, formatPreset(\r\n        TuningId.OpenG,\r\n        'Open G',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )]\r\n]);\r\n\r\nexport const FRETBOARD_TUNING_VALUES = ArrayUtils.mapToArray(TUNING_PRESET_MAP);\r\n","import Chord from '../../core/models/Chord';\r\nimport IntervalSpan from '../../core/models/Interval';\r\nimport { IModelConfig } from '../../core/models/Model.constants';\r\nimport Note from '../../core/models/Note';\r\nimport Scale from '../../core/models/Scale';\r\nimport { ITuning, TuningId, TUNING_PRESET_MAP } from './Fretboard.tuning';\r\nimport { IVoicing } from './Fretboard.voicing';\r\n\r\nexport interface IFretLabelProps {\r\n\tnote?: Note;\r\n\tcolor?: string;\r\n\tfreq?: number;\r\n}\r\n\r\nexport interface IFretboardProps {\r\n\tfretRange?: [number, number];\r\n\tshowFretDots?: boolean;\r\n\tshowFretNumbers?: boolean;\r\n\tcolorMapFn?: (fretProps: IFretProps) => string | undefined;\r\n\tvoicing?: IVoicing,\r\n\ttuning?: number[]; // ITuning,\r\n\tmodel?: Chord | Scale;\r\n}\r\n\r\nexport interface IFretProps extends IFretboardProps {\r\n\tstringIndex: number;\r\n\tfretIndex: number;\r\n}\r\n\r\nexport const DOTTED_FRET_INDICES = [true, false, false, true, false, true, false, true, false, true, false, false];\r\n\r\nexport const FRET_SIZE_RATIO = Math.pow((1 / 2), (1 / 12));\r\n\r\nconst isIntervalInVoicing = (interval: IntervalSpan, voicing: IVoicing, stringIndex: number) => {\r\n\tif (!voicing || !voicing.value) return true;\r\n\tconst v = voicing.value[stringIndex];\r\n\tconst d = interval.getDegree();\r\n\tif (Array.isArray(v)) {\r\n\t\treturn v.some(n => doesVoicingValueMatch(d, n));\r\n\t}\r\n\telse if (typeof v === 'number') {\r\n\t\treturn doesVoicingValueMatch(d, v);\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nexport const getFretColor = (props: IFretProps): string | undefined => {\r\n\tconst { stringIndex, fretIndex, tuning, model, voicing } = props;\r\n\tconst noteIndex = tuning[stringIndex] + fretIndex;\r\n\tconst [interval, note] = model.tryGetPodPairAtPitch(noteIndex);\r\n\r\n\tif (!note) return;\r\n\r\n\tif (voicing && !isIntervalInVoicing(interval, voicing, stringIndex)) {\r\n\t\treturn `#00000033`\r\n\t}\r\n\r\n\treturn interval.getColor();\r\n}\r\n\r\nexport const DEFAULT_FRETBOARD_PROPS: IFretboardProps = {\r\n\tfretRange: [1, 12],\r\n\ttuning: TUNING_PRESET_MAP.get(TuningId.Standard).value,\r\n\tshowFretDots: true,\r\n\tshowFretNumbers: true,\r\n\tcolorMapFn: getFretColor\r\n};\r\n\r\nexport const getFretRatios = (numFrets: number): number[] => {\r\n\tconst ratios = [];\r\n\tfor (let i = 1; i <= numFrets; i++) {\r\n\t\tratios.push((i <= 1) ? 1 : ratios[i - 2] * FRET_SIZE_RATIO);\r\n\t}\r\n\treturn ratios;\r\n};\r\n\r\nexport const getDotsForFret = (fretNumber: number): string => {\r\n\tconst mod = fretNumber % 12;\r\n\tif (mod === 0)\r\n\t\treturn '• •';\r\n\telse if (DOTTED_FRET_INDICES[mod])\r\n\t\treturn '•';\r\n\treturn '';\r\n};\r\n\r\nconst doesVoicingValueMatch = (d: number, v: number) => {\r\n\treturn d + 1 === v;\r\n}\r\n","import ArrayUtils from \"../../core/general/Array.utils\";\r\n\r\nexport enum VoicingId {\r\n    None = 'None',\r\n    Chord_Triad_CShape_1 = 'Chord_Triad_CShape_1',\r\n    Chord_Triad_AShape_1 = 'Chord_Triad_AShape_1',\r\n    Chord_Triad_GShape_1 = 'Chord_Triad_GShape_1',\r\n    Chord_Triad_EShape_1 = 'Chord_Triad_EShape_1',\r\n    Chord_Triad_DShape_1 = 'Chord_Triad_DShape_1',\r\n    Chord_Sixth_CShape_1 = 'Chord_Sixth_CShape_1',\r\n    Chord_Sixth_AShape_1 = 'Chord_Sixth_AShape_1',\r\n    Chord_Sixth_GShape_1 = 'Chord_Sixth_GShape_1',\r\n    Chord_Sixth_EShape_1 = 'Chord_Sixth_EShape_1',\r\n    Chord_Sixth_DShape_1 = 'Chord_Sixth_DShape_1',\r\n    Chord_Seventh_CShape_1 = 'Chord_Seventh_CShape_1',\r\n    Chord_Seventh_AShape_1 = 'Chord_Seventh_AShape_1',\r\n    Chord_Seventh_GShape_1 = 'Chord_Seventh_GShape_1',\r\n    Chord_Seventh_EShape_1 = 'Chord_Seventh_EShape_1',\r\n    Chord_Seventh_DShape_1 = 'Chord_Seventh_DShape_1',\r\n    Chord_Shell_E_37 = 'Chord_Shell_E_37',\r\n    Chord_Shell_E_73 = 'Chord_Shell_E_73',\r\n    Chord_Shell_A_37 = 'Chord_Shell_A_37',\r\n    Chord_Shell_A_73 = 'Chord_Shell_A_73',\r\n    Chord_Shell_D_37 = 'Chord_Shell_D_37',\r\n    Chord_Shell_D_73 = 'Chord_Shell_D_73',\r\n    Scale_DoubleOctave_CShape_1 = 'Scale_DoubleOctave_CShape_1',\r\n    Scale_DoubleOctave_CShape_2 = 'Scale_DoubleOctave_CShape_2',\r\n    Scale_DoubleOctave_AShape_1 = 'Scale_DoubleOctave_AShape_1',\r\n    Scale_DoubleOctave_GShape_1 = 'Scale_DoubleOctave_GShape_1',\r\n    Scale_DoubleOctave_EShape_1 = 'Scale_DoubleOctave_EShape_1',\r\n    Scale_DoubleOctave_EShape_2 = 'Scale_DoubleOctave_EShape_2',\r\n    Scale_DoubleOctave_DShape_1 = 'Scale_DoubleOctave_DShape_1',\r\n}\r\n\r\nexport interface IVoicing {\r\n    id: VoicingId;\r\n    name: string;\r\n    value: (number | number[])[]\r\n}\r\n\r\nconst formatPreset = (id: VoicingId, name: string, value: (number | number[])[]): IVoicing => ({\r\n    id,\r\n    name,\r\n    value\r\n});\r\n\r\nexport const VOICING_PRESET_MAP = new Map<VoicingId, IVoicing>([\r\n    // Triads\r\n    [VoicingId.Chord_Triad_CShape_1, formatPreset(\r\n        VoicingId.Chord_Triad_CShape_1,\r\n        'C Shape Triad',\r\n        [3, 1, 5, 3, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Triad_AShape_1, formatPreset(\r\n        VoicingId.Chord_Triad_AShape_1,\r\n        'A Shape Triad',\r\n        [5, 3, 1, 5, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Triad_GShape_1, formatPreset(\r\n        VoicingId.Chord_Triad_GShape_1,\r\n        'G Shape Triad',\r\n        [1, 5, 1, 5, 3, 1]\r\n    )],\r\n    [VoicingId.Chord_Triad_EShape_1, formatPreset(\r\n        VoicingId.Chord_Triad_EShape_1,\r\n        'E Shape Triad',\r\n        [1, 5, 3, 1, 5, 1]\r\n    )],\r\n    [VoicingId.Chord_Triad_DShape_1, formatPreset(\r\n        VoicingId.Chord_Triad_DShape_1,\r\n        'D Shape Triad',\r\n        [3, 1, 5, 1, null, null]\r\n    )],\r\n    // Sixths\r\n    [VoicingId.Chord_Sixth_CShape_1, formatPreset(\r\n        VoicingId.Chord_Sixth_CShape_1,\r\n        'C Shape 6th Chord',\r\n        [3, 6, 5, 3, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Sixth_AShape_1, formatPreset(\r\n        VoicingId.Chord_Sixth_AShape_1,\r\n        'A Shape 6th Chord',\r\n        [5, 3, 6, 5, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Sixth_GShape_1, formatPreset(\r\n        VoicingId.Chord_Sixth_GShape_1,\r\n        'G Shape 6th Chord',\r\n        [6, 5, 1, 5, 3, 1]\r\n    )],\r\n    [VoicingId.Chord_Sixth_EShape_1, formatPreset(\r\n        VoicingId.Chord_Sixth_EShape_1,\r\n        'E Shape 6th Chord',\r\n        [1, 5, 3, 6, 5, 1]\r\n    )],\r\n    [VoicingId.Chord_Sixth_DShape_1, formatPreset(\r\n        VoicingId.Chord_Sixth_DShape_1,\r\n        'D Shape 6th Chord',\r\n        [3, 6, 5, 1, null, null]\r\n    )],\r\n    // Sevenths\r\n    [VoicingId.Chord_Seventh_CShape_1, formatPreset(\r\n        VoicingId.Chord_Seventh_CShape_1,\r\n        'C Shape 7th Chord',\r\n        [3, 7, 5, 3, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Seventh_AShape_1, formatPreset(\r\n        VoicingId.Chord_Seventh_AShape_1,\r\n        'A Shape 7th Chord',\r\n        [5, 3, 7, 5, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Seventh_GShape_1, formatPreset(\r\n        VoicingId.Chord_Seventh_GShape_1,\r\n        'G Shape 7th Chord',\r\n        [7, 5, 1, 5, 3, 1]\r\n    )],\r\n    [VoicingId.Chord_Seventh_EShape_1, formatPreset(\r\n        VoicingId.Chord_Seventh_EShape_1,\r\n        'E Shape 7th Chord',\r\n        [1, 5, 3, 7, 5, 1]\r\n    )],\r\n    [VoicingId.Chord_Seventh_DShape_1, formatPreset(\r\n        VoicingId.Chord_Seventh_DShape_1,\r\n        'D Shape 7th Chord',\r\n        [3, 7, 5, 1, null, null]\r\n    )],\r\n    // Shells\r\n    [VoicingId.Chord_Shell_E_37, formatPreset(\r\n        VoicingId.Chord_Shell_E_37,\r\n        'Shell E 3-7',\r\n        [null, null, null, 7, 3, 1]\r\n    )],\r\n    [VoicingId.Chord_Shell_E_73, formatPreset(\r\n        VoicingId.Chord_Shell_E_73,\r\n        'Shell E 7-3',\r\n        [null, null, 3, 7, null, 1]\r\n    )],\r\n    [VoicingId.Chord_Shell_A_37, formatPreset(\r\n        VoicingId.Chord_Shell_A_37,\r\n        'Shell A 3-7',\r\n        [null, null, 7, 3, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Shell_A_73, formatPreset(\r\n        VoicingId.Chord_Shell_A_73,\r\n        'Shell A 7-3',\r\n        [null, 3, 7, null, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Shell_D_37, formatPreset(\r\n        VoicingId.Chord_Shell_D_37,\r\n        'Shell D 3-7',\r\n        [null, 7, 3, 1, null, null]\r\n    )],\r\n    [VoicingId.Chord_Shell_D_73, formatPreset(\r\n        VoicingId.Chord_Shell_D_73,\r\n        'Shell D 7-3',\r\n        [3, 7, null, 1, null, null]\r\n    )],\r\n    // CAGED Scales\r\n    [VoicingId.Scale_DoubleOctave_EShape_1, formatPreset(\r\n        VoicingId.Scale_DoubleOctave_EShape_1,\r\n        'E Shape Scale (Locrian)',\r\n        [[1, 2, 3], [6, 7], [3, 4, 5], [7, 1, 2], [4, 5, 6], [1, 2, 3]]\r\n    )],\r\n    [VoicingId.Scale_DoubleOctave_EShape_2, formatPreset(\r\n        VoicingId.Scale_DoubleOctave_EShape_2,\r\n        'E Shape Scale (Ionian)',\r\n        [[7, 1, 2], [5, 6], [2, 3, 4], [6, 7, 1], [3, 4, 5], [1, 2]]\r\n    )],\r\n    [VoicingId.Scale_DoubleOctave_DShape_1, formatPreset(\r\n        VoicingId.Scale_DoubleOctave_DShape_1,\r\n        'D Shape Scale (Dorian)',\r\n        [[1, 2, 3], [5, 6, 7], [2, 3, 4], [6, 7, 1], [4, 5], [1, 2, 3]]\r\n    )],\r\n    [VoicingId.Scale_DoubleOctave_CShape_1, formatPreset(\r\n        VoicingId.Scale_DoubleOctave_CShape_1,\r\n        'C Shape Scale (Phrygian)',\r\n        [[1, 2, 3], [5, 6, 7], [3, 4], [7, 1, 2], [4, 5, 6], [1, 2, 3]]\r\n    )],\r\n    [VoicingId.Scale_DoubleOctave_CShape_2, formatPreset(\r\n        VoicingId.Scale_DoubleOctave_CShape_2,\r\n        'C Shape Scale (Lydian)',\r\n        [[7, 1, 2], [4, 5, 6], [2, 3], [6, 7, 1], [3, 4, 5], [1, 2]]\r\n    )],\r\n    [VoicingId.Scale_DoubleOctave_AShape_1, formatPreset(\r\n        VoicingId.Scale_DoubleOctave_AShape_1,\r\n        'A Shape Scale (Mixolydian)',\r\n        [[1, 2], [5, 6, 7], [2, 3, 4], [6, 7, 1], [3, 4, 5], [1, 2]]\r\n    )],\r\n    [VoicingId.Scale_DoubleOctave_GShape_1, formatPreset(\r\n        VoicingId.Scale_DoubleOctave_GShape_1,\r\n        'G Shape Scale (Aeolian)',\r\n        [[1, 2, 3], [5, 6, 7], [2, 3, 4], [7, 1], [4, 5, 6], [1, 2, 3]]\r\n    )]\r\n])\r\n\r\nexport const VOICING_PRESETS = ArrayUtils.mapToArray(VOICING_PRESET_MAP);\r\n"],"names":["StyledColumnManager","styled","$tablet","join","$desktop","children","tablet","desktop","React","StyledDropdownInput","props","value","setValue","options","idProperty","displayProperty","className","onChange","e","target","selectedIndex","map","v","i","key","name","StyledNumbericInput","theme","utils","border","status","interactive","active","highlight","rest","ButtonInput","onClick","newVal","min","Math","max","Icon","iconId","size","type","StyledColHeader","title","subTitle","StyledOverlay","StyledContainer","StyledCard","setIsOpen","Card","draggable","StyledMainCol","useState","isFullScreen","setIsFullScreen","viewer","Modal","ColHeader","action","getModelRoute","modelType","modelId","rootId","StyledNotesCol","MODEL_TYPE_OPTIONS","id","ModelType","data","CHORD_PRESETS","SCALE_PRESETS","DEFAULT_MODEL_TYPE","DEFAULT_MODEL_CONFIG","DEFAULT_ROOT","NOTE_PRESETS","getNewModel","root","newModel","Chord","Note","Scale","modelConfig","_setModelType","setModelType","_setModelConfig","setModelConfig","_setRoot","setRoot","model","setModel","modelOptions","console","log","Link","to","InputRow","label","DropdownInput","newRoot","config","useQueryParam","useModelState","initModelType","initModelId","initRootId","qpModelType","qpRootId","qpModelId","find","preset","getInitModelConfig","note","surface","card","CardHeader","StyledInputRow","$y","dark3","y","StyledFretboardCol","VOICING_OPTIONS","VoicingId","undefined","VOICING_PRESETS","DEFAULT_VOICING","DEFAULT_TUNING","FRETBOARD_TUNING_VALUES","DEFAULT_FRET_RANGE","DEFAULT_FRETBOARD_PROPS","voicing","tuning","fretRange","setVoicing","setTuning","setFretRange","filteredVoicings","filter","some","x","intervals","ivl","pod","fretLo","fretHi","TuningId","NumericInput","StyledFretboardPage","useModelQueryParams","modelState","instrumentColProps","notesColProps","mainColProps","Fretboard","ColumnManager","FretboardCol","MainCol","NotesCol","StyledFretLabel","$bgColor","$fgColor","bgColor","colorMapFn","Fret","stringIndex","fretIndex","showFretNumbers","showFretDots","classes","push","isLowString","length","isHighString","FretLabel","getDotsForFret","userProps","lo","numFrets","numStrings","fretboardStyles","gridTemplateColumns","getFretRatios","n","gridTemplateRows","StyledFretboard","style","hi","allFrets","s","f","getFrets","formatPreset","getPitch","noteId","octave","TUNING_PRESET_MAP","Map","Standard","NoteId","Flat","DoubleFlat","StandardSeven","StandardBass","DropD","DADGAD","Banjo","Violin","OpenA","OpenB","OpenC","OpenD","OpenE","OpenF","OpenG","ArrayUtils","DOTTED_FRET_INDICES","FRET_SIZE_RATIO","pow","noteIndex","tryGetPodPairAtPitch","interval","d","getDegree","Array","isArray","doesVoicingValueMatch","isIntervalInVoicing","getColor","ratios","fretNumber","mod","VOICING_PRESET_MAP","Chord_Triad_CShape_1","Chord_Triad_AShape_1","Chord_Triad_GShape_1","Chord_Triad_EShape_1","Chord_Triad_DShape_1","Chord_Sixth_CShape_1","Chord_Sixth_AShape_1","Chord_Sixth_GShape_1","Chord_Sixth_EShape_1","Chord_Sixth_DShape_1","Chord_Seventh_CShape_1","Chord_Seventh_AShape_1","Chord_Seventh_GShape_1","Chord_Seventh_EShape_1","Chord_Seventh_DShape_1","Chord_Shell_E_37","Chord_Shell_E_73","Chord_Shell_A_37","Chord_Shell_A_73","Chord_Shell_D_37","Chord_Shell_D_73","Scale_DoubleOctave_EShape_1","Scale_DoubleOctave_EShape_2","Scale_DoubleOctave_DShape_1","Scale_DoubleOctave_CShape_1","Scale_DoubleOctave_CShape_2","Scale_DoubleOctave_AShape_1","Scale_DoubleOctave_GShape_1"],"sourceRoot":""}