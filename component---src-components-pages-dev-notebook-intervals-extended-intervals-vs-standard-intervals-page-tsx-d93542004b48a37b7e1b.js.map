{"version":3,"file":"component---src-components-pages-dev-notebook-intervals-extended-intervals-vs-standard-intervals-page-tsx-d93542004b48a37b7e1b.js","mappings":"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","sources":["webpack://play-what/./src/components/pages/dev/notebook/intervals/extended-intervals-vs-standard-intervals.page.tsx","webpack://play-what/./src/components/ui/Card.tsx","webpack://play-what/./src/components/ui/SmartCard.tsx","webpack://play-what/./src/components/ui/Table.styles.tsx","webpack://play-what/./src/components/ui/Table.tsx"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PageLayout from \"../../../../layout/PageLayout\";\r\nimport SmartCard from \"../../../../ui/SmartCard\";\r\nimport { TABLE_STYLES_1 } from \"../../../../ui/Table.styles\";\r\n\r\nconst HEAD = [\r\n  {\r\n    cols: [\"b9\", \"9\", \"#9\", \"b11\", \"11\", \"#11\", \"b13\", \"13\", \"#13\"],\r\n  },\r\n];\r\n\r\nconst ROWS = [\r\n  {\r\n    cols: [\"m2\", \"M2\", \"m3\", \"M3\", \"P4\", \"TT\", \"m6\", \"M6\", \"m7\"],\r\n  },\r\n];\r\n\r\nconst StyledPage = styled(PageLayout)``;\r\n\r\nconst Page: React.FC = () => {\r\n  return (\r\n    <StyledPage title=\"Extended Intervals vs Standard Intervals\">\r\n      <SmartCard\r\n        cards={[\r\n          {\r\n            title: \"Degrees\",\r\n            table: {\r\n              tbody: [\r\n                { cols: [1, 2, 3, 4, 5, 6, 7] },\r\n                { cols: [8, 9, 10, 11, 12, 13, 14] },\r\n              ],\r\n              styles: TABLE_STYLES_1,\r\n            },\r\n          },\r\n          {\r\n            title: \"Intervals\",\r\n            table: {\r\n              thead: HEAD,\r\n              tbody: ROWS,\r\n              styles: TABLE_STYLES_1,\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n    </StyledPage>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledCard = styled.div`\r\n    background: ${props => props.theme.surface.card};\r\n    width: 100%;\r\n    border-radius: 16px;\r\n    padding: 16px;\r\n\r\n    .header {\r\n        margin-bottom: 16px;\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 8px;\r\n        justify-content: space-between;\r\n    }\r\n`;\r\n\r\nexport const CardHeader: React.FC<any> = ({ title, level = 2, action = null }) => {\r\n    const AsTag: any = `h${level}`;\r\n    return (\r\n        <div className=\"header\">\r\n            <AsTag>{title}</AsTag>\r\n            {action}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Card: React.FC<any> = ({ title, subtitle, action, children, level, ...rest }) => {\r\n    return (\r\n        <StyledCard {...rest}>\r\n            {title &&\r\n                <CardHeader title={title} action={action} level={level} />\r\n            }\r\n            {subtitle &&\r\n                <CardHeader title={subtitle} level={level + 1} />\r\n            }\r\n            {children}\r\n        </StyledCard >\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Card, { StyledCard } from \"./Card\";\r\nimport { ITableConfig, Table } from \"./Table\";\r\n\r\nexport const StyledSmartCard = styled.div`\r\n  overflow-x: scroll;\r\n  ${StyledCard} {\r\n    min-width: 1024px;\r\n    margin-top: 16px;\r\n    > table {\r\n      table-layout: fixed;\r\n      width: 100%;\r\n      > tbody > tr > td {\r\n        vertical-align: top;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface ICardConfig {\r\n  title: string;\r\n  table: ITableConfig;\r\n}\r\n\r\ninterface ISmartCardProps {\r\n  cards: ICardConfig[];\r\n}\r\n\r\nconst SmartCard: React.FC<ISmartCardProps> = ({ cards }) => {\r\n  return (\r\n    <StyledSmartCard>\r\n      {cards.map((card) => {\r\n        return (\r\n          <Card title={card.title}>\r\n            <Table {...card.table} />\r\n          </Card>\r\n        );\r\n      })}\r\n    </StyledSmartCard>\r\n  );\r\n};\r\n\r\nexport default SmartCard;\r\n","import { css } from \"styled-components\";\r\n\r\nexport const TABLE_STYLES_1 = css`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  td,\r\n  th {\r\n    padding: 4px;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const FRET_POSITION_TABLE_STYLES = css`\r\n  border-collapse: collapse;\r\n  width: unset !important;\r\n  margin: auto;\r\n  td,\r\n  th {\r\n    height: 48px;\r\n    width: 48px;\r\n    text-align: center;\r\n    vertical-align: middle !important;\r\n  }\r\n  td {\r\n    border: 1px solid black;\r\n  }\r\n`;\r\n","import { Link } from \"gatsby\";\r\nimport React, { Fragment, ReactNode } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledTable = styled.table``;\r\n\r\ntype TOmit = undefined | null | false;\r\n\r\nconst getIsTypeOmit = (data: any): data is TOmit =>\r\n  data === undefined || data === null || data === false;\r\n\r\n// Col\r\n\r\nexport interface IColConfig {\r\n  isHeader?: boolean;\r\n  content: any;\r\n  colSpan?: number;\r\n  className?: string;\r\n  link?: string;\r\n}\r\n\r\ninterface IColProps extends IColConfig {\r\n  index: number;\r\n}\r\n\r\ntype TCol = string | number | IColConfig | ReactNode;\r\n\r\nconst Col: React.FC<IColProps> = ({\r\n  index,\r\n  isHeader,\r\n  content,\r\n  colSpan,\r\n  className,\r\n  link,\r\n}) => {\r\n  const ColTag = isHeader ? \"th\" : \"td\";\r\n  const WrapperTag = link ? Link : Fragment;\r\n  const wrapperProps: any = link ? { to: link } : {};\r\n\r\n  return (\r\n    <ColTag colSpan={colSpan} className={className}>\r\n      <WrapperTag {...wrapperProps}>{content || \"\"}</WrapperTag>\r\n    </ColTag>\r\n  );\r\n};\r\n\r\n// Row\r\n\r\nexport interface IRowConfig {\r\n  cols: (TCol | TOmit)[];\r\n  className?: string;\r\n  isHeader?: boolean;\r\n  headerColIndicies?: number[];\r\n}\r\n\r\nconst getIsConfig = (col: TCol): col is IColConfig =>\r\n  typeof col === \"object\" && col !== null && col.hasOwnProperty(\"content\");\r\n\r\nconst Row: React.FC<IRowConfig> = ({\r\n  cols,\r\n  isHeader,\r\n  className,\r\n  headerColIndicies = [],\r\n}) => {\r\n  return (\r\n    <tr className={className}>\r\n      {cols.map((col: any, i) => {\r\n        if (getIsTypeOmit(col)) return null;\r\n        const isConfig = getIsConfig(col);\r\n        const colConfig = !isConfig ? { content: col } : col;\r\n        return (\r\n          <Col\r\n            key={i}\r\n            index={i}\r\n            isHeader={isHeader || headerColIndicies.includes(i)}\r\n            {...colConfig}\r\n          />\r\n        );\r\n      })}\r\n    </tr>\r\n  );\r\n};\r\n\r\n// Table Section\r\n\r\ninterface ITableSectionConfig {\r\n  Tag: \"thead\" | \"tfoot\" | \"tbody\";\r\n  rows: (IRowConfig | TOmit)[];\r\n  headerColIndicies?: number[];\r\n}\r\n\r\nconst TableSection: React.FC<ITableSectionConfig> = ({\r\n  Tag,\r\n  rows,\r\n  headerColIndicies,\r\n}) => (\r\n  <Tag>\r\n    {rows.map((row, i) => {\r\n      if (getIsTypeOmit(row)) return null;\r\n      return (\r\n        <Row\r\n          key={i}\r\n          isHeader={Tag !== \"tbody\"}\r\n          headerColIndicies={headerColIndicies}\r\n          {...row}\r\n        />\r\n      );\r\n    })}\r\n  </Tag>\r\n);\r\n\r\n// Table\r\n\r\ninterface IColGroup {\r\n  span?: number;\r\n  className?: string;\r\n}\r\n\r\nexport interface ITableConfig {\r\n  thead?: (IRowConfig | TOmit)[];\r\n  tfoot?: (IRowConfig | TOmit)[];\r\n  tbody: (IRowConfig | TOmit)[];\r\n  styles?: any;\r\n  caption?: string;\r\n  colGroups?: IColGroup[];\r\n  className?: string;\r\n  headerColIndicies?: number[];\r\n}\r\n\r\nexport const Table: React.FC<ITableConfig> = ({\r\n  thead,\r\n  tfoot,\r\n  tbody,\r\n  styles,\r\n  colGroups,\r\n  caption,\r\n  headerColIndicies,\r\n  className,\r\n}) => {\r\n  return (\r\n    <StyledTable css={styles} className={className}>\r\n      {colGroups && (\r\n        <colgroup>\r\n          {colGroups.map((cg, i) => (\r\n            <col key={i} {...cg} />\r\n          ))}\r\n        </colgroup>\r\n      )}\r\n      {caption && <caption>{caption}</caption>}\r\n      {thead && (\r\n        <TableSection\r\n          Tag=\"thead\"\r\n          rows={thead}\r\n          headerColIndicies={headerColIndicies}\r\n        />\r\n      )}\r\n      {tfoot && (\r\n        <TableSection\r\n          Tag=\"tfoot\"\r\n          rows={tfoot}\r\n          headerColIndicies={headerColIndicies}\r\n        />\r\n      )}\r\n      {tbody && (\r\n        <TableSection\r\n          Tag=\"tbody\"\r\n          rows={tbody}\r\n          headerColIndicies={headerColIndicies}\r\n        />\r\n      )}\r\n    </StyledTable>\r\n  );\r\n};\r\n"],"names":["HEAD","cols","ROWS","StyledPage","styled","PageLayout","displayName","componentId","React","title","SmartCard","cards","table","tbody","styles","TABLE_STYLES_1","thead","StyledCard","props","theme","surface","card","CardHeader","level","action","AsTag","className","subtitle","children","rest","StyledSmartCard","map","Card","Table","css","FRET_POSITION_TABLE_STYLES","StyledTable","getIsTypeOmit","data","Col","index","isHeader","content","colSpan","link","ColTag","WrapperTag","Link","Fragment","wrapperProps","to","Row","headerColIndicies","col","i","isConfig","hasOwnProperty","getIsConfig","colConfig","key","includes","TableSection","Tag","rows","row","tfoot","colGroups","caption","cg"],"sourceRoot":""}