{"version":3,"file":"component---src-pages-search-tsx-646d8c903e25320de585.js","mappings":"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","sources":["webpack://play-what/./src/components/layout/PageBody.tsx","webpack://play-what/./src/components/breadcrumb-list/BreadcrumbList.tsx","webpack://play-what/./src/components/layout/PageTitle.tsx","webpack://play-what/./src/components/search/SearchBar.tsx","webpack://play-what/./src/components/ui/Card.tsx","webpack://play-what/./src/core/general/Nav.utils.ts","webpack://play-what/./src/components/inputs/FilterList.tsx","webpack://play-what/./src/components/search/SearchResultsCard.tsx","webpack://play-what/./src/components/pages/SearchPage.tsx","webpack://play-what/./src/pages/search.tsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const StyledPageBody = styled.div`\r\n\twidth: 100%;\r\n\t//max-width: 1920px;\r\n\tmax-width: 1024px;\r\n\tmin-height: calc(100vh - 96px);\r\n    \r\n\tmargin: auto;\r\n\tpadding: 16px;\r\n`\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport styled from 'styled-components';\r\nimport { usePageProps } from \"../../contexts/PagePropsContext\";\r\nimport Icon from \"../ui/Icon\";\r\n\r\nconst StyledBreadcrumbList = styled.ul`\r\n    font-size: 80%;\r\n    padding: 0 0 8px 0;\r\n    @media(min-width: 512px) {\r\n        font-size: 110%;\r\n        padding: 0 0 16px 0;\r\n    }\r\n\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    gap: 8px;\r\n    white-space: nowrap;\r\n    text-transform: capitalize;\r\n    svg {\r\n        margin-right: 8px;\r\n    }\r\n\r\n    span {\r\n        color: ${props => props.theme.text.secondary};\r\n    }\r\n`\r\n\r\nconst BreadcrumbList = () => {\r\n    const { path } = usePageProps();\r\n    let pieces = path.split('/');\r\n    const paths: any[] = [];\r\n    pieces.reduce((prev, cur, i, arr) => {\r\n        const path = `${prev}/${cur}`.replace('//', '/') || '/';\r\n        const isLink = !['root', 'test', 'experimental'].includes(cur);\r\n        const text = i === 0 ? 'Home' : cur.replaceAll('-', ' ').replace(' sharp', '#').replace(' flat', 'b');\r\n\r\n        const Tag = isLink ? Link : 'span';\r\n        const to: any = isLink ? path : undefined;\r\n\r\n        paths.push(\r\n            <li key={i}>\r\n                {i > 0 && <Icon iconId=\"next\" size={10} color=\"grey\" />}\r\n                <Tag to={to}>{text}</Tag>\r\n            </li>\r\n        );\r\n        return path;\r\n    }, '/');\r\n    return <StyledBreadcrumbList>{paths.slice(0, paths.length - 1)}</StyledBreadcrumbList>;\r\n}\r\n\r\nexport default BreadcrumbList;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport BreadcrumbList from '../breadcrumb-list/BreadcrumbList';\r\nimport SEO from \"../utils/SEO\";\r\n\r\nconst StyledPageTitle = styled.div`\r\n    width: 100%;\r\n\r\n    .header {\r\n        border-bottom: 1px solid ${({ theme }) => theme.utils.border};    \r\n        width: 100%;\r\n        margin: auto;\r\n        padding-bottom: 8px;\r\n        @media(min-width: 512px) {\r\n            padding-bottom: 16px;\r\n        }\r\n\r\n        > h1 {\r\n            width: 100%;\r\n            font-size: 150%;\r\n            @media(min-width: 512px) {\r\n                font-size: 300%;\r\n            }\r\n            text-align: left;\r\n            color: ${({ theme }) => theme.text.primary};\r\n\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: space-between;\r\n        }\r\n\r\n        > h2 {\r\n            margin-top: 4px;\r\n            width: 100%;\r\n            text-align: left;\r\n            color: ${({ theme }) => theme.text.secondary};;\r\n            font-size: 80%;\r\n            @media(min-width: 512px) {\r\n                font-size: 100%;\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst PageTitle: React.FC<any> = ({ title, subtitle, action, children }) => {\r\n    return (\r\n        <>\r\n            <SEO title={subtitle ? `${title} - ${subtitle}` : title} />\r\n            <BreadcrumbList />\r\n            <StyledPageTitle>\r\n                <div className=\"header\">\r\n                    <h1>\r\n                        {title}\r\n                        {action && <div className='action'>{action}</div>}\r\n                    </h1>\r\n                    {subtitle && <h2>{subtitle}</h2>}\r\n\r\n                </div>\r\n                {children}\r\n            </StyledPageTitle>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n","import { navigate } from \"gatsby\";\r\nimport React, { useState } from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledSearchBar = styled.form`\r\n    width: 100%;\r\n    .search-bar {\r\n        width: 100%;\r\n        max-width: 512px;\r\n        display: grid;\r\n        grid-template-columns: 1fr auto;\r\n\r\n        input, button {\r\n            padding: 8px 8px;\r\n            border-radius: 8px;\r\n            border: 1px solid ${props => props.theme.utils.border};\r\n        }\r\n\r\n        input {\r\n            border-radius: 8px 0 0 8px;\r\n            border-right: none;\r\n        }\r\n\r\n        button {\r\n            border-radius: 0 8px 8px 0;\r\n            cursor: pointer;\r\n            color: white;\r\n            font-weight: bold;\r\n            background-color: ${props => props.theme.action.interactive};\r\n            &:hover { background-color: ${props => props.theme.action.active}; }\r\n            border-left: none;\r\n            padding: 8px 16px;\r\n\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n        }\r\n    }\r\n`;\r\n\r\nconst SearchBar: React.FC<any> = ({ searchRef, query: externalQuery, setQuery: externalSetQuery, placeholder }) => {\r\n    const [_query, _setQuery] = useState('');\r\n    const query = typeof externalQuery === 'undefined' ? _query : externalQuery;\r\n    const setQuery = typeof externalSetQuery === 'undefined' ? _setQuery : externalSetQuery;\r\n\r\n    const onChange = e => {\r\n        setQuery(e.target.value);\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        const value = e.target.elements.query.value;\r\n        const query = new URLSearchParams({ query: value });\r\n        const qs = query ? `?${query.toString()}` : '';\r\n        const path = `/search/${qs}`;\r\n        navigate(path);\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <StyledSearchBar role=\"search\" onSubmit={onSubmit}>\r\n            <div className=\"search-bar\">\r\n                <input\r\n                    type=\"search\"\r\n                    id=\"site-search\"\r\n                    name=\"query\"\r\n                    ref={searchRef}\r\n                    onChange={onChange}\r\n                    value={query as string}\r\n                    placeholder={placeholder || \"Search the site...\"}\r\n                />\r\n                <button type=\"submit\" >Search</button>\r\n            </div>\r\n        </StyledSearchBar>\r\n    );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledCard = styled.div`\r\n    background: ${props => props.theme.surface.card};\r\n    width: 100%;\r\n    border-radius: 16px;\r\n    padding: 16px;\r\n\r\n    .header {\r\n        margin-bottom: 16px;\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 8px;\r\n        justify-content: space-between;\r\n    }\r\n`;\r\n\r\nexport const CardHeader: React.FC<any> = ({ title, as: AsTag = 'h2', action = null }) => (\r\n    <div className=\"header\">\r\n        <AsTag>{title}</AsTag>\r\n        {action}\r\n    </div>\r\n);\r\n\r\nconst Card: React.FC<any> = ({ title, action, children, as, ...rest }) => {\r\n    return (\r\n        <StyledCard {...rest}>\r\n            {title &&\r\n                <CardHeader title={title} action={action} as={as} />\r\n            }\r\n            {children}\r\n        </StyledCard >\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import { IModelConfig, ModelType, NoteId, Tag } from '../models/Model.constants';\r\nimport { ALL_PRESETS, NOTE_PRESET_MAP } from './../models/Model.presets';\r\n\r\ninterface ISearchResult {\r\n    to: string;\r\n    text: string;\r\n    modelType?: ModelType;\r\n    aliases?: string[]\r\n}\r\n\r\ninterface ISearchCandidate {\r\n    text: string;\r\n    to: string;\r\n    keywords: string[];\r\n}\r\n\r\nconst doesQueryMatch = (query = '', keywords: (string | RegExp)[]) => {\r\n    return keywords.some(kw => query.match(new RegExp(kw, 'gi')));\r\n}\r\n\r\nconst getLink = (modelType: ModelType, modelId: string, root?: string): string => {\r\n    return `/browse/${modelType}/${modelId}${root ? `/root/${root}/` : ''}`;\r\n}\r\n\r\nconst getName = (modelType: ModelType, name: string, root?: string): string => {\r\n    switch (modelType) {\r\n        case ModelType.Chord:\r\n            return `${root ? root : ''} ${name} Chord`\r\n        case ModelType.Scale:\r\n            return `${root ? root : ''} ${name} Scale`\r\n        default:\r\n            return `${root ? root : ''} ${name}`;\r\n    }\r\n}\r\n\r\nconst BASIC_PAGES: ISearchCandidate[] = [\r\n    {\r\n        text: 'Browse',\r\n        to: '/browse',\r\n        keywords: ['all', 'chord', 'scale', 'browse']\r\n    },\r\n    {\r\n        text: 'All Chords',\r\n        to: '/browse/chords',\r\n        keywords: ['all', 'chord']\r\n    },\r\n    {\r\n        text: 'All Scales',\r\n        to: '/browse/scales',\r\n        keywords: ['all', 'scale', 'mode']\r\n    }\r\n];\r\n\r\nconst REGEX_NOTE_NAME = /\\b[A-G](b|\\sflat|\\ssharp)*\\b/gi; // accidental symbols should be sanitized\r\nconst REGEX_FLAT = /\\b[A-G]b\\b/gi;\r\n\r\nconst getNoteIdFromQuery = (query: string): string | undefined => {\r\n    const noteMatches = query.match(REGEX_NOTE_NAME);\r\n\r\n    if (!noteMatches || !noteMatches.length) return;\r\n\r\n    const match = noteMatches[0];\r\n    const noteId = match.replaceAll(' ', '-');\r\n\r\n    return noteId;\r\n}\r\n\r\nconst getModelTypeFromQuery = (query: string): ModelType | undefined => {\r\n    if (query.match('chord')) return ModelType.Chord;\r\n    if (query.match('scale')) return ModelType.Scale;\r\n}\r\n\r\ninterface IModelPresetResult extends IModelConfig {\r\n    score: number;\r\n}\r\n\r\nconst getTags = (query: string): Tag[] => {\r\n    const items = [];\r\n    if (query.match(/maj|major/)) items.push(Tag.Major);\r\n    if (query.match(/min|minor/)) items.push(Tag.Minor);\r\n    if (query.match(/triad|chord/)) items.push(Tag.Triad);\r\n    if (query.match(/aug|augmented/)) items.push(Tag.Augmented);\r\n    if (query.match(/dim|diminished/)) items.push(Tag.Diminished);\r\n    if (query.match(/sus|suspended/)) items.push(Tag.Suspended);\r\n    if (query.match(/dom|dominant/)) items.push(Tag.Dominant);\r\n    if (query.match(/pent|pentatonic/)) items.push(Tag.Pentatonic);\r\n    if (query.match(/hex|hexatonic/)) items.push(Tag.Hexatonic);\r\n    if (query.match(/oct|octatonic/)) items.push(Tag.Octatonic);\r\n    if (query.match(/dia|diatonic/)) items.push(Tag.Diatonic);\r\n    if (query.match(/2|2nd|two|second/)) items.push(Tag.Second);\r\n    if (query.match(/3|3rd|three|third/)) items.push(Tag.Third);\r\n    if (query.match(/4|4th|four|fourth/)) items.push(Tag.Fourth);\r\n    if (query.match(/5|5th|five|fifth/)) items.push(Tag.Fifth);\r\n    if (query.match(/6|6th|six|sixth/)) items.push(Tag.Sixth);\r\n    if (query.match(/7|7th|seven|seventh/)) items.push(Tag.Seventh);\r\n    if (query.match(/beb|bebop/)) items.push(Tag.Bebop);\r\n    if (query.match(/blu|blues/)) items.push(Tag.Blues);\r\n    if (query.match(/mel|melodic|minor/)) items.push(Tag.MelodicMode);\r\n    if (query.match(/harm|harmonic|minor/)) items.push(Tag.HarmonicMode);\r\n    return items;\r\n}\r\n\r\nconst extendPreset = (preset: IModelConfig, query: string, allTags: Tag[]): IModelPresetResult => {\r\n\r\n    let score = 0;\r\n\r\n    if (query.match(preset.name.toLowerCase())) {\r\n        score = 100;\r\n    }\r\n\r\n    if (preset.name.toLowerCase().match(new RegExp(query.split(' ').join('|'), 'gi'))) {\r\n        score = score + 50;\r\n    }\r\n\r\n    score = score + allTags.filter(queryTag => preset.tags.some(presetTag => presetTag === queryTag)).length;\r\n\r\n    return {\r\n        ...preset,\r\n        score\r\n    }\r\n}\r\n\r\nconst getPresetsFromQuery = (query: string, modelType?: ModelType): IModelPresetResult[] => {\r\n    const allTags = getTags(query);\r\n    return ALL_PRESETS.filter(p => !(modelType && p.modelType !== modelType))\r\n        .map(p => {\r\n            return extendPreset(p, query, allTags);\r\n            //return query.split(' ').some(query => query.match(query));\r\n        });\r\n}\r\n\r\nconst rankResults = (results: IModelPresetResult[], rootId): IModelPresetResult[] => {\r\n    return results.filter(r => rootId || r.score).sort((a, b) => b.score - a.score)\r\n}\r\n\r\nconst formatPresets = (presets: IModelConfig[], rootId?: string): ISearchResult[] => {\r\n    return presets.map(p => {\r\n        const root = rootId ? NOTE_PRESET_MAP.get(rootId as NoteId).name : undefined;\r\n        return {\r\n            text: getName(p.modelType, p.name, root),\r\n            to: getLink(p.modelType, p.modelId, rootId),\r\n            aliases: p.aliases,\r\n            modelType: p.modelType\r\n        };\r\n    });\r\n}\r\n\r\nconst sanitizeQuery = query => query.trim().toLowerCase().replaceAll('#', '-sharp').replaceAll(REGEX_FLAT, m => `${m.charAt(0)}-flat`).replaceAll(/[^A-Z1-9]/gi, ' ');\r\n\r\nconst getAliases = (presets: ISearchResult[]): ISearchResult[] => {\r\n    const ret = [];\r\n    for (let i = 0; i < presets.length; i++) {\r\n        const p = presets[i];\r\n        ret.push(p);\r\n        if (p.aliases) {\r\n            p.aliases.forEach(a => ret.push({\r\n                to: p.to,\r\n                text: `${a} ${p.modelType === ModelType.Chord ? ' Chord' : ' Scale'}`\r\n            }));\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n\r\nexport const getSearchResults = (query: string): ISearchResult[] => {\r\n    if (!query) return BASIC_PAGES;\r\n\r\n    const sanitized = sanitizeQuery(query);\r\n\r\n    const rootId = getNoteIdFromQuery(sanitized);\r\n    const modelType = getModelTypeFromQuery(sanitized);\r\n\r\n    const presets = getPresetsFromQuery(sanitized, modelType);\r\n\r\n    const ranked = rankResults(presets, rootId);\r\n\r\n    const results = formatPresets(ranked, rootId);\r\n\r\n    const resultsWithAliases = getAliases(results);\r\n\r\n    const basics = BASIC_PAGES.filter(p => doesQueryMatch(sanitized, p.keywords));\r\n\r\n    return [...resultsWithAliases, ...basics];\r\n};\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport ButtonInput from \"./ButtonInput\";\r\n\r\nconst StyledFilterList = styled.div`\r\n\r\n    border: 1px solid ${props => props.theme.action.interactive};\r\n    border-radius: 8px;\r\n    padding: 8px;\r\n    margin-bottom: 16px;\r\n\r\n    .top {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n    }\r\n    \r\n    ul {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        align-items: center;\r\n        justify-content: center;\r\n        gap: 8px;\r\n\r\n        > li {\r\n            margin: 0  !important;\r\n            list-style-type: none !important;\r\n        }\r\n\r\n        button {\r\n            background-color: ${({ theme }) => theme.utils.transparent};;\r\n            border: 1px solid ${props => props.theme.action.interactive};;\r\n            color: ${props => props.theme.action.interactive};\r\n            padding: 4px 8px;\r\n            font-size: 80%;\r\n            :hover {\r\n                background-color: ${({ theme }) => theme.utils.hoverDark};\r\n            }\r\n\r\n            &.active {\r\n                color: ${({ theme }) => theme.text.inverted};;\r\n                background-color: ${props => props.theme.action.interactive};\r\n            }\r\n\r\n            :disabled {\r\n                color: ${({ theme }) => theme.text.inverted};\r\n                background-color: ${props => props.theme.text.secondary};\r\n                cursor: not-allowed;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nconst FilterList: React.FC<any> = ({ tags, availableTags, selectedTags, setSelectedTags }) => {\r\n\r\n    const toggle = t => {\r\n        if (selectedTags.includes(t)) {\r\n            setSelectedTags(selectedTags.filter(x => x !== t));\r\n        }\r\n        else {\r\n            setSelectedTags([...selectedTags, t]);\r\n        }\r\n    };\r\n    return (\r\n        <StyledFilterList>\r\n            {false && <div className=\"top\">\r\n                {selectedTags.length > 0 &&\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={() => setSelectedTags([])}\r\n                        className=\"clear\"\r\n                    >Clear</button>\r\n                }\r\n            </div>}\r\n            <ul>\r\n                {tags.map(t => (\r\n                    <li key={t}>\r\n                        <ButtonInput\r\n                            onClick={() => toggle(t)}\r\n                            className={selectedTags.includes(t) ? 'active' : ''}\r\n                            disabled={!availableTags.includes(t)}\r\n                        >\r\n                            {t}\r\n                        </ButtonInput>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </StyledFilterList>\r\n    );\r\n};\r\n\r\nexport default FilterList;\r\n","import { Link, navigate } from \"gatsby\";\r\nimport React, { useState } from \"react\";\r\nimport styled, { css } from 'styled-components';\r\nimport ArrayUtils from \"../../core/general/Array.utils\";\r\nimport { getSearchResults } from \"../../core/general/Nav.utils\";\r\nimport ButtonInput from \"../inputs/ButtonInput\";\r\nimport FilterList from \"../inputs/FilterList\";\r\nimport Card from \"../ui/Card\";\r\n\r\nconst StyledSearchResultsList = styled.ul` \r\n    font-size: 110%;\r\n    li a {\r\n        padding: 4px 0;\r\n        display: block;\r\n\r\n        &:focus, &:hover {\r\n            padding: 8px;\r\n            background-color: ${props => props.theme.action.interactive};\r\n            color: white;\r\n            border-radius: 8px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst ALL_RESULTS = [];\r\n\r\nconst SearchResultsCard: React.FC<any> = ({ resultsRef, query }) => {\r\n\r\n    const [isFiltering, setIsFiltering] = useState(false);\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n\r\n    const action = <ButtonInput\r\n        className={`filter ${isFiltering ? 'active' : ''}`}\r\n        onClick={() => setIsFiltering(!isFiltering)}\r\n        css={css`\r\n            color: ${props => props.theme.action.interactive};\r\n            background-color: transparent;\r\n            text-decoration: underline;\r\n            &.active {\r\n                color: white;\r\n                background-color: ${props => props.theme.action.interactive};\r\n            }\r\n        `}\r\n    >\r\n        Filter\r\n    </ButtonInput>;\r\n\r\n    let filteredResults = getSearchResults(query);\r\n\r\n    const tagSet = new Set();\r\n    ALL_RESULTS.forEach(r => {\r\n        if (r.to.includes('root')) return;\r\n        r.tags.forEach(t => tagSet.add(t));\r\n    });\r\n    const tags = ArrayUtils.setToArray(tagSet) || [];\r\n\r\n\r\n    return (\r\n        <Card title={!query ? 'Popular Pages' : 'Results'} action={null}>\r\n            {isFiltering && <FilterList\r\n                tags={tags}\r\n                availableTags={[]}\r\n                selectedTags={selectedTags}\r\n                setSelectedTags={setSelectedTags}\r\n            />}\r\n            <StyledSearchResultsList>\r\n                {filteredResults.map((r, i) => <li key={r.text}>\r\n                    <Link\r\n                        id={`search-result=${i}`}\r\n                        to={r.to}\r\n                        ref={i === 0 ? resultsRef : undefined}\r\n                        onKeyDown={(e) => {\r\n                            e.preventDefault();\r\n                            if (e.key === 'Enter') {\r\n                                navigate(r.to);\r\n                            }\r\n                            if (e.key === 'ArrowDown') {\r\n                                const next = document.getElementById(`search-result=${i + 1}`);\r\n                                if (next) next.focus();\r\n                            }\r\n                            if (e.key === 'ArrowUp') {\r\n                                const prev = document.getElementById(`search-result=${i - 1}`);\r\n                                if (prev) prev.focus();\r\n                            }\r\n                        }}\r\n                    >\r\n                        {r.text}\r\n                    </Link>\r\n                </li>)}\r\n            </StyledSearchResultsList>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default SearchResultsCard;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport styled from 'styled-components';\r\nimport { useQueryParam } from \"use-query-params\";\r\nimport { StyledPageBody } from \"../layout/PageBody\";\r\nimport PageTitle from \"../layout/PageTitle\";\r\nimport { StyledCard } from \"../ui/Card\";\r\nimport SearchBar from \"../search/SearchBar\";\r\nimport SearchResultsCard from \"../search/SearchResultsCard\";\r\n\r\nconst StyledSearchPage = styled(StyledPageBody)`\r\n    ${StyledCard} {\r\n        max-width: 768px;\r\n        margin: auto;\r\n    }\r\n\r\n    .search-bar {\r\n        margin: 32px auto;\r\n    }\r\n`;\r\n\r\nconst SearchPage: React.FC<any> = () => {\r\n\r\n    const [qp] = useQueryParam('query');\r\n\r\n    const [query, setQuery] = useState(qp || '');\r\n    const searchRef = useRef();\r\n    const resultsRef = useRef();\r\n\r\n    useEffect(() => {\r\n        const ref = qp ? resultsRef : searchRef;\r\n        const cur = ref.current as any;\r\n        cur && cur.focus();\r\n    }, []);\r\n\r\n    return (\r\n        <StyledSearchPage>\r\n            <PageTitle title=\"Search\" />\r\n            <SearchBar searchRef={searchRef} query={query} setQuery={setQuery} />\r\n            <SearchResultsCard resultsRef={resultsRef} query={query} />\r\n        </StyledSearchPage>\r\n    );\r\n};\r\n\r\nexport default SearchPage;\r\n","import SearchPage from \"../components/pages/SearchPage\";\r\n\r\nexport default SearchPage;\r\n"],"names":["StyledPageBody","styled","StyledBreadcrumbList","props","theme","text","secondary","pieces","usePageProps","path","split","paths","reduce","prev","cur","i","arr","replace","isLink","includes","replaceAll","Tag","Link","to","undefined","push","React","key","Icon","iconId","size","color","slice","length","StyledPageTitle","utils","border","primary","title","subtitle","action","children","SEO","BreadcrumbList","className","StyledSearchBar","interactive","active","searchRef","externalQuery","query","externalSetQuery","setQuery","placeholder","useState","_query","_setQuery","role","onSubmit","e","preventDefault","value","target","elements","URLSearchParams","toString","navigate","type","id","name","ref","onChange","StyledCard","surface","card","CardHeader","as","AsTag","rest","getLink","modelType","modelId","root","getName","ModelType","BASIC_PAGES","keywords","REGEX_NOTE_NAME","REGEX_FLAT","getPresetsFromQuery","allTags","items","match","getTags","ALL_PRESETS","p","map","preset","score","toLowerCase","RegExp","join","filter","queryTag","tags","some","presetTag","extendPreset","getSearchResults","sanitized","trim","m","charAt","sanitizeQuery","rootId","noteMatches","getNoteIdFromQuery","getModelTypeFromQuery","ranked","results","r","sort","a","b","rankResults","presets","NOTE_PRESET_MAP","aliases","formatPresets","resultsWithAliases","ret","forEach","getAliases","basics","kw","doesQueryMatch","StyledFilterList","transparent","hoverDark","inverted","availableTags","selectedTags","setSelectedTags","t","ButtonInput","onClick","x","toggle","disabled","StyledSearchResultsList","ALL_RESULTS","resultsRef","isFiltering","filteredResults","tagSet","Set","add","ArrayUtils","Card","FilterList","onKeyDown","next","document","getElementById","focus","StyledSearchPage","withConfig","qp","useQueryParam","useRef","useEffect","current","PageTitle","SearchBar","SearchResultsCard"],"sourceRoot":""}