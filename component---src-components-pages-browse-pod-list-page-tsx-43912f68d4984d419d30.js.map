{"version":3,"file":"component---src-components-pages-browse-pod-list-page-tsx-43912f68d4984d419d30.js","mappings":"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","sources":["webpack://play-what/./src/components/cards/RomanNumeralsCard.tsx","webpack://play-what/./src/components/collection/CollectionTable.tsx","webpack://play-what/./src/components/column-manager/ColumnManager.tsx","webpack://play-what/./src/components/inputs/DropdownInput.tsx","webpack://play-what/./src/components/cards/DetailsCard.tsx","webpack://play-what/./src/components/cards/GuitarCard.tsx","webpack://play-what/./src/components/cards/ModeCard.tsx","webpack://play-what/./src/components/collection/CollectionList.tsx","webpack://play-what/./src/components/cards/RelatedCard.tsx","webpack://play-what/./src/components/inputs/RootInput.tsx","webpack://play-what/./src/components/cards/RootCard.tsx","webpack://play-what/./src/components/pages/browse/pod-list.page.tsx","webpack://play-what/./src/components/ui/Card.tsx","webpack://play-what/./src/components/ui/InputRow.tsx","webpack://play-what/./src/components/ui/Table.tsx","webpack://play-what/./src/core/routing/Routing.utils.ts","webpack://play-what/./src/viewers/fret-table/FretFlag.tsx","webpack://play-what/./src/viewers/fret-table/FretTable.tsx","webpack://play-what/./src/viewers/fretboard/Fretboard.tuning.ts","webpack://play-what/./src/viewers/fretboard/Fretboard.utils.ts"],"sourcesContent":["import React from \"react\";\r\nimport { css } from \"styled-components\";\r\nimport { NoteId } from \"../../core/models/Model.constants\";\r\nimport Scale from \"../../core/models/Scale\";\r\nimport { getModelRoute } from \"../../core/routing/Routing.utils\";\r\nimport Card from \"../ui/Card\";\r\nimport { Table } from \"../ui/Table\";\r\n\r\nconst tableStyles = css`\r\n  border-collapse: collapse;\r\n  width: 100%;\r\n\r\n  th {\r\n    //color: ${(props) => props.theme.brand.accent};\r\n    &:first-child {\r\n      text-align: right;\r\n    }\r\n    padding: 4px;\r\n  }\r\n\r\n  td {\r\n    padding: 4px;\r\n    text-align: center;\r\n    sup {\r\n      font-size: 80%;\r\n    }\r\n  }\r\n\r\n  .numeral td {\r\n    font-size: 160%;\r\n    font-family: serif;\r\n  }\r\n`;\r\n\r\ninterface IRomanNumeralsCardProps {\r\n  model: Scale;\r\n  title?: string;\r\n}\r\n\r\nconst RomanNumeralsCard: React.FC<IRomanNumeralsCardProps> = ({ model, title = \"Roman Numerals\" }) => {\r\n  const numerals = model.getAllNumerals();\r\n\r\n  if (!numerals.length) return null;\r\n\r\n  return (\r\n    <Card title={title}>\r\n      <Table\r\n        styles={tableStyles}\r\n        headerColIndicies={[0]}\r\n        tbody={[\r\n          {\r\n            className: \"numeral\",\r\n            cols: [\r\n              \"Numeral\",\r\n              ...numerals.map((n, i) => {\r\n                const [numeral, symbol] = n.getNumeralParts(i + 1);\r\n                return {\r\n                  content: (\r\n                    <>\r\n                      {numeral}\r\n                      <sup className=\"symbol\">{symbol}</sup>\r\n                    </>\r\n                  ),\r\n                };\r\n              }),\r\n            ],\r\n          },\r\n          {\r\n            cols: [\"Degree\", ...numerals.map((n, i) => i + 1)],\r\n          },\r\n          {\r\n            cols: [\r\n              \"Name\",\r\n              ...numerals.map((n, i) => ({\r\n                link: getModelRoute(n.modelType, n.modelId, n.root.modelId),\r\n                content: n.getShortName(),\r\n              })),\r\n            ],\r\n          },\r\n        ]}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default RomanNumeralsCard;\r\n","import React from \"react\";\r\nimport { css } from \"styled-components\";\r\nimport { useRoot, useRootId } from \"../../contexts/PagePropsContext\";\r\nimport Chord from \"../../core/models/Chord\";\r\nimport {\r\n  IModelConfig,\r\n  ModelType,\r\n  NoteId,\r\n} from \"../../core/models/Model.constants\";\r\nimport Note from \"../../core/models/Note\";\r\nimport Scale from \"../../core/models/Scale\";\r\nimport { getModelRoute } from \"../../core/routing/Routing.utils\";\r\nimport { Table } from \"../ui/Table\";\r\n\r\nconst tableStyles = css`\r\n  width: 100%;\r\n  margin: auto;\r\n  border-collapse: collapse;\r\n  white-space: nowrap;\r\n\r\n  td {\r\n    &:not(:first-child) {\r\n      font-size: 80%;\r\n    }\r\n  }\r\n\r\n  td,\r\n  th {\r\n    line-height: 32px;\r\n    text-align: center;\r\n\r\n    &:not(:first-child) {\r\n      width: 32px;\r\n      height: 32px;\r\n\r\n      display: none;\r\n      @media (min-width: 512px) {\r\n        display: table-cell;\r\n      }\r\n    }\r\n\r\n    &:first-child {\r\n      text-align: left;\r\n      padding: 0 8px;\r\n    }\r\n  }\r\n\r\n  td {\r\n    //border-right: 1px solid ${(props) => props.theme.utils.border};\r\n    //border-bottom: 1px solid ${(props) => props.theme.utils.border};\r\n    &.active {\r\n      background-color: ${(props) => props.theme.surface.bg};\r\n    }\r\n  }\r\n\r\n  thead {\r\n    text-transform: uppercase;\r\n    font-size: 80%;\r\n\r\n    @media (max-width: 511px) {\r\n      display: none;\r\n    }\r\n    tr th {\r\n      background-color: ${(props) => props.theme.surface.nav};\r\n      color: ${({ theme }) => theme.text.inverted};\r\n    }\r\n\r\n    th:first-child {\r\n      border-radius: 8px 0 0 8px;\r\n    }\r\n    th:last-child {\r\n      border-radius: 0 8px 8px 0;\r\n    }\r\n  }\r\n\r\n  a {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nexport interface ICollectionTableProps {\r\n  data: IModelConfig[];\r\n  semitones?: number[];\r\n}\r\n\r\nconst SEMITONES = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\r\n\r\nconst getSemitoneCol = (\r\n  model: Chord | Scale,\r\n  h: number,\r\n  semitones: number[],\r\n  root?: Note\r\n) => {\r\n  const index = model.intervals.findIndex((ivl) => ivl.pod[0] + 1 === h);\r\n  const className = semitones.includes(h) ? \"active\" : undefined;\r\n  if (index < 0) {\r\n    return {\r\n      className,\r\n      content: \"\",\r\n    };\r\n  }\r\n  const mod = root ? (model.notes as Note[])[index] : model.intervals[index];\r\n  return {\r\n    className,\r\n    content: mod.getName(),\r\n  };\r\n};\r\n\r\nconst CollectionTable: React.FC<ICollectionTableProps> = ({\r\n  data,\r\n  semitones = [],\r\n}) => {\r\n  const rootId = useRootId();\r\n  const root = useRoot();\r\n  return (\r\n    <Table\r\n      styles={tableStyles}\r\n      thead={[\r\n        {\r\n          cols: [\r\n            \"Name\",\r\n            {\r\n              colSpan: 12,\r\n              content: root ? \"Notes\" : \"Intervals\",\r\n            },\r\n          ],\r\n        },\r\n      ]}\r\n      tbody={data.map((d, i) => {\r\n        const cl = d.modelType === ModelType.Chord ? Chord : Scale;\r\n        // @ts-ignore\r\n        const model = new cl(d.modelId, { root });\r\n        return {\r\n          cols: [\r\n            {\r\n              link: getModelRoute(\r\n                model.modelType,\r\n                model.modelId,\r\n                rootId as NoteId\r\n              ),\r\n              content: model.getName(),\r\n            },\r\n            ...SEMITONES.map((h, i) =>\r\n              getSemitoneCol(model, h, semitones, root)\r\n            ),\r\n          ],\r\n        };\r\n      })}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CollectionTable;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledColumnManager = styled.div`\r\n    display: grid;\r\n    gap: 16px;\r\n    grid-template-columns: 1fr;\r\n\r\n    ${({ $tablet }) => $tablet ? `\r\n        @media(min-width: 512px) {\r\n            grid-template-columns: ${$tablet.join(' ')}\r\n        }\r\n    ` : ''}\r\n\r\n    ${({ $desktop }) => $desktop ? `\r\n        @media(min-width: 1024px) {\r\n            grid-template-columns: ${$desktop.join(' ')}\r\n        }\r\n    ` : ``}\r\n   \r\n`;\r\n\r\nexport interface IColumnManagerProps {\r\n    tablet?: string[];\r\n    desktop?: string[];\r\n}\r\n\r\nconst ColumnManager: React.FC<any> = ({ children, tablet, desktop }) => {\r\n    return (\r\n        <StyledColumnManager $tablet={tablet} $desktop={desktop}>\r\n            {children}\r\n        </StyledColumnManager >\r\n    );\r\n};\r\n\r\nexport default ColumnManager;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nconst StyledDropdownInput = styled.select`\r\n\tfont-size: 110%;\r\n    min-width: 128px;\r\n\r\n\tpadding: 4px 8px;\r\n\r\n    cursor: pointer;\r\n    border-radius: 4px;\r\n\r\n\toption {\r\n\t\tcursor: pointer;\r\n\t}\r\n`;\r\n\r\ninterface IDropdownInputProps {\r\n\tvalue: any;\r\n\tsetValue: Function;\r\n\toptions: any[];\r\n\tidProperty?: string;\r\n\tdisplayProperty?: string;\r\n}\r\n\r\nconst DropdownInput: React.FC<IDropdownInputProps> = props => {\r\n\tconst { value, setValue, options, idProperty, displayProperty } = props;\r\n\r\n\treturn (\r\n\t\t<StyledDropdownInput\r\n\t\t\tclassName='dropdown-input'\r\n\t\t\tonChange={e => setValue(options[e.target.selectedIndex], e.target.selectedIndex)}\r\n\t\t\tvalue={value ? value[idProperty || 'id'] : ''}\r\n\t\t>\r\n\t\t\t{(options || []).map((v, i) => (\r\n\t\t\t\t<option key={i} value={v[idProperty || 'id']}>{displayProperty ? v[displayProperty] : v.name}</option>\r\n\t\t\t))}\r\n\t\t</StyledDropdownInput>\r\n\t);\r\n}\r\n\r\nexport default DropdownInput;\r\n","import React from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport NumberUtils from \"../../core/general/Number.utils\";\r\nimport Note from \"../../core/models/Note\";\r\nimport { octaveState } from \"../../state/state\";\r\nimport { CardHeader, StyledCard } from \"../ui/Card\";\r\nimport { Table } from \"../ui/Table\";\r\n\r\nconst StyledDetailsCard = styled(StyledCard)`\r\n    .header {\r\n        display: none;\r\n        @media(min-width: 512px) {\r\n            display: unset;\r\n        }\r\n    }\r\n    table {\r\n        margin: auto;\r\n        border-collapse: collapse;\r\n\r\n        &.mobile {\r\n            display: table;\r\n            @media(min-width: 512px) {\r\n                display: none;\r\n            }\r\n        }\r\n        &.desktop {\r\n            display: none;\r\n            @media(min-width: 512px) {\r\n                display: table;\r\n            }\r\n            th {\r\n                display: none;\r\n            }\r\n        }\r\n\r\n        td, th {\r\n            padding: 4px;\r\n            @media(min-width: 512px) {\r\n                padding: 4px 8px;\r\n            }\r\n            text-align: center;\r\n        }\r\n\r\n        th {\r\n            text-transform: uppercase;\r\n            font-size: 80%;\r\n        }\r\n\r\n        .featured {\r\n            font-weight: bold;\r\n            font-size: 150%;\r\n            @media(min-width: 512px) {\r\n                font-size: 200%;\r\n            }\r\n        }\r\n\r\n        .interval {\r\n            font-size: 120%;\r\n            @media(min-width: 512px) {\r\n                font-size: 150%;\r\n            }\r\n        }\r\n\r\n        .ratio, .frequency {\r\n            color: ${props => props.theme.text.secondary};\r\n            font-size: 80%;\r\n            @media(min-width: 512px) {\r\n                font-size: 100%;\r\n            }\r\n        }\r\n\r\n        .root {\r\n            color: red;\r\n        }\r\n    }\r\n`;\r\n\r\nconst getNoteCell = (note, i) => {\r\n    return (\r\n        {\r\n            className: `note featured ${i === 0 ? 'root' : ''}`,\r\n            content: (\r\n                <>\r\n                    {note.name}\r\n                    <sub>{note.getOctave()}</sub>\r\n                </>\r\n            )\r\n        }\r\n    );\r\n};\r\n\r\nconst getIntervalCell = (interval, isFeatured) => {\r\n    return (\r\n        <td className={`interval ${isFeatured ? 'featured' : ''}`}>{interval.getName()}</td>\r\n    );\r\n};\r\n\r\nconst getPitchCell = (note) => {\r\n    return (\r\n        <td className={`frequency`}>{note.getFrequency(true)}</td>\r\n    );\r\n};\r\n\r\nconst getRatioCell = (interval) => {\r\n    return (\r\n        <td className={`ratio`}>{interval.getRatio()}</td>\r\n    );\r\n};\r\n\r\nconst DetailsCard: React.FC<any> = ({ model }) => {\r\n    const intervals = model.intervals;\r\n    const octave = useRecoilValue(octaveState);\r\n    const hasNotes = !!model.notes;\r\n    const notes = hasNotes && model.notes.map(n => new Note([\r\n        (octave - 4) * 12 + NumberUtils.modulo(n.pod[0], 12),\r\n        n.pod[1]\r\n    ]));\r\n\r\n    if (!intervals && !notes) return null;\r\n\r\n    return (\r\n        <StyledDetailsCard $n={intervals.length}>\r\n            <CardHeader title={hasNotes ? 'Notes' : 'Intervals'} />\r\n            <Table\r\n                className=\"mobile\"\r\n                thead={[{\r\n                    cols: [\r\n                        hasNotes ? 'Note' : undefined,\r\n                        'Interval',\r\n                        hasNotes ? 'Pitch' : undefined,\r\n                        'Ratio'\r\n                    ]\r\n                }]}\r\n                tbody={intervals.map((ivl, i) => {\r\n                    const note = hasNotes && notes[i];\r\n                    return (\r\n                        {\r\n                            cols: [\r\n                                hasNotes ? getNoteCell(note, i) : undefined,\r\n                                getIntervalCell(ivl, !note),\r\n                                hasNotes ? getPitchCell(note) : undefined,\r\n                                getRatioCell(ivl)\r\n                            ]\r\n                        }\r\n                    );\r\n                })}\r\n            />\r\n            <Table\r\n                className=\"desktop\"\r\n                headerColIndicies={[0]}\r\n                tbody={[\r\n                    hasNotes ? {\r\n                        cols: [\r\n                            'Note',\r\n                            ...notes.map((note, i) => getNoteCell(note, i))\r\n                        ]\r\n                    } : undefined,\r\n                    {\r\n                        cols: [\r\n                            'Interval',\r\n                            ...intervals.map((ivl, i) => getIntervalCell(ivl, !notes))\r\n                        ]\r\n                    },\r\n                    hasNotes ? {\r\n                        cols: [\r\n                            'Pitch',\r\n                            ...notes.map((note, i) => getPitchCell(note))\r\n                        ]\r\n                    } : undefined,\r\n                    {\r\n                        cols: [\r\n                            'Ratio',\r\n                            ...intervals.map((ivl, i) => getRatioCell(ivl))\r\n                        ]\r\n                    },\r\n                ]}\r\n            />\r\n        </StyledDetailsCard >\r\n    );\r\n};\r\n\r\nexport default DetailsCard;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport FretTable from \"../../viewers/fret-table/FretTable\";\r\nimport Card from \"../ui/Card\";\r\nimport Icon from \"../ui/Icon\";\r\n\r\nconst StyledGuitarCard = styled.div`\r\n  .customize {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst GuitarCard: React.FC<any> = ({ model }) => {\r\n  if (!model.root || !model.intervals) return null;\r\n\r\n  const qp = new URLSearchParams({\r\n    modelId: model.modelId,\r\n    modelType: model.modelType,\r\n    rootId: model.root.modelId,\r\n  });\r\n\r\n  return (\r\n    <Card\r\n      title=\"Fretboard\"\r\n      action={\r\n        <Link className=\"customize\" to={`/view/fretboard?${qp.toString()}`}>\r\n          Customize <Icon iconId=\"next\" size={8} />\r\n        </Link>\r\n      }\r\n    >\r\n      <StyledGuitarCard>\r\n        <FretTable model={model} />\r\n      </StyledGuitarCard>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default GuitarCard;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useRootId } from \"../../contexts/PagePropsContext\";\r\nimport { NoteId, Tag } from \"../../core/models/Model.constants\";\r\nimport { SCALE_PRESETS } from \"../../core/models/Model.presets\";\r\nimport { getModelRoute } from \"../../core/routing/Routing.utils\";\r\nimport Card from \"../ui/Card\";\r\n\r\nconst StyledModeCard = styled.div`\r\n  ul {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    gap: 4px;\r\n    flex-wrap: wrap;\r\n    a {\r\n      padding: 4px;\r\n      &.active {\r\n        font-weight: bold;\r\n        text-decoration: underline;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ModeCard: React.FC<any> = ({ model }) => {\r\n  const rootId = useRootId();\r\n\r\n  const type = model.tags.find(\r\n    (t) =>\r\n      t === Tag.Diatonic ||\r\n      t === Tag.Pentatonic ||\r\n      t === Tag.MelodicMode ||\r\n      t === Tag.HarmonicMode\r\n  );\r\n\r\n  if (!type) return null;\r\n\r\n  let modeType = \"\";\r\n  switch (type) {\r\n    case Tag.Diatonic:\r\n      modeType = \"Diatonic\";\r\n      break;\r\n    case Tag.Pentatonic:\r\n      modeType = \"Pentatonic\";\r\n      break;\r\n    case Tag.MelodicMode:\r\n      modeType = \"Melodic Minor\";\r\n      break;\r\n    case Tag.HarmonicMode:\r\n      modeType = \"Harmonic Minor\";\r\n      break;\r\n  }\r\n\r\n  const modes = SCALE_PRESETS.filter((p) => p.tags.includes(type));\r\n\r\n  return (\r\n    <Card title={`${modeType} Modes`}>\r\n      <StyledModeCard>\r\n        <ul>\r\n          {modes.map((n) => (\r\n            <li key={n.modelId}>\r\n              <Link\r\n                to={getModelRoute(n.modelType, n.modelId, rootId)}\r\n                className={model.modelId === n.modelId ? \"active\" : \"\"}\r\n              >\r\n                {n.name}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </StyledModeCard>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ModeCard;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useRoot, useRootId } from \"../../contexts/PagePropsContext\";\r\nimport Chord from \"../../core/models/Chord\";\r\nimport { ModelType, NoteId } from \"../../core/models/Model.constants\";\r\nimport Scale from \"../../core/models/Scale\";\r\nimport { getModelRoute } from \"../../core/routing/Routing.utils\";\r\n\r\nconst StyledCollectionList = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 8px;\r\n\r\n  a {\r\n    padding: 2px;\r\n  }\r\n  li {\r\n    &:not(:last-child) {\r\n      ::after {\r\n        content: \", \";\r\n        color: ${(props) => props.theme.text.secondary};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\ninterface ICollectionListProps {\r\n  data: any[];\r\n}\r\n\r\nconst CollectionList: React.FC<ICollectionListProps> = ({ data }) => {\r\n  const rootId = useRootId();\r\n  const root = useRoot();\r\n  return (\r\n    <StyledCollectionList>\r\n      {data.map((d) => {\r\n        const cl = d.modelType === ModelType.Chord ? Chord : Scale;\r\n        // @ts-ignore\r\n        const model = new cl(d.modelId, { root });\r\n\r\n        return (\r\n          <li key={d.modelId}>\r\n            <Link to={getModelRoute(d.modelType, d.modelId, rootId)}>\r\n              {model.name}\r\n            </Link>\r\n          </li>\r\n        );\r\n      })}\r\n    </StyledCollectionList>\r\n  );\r\n};\r\n\r\nexport default CollectionList;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { useRootSuffix } from \"../../contexts/PagePropsContext\";\r\nimport { ModelType } from \"../../core/models/Model.constants\";\r\nimport {\r\n  CHORD_PRESETS,\r\n  NOTE_PRESETS,\r\n  SCALE_PRESETS,\r\n} from \"../../core/models/Model.presets\";\r\nimport CollectionList from \"../collection/CollectionList\";\r\nimport CollectionTable from \"../collection/CollectionTable\";\r\nimport Card from \"../ui/Card\";\r\n\r\nconst RelatedCard: React.FC<any> = ({ model }) => {\r\n  const subchords = model.getSubchords();\r\n  const subscales = model.getSubscales();\r\n  const superchords = model.getSuperchords();\r\n  const superscales = model.getSuperscales();\r\n\r\n  const semitones = model.intervals.map((ivl) => ivl.pod[0] + 1);\r\n\r\n  return (\r\n    <>\r\n      {subchords.length > 0 && (\r\n        <Card title=\"Child Chords\">\r\n          <CollectionTable data={subchords} semitones={semitones} />\r\n        </Card>\r\n      )}\r\n      {superchords.length > 0 && (\r\n        <Card title=\"Parent Chords\">\r\n          <CollectionTable data={superchords} semitones={semitones} />\r\n        </Card>\r\n      )}\r\n      {subscales.length > 0 && (\r\n        <Card title=\"Child Scales\">\r\n          <CollectionTable data={subscales} semitones={semitones} />\r\n        </Card>\r\n      )}\r\n      {superscales.length > 0 && (\r\n        <Card title=\"Parent Scales\">\r\n          <CollectionTable data={superscales} semitones={semitones} />\r\n        </Card>\r\n      )}\r\n      {model.modelType === ModelType.Chord && (\r\n        <Card title=\"Other Chords\">\r\n          <CollectionList data={CHORD_PRESETS} />\r\n        </Card>\r\n      )}\r\n      {model.modelType === ModelType.Scale && (\r\n        <Card title=\"Other Scales\">\r\n          <CollectionList data={SCALE_PRESETS} />\r\n        </Card>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RelatedCard;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport styled from 'styled-components';\r\nimport { usePageProps, useRoot } from \"../../contexts/PagePropsContext\";\r\nimport { NoteId } from \"../../core/models/Model.constants\";\r\nimport { NOTE_PRESET_MAP } from \"../../core/models/Model.presets\";\r\nimport { octaveState } from \"../../state/state\";\r\nimport InputRow from \"../ui/InputRow\";\r\nimport DropdownInput from \"./DropdownInput\";\r\n\r\nconst StyledRootInput = styled.div`\r\n    display: grid;\r\n    grid-template-rows: repeat(3, 1fr);\r\n    width: 100%;\r\n\r\n    @media(min-width: 512px) {\r\n\r\n    }\r\n\r\n    .spelling, .accidental {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        gap: 4px;\r\n    }\r\n\r\n    .accidental > a:nth-child(2) {\r\n        width: 64px\r\n    }\r\n\r\n    a {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n\r\n        height: 32px;\r\n        width: 32px;\r\n        border-radius: 4px;\r\n\r\n        &:hover, &.active {\r\n            background-color: ${props => props.theme.action.active};\r\n            color: white;\r\n        }\r\n    }\r\n`;\r\n\r\nconst OCTAVE_OPTIONS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map((x, i) => ({ id: i + 1, name: i + 1 }))\r\n\r\nconst RootInput: React.FC<any> = () => {\r\n    const root = useRoot();\r\n    const pageProps = usePageProps();\r\n    const { path } = pageProps;\r\n\r\n    const rootIndex = pageProps.path.lastIndexOf('root');\r\n    const basePath = root ?\r\n        path.slice(0, rootIndex) :\r\n        path;\r\n    const rootKey = root ?\r\n        path.slice(rootIndex + 5, rootIndex + 6) :\r\n        path;\r\n\r\n    const [octave, setOctave] = useRecoilState(octaveState);\r\n\r\n    return (\r\n        <StyledRootInput>\r\n            <InputRow label={root ? \"Spelling\" : undefined} y>\r\n                <div className=\"spelling\">\r\n                    <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.C}`} >{NOTE_PRESET_MAP.get(NoteId.C).name}</Link>\r\n                    <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.D}`} >{NOTE_PRESET_MAP.get(NoteId.D).name}</Link>\r\n                    <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.E}`} >{NOTE_PRESET_MAP.get(NoteId.E).name}</Link>\r\n                    <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.F}`} >{NOTE_PRESET_MAP.get(NoteId.F).name}</Link>\r\n                    <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.G}`} >{NOTE_PRESET_MAP.get(NoteId.G).name}</Link>\r\n                    <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.A}`} >{NOTE_PRESET_MAP.get(NoteId.A).name}</Link>\r\n                    <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.B}`} >{NOTE_PRESET_MAP.get(NoteId.B).name}</Link>\r\n                </div>\r\n            </InputRow>\r\n            {root && (\r\n                <>\r\n                    <InputRow label=\"Accidental\" y>\r\n                        <div className=\"accidental\">\r\n                            <Link activeClassName=\"active\" to={`${basePath}root/${rootKey}-flat`} >b</Link>\r\n                            <Link activeClassName=\"active\" to={`${basePath}root/${rootKey}`} >none</Link>\r\n                            <Link activeClassName=\"active\" to={`${basePath}root/${rootKey}-sharp`} >#</Link>\r\n                        </div>\r\n                    </InputRow>\r\n                    <InputRow label=\"Octave\" y>\r\n                        <DropdownInput options={OCTAVE_OPTIONS} value={{ id: octave }} setValue={o => setOctave(o.id)} />\r\n                    </InputRow>\r\n                </>\r\n            )}\r\n        </StyledRootInput>\r\n    );\r\n};\r\n\r\nexport default RootInput;\r\n","import { navigate } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport styled from 'styled-components';\r\nimport { usePageProps, useRoot } from \"../../contexts/PagePropsContext\";\r\nimport { isEditingKeyState, octaveState } from \"../../state/state\";\r\nimport THEME from \"../../styles/theme\";\r\nimport ButtonInput from \"../inputs/ButtonInput\";\r\nimport RootInput from \"../inputs/RootInput\";\r\nimport Card from \"../ui/Card\";\r\n\r\nconst StyledRoot = styled.div`\r\n    margin-top: 8px;\r\n    .preview {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        font-size: 300%;\r\n    }\r\n    .rootless {\r\n        margin: 8px 0 16px;\r\n    }\r\n    .remove {\r\n        margin-top: 24px;\r\n        margin-left: auto;\r\n        display: block;\r\n        font-size: 80%;\r\n        color: red; //${THEME.status.negative};\r\n    }\r\n`;\r\n\r\nconst RootCard: React.FC<any> = () => {\r\n    const root = useRoot();\r\n    const pageProps = usePageProps();\r\n    const [octave, setOctave] = useRecoilState(octaveState);\r\n    const [isEditing, setIsEditing] = useRecoilState(isEditingKeyState);\r\n\r\n    const modelType = pageProps.path.includes('chord') ? 'chord' : 'scale';\r\n\r\n    const onClear = () => {\r\n        const rootIndex = pageProps.path.lastIndexOf('root');\r\n        const sanitized = rootIndex === -1 ?\r\n            pageProps.path :\r\n            pageProps.path.slice(0, rootIndex);\r\n        navigate(sanitized);\r\n    }\r\n\r\n    const toggle = (\r\n        <ButtonInput isLink onClick={() => setIsEditing(!isEditing)}>\r\n            {isEditing ? 'Done' : 'Edit'}\r\n        </ButtonInput>\r\n    );\r\n\r\n    const remove = root ? (\r\n        <ButtonInput isLink onClick={onClear} className=\"remove\">\r\n            Remove Root\r\n        </ButtonInput>\r\n    ) : null;\r\n\r\n    return (\r\n        <Card title=\"Root\" action={root && toggle} css={root ? `color: ${THEME.text.primary};` : `background-color: ${THEME.status.highlight}; border: 1px solid ${THEME.status.warning}; color: ${THEME.text.primary};`}>\r\n            <StyledRoot $isRootless={!root}>\r\n                {!root && (\r\n                    <div className=\"rootless\">\r\n                        <b>This {modelType} does not have a root.</b>\r\n                        <br />\r\n                        Please select a root to see the notes.\r\n                    </div>\r\n                )}\r\n                {(isEditing || !root) && (\r\n                    <RootInput />\r\n                )}\r\n\r\n                {isEditing && remove}\r\n\r\n                {(!isEditing && root) && (\r\n                    <div className=\"preview\">\r\n                        <b>{root.name}</b>\r\n                        <sub>{octave}</sub>\r\n                    </div>\r\n                )}\r\n            </StyledRoot>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default RootCard;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useRoot } from \"../../../contexts/PagePropsContext\";\r\nimport {\r\n  getModelIdClass,\r\n  getModelIdText,\r\n  ModelType,\r\n} from \"../../../core/models/Model.constants\";\r\nimport DetailsCard from \"../../cards/DetailsCard\";\r\nimport GuitarCard from \"../../cards/GuitarCard\";\r\nimport ModeCard from \"../../cards/ModeCard\";\r\nimport RelatedCard from \"../../cards/RelatedCard\";\r\nimport RomanNumeralsCard from \"../../cards/RomanNumeralsCard\";\r\nimport RootCard from \"../../cards/RootCard\";\r\nimport ColumnManager from \"../../column-manager/ColumnManager\";\r\nimport PageLayout from \"../../layout/PageLayout\";\r\n\r\nconst StyledPodlistPage = styled(PageLayout)``;\r\n\r\ninterface IPodListPageProps {\r\n  pageContext: any;\r\n}\r\n\r\nconst PodListPage: React.FC<IPodListPageProps> = (props) => {\r\n  const { modelType, modelId } = props.pageContext;\r\n  const root = useRoot();\r\n\r\n  const cl = getModelIdClass(modelType);\r\n  const clText = getModelIdText(modelType);\r\n\r\n  const podList = new cl(modelId, { root });\r\n  const title = `${podList.name} ${clText}`;\r\n\r\n  //const subtitle = podList.aliases.length ? `Also known as ${podList.aliases.join(', ')}` : 'Podlist';\r\n\r\n  return (\r\n    <StyledPodlistPage title={title}>\r\n      <ColumnManager>\r\n        <ColumnManager tablet={[\"300px\", \"auto\"]}>\r\n          <RootCard />\r\n          <DetailsCard model={podList} />\r\n        </ColumnManager>\r\n\r\n        {modelType === ModelType.Scale && <RomanNumeralsCard model={podList} />}\r\n        {modelType === ModelType.Scale && <ModeCard model={podList} />}\r\n        <ColumnManager>\r\n          <GuitarCard model={podList} />\r\n        </ColumnManager>\r\n        <RelatedCard model={podList} />\r\n      </ColumnManager>\r\n    </StyledPodlistPage>\r\n  );\r\n};\r\n\r\nexport default PodListPage;\r\n","import React, { PropsWithChildren } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const StyledCard = styled.div`\r\n  background: ${(props) => props.theme.surface.card};\r\n  width: 100%;\r\n  border-radius: 16px;\r\n  padding: 16px;\r\n\r\n  .header {\r\n    margin-bottom: 16px;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nexport const CardHeader: React.FC<any> = ({\r\n  title,\r\n  level = 2,\r\n  action = null,\r\n}) => {\r\n  const AsTag: any = `h${level}`;\r\n  return (\r\n    <div className=\"header\">\r\n      <AsTag>{title}</AsTag>\r\n      {action}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport interface ICardProps extends PropsWithChildren<any> {\r\n  title?: string;\r\n  subtitle?: string;\r\n  action?: any;\r\n  level?: number;\r\n}\r\n\r\nconst Card: React.FC<ICardProps> = ({\r\n  title,\r\n  subtitle,\r\n  action,\r\n  children,\r\n  level = 1,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <StyledCard {...rest}>\r\n      {title && <CardHeader title={title} action={action} level={level} />}\r\n      {subtitle && <CardHeader title={subtitle} level={level + 1} />}\r\n      {children}\r\n    </StyledCard>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledInputRow = styled.div`\r\n    display: flex;\r\n    align-items: flex-start;\r\n    flex-direction: column;\r\n    width: 100%;\r\n\r\n    ${props => props.$y ? '' : `\r\n        @media(min-width: 512px) {\r\n            align-items: center;\r\n            flex-direction: row;\r\n            justify-content: space-between;\r\n            //margin-bottom: 8px;\r\n        }\r\n    `}\r\n\r\n    > label {\r\n        color: ${({ theme }) => theme.dark3};\r\n        font-weight: bold;\r\n        margin: 8px;\r\n        white-space: nowrap;\r\n    }\r\n`;\r\n\r\nconst InputRow = ({ label, children, y = false, ...rest }) => {\r\n    return (\r\n        <StyledInputRow $y={y} {...rest}>\r\n            <label>{label}</label>\r\n            <div>\r\n                {children}\r\n            </div>\r\n        </StyledInputRow>\r\n    );\r\n}\r\n\r\nexport default InputRow;\r\n","import { Link } from \"gatsby\";\r\nimport React, { Fragment, ReactNode } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledTable = styled.table``;\r\n\r\ntype TOmit = undefined | null | false;\r\n\r\nconst getIsTypeOmit = (data: any): data is TOmit =>\r\n  data === undefined || data === null || data === false;\r\n\r\n// Col\r\n\r\nexport interface IColConfig {\r\n  isHeader?: boolean;\r\n  content: any;\r\n  colSpan?: number;\r\n  className?: string;\r\n  link?: string;\r\n}\r\n\r\ninterface IColProps extends IColConfig {\r\n  index: number;\r\n}\r\n\r\ntype TCol = string | number | IColConfig | ReactNode;\r\n\r\nconst Col: React.FC<IColProps> = ({\r\n  index,\r\n  isHeader,\r\n  content,\r\n  colSpan,\r\n  className,\r\n  link,\r\n}) => {\r\n  const ColTag = isHeader ? \"th\" : \"td\";\r\n  const WrapperTag = link ? Link : Fragment;\r\n  const wrapperProps: any = link ? { to: link } : {};\r\n\r\n  return (\r\n    <ColTag colSpan={colSpan} className={className}>\r\n      <WrapperTag {...wrapperProps}>{content || \"\"}</WrapperTag>\r\n    </ColTag>\r\n  );\r\n};\r\n\r\n// Row\r\n\r\nexport interface IRowConfig {\r\n  cols: (TCol | TOmit)[];\r\n  className?: string;\r\n  isHeader?: boolean;\r\n  headerColIndicies?: number[];\r\n}\r\n\r\nconst getIsConfig = (col: TCol): col is IColConfig =>\r\n  typeof col === \"object\" && col !== null && col.hasOwnProperty(\"content\");\r\n\r\nconst Row: React.FC<IRowConfig> = ({\r\n  cols,\r\n  isHeader,\r\n  className,\r\n  headerColIndicies = [],\r\n}) => {\r\n  return (\r\n    <tr className={className}>\r\n      {cols.map((col: any, i) => {\r\n        if (getIsTypeOmit(col)) return null;\r\n        const isConfig = getIsConfig(col);\r\n        const colConfig = !isConfig ? { content: col } : col;\r\n        return (\r\n          <Col\r\n            key={i}\r\n            index={i}\r\n            isHeader={isHeader || headerColIndicies.includes(i)}\r\n            {...colConfig}\r\n          />\r\n        );\r\n      })}\r\n    </tr>\r\n  );\r\n};\r\n\r\n// Table Section\r\n\r\ninterface ITableSectionConfig {\r\n  Tag: \"thead\" | \"tfoot\" | \"tbody\";\r\n  rows: (IRowConfig | TOmit)[];\r\n  headerColIndicies?: number[];\r\n}\r\n\r\nconst TableSection: React.FC<ITableSectionConfig> = ({\r\n  Tag,\r\n  rows,\r\n  headerColIndicies,\r\n}) => (\r\n  <Tag>\r\n    {rows.map((row, i) => {\r\n      if (getIsTypeOmit(row)) return null;\r\n      return (\r\n        <Row\r\n          key={i}\r\n          isHeader={Tag !== \"tbody\"}\r\n          headerColIndicies={headerColIndicies}\r\n          {...row}\r\n        />\r\n      );\r\n    })}\r\n  </Tag>\r\n);\r\n\r\n// Table\r\n\r\ninterface IColGroup {\r\n  span?: number;\r\n  className?: string;\r\n}\r\n\r\nexport interface ITableConfig {\r\n  thead?: (IRowConfig | TOmit)[];\r\n  tfoot?: (IRowConfig | TOmit)[];\r\n  tbody: (IRowConfig | TOmit)[];\r\n  styles?: any;\r\n  caption?: string;\r\n  colGroups?: IColGroup[];\r\n  className?: string;\r\n  headerColIndicies?: number[];\r\n}\r\n\r\nexport const Table: React.FC<ITableConfig> = ({\r\n  thead,\r\n  tfoot,\r\n  tbody,\r\n  styles,\r\n  colGroups,\r\n  caption,\r\n  headerColIndicies,\r\n  className,\r\n}) => {\r\n  return (\r\n    <StyledTable css={styles} className={className}>\r\n      {colGroups && (\r\n        <colgroup>\r\n          {colGroups.map((cg, i) => (\r\n            <col key={i} {...cg} />\r\n          ))}\r\n        </colgroup>\r\n      )}\r\n      {caption && <caption>{caption}</caption>}\r\n      {thead && (\r\n        <TableSection\r\n          Tag=\"thead\"\r\n          rows={thead}\r\n          headerColIndicies={headerColIndicies}\r\n        />\r\n      )}\r\n      {tfoot && (\r\n        <TableSection\r\n          Tag=\"tfoot\"\r\n          rows={tfoot}\r\n          headerColIndicies={headerColIndicies}\r\n        />\r\n      )}\r\n      {tbody && (\r\n        <TableSection\r\n          Tag=\"tbody\"\r\n          rows={tbody}\r\n          headerColIndicies={headerColIndicies}\r\n        />\r\n      )}\r\n    </StyledTable>\r\n  );\r\n};\r\n","import { ModelId, ModelType, NoteId } from \"../models/Model.constants\";\r\n\r\nexport const getModelRoute = (\r\n  modelType: ModelType,\r\n  modelId?: ModelId,\r\n  rootId?: NoteId\r\n) => {\r\n  const modelSuffix = modelId ? `/${modelId}` : \"\";\r\n  const rootSuffix = rootId ? `/root/${rootId}` : \"\";\r\n\r\n  return `/browse/${modelType}${modelSuffix}${rootSuffix}/`;\r\n};\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IFretFlagProps {\r\n  color?: string;\r\n  text?: string | number;\r\n  opacity?: number;\r\n}\r\n\r\nexport const StyledFretFlag = styled.div<{\r\n  $color?: string;\r\n  $opacity?: number;\r\n}>`\r\n  height: 16px;\r\n  width: 16px;\r\n  background: ${(props) => props.$color || \"\"};\r\n  opacity: ${(props) => props.$opacity || 1};\r\n  border-radius: 100%;\r\n  z-index: 1;\r\n`;\r\n\r\nconst FretFlag: React.FC<IFretFlagProps> = ({ color, text, opacity }) => {\r\n  return (\r\n    <StyledFretFlag $color={color} $opacity={opacity}>\r\n      {text}\r\n    </StyledFretFlag>\r\n  );\r\n};\r\n\r\nexport default FretFlag;\r\n","import * as React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { IColConfig, IRowConfig, Table } from \"../../components/ui/Table\";\r\nimport {\r\n  DEFAULT_FRETBOARD_PROPS,\r\n  getDotsForFret,\r\n  IFretboardProps,\r\n} from \"../fretboard/Fretboard.utils\";\r\nimport FretFlag from \"./FretFlag\";\r\n\r\nexport const StyledFretTable = styled.div``;\r\n\r\nconst tableStyles = css`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  td,\r\n  th {\r\n    min-width: 18px;\r\n    text-align: center;\r\n  }\r\n  tbody td {\r\n    background-color: #e8dbb8;\r\n\r\n    border-right: 1px solid grey;\r\n    &:first-child {\r\n      border-left: 1px solid grey;\r\n    }\r\n    .fret-content {\r\n      min-height: 32px;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      position: relative;\r\n    }\r\n    .fret-string {\r\n      height: 1px;\r\n      background: #bbb;\r\n      width: 100%;\r\n      position: absolute;\r\n      margin: auto 0;\r\n    }\r\n  }\r\n  tbody tr {\r\n    &:first-child {\r\n      border-top: 1px solid grey;\r\n    }\r\n    &:last-child {\r\n      border-bottom: 1px solid grey;\r\n    }\r\n  }\r\n`;\r\n\r\nconst FretTable: React.FC<IFretboardProps> = (userProps) => {\r\n  const props = { ...DEFAULT_FRETBOARD_PROPS, ...userProps };\r\n\r\n  const { fretRange, showFretDots, showFretNumbers, tuning, colorMapFn } =\r\n    props;\r\n  const [lo, hi] = fretRange as [number, number];\r\n\r\n  const numFrets = hi - lo + 1;\r\n  const numStrings = (tuning as number[]).length;\r\n\r\n  const fretNums: number[] = [];\r\n  for (let i = 0; i < numFrets; i++) {\r\n    fretNums.push(lo + i);\r\n  }\r\n\r\n  const fretDots: string[] = [];\r\n  for (let i = 0; i < numFrets; i++) {\r\n    fretDots.push(getDotsForFret(lo + i));\r\n  }\r\n\r\n  const strings: IRowConfig[] = [];\r\n  for (let s = 0; s < numStrings; s++) {\r\n    const frets: IColConfig[] = [];\r\n    for (let f = lo; f <= hi; f++) {\r\n      frets.push({\r\n        content: (\r\n          <div className=\"fret-content\">\r\n            <div className=\"fret-string\" />\r\n            <FretFlag\r\n              color={(colorMapFn as any)({\r\n                stringIndex: s,\r\n                fretIndex: f,\r\n                ...props,\r\n              })}\r\n              text=\"\"\r\n              opacity={1}\r\n            />\r\n          </div>\r\n        ),\r\n      });\r\n    }\r\n    strings.push({\r\n      cols: frets,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <StyledFretTable>\r\n      <Table\r\n        thead={showFretNumbers ? [{ cols: fretNums }] : undefined}\r\n        tfoot={showFretDots ? [{ cols: fretDots }] : undefined}\r\n        tbody={strings}\r\n        styles={tableStyles}\r\n      />\r\n    </StyledFretTable>\r\n  );\r\n};\r\n\r\nexport default FretTable;\r\n","import ArrayUtils from \"../../core/general/Array.utils\";\r\nimport Note from '../../core/models/Note';\r\nimport { NoteId } from './../../core/models/Model.constants';\r\n\r\nexport enum TuningId {\r\n    Standard = 'standard',\r\n    StandardSeven = 'standard-seven',\r\n    StandardBass = 'standard-bass',\r\n    Flat = 'flat',\r\n    DoubleFlat = 'double-flat',\r\n    DropD = 'drop-d',\r\n    DADGAD = 'dadgad',\r\n    Banjo = 'banjo',\r\n    Violin = 'violin',\r\n    OpenA = 'open-a',\r\n    OpenB = 'open-b',\r\n    OpenC = 'open-c',\r\n    OpenD = 'open-d',\r\n    OpenE = 'open-e',\r\n    OpenF = 'open-f',\r\n    OpenG = 'open-g',\r\n}\r\n\r\nexport interface ITuning {\r\n    id: TuningId;\r\n    name: string;\r\n    value: number[]\r\n}\r\n\r\nconst formatPreset = (id: TuningId, name: string, value: number[]): ITuning => ({\r\n    id,\r\n    name,\r\n    value\r\n});\r\n\r\nconst getPitch = (noteId: NoteId, octave: number): number => Note.getNote(noteId, octave).pod[0];\r\n\r\nexport const TUNING_PRESET_MAP = new Map<TuningId, ITuning>([\r\n    [TuningId.Standard, formatPreset(\r\n        TuningId.Standard,\r\n        'Standard Guitar',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.E, 3)\r\n        ]\r\n    )],\r\n    [TuningId.Flat, formatPreset(\r\n        TuningId.Flat,\r\n        'Flat Gtr',\r\n        [\r\n            getPitch(NoteId.Eb, 5),\r\n            getPitch(NoteId.Bb, 4),\r\n            getPitch(NoteId.Gb, 4),\r\n            getPitch(NoteId.Db, 4),\r\n            getPitch(NoteId.Ab, 3),\r\n            getPitch(NoteId.Eb, 3)\r\n        ]\r\n    )],\r\n    [TuningId.DoubleFlat, formatPreset(\r\n        TuningId.DoubleFlat,\r\n        'Double Flat Gtr',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.F, 4),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    [TuningId.StandardSeven, formatPreset(\r\n        TuningId.StandardSeven,\r\n        'Standard 7-String Gtr',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.E, 3),\r\n            getPitch(NoteId.B, 3)\r\n        ]\r\n    )],\r\n    [TuningId.StandardBass, formatPreset(\r\n        TuningId.StandardBass,\r\n        'Standard Bass',\r\n        [\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.D, 3),\r\n            getPitch(NoteId.A, 2),\r\n            getPitch(NoteId.E, 2)\r\n        ]\r\n    )],\r\n    [TuningId.DropD, formatPreset(\r\n        TuningId.DropD,\r\n        'Drop D Gtr',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    [TuningId.DADGAD, formatPreset(\r\n        TuningId.DADGAD,\r\n        'DADGAD',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    // Unconfirmed\r\n    /*[TuningId.Banjo, formatPreset(\r\n        TuningId.Banjo,\r\n        'Banjo',\r\n        [\r\n            getPitch(NoteId.G, 5),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],*/\r\n    // Unconfirmed\r\n    [TuningId.Violin, formatPreset(\r\n        TuningId.Violin,\r\n        'Violin',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.G, 4)\r\n        ]\r\n    )],\r\n    [TuningId.OpenA, formatPreset(\r\n        TuningId.OpenA,\r\n        'Open A',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.E, 4),\r\n            getPitch(NoteId.Cs, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.E, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenB, formatPreset(\r\n        TuningId.OpenB,\r\n        'Open B',\r\n        [\r\n            getPitch(NoteId.Ds, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.Fs, 4),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.Fs, 3),\r\n            getPitch(NoteId.B, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenC, formatPreset(\r\n        TuningId.OpenC,\r\n        'Open C',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.C, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenD, formatPreset(\r\n        TuningId.OpenD,\r\n        'Open D',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.Fs, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenE, formatPreset(\r\n        TuningId.OpenE,\r\n        'Open E',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.Gs, 4),\r\n            getPitch(NoteId.E, 4),\r\n            getPitch(NoteId.B, 3),\r\n            getPitch(NoteId.E, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenF, formatPreset(\r\n        TuningId.OpenF,\r\n        'Open F',\r\n        [\r\n            getPitch(NoteId.F, 5),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.F, 4),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.F, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenG, formatPreset(\r\n        TuningId.OpenG,\r\n        'Open G',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )]\r\n]);\r\n\r\nexport const FRETBOARD_TUNING_VALUES = ArrayUtils.mapToArray(TUNING_PRESET_MAP);\r\n","import Chord from \"../../core/models/Chord\";\r\nimport IntervalSpan from \"../../core/models/Interval\";\r\nimport { IModelConfig } from \"../../core/models/Model.constants\";\r\nimport Note from \"../../core/models/Note\";\r\nimport Scale from \"../../core/models/Scale\";\r\nimport { ITuning, TuningId, TUNING_PRESET_MAP } from \"./Fretboard.tuning\";\r\nimport { IVoicing } from \"./Fretboard.voicing\";\r\n\r\nexport interface IFretLabelProps {\r\n  note?: Note;\r\n  color?: string;\r\n  freq?: number;\r\n}\r\n\r\nexport interface IFretboardProps {\r\n  fretRange?: [number, number];\r\n  showFretDots?: boolean;\r\n  showFretNumbers?: boolean;\r\n  colorMapFn?: (fretProps: IFretProps) => string | undefined;\r\n  voicing?: IVoicing;\r\n  tuning?: number[]; // ITuning,\r\n  model?: Chord | Scale;\r\n}\r\n\r\nexport interface IFretProps extends IFretboardProps {\r\n  stringIndex: number;\r\n  fretIndex: number;\r\n}\r\n\r\nexport const DOTTED_FRET_INDICES = [\r\n  true,\r\n  false,\r\n  false,\r\n  true,\r\n  false,\r\n  true,\r\n  false,\r\n  true,\r\n  false,\r\n  true,\r\n  false,\r\n  false,\r\n];\r\n\r\nexport const FRET_SIZE_RATIO = Math.pow(1 / 2, 1 / 12);\r\n\r\nexport const isIntervalInVoicing = (\r\n  interval: IntervalSpan,\r\n  voicing: IVoicing,\r\n  stringIndex: number\r\n) => {\r\n  if (!voicing || !voicing.value) return true;\r\n  const v = voicing.value[stringIndex];\r\n  const d = interval.getDegree();\r\n  if (Array.isArray(v)) {\r\n    return v.some((n) => doesVoicingValueMatch(d, n));\r\n  } else if (typeof v === \"number\") {\r\n    return doesVoicingValueMatch(d, v);\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const getFretColor = (props: IFretProps): string | undefined => {\r\n  const { stringIndex, fretIndex, tuning, model, voicing } = props;\r\n  const noteIndex = tuning[stringIndex] + fretIndex;\r\n  const [interval, note] = model.tryGetPodPairAtPitch(noteIndex);\r\n\r\n  if (!note) return;\r\n\r\n  if (voicing && !isIntervalInVoicing(interval, voicing, stringIndex)) {\r\n    return `#00000011`;\r\n  }\r\n\r\n  return interval.getColor();\r\n};\r\n\r\nexport const DEFAULT_FRETBOARD_PROPS: IFretboardProps = {\r\n  fretRange: [1, 12],\r\n  tuning: TUNING_PRESET_MAP.get(TuningId.Standard).value,\r\n  showFretDots: true,\r\n  showFretNumbers: true,\r\n  colorMapFn: getFretColor,\r\n};\r\n\r\nexport const getFretRatios = (numFrets: number): number[] => {\r\n  const ratios = [];\r\n  for (let i = 1; i <= numFrets; i++) {\r\n    ratios.push(i <= 1 ? 1 : ratios[i - 2] * FRET_SIZE_RATIO);\r\n  }\r\n  return ratios;\r\n};\r\n\r\nexport const getDotsForFret = (fretNumber: number): string => {\r\n  if (fretNumber === 0) return \"\";\r\n  const mod = fretNumber % 12;\r\n  if (mod === 0) return \"• •\";\r\n  else if (DOTTED_FRET_INDICES[mod]) return \"•\";\r\n  return \"\";\r\n};\r\n\r\nconst doesVoicingValueMatch = (d: number, v: number) => {\r\n  return d + 1 === v;\r\n};\r\n"],"names":["tableStyles","css","_ref","model","title","numerals","getAllNumerals","length","React","Card","Table","styles","headerColIndicies","tbody","className","cols","map","n","i","numeral","symbol","getNumeralParts","content","link","getModelRoute","modelType","modelId","root","getShortName","props","theme","surface","bg","nav","text","inverted","SEMITONES","_ref2","data","semitones","rootId","useRootId","useRoot","thead","colSpan","d","ModelType","Chord","Scale","getName","h","index","intervals","findIndex","ivl","pod","includes","undefined","notes","getSemitoneCol","StyledColumnManager","styled","$tablet","join","$desktop","_ref3","children","tablet","desktop","StyledDropdownInput","value","setValue","options","idProperty","displayProperty","onChange","e","target","selectedIndex","v","key","name","StyledDetailsCard","StyledCard","secondary","getNoteCell","note","getOctave","getIntervalCell","interval","isFeatured","getPitchCell","getFrequency","getRatioCell","getRatio","octave","useRecoilValue","octaveState","hasNotes","Note","NumberUtils","$n","CardHeader","StyledGuitarCard","qp","URLSearchParams","action","Link","to","toString","Icon","iconId","size","FretTable","StyledModeCard","type","tags","find","t","Tag","modeType","modes","SCALE_PRESETS","p","StyledCollectionList","subchords","getSubchords","subscales","getSubscales","superchords","getSuperchords","superscales","getSuperscales","CollectionTable","CollectionList","CHORD_PRESETS","StyledRootInput","active","OCTAVE_OPTIONS","x","id","pageProps","usePageProps","path","rootIndex","lastIndexOf","basePath","slice","rootKey","setOctave","useRecoilState","InputRow","label","y","activeClassName","NoteId","NOTE_PRESET_MAP","DropdownInput","o","StyledRoot","isEditing","setIsEditing","isEditingKeyState","toggle","ButtonInput","isLink","onClick","remove","sanitized","navigate","THEME","$isRootless","RootInput","StyledPodlistPage","PageLayout","displayName","componentId","pageContext","cl","getModelIdClass","clText","getModelIdText","podList","ColumnManager","RootCard","DetailsCard","RomanNumeralsCard","ModeCard","GuitarCard","RelatedCard","card","level","AsTag","subtitle","rest","StyledInputRow","$y","dark3","StyledTable","getIsTypeOmit","Col","isHeader","ColTag","WrapperTag","Fragment","wrapperProps","Row","col","isConfig","hasOwnProperty","getIsConfig","colConfig","TableSection","rows","row","_ref4","tfoot","colGroups","caption","cg","StyledFretFlag","$color","$opacity","color","opacity","StyledFretTable","userProps","DEFAULT_FRETBOARD_PROPS","fretRange","showFretDots","showFretNumbers","tuning","colorMapFn","lo","hi","numFrets","numStrings","fretNums","push","fretDots","getDotsForFret","strings","s","frets","f","FretFlag","stringIndex","fretIndex","TuningId","formatPreset","getPitch","noteId","TUNING_PRESET_MAP","Map","Standard","Flat","DoubleFlat","StandardSeven","StandardBass","DropD","DADGAD","Violin","OpenA","OpenB","OpenC","OpenD","OpenE","OpenF","OpenG","FRETBOARD_TUNING_VALUES","ArrayUtils","DOTTED_FRET_INDICES","isIntervalInVoicing","Math","pow","voicing","getDegree","Array","isArray","some","doesVoicingValueMatch","noteIndex","tryGetPodPairAtPitch","getColor","fretNumber","mod"],"sourceRoot":""}