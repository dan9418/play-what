{"version":3,"file":"component---src-pages-dev-experimental-edit-theme-tsx-3de14898fd394c1e3f75.js","mappings":"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","sources":["webpack://play-what/./src/components/ui/Card.tsx","webpack://play-what/./src/components/pages/dev/experimental/edit-theme.page.tsx","webpack://play-what/./src/pages/dev/experimental/edit-theme.tsx"],"sourcesContent":["import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledCard = styled.div`\r\n    background: ${props => props.theme.surface.card};\r\n    width: 100%;\r\n    border-radius: 16px;\r\n    padding: 16px;\r\n\r\n    .header {\r\n        margin-bottom: 16px;\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 8px;\r\n        justify-content: space-between;\r\n    }\r\n`;\r\n\r\nexport const CardHeader: React.FC<any> = ({ title, level = 2, action = null }) => {\r\n    const AsTag: any = `h${level}`;\r\n    return (\r\n        <div className=\"header\">\r\n            <AsTag>{title}</AsTag>\r\n            {action}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Card: React.FC<any> = ({ title, subtitle, action, children, level, ...rest }) => {\r\n    return (\r\n        <StyledCard {...rest}>\r\n            {title &&\r\n                <CardHeader title={title} action={action} level={level} />\r\n            }\r\n            {subtitle &&\r\n                <CardHeader title={subtitle} level={level + 1} />\r\n            }\r\n            {children}\r\n        </StyledCard >\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport styled, { useTheme } from 'styled-components';\r\nimport { themeState } from \"../../../../state/state\";\r\nimport THEME, { DARK_THEME } from \"../../../../styles/theme\";\r\nimport { useSetTheme } from \"../../../../styles/ThemeManager\";\r\nimport ButtonInput from \"../../../inputs/ButtonInput\";\r\nimport PageLayout from \"../../../layout/PageLayout\";\r\nimport Card, { StyledCard } from \"../../../ui/Card\";\r\n\r\nconst StyledThemePage = styled(PageLayout)`\r\n    .grid {\r\n        margin-top: 16px;\r\n        display: grid;\r\n        gap: 16px;\r\n        grid-template-columns: 1fr;\r\n        @media(min-width: 512px) {\r\n            grid-template-columns: 1fr 1fr;\r\n        }\r\n    }\r\n\r\n    .theme-btns {\r\n        font-weight: bold;\r\n        margin-top: 16px;\r\n        display: grid;\r\n        gap: 16px;\r\n        grid-template-columns: 1fr;\r\n        @media(min-width: 512px) {\r\n            grid-template-columns: 1fr 1fr;\r\n        }\r\n\r\n        button {\r\n            width: 100%;\r\n        }\r\n    }\r\n\r\n    ${StyledCard} {\r\n        margin: 16px 0;\r\n    }\r\n\r\n    .row {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 16px;\r\n        margin-bottom: 16px;\r\n        //justify-content: space-between;\r\n        .text {\r\n            display: flex;\r\n            flex-direction: column;\r\n            gap: 4px;\r\n            label {\r\n                font-weight: bold;\r\n                font-size: 120%;\r\n            }\r\n            li {\r\n                list-style-type: disc;\r\n                margin-left: 16px;\r\n                font-style: italic;\r\n            }\r\n            span {\r\n                color: ${props => props.theme.text.secondary};\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst Swatch = styled.input`\r\n    appearance: none;\r\n\tborder: none;\r\n    cursor: pointer;\r\n    height: 64px;\r\n    width: 64px;\r\n    border: 1px solid black;\r\n    background-color: ${props => props.$color};\r\n`;\r\n\r\nconst SwatchSelector: React.FC<any> = ({ type, attr, title }) => {\r\n    const setTheme = useSetTheme();\r\n    const theme = useTheme();\r\n    let color;\r\n    if (type) {\r\n        color = theme[type][attr];\r\n    }\r\n    else {\r\n        color = theme[attr];\r\n    }\r\n    return (\r\n        <div className=\"row\">\r\n            <Swatch\r\n                type=\"color\"\r\n                $color={color}\r\n                value={color}\r\n                onChange={e => setTheme(e.target.value, attr, type)}\r\n            />\r\n            <div className=\"text\">\r\n                <label>{title}</label>\r\n                <span>{color}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const Page: React.FC<any> = () => {\r\n    const setTheme = useSetRecoilState(themeState);\r\n    return (\r\n        <StyledThemePage title=\"Theme\" >\r\n            <Card title=\"Reset Theme\">\r\n                <div className=\"theme-btns\">\r\n                    <ButtonInput onClick={() => setTheme(THEME)} >Light</ButtonInput>\r\n                    <ButtonInput onClick={() => setTheme(DARK_THEME)} >Dark</ButtonInput>\r\n                </div>\r\n            </Card>\r\n            <div className=\"grid\">\r\n                <div>\r\n                    <Card title=\"Brand\">\r\n                        <SwatchSelector title=\"Primary\" type=\"brand\" attr=\"primary\" />\r\n                        <SwatchSelector title=\"Secondary\" type=\"brand\" attr=\"secondary\" />\r\n                        <SwatchSelector title=\"Accent\" type=\"brand\" attr=\"accent\" />\r\n                    </Card>\r\n\r\n                    <Card title=\"Action\">\r\n                        <SwatchSelector title=\"Active\" type=\"action\" attr=\"active\" />\r\n                        <SwatchSelector title=\"Interactive\" type=\"action\" attr=\"interactive\" />\r\n                    </Card>\r\n\r\n                    <Card title=\"Status\">\r\n                        <SwatchSelector title=\"Positive\" type=\"status\" attr=\"positive\" />\r\n                        <SwatchSelector title=\"Negative\" type=\"status\" attr=\"negative\" />\r\n                        <SwatchSelector title=\"Warning\" type=\"status\" attr=\"warning\" />\r\n                        <SwatchSelector title=\"Info\" type=\"status\" attr=\"info\" />\r\n                        <SwatchSelector title=\"Highlight\" type=\"status\" attr=\"highlight\" />\r\n                    </Card>\r\n                    {/*<Card title=\"Palette\">\r\n                        <SwatchSelector title=\"Dark Blue\" attr=\"darkBlue\" />\r\n                        <SwatchSelector title=\"Light Blue\" attr=\"lightBlue\" />\r\n                        <SwatchSelector title=\"Green\" attr=\"green\" />\r\n                        <SwatchSelector title=\"Orange\" attr=\"orange\" />\r\n                        <SwatchSelector title=\"Red\" attr=\"red\" />\r\n                        <SwatchSelector title=\"Ivory\" attr=\"ivory\" />\r\n                    </Card>\r\n                    <Card title=\"Neutral\">\r\n                        <SwatchSelector title=\"White\" attr=\"white\" />\r\n                        <SwatchSelector title=\"Light 1\" attr=\"light1\" />\r\n                        <SwatchSelector title=\"Light 2\" attr=\"light2\" />\r\n                        <SwatchSelector title=\"Light 3\" attr=\"light3\" />\r\n                        <SwatchSelector title=\"Medium 1\" attr=\"medium1\" />\r\n                        <SwatchSelector title=\"Medium 2\" attr=\"medium2\" />\r\n                        <SwatchSelector title=\"Medium 3\" attr=\"medium3\" />\r\n                        <SwatchSelector title=\"Dark 1\" attr=\"dark1\" />\r\n                        <SwatchSelector title=\"Dark 2\" attr=\"dark2\" />\r\n                        <SwatchSelector title=\"Dark 3\" attr=\"dark3\" />\r\n                        <SwatchSelector title=\"Black\" attr=\"black\" />\r\n                    </Card>*/}\r\n                </div>\r\n                <div>\r\n                    <Card title=\"Surface\">\r\n                        <SwatchSelector title=\"Navigation\" type=\"surface\" attr=\"nav\" />\r\n                        <SwatchSelector title=\"Background\" type=\"surface\" attr=\"bg\" />\r\n                        <SwatchSelector title=\"Card\" type=\"surface\" attr=\"card\" />\r\n                    </Card>\r\n\r\n                    <Card title=\"Text\">\r\n                        <SwatchSelector title=\"Primary\" type=\"text\" attr=\"primary\" />\r\n                        <SwatchSelector title=\"Secondary\" type=\"text\" attr=\"secondary\" />\r\n                        <SwatchSelector title=\"Inverted\" type=\"text\" attr=\"inverted\" />\r\n                    </Card>\r\n\r\n                    <Card title=\"Utility\">\r\n                        <SwatchSelector title=\"Border\" type=\"utils\" attr=\"border\" />\r\n                        <SwatchSelector title=\"Hover Dark\" type=\"utils\" attr=\"hoverDark\" />\r\n                        <SwatchSelector title=\"Hover Light\" type=\"utils\" attr=\"hoverLight\" />\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        </StyledThemePage>\r\n    );\r\n};\r\n","import { Page } from \"../../../components/pages/dev/experimental/edit-theme.page\";\r\n\r\nexport default Page;\r\n"],"names":["StyledCard","styled","props","theme","surface","card","CardHeader","title","level","action","AsTag","React","className","subtitle","children","rest","StyledThemePage","PageLayout","withConfig","text","secondary","Swatch","$color","SwatchSelector","color","type","attr","setTheme","useSetTheme","useTheme","value","onChange","e","target","useSetRecoilState","themeState","Card","ButtonInput","onClick","THEME","DARK_THEME"],"sourceRoot":""}