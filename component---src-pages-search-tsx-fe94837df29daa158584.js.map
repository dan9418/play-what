{"version":3,"file":"component---src-pages-search-tsx-fe94837df29daa158584.js","mappings":"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","sources":["webpack://play-what/./src/components/search/SearchBar.tsx","webpack://play-what/./src/components/ui/Card.tsx","webpack://play-what/./src/core/general/Nav.utils.ts","webpack://play-what/./src/components/inputs/FilterList.tsx","webpack://play-what/./src/components/search/SearchResultsCard.tsx","webpack://play-what/./src/components/pages/search.page.tsx","webpack://play-what/./src/pages/search.tsx"],"sourcesContent":["import { navigate } from \"gatsby\";\r\nimport React, { useState } from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledSearchBar = styled.form`\r\n    width: 100%;\r\n    .search-bar {\r\n        width: 100%;\r\n        max-width: 512px;\r\n        display: grid;\r\n        grid-template-columns: 1fr auto;\r\n\r\n        input, button {\r\n            padding: 8px 8px;\r\n            border-radius: 8px;\r\n            border: 1px solid ${props => props.theme.utils.border};\r\n        }\r\n\r\n        input {\r\n            border-radius: 8px 0 0 8px;\r\n            border-right: none;\r\n        }\r\n\r\n        button {\r\n            border-radius: 0 8px 8px 0;\r\n            cursor: pointer;\r\n            color: white;\r\n            font-weight: bold;\r\n            background-color: ${props => props.theme.action.interactive};\r\n            &:hover { background-color: ${props => props.theme.action.active}; }\r\n            border-left: none;\r\n            padding: 8px 16px;\r\n\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n        }\r\n    }\r\n`;\r\n\r\nconst SearchBar: React.FC<any> = ({ searchRef, query: externalQuery, setQuery: externalSetQuery, placeholder }) => {\r\n    const [_query, _setQuery] = useState('');\r\n    const query = typeof externalQuery === 'undefined' ? _query : externalQuery;\r\n    const setQuery = typeof externalSetQuery === 'undefined' ? _setQuery : externalSetQuery;\r\n\r\n    const onChange = e => {\r\n        setQuery(e.target.value);\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        const value = e.target.elements.query.value;\r\n        const query = new URLSearchParams({ query: value });\r\n        const qs = query ? `?${query.toString()}` : '';\r\n        const path = `/search/${qs}`;\r\n        navigate(path);\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <StyledSearchBar role=\"search\" onSubmit={onSubmit}>\r\n            <div className=\"search-bar\">\r\n                <input\r\n                    type=\"search\"\r\n                    id=\"site-search\"\r\n                    name=\"query\"\r\n                    ref={searchRef}\r\n                    onChange={onChange}\r\n                    value={query as string}\r\n                    placeholder={placeholder || \"Search the site...\"}\r\n                />\r\n                <button type=\"submit\" >Search</button>\r\n            </div>\r\n        </StyledSearchBar>\r\n    );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledCard = styled.div`\r\n    background: ${props => props.theme.surface.card};\r\n    width: 100%;\r\n    border-radius: 16px;\r\n    padding: 16px;\r\n\r\n    .header {\r\n        margin-bottom: 16px;\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 8px;\r\n        justify-content: space-between;\r\n    }\r\n`;\r\n\r\nexport const CardHeader: React.FC<any> = ({ title, level = 2, action = null }) => {\r\n    const AsTag: any = `h${level}`;\r\n    return (\r\n        <div className=\"header\">\r\n            <AsTag>{title}</AsTag>\r\n            {action}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Card: React.FC<any> = ({ title, subtitle, action, children, level, ...rest }) => {\r\n    return (\r\n        <StyledCard {...rest}>\r\n            {title &&\r\n                <CardHeader title={title} action={action} level={level} />\r\n            }\r\n            {subtitle &&\r\n                <CardHeader title={subtitle} level={level + 1} />\r\n            }\r\n            {children}\r\n        </StyledCard >\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import { IModelConfig, ModelType, NoteId, Tag } from '../models/Model.constants';\r\nimport { ALL_PRESETS, NOTE_PRESET_MAP } from './../models/Model.presets';\r\n\r\ninterface ISearchResult {\r\n    to: string;\r\n    text: string;\r\n    modelType?: ModelType;\r\n    aliases?: string[]\r\n}\r\n\r\ninterface ISearchCandidate {\r\n    text: string;\r\n    to: string;\r\n    keywords: string[];\r\n}\r\n\r\nconst doesQueryMatch = (query = '', keywords: (string | RegExp)[]) => {\r\n    return keywords.some(kw => query.match(new RegExp(kw, 'gi')));\r\n}\r\n\r\nconst getLink = (modelType: ModelType, modelId: string, root?: string): string => {\r\n    return `/browse/${modelType}/${modelId}${root ? `/root/${root}/` : ''}`;\r\n}\r\n\r\nconst getName = (modelType: ModelType, name: string, root?: string): string => {\r\n    switch (modelType) {\r\n        case ModelType.Chord:\r\n            return `${root ? root : ''} ${name} Chord`\r\n        case ModelType.Scale:\r\n            return `${root ? root : ''} ${name} Scale`\r\n        default:\r\n            return `${root ? root : ''} ${name}`;\r\n    }\r\n}\r\n\r\nconst BASIC_PAGES: ISearchCandidate[] = [\r\n    {\r\n        text: 'Browse',\r\n        to: '/browse',\r\n        keywords: ['all', 'chord', 'scale', 'browse']\r\n    },\r\n    {\r\n        text: 'All Chords',\r\n        to: '/browse/chords',\r\n        keywords: ['all', 'chord']\r\n    },\r\n    {\r\n        text: 'All Scales',\r\n        to: '/browse/scales',\r\n        keywords: ['all', 'scale', 'mode']\r\n    }\r\n];\r\n\r\nconst REGEX_NOTE_NAME = /\\b[A-G](b|\\sflat|\\ssharp)*\\b/gi; // accidental symbols should be sanitized\r\nconst REGEX_FLAT = /\\b[A-G]b\\b/gi;\r\n\r\nconst getNoteIdFromQuery = (query: string): string | undefined => {\r\n    const noteMatches = query.match(REGEX_NOTE_NAME);\r\n\r\n    if (!noteMatches || !noteMatches.length) return;\r\n\r\n    const match = noteMatches[0];\r\n    const noteId = match.replaceAll(' ', '-');\r\n\r\n    return noteId;\r\n}\r\n\r\nconst getModelTypeFromQuery = (query: string): ModelType | undefined => {\r\n    if (query.match('chord')) return ModelType.Chord;\r\n    if (query.match('scale')) return ModelType.Scale;\r\n}\r\n\r\ninterface IModelPresetResult extends IModelConfig {\r\n    score: number;\r\n}\r\n\r\nconst getTags = (query: string): Tag[] => {\r\n    const items = [];\r\n    if (query.match(/maj|major/)) items.push(Tag.Major);\r\n    if (query.match(/min|minor/)) items.push(Tag.Minor);\r\n    if (query.match(/triad|chord/)) items.push(Tag.Triad);\r\n    if (query.match(/aug|augmented/)) items.push(Tag.Augmented);\r\n    if (query.match(/dim|diminished/)) items.push(Tag.Diminished);\r\n    if (query.match(/sus|suspended/)) items.push(Tag.Suspended);\r\n    if (query.match(/dom|dominant/)) items.push(Tag.Dominant);\r\n    if (query.match(/pent|pentatonic/)) items.push(Tag.Pentatonic);\r\n    if (query.match(/hex|hexatonic/)) items.push(Tag.Hexatonic);\r\n    if (query.match(/oct|octatonic/)) items.push(Tag.Octatonic);\r\n    if (query.match(/dia|diatonic/)) items.push(Tag.Diatonic);\r\n    if (query.match(/2|2nd|two|second/)) items.push(Tag.Second);\r\n    if (query.match(/3|3rd|three|third/)) items.push(Tag.Third);\r\n    if (query.match(/4|4th|four|fourth/)) items.push(Tag.Fourth);\r\n    if (query.match(/5|5th|five|fifth/)) items.push(Tag.Fifth);\r\n    if (query.match(/6|6th|six|sixth/)) items.push(Tag.Sixth);\r\n    if (query.match(/7|7th|seven|seventh/)) items.push(Tag.Seventh);\r\n    if (query.match(/beb|bebop/)) items.push(Tag.Bebop);\r\n    if (query.match(/blu|blues/)) items.push(Tag.Blues);\r\n    if (query.match(/mel|melodic|minor/)) items.push(Tag.MelodicMode);\r\n    if (query.match(/harm|harmonic|minor/)) items.push(Tag.HarmonicMode);\r\n    return items;\r\n}\r\n\r\nconst extendPreset = (preset: IModelConfig, query: string, allTags: Tag[]): IModelPresetResult => {\r\n\r\n    let score = 0;\r\n\r\n    if (query.match(preset.name.toLowerCase())) {\r\n        score = 100;\r\n    }\r\n\r\n    if (preset.name.toLowerCase().match(new RegExp(query.split(' ').join('|'), 'gi'))) {\r\n        score = score + 50;\r\n    }\r\n\r\n    score = score + allTags.filter(queryTag => preset.tags.some(presetTag => presetTag === queryTag)).length;\r\n\r\n    return {\r\n        ...preset,\r\n        score\r\n    }\r\n}\r\n\r\nconst getPresetsFromQuery = (query: string, modelType?: ModelType): IModelPresetResult[] => {\r\n    const allTags = getTags(query);\r\n    return ALL_PRESETS.filter(p => !(modelType && p.modelType !== modelType))\r\n        .map(p => {\r\n            return extendPreset(p, query, allTags);\r\n            //return query.split(' ').some(query => query.match(query));\r\n        });\r\n}\r\n\r\nconst rankResults = (results: IModelPresetResult[], rootId): IModelPresetResult[] => {\r\n    return results.filter(r => rootId || r.score).sort((a, b) => b.score - a.score)\r\n}\r\n\r\nconst formatPresets = (presets: IModelConfig[], rootId?: string): ISearchResult[] => {\r\n    return presets.map(p => {\r\n        const root = rootId ? NOTE_PRESET_MAP.get(rootId as NoteId).name : undefined;\r\n        return {\r\n            text: getName(p.modelType, p.name, root),\r\n            to: getLink(p.modelType, p.modelId, rootId),\r\n            aliases: p.aliases,\r\n            modelType: p.modelType\r\n        };\r\n    });\r\n}\r\n\r\nconst sanitizeQuery = query => query.trim().toLowerCase().replaceAll('#', '-sharp').replaceAll(REGEX_FLAT, m => `${m.charAt(0)}-flat`).replaceAll(/[^A-Z1-9]/gi, ' ');\r\n\r\nconst getAliases = (presets: ISearchResult[]): ISearchResult[] => {\r\n    const ret = [];\r\n    for (let i = 0; i < presets.length; i++) {\r\n        const p = presets[i];\r\n        ret.push(p);\r\n        if (p.aliases) {\r\n            p.aliases.forEach(a => ret.push({\r\n                to: p.to,\r\n                text: `${a} ${p.modelType === ModelType.Chord ? ' Chord' : ' Scale'}`\r\n            }));\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n\r\nexport const getSearchResults = (query: string): ISearchResult[] => {\r\n    if (!query) return BASIC_PAGES;\r\n\r\n    const sanitized = sanitizeQuery(query);\r\n\r\n    const rootId = getNoteIdFromQuery(sanitized);\r\n    const modelType = getModelTypeFromQuery(sanitized);\r\n\r\n    const presets = getPresetsFromQuery(sanitized, modelType);\r\n\r\n    const ranked = rankResults(presets, rootId);\r\n\r\n    const results = formatPresets(ranked, rootId);\r\n\r\n    const resultsWithAliases = getAliases(results);\r\n\r\n    const basics = BASIC_PAGES.filter(p => doesQueryMatch(sanitized, p.keywords));\r\n\r\n    return [...resultsWithAliases, ...basics];\r\n};\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport ButtonInput from \"./ButtonInput\";\r\n\r\nconst StyledFilterList = styled.div`\r\n\r\n    border: 1px solid ${props => props.theme.action.interactive};\r\n    border-radius: 8px;\r\n    padding: 8px;\r\n    margin-bottom: 16px;\r\n\r\n    .top {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n    }\r\n    \r\n    ul {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        align-items: center;\r\n        justify-content: center;\r\n        gap: 8px;\r\n\r\n        > li {\r\n            margin: 0  !important;\r\n            list-style-type: none !important;\r\n        }\r\n\r\n        button {\r\n            background-color: ${({ theme }) => theme.utils.transparent};;\r\n            border: 1px solid ${props => props.theme.action.interactive};;\r\n            color: ${props => props.theme.action.interactive};\r\n            padding: 4px 8px;\r\n            font-size: 80%;\r\n            :hover {\r\n                background-color: ${({ theme }) => theme.utils.hoverDark};\r\n            }\r\n\r\n            &.active {\r\n                color: ${({ theme }) => theme.text.inverted};;\r\n                background-color: ${props => props.theme.action.interactive};\r\n            }\r\n\r\n            :disabled {\r\n                color: ${({ theme }) => theme.text.inverted};\r\n                background-color: ${props => props.theme.text.secondary};\r\n                cursor: not-allowed;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nconst FilterList: React.FC<any> = ({ tags, availableTags, selectedTags, setSelectedTags }) => {\r\n\r\n    const toggle = t => {\r\n        if (selectedTags.includes(t)) {\r\n            setSelectedTags(selectedTags.filter(x => x !== t));\r\n        }\r\n        else {\r\n            setSelectedTags([...selectedTags, t]);\r\n        }\r\n    };\r\n    return (\r\n        <StyledFilterList>\r\n            {false && <div className=\"top\">\r\n                {selectedTags.length > 0 &&\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={() => setSelectedTags([])}\r\n                        className=\"clear\"\r\n                    >Clear</button>\r\n                }\r\n            </div>}\r\n            <ul>\r\n                {tags.map(t => (\r\n                    <li key={t}>\r\n                        <ButtonInput\r\n                            onClick={() => toggle(t)}\r\n                            className={selectedTags.includes(t) ? 'active' : ''}\r\n                            disabled={!availableTags.includes(t)}\r\n                        >\r\n                            {t}\r\n                        </ButtonInput>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </StyledFilterList>\r\n    );\r\n};\r\n\r\nexport default FilterList;\r\n","import { Link, navigate } from \"gatsby\";\r\nimport React, { useState } from \"react\";\r\nimport styled, { css } from 'styled-components';\r\nimport ArrayUtils from \"../../core/general/Array.utils\";\r\nimport { getSearchResults } from \"../../core/general/Nav.utils\";\r\nimport ButtonInput from \"../inputs/ButtonInput\";\r\nimport FilterList from \"../inputs/FilterList\";\r\nimport Card from \"../ui/Card\";\r\n\r\nconst StyledSearchResultsList = styled.ul` \r\n    font-size: 110%;\r\n    li a {\r\n        padding: 4px 0;\r\n        display: block;\r\n\r\n        &:focus, &:hover {\r\n            padding: 8px;\r\n            background-color: ${props => props.theme.action.interactive};\r\n            color: white;\r\n            border-radius: 8px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst ALL_RESULTS = [];\r\n\r\nconst SearchResultsCard: React.FC<any> = ({ resultsRef, query }) => {\r\n\r\n    const [isFiltering, setIsFiltering] = useState(false);\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n\r\n    const action = <ButtonInput\r\n        className={`filter ${isFiltering ? 'active' : ''}`}\r\n        onClick={() => setIsFiltering(!isFiltering)}\r\n        css={css`\r\n            color: ${props => props.theme.action.interactive};\r\n            background-color: transparent;\r\n            text-decoration: underline;\r\n            &.active {\r\n                color: white;\r\n                background-color: ${props => props.theme.action.interactive};\r\n            }\r\n        `}\r\n    >\r\n        Filter\r\n    </ButtonInput>;\r\n\r\n    let filteredResults = getSearchResults(query);\r\n\r\n    const tagSet = new Set();\r\n    ALL_RESULTS.forEach(r => {\r\n        if (r.to.includes('root')) return;\r\n        r.tags.forEach(t => tagSet.add(t));\r\n    });\r\n    const tags = ArrayUtils.setToArray(tagSet) || [];\r\n\r\n\r\n    return (\r\n        <Card title={!query ? 'Popular Pages' : 'Results'} action={null}>\r\n            {isFiltering && <FilterList\r\n                tags={tags}\r\n                availableTags={[]}\r\n                selectedTags={selectedTags}\r\n                setSelectedTags={setSelectedTags}\r\n            />}\r\n            <StyledSearchResultsList>\r\n                {filteredResults.map((r, i) => <li key={r.text}>\r\n                    <Link\r\n                        id={`search-result=${i}`}\r\n                        to={r.to}\r\n                        ref={i === 0 ? resultsRef : undefined}\r\n                        onKeyDown={(e) => {\r\n                            e.preventDefault();\r\n                            if (e.key === 'Enter') {\r\n                                navigate(r.to);\r\n                            }\r\n                            if (e.key === 'ArrowDown') {\r\n                                const next = document.getElementById(`search-result=${i + 1}`);\r\n                                if (next) next.focus();\r\n                            }\r\n                            if (e.key === 'ArrowUp') {\r\n                                const prev = document.getElementById(`search-result=${i - 1}`);\r\n                                if (prev) prev.focus();\r\n                            }\r\n                        }}\r\n                    >\r\n                        {r.text}\r\n                    </Link>\r\n                </li>)}\r\n            </StyledSearchResultsList>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default SearchResultsCard;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport styled from 'styled-components';\r\nimport { useQueryParam } from \"use-query-params\";\r\nimport PageLayout from \"../layout/PageLayout\";\r\nimport SearchBar from \"../search/SearchBar\";\r\nimport SearchResultsCard from \"../search/SearchResultsCard\";\r\nimport { StyledCard } from \"../ui/Card\";\r\n\r\nconst StyledSearchPage = styled(PageLayout)`\r\n    ${StyledCard} {\r\n        max-width: 768px;\r\n        margin: auto;\r\n    }\r\n\r\n    .search-bar {\r\n        margin: 32px auto;\r\n    }\r\n`;\r\n\r\nexport const Page: React.FC<any> = () => {\r\n\r\n    const [qp] = useQueryParam('query');\r\n\r\n    const [query, setQuery] = useState(qp || '');\r\n    const searchRef = useRef();\r\n    const resultsRef = useRef();\r\n\r\n    useEffect(() => {\r\n        const ref = qp ? resultsRef : searchRef;\r\n        const cur = ref.current as any;\r\n        cur && cur.focus();\r\n    }, []);\r\n\r\n    return (\r\n        <StyledSearchPage title=\"Search\" >\r\n            <SearchBar searchRef={searchRef} query={query} setQuery={setQuery} />\r\n            <SearchResultsCard resultsRef={resultsRef} query={query} />\r\n        </StyledSearchPage>\r\n    );\r\n};\r\n","import { Page } from \"../components/pages/search.page\";\r\n\r\nexport default Page;\r\n"],"names":["StyledSearchBar","styled","props","theme","utils","border","action","interactive","active","searchRef","externalQuery","query","externalSetQuery","setQuery","placeholder","useState","_query","_setQuery","React","role","onSubmit","e","preventDefault","value","target","elements","URLSearchParams","path","toString","navigate","className","type","id","name","ref","onChange","StyledCard","surface","card","CardHeader","title","level","AsTag","subtitle","children","rest","getLink","modelType","modelId","root","getName","ModelType","BASIC_PAGES","text","to","keywords","REGEX_NOTE_NAME","REGEX_FLAT","getPresetsFromQuery","allTags","items","match","push","Tag","getTags","ALL_PRESETS","p","map","preset","score","toLowerCase","RegExp","split","join","filter","queryTag","tags","some","presetTag","length","extendPreset","getSearchResults","sanitized","trim","replaceAll","m","charAt","sanitizeQuery","rootId","noteMatches","getNoteIdFromQuery","getModelTypeFromQuery","ranked","results","r","sort","a","b","rankResults","presets","NOTE_PRESET_MAP","undefined","aliases","formatPresets","resultsWithAliases","ret","i","forEach","getAliases","basics","kw","doesQueryMatch","StyledFilterList","transparent","hoverDark","inverted","secondary","availableTags","selectedTags","setSelectedTags","t","key","ButtonInput","onClick","includes","x","toggle","disabled","StyledSearchResultsList","ALL_RESULTS","resultsRef","isFiltering","filteredResults","tagSet","Set","add","ArrayUtils","Card","FilterList","Link","onKeyDown","next","document","getElementById","focus","prev","StyledSearchPage","PageLayout","withConfig","qp","useQueryParam","useRef","useEffect","cur","current","SearchBar","SearchResultsCard"],"sourceRoot":""}