{"version":3,"file":"component---src-components-pages-dev-notebook-shapes-connecting-shapes-page-tsx-23901c111b34da997132.js","mappings":"+MAcMA,GAAkBC,EAAAA,EAAAA,SAAOC,EAAAA,GAAW,YAAAC,YAAAA,yCAAAC,YAAAA,eAAlBH,CAAkB,0IAGtCI,EAAAA,IAYEC,EAAU,SAACC,GACf,OAAOA,EAAMC,KAAI,SAACC,EAAMC,GACtB,MAA8CD,EAAtCE,EAAK,EAALA,MAAOC,EAAO,EAAPA,QAASC,EAAM,EAANA,OAAQC,EAAS,EAATA,UAC1BC,EAAW,IAAIJ,EAAMC,EAAS,CAClCI,KAAMC,EAAAA,EAAAA,OAAYJ,KAEdK,EAAUC,EAAAA,GAAAA,IAAuBL,GAEvC,MAAO,CACLM,KAAM,CACJ,CACEC,QACEC,EAAAA,cAACC,EAAAA,EAAa,CACZC,QAAST,EAASU,UAClBC,gBAAiB,CACff,MAAOI,EACPG,QAAAA,EACAS,UAVM,CAAC,EAAG,IAWVC,iBAAiB,EACjBC,cAAc,YAUxBC,EAAe,CACnB,CACEC,MAAO,WACPC,MAAO,CAAEC,MAAO3B,EAAQ4B,EAAAA,MAE1B,CACEH,MAAO,aACPC,MAAO,CAAEC,MAAO3B,EAAQ6B,EAAAA,MAE1B,CACEJ,MAAO,iBACPC,MAAO,CAAEC,MAAO3B,EAAQ8B,EAAAA,OAY5B,UARuB,WACrB,OACEd,EAAAA,cAACtB,EAAe,CAAC+B,MAAM,qBACrBT,EAAAA,cAACe,EAAAA,EAAS,CAACC,MAAOR","sources":["webpack://play-what/./src/components/pages/dev/notebook/shapes/connecting-shapes.page.tsx"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Note from \"../../../../../core/models/Note\";\r\nimport { VOICING_PRESET_MAP } from \"../../../../../viewers/fretboard/Fretboard.voicing\";\r\nimport PageLayout from \"../../../../layout/PageLayout\";\r\nimport { StyledCard } from \"../../../../ui/Card\";\r\nimport FretboardCell from \"../../../../ui/FretboardCell\";\r\nimport SmartCard from \"../../../../ui/SmartCard\";\r\nimport {\r\n  DIATONIC_ITEMS,\r\n  PENTATONIC_ITEMS,\r\n  ROMAN_NUMERAL_ITEMS,\r\n} from \"./caged.shared\";\r\n\r\nconst StyledCAGEDPage = styled(PageLayout)`\r\n  overflow-x: scroll;\r\n  min-width: 1024px;\r\n  ${StyledCard} {\r\n    margin-top: 16px;\r\n    > table {\r\n      table-layout: fixed;\r\n      width: 100%;\r\n      > tbody > tr > td {\r\n        vertical-align: top;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst getRows = (items: any[]) => {\r\n  return items.map((item, i) => {\r\n    const { model, modelId, rootId, voicingId } = item as any;\r\n    const instance = new model(modelId, {\r\n      root: Note.fromId(rootId),\r\n    });\r\n    const voicing = VOICING_PRESET_MAP.get(voicingId);\r\n    const fretRange = [4, 19] as [number, number];\r\n    return {\r\n      cols: [\r\n        {\r\n          content: (\r\n            <FretboardCell\r\n              caption={instance.getName()}\r\n              fretboardConfig={{\r\n                model: instance,\r\n                voicing,\r\n                fretRange,\r\n                showFretNumbers: false,\r\n                showFretDots: false,\r\n              }}\r\n            />\r\n          ),\r\n        },\r\n      ],\r\n    };\r\n  });\r\n};\r\n\r\nconst CARD_CONFIGS = [\r\n  {\r\n    title: \"Diatonic\",\r\n    table: { tbody: getRows(DIATONIC_ITEMS) },\r\n  },\r\n  {\r\n    title: \"Pentatonic\",\r\n    table: { tbody: getRows(PENTATONIC_ITEMS) },\r\n  },\r\n  {\r\n    title: \"Roman Numerals\",\r\n    table: { tbody: getRows(ROMAN_NUMERAL_ITEMS) },\r\n  },\r\n];\r\n\r\nconst Page: React.FC = () => {\r\n  return (\r\n    <StyledCAGEDPage title=\"Connecting Shapes\">\r\n      <SmartCard cards={CARD_CONFIGS} />\r\n    </StyledCAGEDPage>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n"],"names":["StyledCAGEDPage","styled","PageLayout","displayName","componentId","StyledCard","getRows","items","map","item","i","model","modelId","rootId","voicingId","instance","root","Note","voicing","VOICING_PRESET_MAP","cols","content","React","FretboardCell","caption","getName","fretboardConfig","fretRange","showFretNumbers","showFretDots","CARD_CONFIGS","title","table","tbody","DIATONIC_ITEMS","PENTATONIC_ITEMS","ROMAN_NUMERAL_ITEMS","SmartCard","cards"],"sourceRoot":""}