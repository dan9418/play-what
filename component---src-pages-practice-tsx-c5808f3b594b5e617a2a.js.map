{"version":3,"file":"component---src-pages-practice-tsx-c5808f3b594b5e617a2a.js","mappings":"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","sources":["webpack://play-what/./src/components/practice/PracticePage.tsx","webpack://play-what/./src/pages/practice.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from 'styled-components';\r\nimport Chord from \"../../core/models/Chord\";\r\nimport { ChordId, NoteId, ScaleId } from \"../../core/models/Model.constants\";\r\nimport { NOTE_PRESETS, NOTE_PRESET_MAP } from \"../../core/models/Model.presets\";\r\nimport Note from \"../../core/models/Note\";\r\nimport Scale from \"../../core/models/Scale\";\r\nimport Fretboard from \"../../viewers/fretboard/Fretboard\";\r\nimport { getFretboardProps } from \"../../viewers/fretboard/Fretboard.utils\";\r\nimport { VoicingId, VOICING_PRESET_MAP } from \"../../viewers/fretboard/Fretboard.voicing\";\r\nimport DropdownInput from \"../_shared/inputs/DropdownInput\";\r\nimport { StyledPageBody } from \"../_shared/layout/PageBody\";\r\nimport PageTitle from \"../_shared/layout/PageTitle\";\r\nimport Card, { StyledCard } from \"../_shared/ui/Card\";\r\nimport InputRow, { StyledInputRow } from \"../_shared/ui/InputRow\";\r\n\r\nconst StyledPracticePage = styled(StyledPageBody)`\r\n\twidth: 100%;\r\n    max-width: 100%;\r\n    margin: auto;\r\n    \r\n    ${StyledCard}, ${StyledInputRow} {\r\n        margin-top: 16px;\r\n        table {\r\n            width: 100%;\r\n\r\n            td {\r\n                width: 33%;\r\n                padding: 0 2px;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst PracticePage: React.FC<any> = () => {\r\n    const [rootPreset, setRootPreset] = useState(NOTE_PRESET_MAP.get(NoteId.Fs));\r\n\r\n    const root = new Note(rootPreset.value);\r\n    const scale = new Scale(ScaleId.Ionian, { root });\r\n\r\n    console.log('dpb rootPreset', rootPreset);\r\n\r\n    const diatonicItems = [\r\n        {\r\n            model: Scale,\r\n            modelId: ScaleId.Ionian,\r\n            rootId: scale.notes[0].id,\r\n            voicingId: VoicingId.Scale_DoubleOctave_EShape_2\r\n        },\r\n        {\r\n            model: Scale,\r\n            modelId: ScaleId.Dorian,\r\n            rootId: scale.notes[1].id,\r\n            voicingId: VoicingId.Scale_DoubleOctave_DShape_1\r\n        },\r\n        {\r\n            model: Scale,\r\n            modelId: ScaleId.Phrygian,\r\n            rootId: scale.notes[2].id,\r\n            voicingId: VoicingId.Scale_DoubleOctave_CShape_1\r\n        },\r\n        {\r\n            model: Scale,\r\n            modelId: ScaleId.Lydian,\r\n            rootId: scale.notes[3].id,\r\n            voicingId: VoicingId.Scale_DoubleOctave_CShape_2\r\n        },\r\n        {\r\n            model: Scale,\r\n            modelId: ScaleId.Mixolydian,\r\n            rootId: scale.notes[4].id,\r\n            voicingId: VoicingId.Scale_DoubleOctave_AShape_1\r\n        },\r\n        {\r\n            model: Scale,\r\n            modelId: ScaleId.Aeolian,\r\n            rootId: scale.notes[5].id,\r\n            voicingId: VoicingId.Scale_DoubleOctave_GShape_1\r\n        },\r\n        {\r\n            model: Scale,\r\n            modelId: ScaleId.Locrian,\r\n            rootId: scale.notes[6].id,\r\n            voicingId: VoicingId.Scale_DoubleOctave_EShape_1\r\n        }\r\n    ];\r\n\r\n    const romanNumeralItems = [\r\n        {\r\n            model: Chord,\r\n            modelId: ChordId.Maj7,\r\n            rootId: scale.notes[0].id,\r\n            voicingId: VoicingId.Scale_DoubleOctave_EShape_2\r\n        },\r\n        {\r\n            model: Chord,\r\n            modelId: ChordId.Min7,\r\n            rootId: scale.notes[1].id,\r\n            voicingId: VoicingId.Scale_DoubleOctave_DShape_1\r\n        },\r\n        {\r\n            model: Chord,\r\n            modelId: ChordId.Min7,\r\n            rootId: scale.notes[2].id,\r\n            voicingId: VoicingId.Scale_DoubleOctave_CShape_1\r\n        },\r\n        {\r\n            model: Chord,\r\n            modelId: ChordId.Maj7,\r\n            rootId: scale.notes[3].id,\r\n            voicingId: VoicingId.Scale_DoubleOctave_CShape_2\r\n        },\r\n        {\r\n            model: Chord,\r\n            modelId: ChordId.Dom7,\r\n            rootId: scale.notes[4].id,\r\n            voicingId: VoicingId.Scale_DoubleOctave_AShape_1\r\n        },\r\n        {\r\n            model: Chord,\r\n            modelId: ChordId.Min7,\r\n            rootId: scale.notes[5].id,\r\n            voicingId: VoicingId.Scale_DoubleOctave_GShape_1\r\n        },\r\n        {\r\n            model: Chord,\r\n            modelId: ChordId.HalfDim7,\r\n            rootId: scale.notes[6].id,\r\n            voicingId: VoicingId.Scale_DoubleOctave_EShape_1\r\n        }\r\n    ];\r\n\r\n    const pentatonicItems = [\r\n        {\r\n            model: Scale,\r\n            modelId: ScaleId.MajorPentatonic,\r\n            rootId: scale.notes[0].id,\r\n            voicingId: VoicingId.Scale_DoubleOctave_EShape_2\r\n        },\r\n        {\r\n            model: Scale,\r\n            modelId: ScaleId.Egyptian,\r\n            rootId: scale.notes[1].id,\r\n            voicingId: VoicingId.Scale_DoubleOctave_DShape_1\r\n        },\r\n        {\r\n            model: Scale,\r\n            modelId: ScaleId.ManGong,\r\n            rootId: scale.notes[2].id,\r\n            voicingId: VoicingId.Scale_DoubleOctave_CShape_1\r\n        },\r\n        {\r\n            model: Scale,\r\n            modelId: ScaleId.Ritusen,\r\n            rootId: scale.notes[4].id,\r\n            voicingId: VoicingId.Scale_DoubleOctave_AShape_1\r\n        },\r\n        {\r\n            model: Scale,\r\n            modelId: ScaleId.MinorPentatonic,\r\n            rootId: scale.notes[5].id,\r\n            voicingId: VoicingId.Scale_DoubleOctave_CShape_1\r\n        }\r\n    ];\r\n\r\n    const display = [\r\n        [pentatonicItems[0], diatonicItems[0], romanNumeralItems[0]],\r\n        [pentatonicItems[1], diatonicItems[1], romanNumeralItems[1]],\r\n        [pentatonicItems[2], diatonicItems[2], romanNumeralItems[2]],\r\n        [pentatonicItems[3], diatonicItems[4], romanNumeralItems[4]],\r\n        [pentatonicItems[4], diatonicItems[5], romanNumeralItems[5]],\r\n    ]\r\n\r\n    return (\r\n        <StyledPracticePage>\r\n            <PageTitle title=\"Practice\" />\r\n            <InputRow label=\"Root\">\r\n                <DropdownInput options={NOTE_PRESETS} value={rootPreset} setValue={p => {\r\n                    setRootPreset(p);\r\n                }} />\r\n            </InputRow>\r\n            <Card title=\"CAGED\" >\r\n                <table>\r\n                    <thead>\r\n                    </thead>\r\n                    <tbody>\r\n                        {display.map((item, i) => {\r\n                            return (\r\n                                <tr key={i}>\r\n                                    {item.map(item => {\r\n                                        const { model, modelId, rootId, voicingId } = item as any;\r\n                                        const instance = new model(modelId, { root: Note.fromId(rootId) });\r\n                                        console.log('dpb scale', rootId, instance);\r\n                                        return (\r\n                                            <td key={modelId}>\r\n                                                <h3>{modelId}</h3>\r\n                                                <Fretboard\r\n                                                    {...getFretboardProps(\r\n                                                        instance,\r\n                                                        VOICING_PRESET_MAP.get(voicingId),\r\n                                                    )}\r\n                                                    fretRange={[1, 14]}\r\n                                                />\r\n                                            </td>\r\n                                        );\r\n                                    })}\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </Card>\r\n        </StyledPracticePage>\r\n    );\r\n};\r\n\r\nexport default PracticePage;\r\n","import PracticePage from \"../components/practice/PracticePage\";\r\n\r\nexport default PracticePage;\r\n"],"names":["StyledPracticePage","styled","StyledPageBody","StyledCard","StyledInputRow","useState","NOTE_PRESET_MAP","NoteId","rootPreset","setRootPreset","root","Note","value","scale","Scale","ScaleId","console","log","diatonicItems","model","modelId","rootId","notes","id","voicingId","VoicingId","romanNumeralItems","Chord","ChordId","pentatonicItems","display","PageTitle","title","InputRow","label","DropdownInput","options","NOTE_PRESETS","setValue","p","Card","map","item","i","key","instance","Fretboard","getFretboardProps","VOICING_PRESET_MAP","fretRange"],"sourceRoot":""}