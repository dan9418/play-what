{"version":3,"file":"component---src-pages-dev-test-all-intervals-from-all-roots-tsx-cd24045854eea028d7c2.js","mappings":"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","sources":["webpack://play-what/./src/components/breadcrumb-list/BreadcrumbList.tsx","webpack://play-what/./src/components/layout/PageTitle.tsx","webpack://play-what/./src/components/tests/AllIntervalsFromAllRoots.tsx","webpack://play-what/./src/components/pages/dev/AllIntervalsFromAllRootsPage.tsx","webpack://play-what/./src/pages/dev/test/all-intervals-from-all-roots.tsx"],"sourcesContent":["import { Link } from \"gatsby\";\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { usePageProps } from \"../../contexts/PagePropsContext\";\r\nimport Icon from \"../ui/Icon\";\r\n\r\nconst StyledBreadcrumbList = styled.ul`\r\n    font-size: 80%;\r\n    padding: 0 0 8px 0;\r\n    @media(min-width: 512px) {\r\n        font-size: 110%;\r\n        padding: 0 0 16px 0;\r\n    }\r\n\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    gap: 8px;\r\n    white-space: nowrap;\r\n    text-transform: capitalize;\r\n    svg {\r\n        margin-right: 8px;\r\n    }\r\n\r\n    span {\r\n        color: ${props => props.theme.text.secondary};\r\n    }\r\n`\r\n\r\nconst BreadcrumbList = () => {\r\n    const { path } = usePageProps();\r\n    let pieces = path.split('/');\r\n    const paths = [];\r\n    pieces.reduce((prev, cur, i, arr) => {\r\n        const path = `${prev}/${cur}`.replace('//', '/') || '/';\r\n        const isLink = !['root', 'practice', 'test', 'experimental'].includes(cur);\r\n        const text = i === 0 ? 'Home' : cur.replaceAll('-', ' ').replace(' sharp', '#').replace(' flat', 'b');\r\n\r\n        const Tag = isLink ? Link : 'span';\r\n        const to = isLink ? path : undefined;\r\n\r\n        paths.push(\r\n            <li key={i}>\r\n                {i > 0 && <Icon iconId=\"next\" size={10} color=\"grey\" />}\r\n                <Tag to={to}>{text}</Tag>\r\n            </li>\r\n        );\r\n        return path;\r\n    }, '/');\r\n    return <StyledBreadcrumbList>{paths.slice(0, paths.length - 1)}</StyledBreadcrumbList>;\r\n}\r\n\r\nexport default BreadcrumbList;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport BreadcrumbList from '../breadcrumb-list/BreadcrumbList';\r\nimport SEO from \"../utils/SEO\";\r\n\r\nconst StyledPageTitle = styled.div`\r\n    width: 100%;\r\n\r\n    .header {\r\n        border-bottom: 1px solid ${({ theme }) => theme.utils.border};    \r\n        width: 100%;\r\n        margin: auto;\r\n        padding-bottom: 8px;\r\n        @media(min-width: 512px) {\r\n            padding-bottom: 16px;\r\n        }\r\n\r\n        > h1 {\r\n            width: 100%;\r\n            font-size: 150%;\r\n            @media(min-width: 512px) {\r\n                font-size: 300%;\r\n            }\r\n            text-align: left;\r\n            color: ${({ theme }) => theme.text.primary};;\r\n        }\r\n\r\n        > h2 {\r\n            margin-top: 4px;\r\n            width: 100%;\r\n            text-align: left;\r\n            color: ${({ theme }) => theme.text.secondary};;\r\n            font-size: 80%;\r\n            @media(min-width: 512px) {\r\n                font-size: 100%;\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst PageTitle: React.FC<any> = ({ title, subtitle, children }) => {\r\n    return (\r\n        <>\r\n            <SEO title={title} />\r\n            <BreadcrumbList />\r\n            <StyledPageTitle>\r\n                <div className=\"header\">\r\n                    <h1>{title}</h1>\r\n                    {subtitle && <h2>{subtitle}</h2>}\r\n                </div>\r\n                {children}\r\n            </StyledPageTitle>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport IntervalSpan from \"../../core/models/Interval\";\r\nimport { ACCIDENTAL_VALUES, IPod } from \"../../core/models/Model.constants\";\r\nimport { INTERVAL_PRESETS } from \"../../core/models/Model.presets\";\r\nimport Note from \"../../core/models/Note\";\r\nimport { addPods } from \"../../core/models/Pod.static\";\r\nimport { DEGREE_PRESETS } from \"../../core/theory/Degree.constants\";\r\nimport { DIATONIC_VALUES } from \"../../core/theory/Diatonic.constants\";\r\n\r\nconst FIRST_OCTAVE_INTERVALS = INTERVAL_PRESETS.filter(ivl => ivl.value[0] < 12);\r\nconst ACCIDENTALS = ACCIDENTAL_VALUES.filter(a => Math.abs(a.value) < 2);\r\nconst SHOW_PODS = false;\r\n\r\nconst StyledTest = styled.div`\r\n    height: 100%;\r\n    width: 100%;\r\n    overflow: auto; \r\n        \r\n    table {\r\n        border-collapse: collapse;\r\n        margin: 16px auto;\r\n\r\n        td, th {\r\n            border: 1px solid ${({ theme }) => theme.utils.border};\r\n\r\n            height: 40px;\r\n            width: 44px;\r\n            display: inline-flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n        }\r\n        th {\r\n            text-align: left;\r\n            white-space: nowrap;\r\n        }\r\n\r\n        th {\r\n            background-color: ${({ theme }) => theme.utils.hoverDark};\r\n        }\r\n        td {\r\n            background-color: white;\r\n        }\r\n\r\n        .pod {\r\n            color: ${props => props.theme.text.secondary};\r\n            font-size: 80%;\r\n        }\r\n\r\n        .invalid {\r\n            color: ${({ theme }) => theme.status.negative};\r\n            font-weight: bold;\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nconst getRoots = () => {\r\n    const roots = [];\r\n    DEGREE_PRESETS.forEach((degree) => {\r\n        const spelling = degree.id;\r\n        const d = degree.value;\r\n\r\n        const diatonicPitch = DIATONIC_VALUES[d].value[0];\r\n        ACCIDENTALS.forEach((accidental) => {\r\n            const a = accidental.symbol;\r\n            const offset = accidental.value;\r\n\r\n            const rootName = `${spelling}${a}`;\r\n            const rootPod: IPod = [diatonicPitch + offset, d];\r\n\r\n            const intervals = FIRST_OCTAVE_INTERVALS.map(ivl => {\r\n                const ivlPod = addPods(rootPod, ivl.value);\r\n                let note;\r\n                let isInvalid = false;\r\n\r\n                try {\r\n                    note = new Note(ivlPod);\r\n                }\r\n                catch (e) {\r\n                    isInvalid = true;\r\n                }\r\n\r\n                //const isInvalid = ivlName.length > 5;\r\n\r\n                return {\r\n                    name: note ? note.name : '?',\r\n                    pod: ivlPod,\r\n                    isInvalid\r\n                }\r\n            })\r\n\r\n            roots.push({\r\n                name: rootName,\r\n                pod: rootPod,\r\n                intervals\r\n            });\r\n        });\r\n    });\r\n    return roots;\r\n}\r\n\r\nconst AllIntervalsFromAllRoots: React.FC<any> = () => {\r\n    const roots = getRoots();\r\n    return (\r\n        <StyledTest>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Root</th>\r\n                        {\r\n                            FIRST_OCTAVE_INTERVALS.map(ivl => {\r\n                                return <th colSpan={SHOW_PODS ? 2 : 1} key={ivl.modelId}>{IntervalSpan.fromValue(ivl.value).getName()}</th>\r\n                            })\r\n                        }\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        roots.map(r => {\r\n                            return (\r\n                                <tr key={r.name}>\r\n                                    <th>{r.name}</th>\r\n                                    {SHOW_PODS && <th>{JSON.stringify(r.pod)}</th>}\r\n                                    {\r\n                                        r.intervals.map(ivl => {\r\n                                            return <>\r\n                                                <td key={ivl.modelId + 'n'} className={ivl.isInvalid ? 'invalid' : ''}>\r\n                                                    {ivl.name}\r\n                                                </td>\r\n                                                {SHOW_PODS &&\r\n                                                    <td key={ivl.modelId + 'p'} className=\"pod\">\r\n                                                        {JSON.stringify(ivl.pod)}\r\n                                                    </td>}\r\n                                            </>\r\n                                        })\r\n                                    }\r\n                                </tr>\r\n                            );\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </StyledTest>\r\n    );\r\n};\r\n\r\nexport default AllIntervalsFromAllRoots;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { StyledPageBody } from \"../../layout/PageBody\";\r\nimport PageTitle from \"../../layout/PageTitle\";\r\nimport AllIntervalsFromAllRoots from \"../../tests/AllIntervalsFromAllRoots\";\r\n\r\nconst StyledTestPage = styled(StyledPageBody)`\r\n\r\n`;\r\n\r\nconst TestPage: React.FC<any> = () => {\r\n\r\n    return (\r\n        <StyledTestPage>\r\n            <PageTitle title=\"All Intervals From All Roots\" subtitle=\"Test\" />\r\n            <AllIntervalsFromAllRoots />\r\n        </StyledTestPage>\r\n    );\r\n};\r\n\r\nexport default TestPage;\r\n","import AllIntervalsFromAllRootsPage from \"../../../components/pages/dev/AllIntervalsFromAllRootsPage\";\r\n\r\nexport default AllIntervalsFromAllRootsPage;\r\n"],"names":["StyledBreadcrumbList","styled","props","theme","text","secondary","pieces","usePageProps","path","split","paths","reduce","prev","cur","i","arr","replace","isLink","includes","replaceAll","Tag","Link","to","undefined","push","key","Icon","iconId","size","color","slice","length","StyledPageTitle","utils","border","primary","title","subtitle","children","SEO","className","FIRST_OCTAVE_INTERVALS","INTERVAL_PRESETS","ivl","value","ACCIDENTALS","ACCIDENTAL_VALUES","a","Math","abs","SHOW_PODS","StyledTest","hoverDark","status","negative","roots","DEGREE_PRESETS","degree","spelling","id","d","diatonicPitch","DIATONIC_VALUES","forEach","accidental","symbol","offset","rootName","rootPod","intervals","map","note","ivlPod","addPods","isInvalid","Note","e","name","pod","getRoots","colSpan","modelId","IntervalSpan","getName","r","StyledTestPage","StyledPageBody","PageTitle"],"sourceRoot":""}