{"version":3,"file":"component---src-components-pages-chords-page-tsx-0d8a7ac50098873ab50f.js","mappings":"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","sources":["webpack://play-what/./src/components/collection/CollectionCard.tsx","webpack://play-what/./src/components/collection/CollectionTable.tsx","webpack://play-what/./src/components/layout/Pane.tsx","webpack://play-what/./src/components/pages/chords.page.tsx","webpack://play-what/./src/components/ui/Card.tsx"],"sourcesContent":["import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { useRootSuffix } from \"../../contexts/PagePropsContext\";\r\nimport Chord from \"../../core/models/Chord\";\r\nimport { CHORD_PRESETS, SCALE_PRESETS } from \"../../core/models/Model.presets\";\r\nimport Scale from \"../../core/models/Scale\";\r\nimport Card from \"../ui/Card\";\r\nimport CollectionTable, { ICollectionTableProps } from \"./CollectionTable\";\r\n\r\nconst CollectionCard: React.FC<any> = ({ title, data }) => {\r\n    return (\r\n        <Card title={title} >\r\n            <CollectionTable data={data} />\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default CollectionCard;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { useRoot, useRootSuffix } from \"../../contexts/PagePropsContext\";\r\nimport Chord from \"../../core/models/Chord\";\r\nimport { IModelConfig, ModelType } from \"../../core/models/Model.constants\";\r\nimport Scale from \"../../core/models/Scale\";\r\n\r\nconst StyledCollectionTable = styled.table`\r\n    width: 100%;\r\n    margin: auto;\r\n    border-collapse: collapse;\r\n    white-space: nowrap;\r\n\r\n    td {  \r\n        &:not(:first-child) {\r\n            font-size: 80%;\r\n        }\r\n    }\r\n\r\n    td, th {\r\n        line-height: 32px;\r\n        text-align: center;\r\n        \r\n        &:not(:first-child) {\r\n            width: 32px;\r\n            height: 32px;\r\n\r\n            display: none;\r\n            @media(min-width: 512px) {\r\n                display: table-cell;\r\n            }\r\n        }\r\n\r\n        &:first-child {\r\n            text-align: left;\r\n            padding: 0 8px;\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    td {\r\n        //border-right: 1px solid ${props => props.theme.utils.border};\r\n        //border-bottom: 1px solid ${props => props.theme.utils.border};\r\n        &.active {\r\n            background-color: ${props => props.theme.surface.bg};\r\n        }\r\n    }\r\n\r\n    thead {\r\n        text-transform: uppercase;\r\n        font-size: 80%;\r\n        \r\n        @media(max-width: 511px) {\r\n            display: none;\r\n        }\r\n        tr th {\r\n            background-color: ${props => props.theme.surface.nav};\r\n            color: ${({ theme }) => theme.text.inverted};\r\n        }\r\n        \r\n        th:first-child {\r\n            border-radius: 8px 0 0 8px;\r\n        }\r\n        th:last-child {\r\n            border-radius: 0 8px 8px 0;\r\n        }\r\n    }\r\n\r\n    a {\r\n        display: block;\r\n    }\r\n`;\r\n\r\nexport interface ICollectionTableProps {\r\n    data: IModelConfig[];\r\n    semitones?: number[];\r\n}\r\n\r\nconst SEMITONES = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\r\n\r\nconst CollectionTable: React.FC<ICollectionTableProps> = ({ data, semitones = [] }) => {\r\n    const rootSuffix = useRootSuffix();\r\n    const root = useRoot();\r\n    return (\r\n        <StyledCollectionTable>\r\n            <thead>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th colSpan={12}>{root ? 'Notes' : 'Intervals'}</th>\r\n                    {/*SEMITONES.map((h, i) => <th key={i}>{h}</th>)*/}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    data.map((d, i) => {\r\n                        const cl = d.modelType === ModelType.Chord ? Chord : Scale;\r\n                        const model = new cl(d.modelId, { root });\r\n\r\n                        return (\r\n                            <tr key={i}>\r\n                                <td>\r\n                                    <Link to={`/browse/${model.modelType}/${model.modelId}/${rootSuffix}`}>\r\n                                        {model.getName()}\r\n                                    </Link>\r\n                                </td>\r\n                                {SEMITONES.map((h, i) => {\r\n                                    const index = model.intervals.findIndex(ivl => ivl.pod[0] + 1 === h);\r\n                                    const className = semitones.includes(h) ? 'active' : '';\r\n                                    if (index < 0) return <td key={i} className={className} />;\r\n                                    const mod = root ? model.notes[index] : model.intervals[index];\r\n                                    return (\r\n                                        <td key={i} className={className}>\r\n                                            {mod.getName()}\r\n                                        </td>\r\n                                    );\r\n                                })}\r\n                            </tr>\r\n                        );\r\n                    })\r\n                }\r\n            </tbody>\r\n        </StyledCollectionTable>\r\n    );\r\n};\r\n\r\nexport default CollectionTable;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledDoublePane = styled.div`\r\n\tdisplay: grid;\r\n\tgap: 16px;\r\n\tgrid-template-columns: 1fr;\r\n\t@media(min-width: 512px) {\r\n\t\tgrid-template-columns: 3fr 2fr;\r\n\t}\r\n`\r\n\r\nexport const StyledPane = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: 16px;\r\n\tmargin: 16px 0;\r\n`\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { useRootSuffix } from \"../../contexts/PagePropsContext\";\r\nimport { ChordId } from \"../../core/models/Model.constants\";\r\nimport { CHORD_PRESETS } from \"../../core/models/Model.presets\";\r\nimport CollectionCard from \"../collection/CollectionCard\";\r\nimport PageLayout from \"../layout/PageLayout\";\r\nimport { StyledDoublePane, StyledPane } from \"../layout/Pane\";\r\nimport Card from \"../ui/Card\";\r\n\r\nconst StyledChordsPage = styled(PageLayout)`\r\n\r\n    \r\n    .intro {\r\n        padding: 0 16px;\r\n    }\r\n\r\n    h3, p {\r\n        margin: 16px 0;\r\n    }\r\n\r\n    ${StyledPane} {\r\n        li {\r\n            list-style-type: disc;\r\n            margin-left: 16px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst ChordsPage: React.FC<any> = props => {\r\n    const rootSuffix = useRootSuffix();\r\n\r\n    return (\r\n        <StyledChordsPage title=\"Chords\" subtitle=\"The foundation of harmony\">\r\n            <div>\r\n                <p className=\"intro\">\r\n                    A chord is a collection of musical notes, usually played simultaneously.\r\n                    Chords are defined by their first note (the <em>root</em>) and its relationship to the following notes (<em>intervals</em>).\r\n                </p>\r\n                {false && <p className=\"intro\">\r\n                    Most chords contain a root, a third, and a fifth. Advanced chords may include additional intervals, substitutions, and/or omissions.\r\n                    In their most common form, chords contain at least three notes spanning a single octave.\r\n                    Chords spanning more than one octave are called <em>extended chords</em> and are not yet covered here.\r\n                </p>}\r\n                {/*\r\n                    <h3>Types of Chords</h3>\r\n                    <ul>\r\n                        <li><a href=\"#triad\">Triads</a></li>\r\n                        <li><a href=\"#seventh\">Seventh Chords</a></li>\r\n                        <li><a href=\"#sixth\">Sixth Chords</a></li>\r\n                        <li><a href=\"#suspended\">Suspended Chords</a></li>\r\n                    </ul>*/}\r\n            </div>\r\n            <StyledDoublePane>\r\n                <StyledPane>\r\n                    <CollectionCard title=\"All Chords\" data={CHORD_PRESETS} />\r\n                </StyledPane>\r\n                <StyledPane>\r\n                    <Card title=\"Triads\" id=\"triad\">\r\n                        <p>\r\n                            A triad is the most basic type of chord. It consists of 3 intervals (a root, a third, and a fifth).\r\n                            The specific thirds and fifths used determine the type (or <em>quality</em>) of the triad.\r\n                        </p>\r\n                        <h3>Examples</h3>\r\n                        <ul>\r\n                            <li><Link to={`/browse/chords/${ChordId.MajTriad}/${rootSuffix}`}>Major Triad</Link></li>\r\n                            <li><Link to={`/browse/chords/${ChordId.MinTriad}/${rootSuffix}`}>Minor Triad</Link></li>\r\n                            <li><Link to={`/browse/chords/${ChordId.AugTriad}/${rootSuffix}`}>Augmented Triad</Link></li>\r\n                            <li><Link to={`/browse/chords/${ChordId.DimTriad}/${rootSuffix}`}>Diminished Triad</Link></li>\r\n                        </ul>\r\n                    </Card>\r\n                    <Card title=\"Seventh Chords\" id=\"seventh\">\r\n                        <p>\r\n                            A seventh chord is a triad with an additional seventh interval stacked on top.\r\n                        </p>\r\n                        <h3>Examples</h3>\r\n                        <ul>\r\n                            <li><Link to={`/browse/chords/${ChordId.Maj7}/${rootSuffix}`}>Major 7th</Link></li>\r\n                            <li><Link to={`/browse/chords/${ChordId.Min7}/${rootSuffix}`}>Minor 7th</Link></li>\r\n                            <li><Link to={`/browse/chords/${ChordId.Dom7}/${rootSuffix}`}>Dominant 7th</Link></li>\r\n                            <li><Link to={`/browse/chords/${ChordId.MinMaj7}/${rootSuffix}`}>Minor-Major 7th</Link></li>\r\n                            <li><Link to={`/browse/chords/${ChordId.Dim7}/${rootSuffix}`}>Diminished 7th</Link></li>\r\n                            <li><Link to={`/browse/chords/${ChordId.HalfDim7}/${rootSuffix}`}>Half-Diminished 7th</Link></li>\r\n                            <li><Link to={`/browse/chords/${ChordId.Aug7}/${rootSuffix}`}>Augmented 7th</Link></li>\r\n                            <li><Link to={`/browse/chords/${ChordId.AugMaj7}/${rootSuffix}`}>Augmented Major 7th</Link></li>\r\n                        </ul>\r\n                    </Card>\r\n                    <Card title=\"Sixth Chords\" id=\"sixth\">\r\n                        <p>\r\n                            A sixth chord is a triad with an additional sixth interval stacked on top.\r\n                            They are similar in function to seventh chords.\r\n                        </p>\r\n                        <h3>Examples</h3>\r\n                        <ul>\r\n                            <li><Link to={`/browse/chords/${ChordId.Maj6}/${rootSuffix}`}>Major 6th</Link></li>\r\n                            <li><Link to={`/browse/chords/${ChordId.Min6}/${rootSuffix}`}>Minor 6th</Link></li>\r\n                        </ul>\r\n                    </Card>\r\n                    <Card title=\"Suspended Chords\" id=\"suspended\">\r\n                        <p>\r\n                            A suspended chord is a like a triad, except it sustitutes a second or fourth interval in place of the third.\r\n                        </p>\r\n                        <h3>Examples</h3>\r\n                        <ul>\r\n                            <li><Link to={`/browse/chords/${ChordId.Sus2}/${rootSuffix}`}>Suspended 2nd</Link></li>\r\n                            <li><Link to={`/browse/chords/${ChordId.Sus4}/${rootSuffix}`}>Suspended 4th</Link></li>\r\n                        </ul>\r\n                    </Card>\r\n                </StyledPane>\r\n\r\n            </StyledDoublePane>\r\n        </StyledChordsPage>\r\n    );\r\n};\r\n\r\nexport default ChordsPage;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledCard = styled.div`\r\n    background: ${props => props.theme.surface.card};\r\n    width: 100%;\r\n    border-radius: 16px;\r\n    padding: 16px;\r\n\r\n    .header {\r\n        margin-bottom: 16px;\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 8px;\r\n        justify-content: space-between;\r\n    }\r\n`;\r\n\r\nexport const CardHeader: React.FC<any> = ({ title, level = 2, action = null }) => {\r\n    const AsTag: any = `h${level}`;\r\n    return (\r\n        <div className=\"header\">\r\n            <AsTag>{title}</AsTag>\r\n            {action}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Card: React.FC<any> = ({ title, subtitle, action, children, level, ...rest }) => {\r\n    return (\r\n        <StyledCard {...rest}>\r\n            {title &&\r\n                <CardHeader title={title} action={action} level={level} />\r\n            }\r\n            {subtitle &&\r\n                <CardHeader title={subtitle} level={level + 1} />\r\n            }\r\n            {children}\r\n        </StyledCard >\r\n    );\r\n};\r\n\r\nexport default Card;\r\n"],"names":["title","data","React","Card","CollectionTable","StyledCollectionTable","styled","props","theme","surface","bg","nav","text","inverted","SEMITONES","semitones","rootSuffix","useRootSuffix","root","useRoot","colSpan","map","d","i","model","modelType","ModelType","Chord","Scale","modelId","key","Link","to","getName","h","index","intervals","findIndex","ivl","pod","className","includes","mod","notes","StyledDoublePane","StyledPane","StyledChordsPage","PageLayout","withConfig","subtitle","CollectionCard","CHORD_PRESETS","id","ChordId","StyledCard","card","CardHeader","level","action","AsTag","children","rest"],"sourceRoot":""}