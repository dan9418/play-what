{"version":3,"file":"component---src-components-pages-coming-soon-page-tsx-67640d4aaec6b692d3e5.js","mappings":"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","sources":["webpack://play-what/./src/components/column-manager/ColumnManager.tsx","webpack://play-what/./src/components/pages/coming-soon.page.tsx","webpack://play-what/./src/components/ui/Card.tsx","webpack://play-what/./src/components/ui/List.styles.tsx","webpack://play-what/./src/components/ui/List.tsx","webpack://play-what/./src/components/ui/Table.tsx"],"sourcesContent":["import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledColumnManager = styled.div`\r\n    display: grid;\r\n    gap: 16px;\r\n    grid-template-columns: 1fr;\r\n\r\n    ${({ $tablet }) => $tablet ? `\r\n        @media(min-width: 512px) {\r\n            grid-template-columns: ${$tablet.join(' ')}\r\n        }\r\n    ` : ''}\r\n\r\n    ${({ $desktop }) => $desktop ? `\r\n        @media(min-width: 1024px) {\r\n            grid-template-columns: ${$desktop.join(' ')}\r\n        }\r\n    ` : ``}\r\n   \r\n`;\r\n\r\nexport interface IColumnManagerProps {\r\n    tablet?: string[];\r\n    desktop?: string[];\r\n}\r\n\r\nconst ColumnManager: React.FC<any> = ({ children, tablet, desktop }) => {\r\n    return (\r\n        <StyledColumnManager $tablet={tablet} $desktop={desktop}>\r\n            {children}\r\n        </StyledColumnManager >\r\n    );\r\n};\r\n\r\nexport default ColumnManager;\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { FEEDBACK_LINK } from \"../../config/constants\";\r\nimport ColumnManager from \"../column-manager/ColumnManager\";\r\nimport PageLayout from \"../layout/PageLayout\";\r\nimport Card from \"../ui/Card\";\r\nimport { SimpleList } from \"../ui/List\";\r\nimport { Table } from \"../ui/Table\";\r\n\r\nconst StyledComingSoonPage = styled(PageLayout)``;\r\n\r\nconst tableStyles = css`\r\n  border-collapse: collapse;\r\n  width: 100%;\r\n\r\n  td,\r\n  th {\r\n    padding: 8px;\r\n    text-align: left;\r\n    vertical-align: top;\r\n  }\r\n\r\n  th {\r\n    border-bottom: 1px solid ${(props) => props.theme.utils.border};\r\n  }\r\n\r\n  tr:not(:last-child) {\r\n    td {\r\n      border-bottom: 1px solid ${(props) => props.theme.utils.border};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Page: React.FC<any> = () => {\r\n  return (\r\n    <StyledComingSoonPage title=\"Coming Soon\" subtitle=\"Potential Features\">\r\n      <ColumnManager>\r\n        <Card title=\"Release Schedule\">\r\n          <Table\r\n            styles={tableStyles}\r\n            thead={[\r\n              {\r\n                cols: [\"Release\", \"Version\", \"Date\"],\r\n              },\r\n            ]}\r\n            tbody={[\r\n              {\r\n                cols: [\"Public User Beta\", \"0.1.0\", \"8/5/22\"],\r\n              },\r\n              {\r\n                cols: [\"Official Launch\", \"1.0.0\", \"2023\"],\r\n              },\r\n              {\r\n                cols: [\r\n                  {\r\n                    colSpan: 3,\r\n                    content: (\r\n                      <SimpleList\r\n                        items={[\r\n                          \"Possible name change\",\r\n                          \"Fresh logo\",\r\n                          \"Sharing features\",\r\n                          \"Chord progressions\",\r\n                          \"Cadences\",\r\n                          \"More tunings/voicings\",\r\n                          \"Open source license\",\r\n                          \"Technical documentation\",\r\n                          \"Bug fixes\",\r\n                        ]}\r\n                      />\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                cols: [\"Future Versions\", \"X.0.0\", \"TBD\"],\r\n              },\r\n              {\r\n                cols: [\r\n                  {\r\n                    colSpan: 3,\r\n                    content: (\r\n                      <SimpleList\r\n                        items={[\r\n                          \"Build-your-own practice materials\",\r\n                          \"Grand staff viewer\",\r\n                          \"Chord inversions\",\r\n                          \"Rhythm support\",\r\n                          \"Sound support\",\r\n                          \"Ear training\",\r\n                          \"User accounts\",\r\n                          \"...and more!\",\r\n                        ]}\r\n                      />\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </Card>\r\n        <Card title=\"Request A Feature\">\r\n          <p>\r\n            <a target=\"_blank\" href={FEEDBACK_LINK}>\r\n              Use this form\r\n            </a>{\" \"}\r\n            to submit a feature request or provide feedback.\r\n          </p>\r\n        </Card>\r\n      </ColumnManager>\r\n    </StyledComingSoonPage>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledCard = styled.div`\r\n    background: ${props => props.theme.surface.card};\r\n    width: 100%;\r\n    border-radius: 16px;\r\n    padding: 16px;\r\n\r\n    .header {\r\n        margin-bottom: 16px;\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 8px;\r\n        justify-content: space-between;\r\n    }\r\n`;\r\n\r\nexport const CardHeader: React.FC<any> = ({ title, level = 2, action = null }) => {\r\n    const AsTag: any = `h${level}`;\r\n    return (\r\n        <div className=\"header\">\r\n            <AsTag>{title}</AsTag>\r\n            {action}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Card: React.FC<any> = ({ title, subtitle, action, children, level, ...rest }) => {\r\n    return (\r\n        <StyledCard {...rest}>\r\n            {title &&\r\n                <CardHeader title={title} action={action} level={level} />\r\n            }\r\n            {subtitle &&\r\n                <CardHeader title={subtitle} level={level + 1} />\r\n            }\r\n            {children}\r\n        </StyledCard >\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import { css } from 'styled-components';\r\n\r\nexport const LIST_STYLES_1 = css`\r\n    li {\r\n        margin-left: 8px;\r\n        &:not(:first-child) {\r\n            margin-top: 4px;\r\n        }\r\n    }\r\n    h1, h2, h3, h4, h5, h6, h7 {\r\n        font-weight: bold;\r\n    }\r\n    section {\r\n        margin-left: 8px;\r\n        &:not(:first-child) {\r\n            margin-top: 24px;\r\n        }\r\n    }\r\n    ul {\r\n        &:not(:first-child) {\r\n            margin-top: 8px;\r\n            margin-left: 8px;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const LIST_STYLES_2 = css`\r\n    li {\r\n        list-style-type: disc;\r\n        margin: 8px 0 8px 16px;\r\n    }\r\n`;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { LIST_STYLES_2 } from \"./List.styles\";\r\n\r\nexport interface IListItem {\r\n    text: string;\r\n    link?: string;\r\n}\r\n\r\nexport interface IList {\r\n    title?: string;\r\n    subtitle?: string;\r\n    lists?: IList[];\r\n    items?: | IListItem[];\r\n}\r\n\r\nexport interface IListProps extends IList {\r\n    level?: number;\r\n    prefix?: string;\r\n    styles?: any;\r\n}\r\n\r\nconst Heading: React.FC<any> = ({ title, subtitle, level }) => {\r\n    const Title = `h${level}` as any;\r\n    const Subtitle = `h${level + 1}` as any;\r\n    return (\r\n        <>\r\n            {title && <Title>{title}</Title>}\r\n            {subtitle && <Subtitle>{subtitle}</Subtitle>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport const List: React.FC<IListProps> = ({ title, subtitle, items, lists, level = 1, prefix = '', styles }) => {\r\n    return (\r\n        // @ts-ignore\r\n        <section css={styles}>\r\n            <Heading title={title} subtitle={subtitle} level={level} />\r\n            <ul>\r\n                {items && items.length > 0 && (\r\n                    items.map(({ text, link }) => (\r\n                        <li key={text}>{\r\n                            link ? <Link to={`${prefix}${link}`}>{text}</Link> : text\r\n                        }</li>\r\n                    ))\r\n                )}\r\n                {lists && (\r\n                    <li>\r\n                        {lists.map(l => <List {...l} key={l.title} level={level + 1} prefix={prefix} />)}\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport const SimpleList: React.FC<{ items: (string | [string, string])[] }> = ({ items }) => {\r\n    const formattedItems: IListItem[] = items.map(item => {\r\n        if (Array.isArray(item)) {\r\n            const [text, link] = item;\r\n            return {\r\n                text,\r\n                link\r\n            }\r\n        }\r\n        return {\r\n            text: item\r\n        }\r\n    })\r\n    return (\r\n        <List items={formattedItems} styles={LIST_STYLES_2} />\r\n    );\r\n}\r\n","\r\nimport { Link } from 'gatsby';\r\nimport React, { Fragment, ReactNode } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledTable = styled.table`\r\n   \r\n`;\r\n\r\ntype TOmit = undefined | null | false;\r\n\r\nconst getIsTypeOmit = (data: any): data is TOmit => data === undefined || data === null || data === false;\r\n\r\n// Col\r\n\r\ninterface IColConfig {\r\n    isHeader?: boolean;\r\n    content: any;\r\n    colSpan?: number;\r\n    className?: string;\r\n    link?: string;\r\n}\r\n\r\ninterface IColProps extends IColConfig {\r\n    index: number;\r\n}\r\n\r\ntype TCol = string | number | IColConfig | ReactNode;\r\n\r\nconst Col: React.FC<IColProps> = ({ index, isHeader, content, colSpan, className, link }) => {\r\n    const ColTag = isHeader ? 'th' : 'td';\r\n    const WrapperTag = link ? Link : Fragment;\r\n    const wrapperProps: any = link ? { to: link } : {};\r\n\r\n    return (\r\n        <ColTag colSpan={colSpan} className={className}>\r\n            <WrapperTag {...wrapperProps}>\r\n                {content || ''}\r\n            </WrapperTag>\r\n        </ColTag>\r\n    );\r\n}\r\n\r\n// Row\r\n\r\ninterface IRowConfig {\r\n    cols: (TCol | TOmit)[];\r\n    className?: string;\r\n    isHeader?: boolean;\r\n    headerColIndicies?: number[];\r\n}\r\n\r\nconst getIsConfig = (col: TCol): col is IColConfig => typeof col === 'object' && col !== null && col.hasOwnProperty('content');\r\n\r\nconst Row: React.FC<IRowConfig> = ({ cols, isHeader, className, headerColIndicies = [] }) => {\r\n    return (\r\n        <tr className={className}>\r\n            {cols.map((col: any, i) => {\r\n                if (getIsTypeOmit(col)) return null;\r\n                const isConfig = getIsConfig(col);\r\n                const colConfig = !isConfig ? { content: col } : col\r\n                return <Col key={i} index={i} isHeader={isHeader || headerColIndicies.includes(i)} {...colConfig} />\r\n            })}\r\n        </tr>\r\n    );\r\n}\r\n\r\n// Table Section\r\n\r\ninterface ITableSectionConfig {\r\n    Tag: 'thead' | 'tfoot' | 'tbody';\r\n    rows: (IRowConfig | TOmit)[];\r\n    headerColIndicies?: number[];\r\n}\r\n\r\nconst TableSection: React.FC<ITableSectionConfig> = ({ Tag, rows, headerColIndicies }) => (\r\n    <Tag>\r\n        {rows.map((row, i) => {\r\n            if (getIsTypeOmit(row)) return null;\r\n            return (\r\n                <Row\r\n                    key={i}\r\n                    isHeader={Tag !== 'tbody'}\r\n                    headerColIndicies={headerColIndicies}\r\n                    {...row} />\r\n            );\r\n        })}\r\n    </Tag>\r\n)\r\n\r\n// Table\r\n\r\ninterface IColGroup {\r\n    span?: number;\r\n    className?: string;\r\n}\r\n\r\ninterface ITableConfig {\r\n    thead?: (IRowConfig | TOmit)[];\r\n    tfoot?: (IRowConfig | TOmit)[];\r\n    tbody: (IRowConfig | TOmit)[];\r\n    styles?: any;\r\n    caption?: string;\r\n    colGroups?: IColGroup[];\r\n    className?: string;\r\n    headerColIndicies?: number[];\r\n}\r\n\r\nexport const Table: React.FC<ITableConfig> = ({ thead, tfoot, tbody, styles, colGroups, caption, headerColIndicies, className }) => {\r\n    return (\r\n        <StyledTable css={styles} className={className}>\r\n            {colGroups && <colgroup>{colGroups.map((cg, i) => <col key={i} {...cg} />)}</colgroup>}\r\n            {caption && <caption>{caption}</caption>}\r\n            {thead && <TableSection Tag=\"thead\" rows={thead} headerColIndicies={headerColIndicies} />}\r\n            {tfoot && <TableSection Tag=\"tfoot\" rows={tfoot} headerColIndicies={headerColIndicies} />}\r\n            {tbody && <TableSection Tag=\"tbody\" rows={tbody} headerColIndicies={headerColIndicies} />}\r\n        </StyledTable>\r\n    );\r\n}\r\n"],"names":["StyledColumnManager","styled","$tablet","join","$desktop","children","tablet","desktop","React","StyledComingSoonPage","PageLayout","withConfig","tableStyles","css","props","theme","utils","border","title","subtitle","ColumnManager","Card","Table","styles","thead","cols","tbody","colSpan","content","SimpleList","items","target","href","FEEDBACK_LINK","StyledCard","surface","card","CardHeader","level","action","AsTag","className","rest","LIST_STYLES_1","LIST_STYLES_2","Heading","Title","Subtitle","List","lists","prefix","length","map","text","link","key","Link","to","l","formattedItems","item","Array","isArray","StyledTable","getIsTypeOmit","data","Col","index","isHeader","ColTag","WrapperTag","Fragment","wrapperProps","Row","headerColIndicies","col","i","isConfig","hasOwnProperty","getIsConfig","colConfig","includes","TableSection","Tag","rows","row","tfoot","colGroups","caption","cg"],"sourceRoot":""}