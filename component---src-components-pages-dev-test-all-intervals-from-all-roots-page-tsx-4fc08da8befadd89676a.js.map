{"version":3,"file":"component---src-components-pages-dev-test-all-intervals-from-all-roots-page-tsx-4fc08da8befadd89676a.js","mappings":"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","sources":["webpack://play-what/./src/components/tests/AllIntervalsFromAllRoots.tsx","webpack://play-what/./src/components/pages/dev/test/all-intervals-from-all-roots.page.tsx","webpack://play-what/./src/components/ui/Card.tsx","webpack://play-what/./src/components/ui/Table.styles.tsx","webpack://play-what/./src/components/ui/Table.tsx"],"sourcesContent":["import React from \"react\";\r\nimport styled, { css } from 'styled-components';\r\nimport IntervalSpan from \"../../core/models/Interval\";\r\nimport { ACCIDENTAL_VALUES, IPod } from \"../../core/models/Model.constants\";\r\nimport { INTERVAL_PRESETS } from \"../../core/models/Model.presets\";\r\nimport Note from \"../../core/models/Note\";\r\nimport { addPods } from \"../../core/models/Pod.static\";\r\nimport { DEGREE_PRESETS } from \"../../core/theory/Degree.constants\";\r\nimport { DIATONIC_VALUES } from \"../../core/theory/Diatonic.constants\";\r\nimport { Table } from \"../ui/Table\";\r\nimport { TABLE_STYLES_1 } from \"../ui/Table.styles\";\r\n\r\nconst FIRST_OCTAVE_INTERVALS = INTERVAL_PRESETS.filter(ivl => ivl.value[0] < 12);\r\nconst ACCIDENTALS = ACCIDENTAL_VALUES.filter(a => Math.abs(a.value) < 2);\r\n\r\nconst StyledTest = styled.div`\r\n    height: 100%;\r\n    width: 100%;\r\n    overflow: auto;\r\n\r\n    .invalid {\r\n        color: ${({ theme }) => theme.status.negative};\r\n        font-weight: bold;\r\n    }\r\n`;\r\n\r\ninterface ITestShape {\r\n    name: string;\r\n    pod: IPod;\r\n    intervals: {\r\n        name: string;\r\n        pod: IPod;\r\n        isInvalid: boolean;\r\n    }[]\r\n}\r\n\r\nconst getRoots = (): ITestShape[] => {\r\n    const roots: ITestShape[] = [];\r\n    DEGREE_PRESETS.forEach((degree) => {\r\n        const spelling = degree.id;\r\n        const d = degree.value;\r\n\r\n        const diatonicPitch = DIATONIC_VALUES[d].value[0];\r\n        ACCIDENTALS.forEach((accidental) => {\r\n            const a = accidental.symbol;\r\n            const offset = accidental.value;\r\n\r\n            const rootName = `${spelling}${a}`;\r\n            const rootPod: IPod = [diatonicPitch + offset, d];\r\n\r\n            const intervals = FIRST_OCTAVE_INTERVALS.map(ivl => {\r\n                const ivlPod = addPods(rootPod, ivl.value);\r\n                let note;\r\n                let isInvalid = false;\r\n\r\n                try {\r\n                    note = new Note(ivlPod);\r\n                }\r\n                catch (e) {\r\n                    isInvalid = true;\r\n                }\r\n\r\n                //const isInvalid = ivlName.length > 5;\r\n\r\n                return {\r\n                    name: note ? note.name as string : '?',\r\n                    pod: ivlPod,\r\n                    isInvalid\r\n                }\r\n            })\r\n\r\n            roots.push({\r\n                name: rootName,\r\n                pod: rootPod,\r\n                intervals\r\n            });\r\n        });\r\n    });\r\n    return roots;\r\n}\r\n\r\nconst HEAD = [\r\n    {\r\n        cols: [\r\n            'Root',\r\n            ...FIRST_OCTAVE_INTERVALS.map(ivl => IntervalSpan.fromValue(ivl.value).getName())\r\n        ]\r\n    }\r\n];\r\n\r\nconst BODY = getRoots().map(r => ({\r\n    cols: [\r\n        r.name,\r\n        ...r.intervals.map(ivl => ({\r\n            className: ivl.isInvalid ? 'invalid' : '',\r\n            content: ivl.name\r\n        }))\r\n    ]\r\n}))\r\n\r\nconst AllIntervalsFromAllRoots: React.FC<any> = () => {\r\n    return (\r\n        <StyledTest>\r\n            <Table\r\n                styles={TABLE_STYLES_1}\r\n                headerColIndicies={[0]}\r\n                thead={HEAD}\r\n                tbody={BODY}\r\n            />\r\n        </StyledTest>\r\n    );\r\n};\r\n\r\nexport default AllIntervalsFromAllRoots;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport PageLayout from \"../../../layout/PageLayout\";\r\nimport AllIntervalsFromAllRoots from \"../../../tests/AllIntervalsFromAllRoots\";\r\nimport Card from \"../../../ui/Card\";\r\n\r\nconst StyledTestPage = styled(PageLayout)``;\r\n\r\nconst Page: React.FC = () => {\r\n    return (\r\n        <StyledTestPage title=\"All Intervals From All Roots\" maxWidth=\"1920px\">\r\n            <Card>\r\n                <AllIntervalsFromAllRoots />\r\n            </Card>\r\n        </StyledTestPage>\r\n    );\r\n};\r\n\r\nexport default Page;\r\n","import React, { PropsWithChildren } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const StyledCard = styled.div`\r\n  background: ${(props) => props.theme.surface.card};\r\n  width: 100%;\r\n  border-radius: 16px;\r\n  padding: 16px;\r\n\r\n  .header {\r\n    margin-bottom: 16px;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nexport const CardHeader: React.FC<any> = ({\r\n  title,\r\n  level = 2,\r\n  action = null,\r\n}) => {\r\n  const AsTag: any = `h${level}`;\r\n  return (\r\n    <div className=\"header\">\r\n      <AsTag>{title}</AsTag>\r\n      {action}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport interface ICardProps extends PropsWithChildren<any> {\r\n  title?: string;\r\n  subtitle?: string;\r\n  action?: any;\r\n  level?: number;\r\n}\r\n\r\nconst Card: React.FC<ICardProps> = ({\r\n  title,\r\n  subtitle,\r\n  action,\r\n  children,\r\n  level = 1,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <StyledCard {...rest}>\r\n      {title && <CardHeader title={title} action={action} level={level} />}\r\n      {subtitle && <CardHeader title={subtitle} level={level + 1} />}\r\n      {children}\r\n    </StyledCard>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { css } from \"styled-components\";\r\n\r\nexport const TABLE_STYLES_1 = css`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  td,\r\n  th {\r\n    padding: 4px;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const FRET_POSITION_TABLE_STYLES = css`\r\n  border-collapse: collapse;\r\n  width: unset !important;\r\n  margin: auto;\r\n  td,\r\n  th {\r\n    height: 48px;\r\n    width: 48px;\r\n    text-align: center;\r\n    vertical-align: middle !important;\r\n  }\r\n  td {\r\n    border: 1px solid black;\r\n  }\r\n`;\r\n","import { Link } from \"gatsby\";\r\nimport React, { Fragment, ReactNode } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledTable = styled.table``;\r\n\r\ntype TOmit = undefined | null | false;\r\n\r\nconst getIsTypeOmit = (data: any): data is TOmit =>\r\n  data === undefined || data === null || data === false;\r\n\r\n// Col\r\n\r\nexport interface IColConfig {\r\n  isHeader?: boolean;\r\n  content: any;\r\n  colSpan?: number;\r\n  className?: string;\r\n  link?: string;\r\n}\r\n\r\ninterface IColProps extends IColConfig {\r\n  index: number;\r\n}\r\n\r\ntype TCol = string | number | IColConfig | ReactNode;\r\n\r\nconst Col: React.FC<IColProps> = ({\r\n  index,\r\n  isHeader,\r\n  content,\r\n  colSpan,\r\n  className,\r\n  link,\r\n}) => {\r\n  const ColTag = isHeader ? \"th\" : \"td\";\r\n  const WrapperTag = link ? Link : Fragment;\r\n  const wrapperProps: any = link ? { to: link } : {};\r\n\r\n  return (\r\n    <ColTag colSpan={colSpan} className={className}>\r\n      <WrapperTag {...wrapperProps}>{content || \"\"}</WrapperTag>\r\n    </ColTag>\r\n  );\r\n};\r\n\r\n// Row\r\n\r\nexport interface IRowConfig {\r\n  cols: (TCol | TOmit)[];\r\n  className?: string;\r\n  isHeader?: boolean;\r\n  headerColIndicies?: number[];\r\n}\r\n\r\nconst getIsConfig = (col: TCol): col is IColConfig =>\r\n  typeof col === \"object\" && col !== null && col.hasOwnProperty(\"content\");\r\n\r\nconst Row: React.FC<IRowConfig> = ({\r\n  cols,\r\n  isHeader,\r\n  className,\r\n  headerColIndicies = [],\r\n}) => {\r\n  return (\r\n    <tr className={className}>\r\n      {cols.map((col: any, i) => {\r\n        if (getIsTypeOmit(col)) return null;\r\n        const isConfig = getIsConfig(col);\r\n        const colConfig = !isConfig ? { content: col } : col;\r\n        return (\r\n          <Col\r\n            key={i}\r\n            index={i}\r\n            isHeader={isHeader || headerColIndicies.includes(i)}\r\n            {...colConfig}\r\n          />\r\n        );\r\n      })}\r\n    </tr>\r\n  );\r\n};\r\n\r\n// Table Section\r\n\r\ninterface ITableSectionConfig {\r\n  Tag: \"thead\" | \"tfoot\" | \"tbody\";\r\n  rows: (IRowConfig | TOmit)[];\r\n  headerColIndicies?: number[];\r\n}\r\n\r\nconst TableSection: React.FC<ITableSectionConfig> = ({\r\n  Tag,\r\n  rows,\r\n  headerColIndicies,\r\n}) => (\r\n  <Tag>\r\n    {rows.map((row, i) => {\r\n      if (getIsTypeOmit(row)) return null;\r\n      return (\r\n        <Row\r\n          key={i}\r\n          isHeader={Tag !== \"tbody\"}\r\n          headerColIndicies={headerColIndicies}\r\n          {...row}\r\n        />\r\n      );\r\n    })}\r\n  </Tag>\r\n);\r\n\r\n// Table\r\n\r\ninterface IColGroup {\r\n  span?: number;\r\n  className?: string;\r\n}\r\n\r\nexport interface ITableConfig {\r\n  thead?: (IRowConfig | TOmit)[];\r\n  tfoot?: (IRowConfig | TOmit)[];\r\n  tbody: (IRowConfig | TOmit)[];\r\n  styles?: any;\r\n  caption?: string;\r\n  colGroups?: IColGroup[];\r\n  className?: string;\r\n  headerColIndicies?: number[];\r\n}\r\n\r\nexport const Table: React.FC<ITableConfig> = ({\r\n  thead,\r\n  tfoot,\r\n  tbody,\r\n  styles,\r\n  colGroups,\r\n  caption,\r\n  headerColIndicies,\r\n  className,\r\n}) => {\r\n  return (\r\n    <StyledTable css={styles} className={className}>\r\n      {colGroups && (\r\n        <colgroup>\r\n          {colGroups.map((cg, i) => (\r\n            <col key={i} {...cg} />\r\n          ))}\r\n        </colgroup>\r\n      )}\r\n      {caption && <caption>{caption}</caption>}\r\n      {thead && (\r\n        <TableSection\r\n          Tag=\"thead\"\r\n          rows={thead}\r\n          headerColIndicies={headerColIndicies}\r\n        />\r\n      )}\r\n      {tfoot && (\r\n        <TableSection\r\n          Tag=\"tfoot\"\r\n          rows={tfoot}\r\n          headerColIndicies={headerColIndicies}\r\n        />\r\n      )}\r\n      {tbody && (\r\n        <TableSection\r\n          Tag=\"tbody\"\r\n          rows={tbody}\r\n          headerColIndicies={headerColIndicies}\r\n        />\r\n      )}\r\n    </StyledTable>\r\n  );\r\n};\r\n"],"names":["FIRST_OCTAVE_INTERVALS","INTERVAL_PRESETS","ivl","value","ACCIDENTALS","ACCIDENTAL_VALUES","a","Math","abs","StyledTest","styled","_ref","theme","status","negative","HEAD","cols","map","IntervalSpan","getName","BODY","roots","DEGREE_PRESETS","degree","spelling","id","d","diatonicPitch","DIATONIC_VALUES","forEach","accidental","symbol","offset","rootName","rootPod","intervals","ivlPod","addPods","note","isInvalid","Note","e","name","pod","push","getRoots","r","className","content","React","Table","styles","TABLE_STYLES_1","headerColIndicies","thead","tbody","StyledTestPage","PageLayout","displayName","componentId","title","maxWidth","Card","AllIntervalsFromAllRoots","StyledCard","props","surface","card","CardHeader","level","action","AsTag","_ref2","subtitle","children","rest","css","FRET_POSITION_TABLE_STYLES","StyledTable","getIsTypeOmit","data","Col","index","isHeader","colSpan","link","ColTag","WrapperTag","Link","Fragment","wrapperProps","to","Row","col","i","isConfig","hasOwnProperty","getIsConfig","colConfig","key","includes","TableSection","_ref3","Tag","rows","row","_ref4","tfoot","colGroups","caption","cg"],"sourceRoot":""}