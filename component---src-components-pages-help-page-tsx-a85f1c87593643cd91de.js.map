{"version":3,"file":"component---src-components-pages-help-page-tsx-a85f1c87593643cd91de.js","mappings":"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","sources":["webpack://play-what/./src/components/column-manager/ColumnManager.tsx","webpack://play-what/./src/components/pages/help.page.tsx","webpack://play-what/./src/components/ui/Card.tsx","webpack://play-what/./src/components/ui/List.styles.tsx","webpack://play-what/./src/components/ui/List.tsx","webpack://play-what/./src/core/routing/Routing.utils.ts"],"sourcesContent":["import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledColumnManager = styled.div`\r\n    display: grid;\r\n    gap: 16px;\r\n    grid-template-columns: 1fr;\r\n\r\n    ${({ $tablet }) => $tablet ? `\r\n        @media(min-width: 512px) {\r\n            grid-template-columns: ${$tablet.join(' ')}\r\n        }\r\n    ` : ''}\r\n\r\n    ${({ $desktop }) => $desktop ? `\r\n        @media(min-width: 1024px) {\r\n            grid-template-columns: ${$desktop.join(' ')}\r\n        }\r\n    ` : ``}\r\n   \r\n`;\r\n\r\nexport interface IColumnManagerProps {\r\n    tablet?: string[];\r\n    desktop?: string[];\r\n}\r\n\r\nconst ColumnManager: React.FC<any> = ({ children, tablet, desktop }) => {\r\n    return (\r\n        <StyledColumnManager $tablet={tablet} $desktop={desktop}>\r\n            {children}\r\n        </StyledColumnManager >\r\n    );\r\n};\r\n\r\nexport default ColumnManager;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FEEDBACK_LINK } from \"../../config/constants\";\r\nimport { ModelType } from \"../../core/models/Model.constants\";\r\nimport { getModelRoute } from \"../../core/routing/Routing.utils\";\r\nimport ColumnManager from \"../column-manager/ColumnManager\";\r\nimport PageLayout from \"../layout/PageLayout\";\r\nimport Card, { CardHeader } from \"../ui/Card\";\r\nimport { SimpleList } from \"../ui/List\";\r\n\r\nconst StyledHelpPage = styled(PageLayout)`\r\n  .q {\r\n    margin-top: 4px;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .ans {\r\n    margin-top: 2px;\r\n    font-style: italic;\r\n    color: ${(props) => props.theme.text.secondary};\r\n  }\r\n\r\n  h3 {\r\n    width: 100%;\r\n    margin-top: 64px;\r\n    padding-bottom: 8px;\r\n    border-bottom: 1px solid ${(props) => props.theme.utils.border};\r\n  }\r\n\r\n  h4 {\r\n    margin-top: 16px;\r\n    text-transform: uppercase;\r\n    color: ${(props) => props.theme.text.secondary};\r\n  }\r\n`;\r\n\r\nconst Page: React.FC<any> = (props) => {\r\n  return (\r\n    <StyledHelpPage title=\"Help\">\r\n      <ColumnManager>\r\n        <Card title=\"Website Sections\">\r\n          <p>Play What is currently comprised of 3 different domains: </p>\r\n          <CardHeader level={3} title=\"Browse\" />\r\n          <p>\r\n            The <Link to=\"/browse\">browse</Link> section is an extensive\r\n            directory of many{\" \"}\r\n            <Link to={getModelRoute(ModelType.Chord)}>chords</Link> and{\" \"}\r\n            <Link to={getModelRoute(ModelType.Scale)}>scales</Link>.\r\n            <CardHeader level={4} title=\"Landing Pages\" />\r\n            There is a landing page for each of the \"model types\"\r\n            <SimpleList\r\n              items={[\r\n                [\"Chords\", getModelRoute(ModelType.Chord)],\r\n                [\"Scales\", getModelRoute(ModelType.Scale)],\r\n              ]}\r\n            />\r\n            <p>\r\n              Each landing page contains a brief description of the musical\r\n              concept and a few subcategories. There is also a table comparing\r\n              the intervals used to define each chord or scale.\r\n            </p>\r\n            <CardHeader level={4} title=\"Template Model Pages\" />\r\n            There is a \"template model page\" for each individual chord and scale\r\n            shape. It contains information on the intervals used to define each\r\n            shape. Template pages do not have a root (key center), so they\r\n            cannot contain any information on specific notes.\r\n            <CardHeader level={4} title=\"Rooted Model Pages\" />A \"rooted model\r\n            page\" is simply a template page with a root. Since a key center is\r\n            available, rooted pages include notes, frequencies, and instrument\r\n            previews.\r\n          </p>\r\n          <CardHeader level={3} title=\"View\" />\r\n          <p>\r\n            The <Link to=\"/view\">view pages</Link> provide an interface to view\r\n            any chord or scale on an instrument.\r\n          </p>\r\n          <p>\r\n            Play What currently supports a{\" \"}\r\n            <Link to=\"/view/fretboard\">fretboard</Link> and a{\" \"}\r\n            <Link to=\"/view/keyboard\">keyboard</Link>. The fretboard paramaters\r\n            can be configured to suit a number of instruments like guitar, bass,\r\n            mandolin, etc..\r\n          </p>\r\n          <p>There are 3 tabs for viewing/editing the viewer</p>\r\n          <CardHeader level={4} title=\"Summary\" />\r\n          <p>\r\n            The summary tab provides a quick preview of the instrument, tuning,\r\n            notes, and intervals. It contains a link to the rooted model page.\r\n          </p>\r\n          <CardHeader level={4} title=\"Notes\" />\r\n          <p>\r\n            The notes tabs contains inputs for chaning the key center,\r\n            intervals, and display colors.\r\n          </p>\r\n          <CardHeader level={4} title=\"Instrument\" />\r\n          <p>\r\n            The instrument tab contains inputs for configuring the instrument,\r\n            like tuning and range.\r\n          </p>\r\n\r\n          <CardHeader level={3} title=\"Search\" />\r\n          <p>\r\n            The <Link to=\"/search\">search page</Link> provides an interface for\r\n            finding specific chords and scales by name. This page is still\r\n            experimental and unoptimized.\r\n          </p>\r\n          <p>\r\n            The search query can include the name and/or key center for any\r\n            chord or scale in the Play What library. It also understands some\r\n            other common keywords:\r\n            <SimpleList\r\n              items={[\r\n                \"Major\",\r\n                \"Minor\",\r\n                \"Triad\",\r\n                \"Suspended\",\r\n                \"Dominant\",\r\n                \"Diatonic\",\r\n                \"Diminished\",\r\n                \"Augmented\",\r\n                \"Perfect\",\r\n                \"Pentatonic\",\r\n                \"Hexatonic\",\r\n                \"Heptatonic\",\r\n                \"Octatonic\",\r\n              ]}\r\n            />\r\n          </p>\r\n        </Card>\r\n        <Card title=\"FAQ\">\r\n          <ul>\r\n            <li>\r\n              <div className=\"q\">When will the site be finished?</div>\r\n              <div className=\"ans\">\r\n                The first public beta will open on 8/5/22. The official launch\r\n                will be sometime in 2023. More information is available on the{\" \"}\r\n                <Link to=\"/coming-soon\">Coming Soon Page</Link>\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div className=\"q\">\r\n                Where can I submit feedback? Report bugs? Request features?\r\n              </div>\r\n              <div className=\"ans\">\r\n                <a target=\"_blank\" href={FEEDBACK_LINK}>\r\n                  Use this form\r\n                </a>\r\n                .\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div className=\"q\">\r\n                Where can I find more information about Play What and the\r\n                author?\r\n              </div>\r\n              <div className=\"ans\">\r\n                A good place to start might be the{\" \"}\r\n                <Link to=\"/about\">About Page</Link>.\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div className=\"q\">Is the software open source?</div>\r\n              <div className=\"ans\">\r\n                No, but it will be once all logistics and documentation concerns\r\n                have been addressed.\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div className=\"q\">Can I customize the theme?</div>\r\n              <div className=\"ans\">\r\n                <Link to=\"/dev/experimental/theme\">You can try</Link>, but it's\r\n                not officially supported.\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </Card>\r\n      </ColumnManager>\r\n    </StyledHelpPage>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledCard = styled.div`\r\n    background: ${props => props.theme.surface.card};\r\n    width: 100%;\r\n    border-radius: 16px;\r\n    padding: 16px;\r\n\r\n    .header {\r\n        margin-bottom: 16px;\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 8px;\r\n        justify-content: space-between;\r\n    }\r\n`;\r\n\r\nexport const CardHeader: React.FC<any> = ({ title, level = 2, action = null }) => {\r\n    const AsTag: any = `h${level}`;\r\n    return (\r\n        <div className=\"header\">\r\n            <AsTag>{title}</AsTag>\r\n            {action}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Card: React.FC<any> = ({ title, subtitle, action, children, level, ...rest }) => {\r\n    return (\r\n        <StyledCard {...rest}>\r\n            {title &&\r\n                <CardHeader title={title} action={action} level={level} />\r\n            }\r\n            {subtitle &&\r\n                <CardHeader title={subtitle} level={level + 1} />\r\n            }\r\n            {children}\r\n        </StyledCard >\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import { css } from 'styled-components';\r\n\r\nexport const LIST_STYLES_1 = css`\r\n    li {\r\n        margin-left: 8px;\r\n        &:not(:first-child) {\r\n            margin-top: 4px;\r\n        }\r\n    }\r\n    h1, h2, h3, h4, h5, h6, h7 {\r\n        font-weight: bold;\r\n    }\r\n    section {\r\n        margin-left: 8px;\r\n        &:not(:first-child) {\r\n            margin-top: 24px;\r\n        }\r\n    }\r\n    ul {\r\n        &:not(:first-child) {\r\n            margin-top: 8px;\r\n            margin-left: 8px;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const LIST_STYLES_2 = css`\r\n    li {\r\n        list-style-type: disc;\r\n        margin: 8px 0 8px 16px;\r\n    }\r\n`;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { LIST_STYLES_2 } from \"./List.styles\";\r\n\r\nexport interface IListItem {\r\n    text: string;\r\n    link?: string;\r\n}\r\n\r\nexport interface IList {\r\n    title?: string;\r\n    subtitle?: string;\r\n    lists?: IList[];\r\n    items?: | IListItem[];\r\n}\r\n\r\nexport interface IListProps extends IList {\r\n    level?: number;\r\n    prefix?: string;\r\n    styles?: any;\r\n}\r\n\r\nconst Heading: React.FC<any> = ({ title, subtitle, level }) => {\r\n    const Title = `h${level}` as any;\r\n    const Subtitle = `h${level + 1}` as any;\r\n    return (\r\n        <>\r\n            {title && <Title>{title}</Title>}\r\n            {subtitle && <Subtitle>{subtitle}</Subtitle>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport const List: React.FC<IListProps> = ({ title, subtitle, items, lists, level = 1, prefix = '', styles }) => {\r\n    return (\r\n        // @ts-ignore\r\n        <section css={styles}>\r\n            <Heading title={title} subtitle={subtitle} level={level} />\r\n            <ul>\r\n                {items && items.length > 0 && (\r\n                    items.map(({ text, link }) => (\r\n                        <li key={text}>{\r\n                            link ? <Link to={`${prefix}${link}`}>{text}</Link> : text\r\n                        }</li>\r\n                    ))\r\n                )}\r\n                {lists && (\r\n                    <li>\r\n                        {lists.map(l => <List {...l} key={l.title} level={level + 1} prefix={prefix} />)}\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport const SimpleList: React.FC<{ items: (string | [string, string])[] }> = ({ items }) => {\r\n    const formattedItems: IListItem[] = items.map(item => {\r\n        if (Array.isArray(item)) {\r\n            const [text, link] = item;\r\n            return {\r\n                text,\r\n                link\r\n            }\r\n        }\r\n        return {\r\n            text: item\r\n        }\r\n    })\r\n    return (\r\n        <List items={formattedItems} styles={LIST_STYLES_2} />\r\n    );\r\n}\r\n","import { ModelId, ModelType, NoteId } from \"../models/Model.constants\";\r\n\r\nexport const getModelRoute = (\r\n  modelType: ModelType,\r\n  modelId?: ModelId,\r\n  rootId?: NoteId\r\n) => {\r\n  const modelSuffix = modelId ? `/${modelId}` : \"\";\r\n  const rootSuffix = rootId ? `/root/${rootId}` : \"\";\r\n\r\n  return `/browse/${modelType}${modelSuffix}${rootSuffix}/`;\r\n};\r\n"],"names":["StyledColumnManager","styled","$tablet","join","$desktop","children","tablet","desktop","React","StyledHelpPage","PageLayout","withConfig","props","theme","text","secondary","utils","border","title","ColumnManager","Card","CardHeader","level","Link","to","getModelRoute","ModelType","SimpleList","items","className","target","href","FEEDBACK_LINK","StyledCard","surface","card","action","AsTag","subtitle","rest","LIST_STYLES_1","css","LIST_STYLES_2","Heading","Title","Subtitle","List","lists","prefix","styles","length","map","link","key","l","formattedItems","item","Array","isArray","modelType","modelId","rootId"],"sourceRoot":""}