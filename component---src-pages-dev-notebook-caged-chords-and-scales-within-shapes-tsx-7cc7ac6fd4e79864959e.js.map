{"version":3,"file":"component---src-pages-dev-notebook-caged-chords-and-scales-within-shapes-tsx-7cc7ac6fd4e79864959e.js","mappings":"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W,GACpByE,EAASzE,EAAAA,GAAAA,GAAW,MAG5B,CAACsE,EAASW,WAAYV,EAClBD,EAASW,WACT,kBACA,CACIR,EAASzE,EAAAA,GAAAA,EAAU,GACnByE,EAASzE,EAAAA,GAAAA,EAAU,GACnByE,EAASzE,EAAAA,GAAAA,EAAU,GACnByE,EAASzE,EAAAA,GAAAA,EAAU,GACnByE,EAASzE,EAAAA,GAAAA,EAAU,GACnByE,EAASzE,EAAAA,GAAAA,EAAU,MAG3B,CAACsE,EAASY,cAAeX,EACrBD,EAASY,cACT,wBACA,CACIT,EAASzE,EAAAA,GAAAA,EAAU,GACnByE,EAASzE,EAAAA,GAAAA,EAAU,GACnByE,EAASzE,EAAAA,GAAAA,EAAU,GACnByE,EAASzE,EAAAA,GAAAA,EAAU,GACnByE,EAASzE,EAAAA,GAAAA,EAAU,GACnByE,EAASzE,EAAAA,GAAAA,EAAU,GACnByE,EAASzE,EAAAA,GAAAA,EAAU,MAG3B,CAACsE,EAASa,aAAcZ,EACpBD,EAASa,aACT,gBACA,CACIV,EAASzE,EAAAA,GAAAA,EAAU,GACnByE,EAASzE,EAAAA,GAAAA,EAAU,GACnByE,EAASzE,EAAAA,GAAAA,EAAU,GACnByE,EAASzE,EAAAA,GAAAA,EAAU,MAG3B,CAACsE,EAASc,MAAOb,EACbD,EAASc,MACT,aACA,CACIX,EAASzE,EAAAA,GAAAA,EAAU,GACnByE,EAASzE,EAAAA,GAAAA,EAAU,GACnByE,EAASzE,EAAAA,GAAAA,EAAU,GACnByE,EAASzE,EAAAA,GAAAA,EAAU,GACnByE,EAASzE,EAAAA,GAAAA,EAAU,GACnByE,EAASzE,EAAAA,GAAAA,EAAU,MAG3B,CAACsE,EAASe,OAAQd,EACdD,EAASe,OACT,SACA,CACIZ,EAASzE,EAAAA,GAAAA,EAAU,GACnByE,EAASzE,EAAAA,GAAAA,EAAU,GACnByE,EAASzE,EAAAA,GAAAA,EAAU,GACnByE,EAASzE,EAAAA,GAAAA,EAAU,GACnByE,EAASzE,EAAAA,GAAAA,EAAU,GACnByE,EAASzE,EAAAA,GAAAA,EAAU,MAgB3B,CAACsE,EAASgB,OAAQf,EACdD,EAASgB,OACT,SACA,CACIb,EAASzE,EAAAA,GAAAA,EAAU,GACnByE,EAASzE,EAAAA,GAAAA,EAAU,GACnByE,EAASzE,EAAAA,GAAAA,EAAU,GACnByE,EAASzE,EAAAA,GAAAA,EAAU,MAG3B,CAACsE,EAASiB,MAAOhB,EACbD,EAASiB,MACT,SACA,CACId,EAASzE,EAAAA,GAAAA,EAAU,GACnByE,EAASzE,EAAAA,GAAAA,EAAU,GACnByE,EAASzE,EAAAA,GAAAA,EAAU,GACnByE,EAASzE,EAAAA,GAAAA,GAAW,GACpByE,EAASzE,EAAAA,GAAAA,EAAU,GACnByE,EAASzE,EAAAA,GAAAA,EAAU,MAG3B,CAACsE,EAASkB,MAAOjB,EACbD,EAASkB,MACT,SACA,CACIf,EAASzE,EAAAA,GAAAA,GAAW,GACpByE,EAASzE,EAAAA,GAAAA,EAAU,GACnByE,EAASzE,EAAAA,GAAAA,GAAW,GACpByE,EAASzE,EAAAA,GAAAA,EAAU,GACnByE,EAASzE,EAAAA,GAAAA,GAAW,GACpByE,EAASzE,EAAAA,GAAAA,EAAU,MAG3B,CAACsE,EAASmB,MAAOlB,EACbD,EAASmB,MACT,SACA,CACIhB,EAASzE,EAAAA,GAAAA,EAAU,GACnByE,EAASzE,EAAAA,GAAAA,EAAU,GACnByE,EAASzE,EAAAA,GAAAA,EAAU,GACnByE,EAASzE,EAAAA,GAAAA,EAAU,GACnByE,EAASzE,EAAAA,GAAAA,EAAU,GACnByE,EAASzE,EAAAA,GAAAA,EAAU,MAG3B,CAACsE,EAASoB,MAAOnB,EACbD,EAASoB,MACT,SACA,CACIjB,EAASzE,EAAAA,GAAAA,EAAU,GACnByE,EAASzE,EAAAA,GAAAA,EAAU,GACnByE,EAASzE,EAAAA,GAAAA,GAAW,GACpByE,EAASzE,EAAAA,GAAAA,EAAU,GACnByE,EAASzE,EAAAA,GAAAA,EAAU,GACnByE,EAASzE,EAAAA,GAAAA,EAAU,MAG3B,CAACsE,EAASqB,MAAOpB,EACbD,EAASqB,MACT,SACA,CACIlB,EAASzE,EAAAA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","sources":["webpack://play-what/./src/components/inputs/DropdownInput.tsx","webpack://play-what/./src/components/ui/Card.tsx","webpack://play-what/./src/components/ui/InputRow.tsx","webpack://play-what/./src/components/pages/dev/notebook/caged/chords-and-scales-within-shapes.page.tsx","webpack://play-what/./src/pages/dev/notebook/caged/chords-and-scales-within-shapes.tsx","webpack://play-what/./src/viewers/fretboard/Fretboard.styles.tsx","webpack://play-what/./src/viewers/fretboard/FretLabel.tsx","webpack://play-what/./src/viewers/fretboard/Fretboard.tsx","webpack://play-what/./src/viewers/fretboard/Fretboard.tuning.ts","webpack://play-what/./src/viewers/fretboard/Fretboard.utils.ts","webpack://play-what/./src/viewers/fretboard/Fretboard.voicing.ts"],"sourcesContent":["import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nconst StyledDropdownInput = styled.select`\r\n\tfont-size: 110%;\r\n    min-width: 128px;\r\n\r\n\tpadding: 4px 8px;\r\n\r\n    cursor: pointer;\r\n    border-radius: 4px;\r\n\r\n\toption {\r\n\t\tcursor: pointer;\r\n\t}\r\n`;\r\n\r\ninterface IDropdownInputProps {\r\n\tvalue: any;\r\n\tsetValue: Function;\r\n\toptions: any[];\r\n\tidProperty?: string;\r\n\tdisplayProperty?: string;\r\n}\r\n\r\nconst DropdownInput: React.FC<IDropdownInputProps> = props => {\r\n\tconst { value, setValue, options, idProperty, displayProperty } = props;\r\n\r\n\treturn (\r\n\t\t<StyledDropdownInput\r\n\t\t\tclassName='dropdown-input'\r\n\t\t\tonChange={e => setValue(options[e.target.selectedIndex], e.target.selectedIndex)}\r\n\t\t\tvalue={value ? value[idProperty || 'id'] : ''}\r\n\t\t>\r\n\t\t\t{(options || []).map((v, i) => (\r\n\t\t\t\t<option key={i} value={v[idProperty || 'id']}>{displayProperty ? v[displayProperty] : v.name}</option>\r\n\t\t\t))}\r\n\t\t</StyledDropdownInput>\r\n\t);\r\n}\r\n\r\nexport default DropdownInput;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledCard = styled.div`\r\n    background: ${props => props.theme.surface.card};\r\n    width: 100%;\r\n    border-radius: 16px;\r\n    padding: 16px;\r\n\r\n    .header {\r\n        margin-bottom: 16px;\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 8px;\r\n        justify-content: space-between;\r\n    }\r\n`;\r\n\r\nexport const CardHeader: React.FC<any> = ({ title, level = 2, action = null }) => {\r\n    const AsTag: any = `h${level}`;\r\n    return (\r\n        <div className=\"header\">\r\n            <AsTag>{title}</AsTag>\r\n            {action}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Card: React.FC<any> = ({ title, subtitle, action, children, level, ...rest }) => {\r\n    return (\r\n        <StyledCard {...rest}>\r\n            {title &&\r\n                <CardHeader title={title} action={action} level={level} />\r\n            }\r\n            {subtitle &&\r\n                <CardHeader title={subtitle} level={level + 1} />\r\n            }\r\n            {children}\r\n        </StyledCard >\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledInputRow = styled.div`\r\n    display: flex;\r\n    align-items: flex-start;\r\n    flex-direction: column;\r\n    width: 100%;\r\n\r\n    ${props => props.$y ? '' : `\r\n        @media(min-width: 512px) {\r\n            align-items: center;\r\n            flex-direction: row;\r\n            justify-content: space-between;\r\n            //margin-bottom: 8px;\r\n        }\r\n    `}\r\n\r\n    > label {\r\n        color: ${({ theme }) => theme.dark3};\r\n        font-weight: bold;\r\n        margin: 8px;\r\n        white-space: nowrap;\r\n    }\r\n`;\r\n\r\nconst InputRow = ({ label, children, y = false, ...rest }) => {\r\n    return (\r\n        <StyledInputRow $y={y} {...rest}>\r\n            <label>{label}</label>\r\n            <div>\r\n                {children}\r\n            </div>\r\n        </StyledInputRow>\r\n    );\r\n}\r\n\r\nexport default InputRow;\r\n","import React, { useState } from \"react\";\r\nimport styled from 'styled-components';\r\nimport Chord from \"../../../../../core/models/Chord\";\r\nimport { ChordId, NoteId, ScaleId } from \"../../../../../core/models/Model.constants\";\r\nimport { NOTE_PRESETS, NOTE_PRESET_MAP } from \"../../../../../core/models/Model.presets\";\r\nimport Note from \"../../../../../core/models/Note\";\r\nimport Scale from \"../../../../../core/models/Scale\";\r\nimport Fretboard from \"../../../../../viewers/fretboard/Fretboard\";\r\nimport { VoicingId, VOICING_PRESET_MAP } from \"../../../../../viewers/fretboard/Fretboard.voicing\";\r\nimport DropdownInput from \"../../../../inputs/DropdownInput\";\r\nimport PageLayout from \"../../../../layout/PageLayout\";\r\nimport Card, { StyledCard } from \"../../../../ui/Card\";\r\nimport InputRow, { StyledInputRow } from \"../../../../ui/InputRow\";\r\n\r\nconst StyledCAGEDPage = styled(PageLayout)`\r\n    \r\n    .scroll {\r\n        overflow-x: auto;\r\n    }\r\n\r\n    ${StyledCard}, ${StyledInputRow} {\r\n        margin-top: 16px;\r\n        table {\r\n            td {\r\n                width: 256px;\r\n                padding: 0 4px;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const Page: React.FC<any> = () => {\r\n    const [rootPreset, setRootPreset] = useState(NOTE_PRESET_MAP.get(NoteId.A));\r\n\r\n    const root = new Note(rootPreset.value);\r\n    const scale = new Scale(ScaleId.Ionian, { root });\r\n\r\n    const diatonicItems = [\r\n        {\r\n            model: Scale,\r\n            modelId: ScaleId.Ionian,\r\n            rootId: scale.notes[0].modelId,\r\n            voicingId: VoicingId.Scale_DoubleOctave_EShape_2\r\n        },\r\n        {\r\n            model: Scale,\r\n            modelId: ScaleId.Dorian,\r\n            rootId: scale.notes[1].modelId,\r\n            voicingId: VoicingId.Scale_DoubleOctave_DShape_1\r\n        },\r\n        {\r\n            model: Scale,\r\n            modelId: ScaleId.Phrygian,\r\n            rootId: scale.notes[2].modelId,\r\n            voicingId: VoicingId.Scale_DoubleOctave_CShape_1\r\n        },\r\n        {\r\n            model: Scale,\r\n            modelId: ScaleId.Lydian,\r\n            rootId: scale.notes[3].modelId,\r\n            voicingId: VoicingId.Scale_DoubleOctave_CShape_2\r\n        },\r\n        {\r\n            model: Scale,\r\n            modelId: ScaleId.Mixolydian,\r\n            rootId: scale.notes[4].modelId,\r\n            voicingId: VoicingId.Scale_DoubleOctave_AShape_1\r\n        },\r\n        {\r\n            model: Scale,\r\n            modelId: ScaleId.Aeolian,\r\n            rootId: scale.notes[5].modelId,\r\n            voicingId: VoicingId.Scale_DoubleOctave_GShape_1\r\n        },\r\n        {\r\n            model: Scale,\r\n            modelId: ScaleId.Locrian,\r\n            rootId: scale.notes[6].modelId,\r\n            voicingId: VoicingId.Scale_DoubleOctave_EShape_1\r\n        }\r\n    ];\r\n\r\n    const romanNumeralItems = [\r\n        {\r\n            model: Chord,\r\n            modelId: ChordId.Maj7,\r\n            rootId: scale.notes[0].modelId,\r\n            voicingId: VoicingId.Scale_DoubleOctave_EShape_2\r\n        },\r\n        {\r\n            model: Chord,\r\n            modelId: ChordId.Min7,\r\n            rootId: scale.notes[1].modelId,\r\n            voicingId: VoicingId.Scale_DoubleOctave_DShape_1\r\n        },\r\n        {\r\n            model: Chord,\r\n            modelId: ChordId.Min7,\r\n            rootId: scale.notes[2].modelId,\r\n            voicingId: VoicingId.Scale_DoubleOctave_CShape_1\r\n        },\r\n        {\r\n            model: Chord,\r\n            modelId: ChordId.Maj7,\r\n            rootId: scale.notes[3].modelId,\r\n            voicingId: VoicingId.Scale_DoubleOctave_CShape_2\r\n        },\r\n        {\r\n            model: Chord,\r\n            modelId: ChordId.Dom7,\r\n            rootId: scale.notes[4].modelId,\r\n            voicingId: VoicingId.Scale_DoubleOctave_AShape_1\r\n        },\r\n        {\r\n            model: Chord,\r\n            modelId: ChordId.Min7,\r\n            rootId: scale.notes[5].modelId,\r\n            voicingId: VoicingId.Scale_DoubleOctave_GShape_1\r\n        },\r\n        {\r\n            model: Chord,\r\n            modelId: ChordId.HalfDim7,\r\n            rootId: scale.notes[6].modelId,\r\n            voicingId: VoicingId.Scale_DoubleOctave_EShape_1\r\n        }\r\n    ];\r\n\r\n    const pentatonicItems = [\r\n        {\r\n            model: Scale,\r\n            modelId: ScaleId.MajorPentatonic,\r\n            rootId: scale.notes[0].modelId,\r\n            voicingId: VoicingId.Scale_DoubleOctave_EShape_2\r\n        },\r\n        {\r\n            model: Scale,\r\n            modelId: ScaleId.Egyptian,\r\n            rootId: scale.notes[1].modelId,\r\n            voicingId: VoicingId.Scale_DoubleOctave_DShape_1\r\n        },\r\n        {\r\n            model: Scale,\r\n            modelId: ScaleId.ManGong,\r\n            rootId: scale.notes[2].modelId,\r\n            voicingId: VoicingId.Scale_DoubleOctave_CShape_1\r\n        },\r\n        {\r\n            model: Scale,\r\n            modelId: ScaleId.Ritusen,\r\n            rootId: scale.notes[4].modelId,\r\n            voicingId: VoicingId.Scale_DoubleOctave_AShape_1\r\n        },\r\n        {\r\n            model: Scale,\r\n            modelId: ScaleId.MinorPentatonic,\r\n            rootId: scale.notes[5].modelId,\r\n            voicingId: VoicingId.Scale_DoubleOctave_CShape_1\r\n        }\r\n    ];\r\n\r\n    const display = [\r\n        [pentatonicItems[4], pentatonicItems[0], pentatonicItems[1], pentatonicItems[2], pentatonicItems[3],],\r\n        [diatonicItems[5], diatonicItems[0], diatonicItems[1], diatonicItems[2], diatonicItems[4],],\r\n        [romanNumeralItems[5], romanNumeralItems[0], romanNumeralItems[1], romanNumeralItems[2], romanNumeralItems[4],]\r\n    ]\r\n\r\n    const FRET_RANGE = [\r\n        [1, 5],\r\n        [4, 7 + 1],\r\n        [6, 10],\r\n        [9, 12 + 1],\r\n        [11, 14 + 1]\r\n    ]\r\n\r\n    return (\r\n        <StyledCAGEDPage title=\"CAGED\">\r\n            <InputRow label=\"Root\">\r\n                <DropdownInput options={NOTE_PRESETS} value={rootPreset} setValue={p => {\r\n                    setRootPreset(p);\r\n                }} />\r\n            </InputRow>\r\n            <Card title=\"Pentatonic Modes | Diatonic Modes | 7th Chords\" >\r\n                <div className=\"scroll\">\r\n                    <table>\r\n                        <thead>\r\n                        </thead>\r\n                        <tbody>\r\n                            {display.map((item, i) => {\r\n                                return (\r\n                                    <tr key={i}>\r\n                                        {item.map((item, j) => {\r\n                                            const { model, modelId, rootId, voicingId } = item as any;\r\n                                            const instance = new model(modelId, { root: Note.fromId(rootId) });\r\n                                            return (\r\n                                                <td key={modelId}>\r\n                                                    <h3>{modelId}</h3>\r\n                                                    <Fretboard\r\n                                                        model={instance}\r\n                                                        voicing={VOICING_PRESET_MAP.get(voicingId)}\r\n                                                        fretRange={FRET_RANGE[j]}\r\n                                                        showFretNumbers={false}\r\n                                                        showFretDots={false}\r\n                                                    />\r\n                                                </td>\r\n                                            );\r\n                                        })}\r\n                                    </tr>\r\n                                );\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </Card>\r\n        </StyledCAGEDPage>\r\n    );\r\n};\r\n","import { Page } from \"../../../../components/pages/dev/notebook/caged/chords-and-scales-within-shapes.page\";\r\n\r\nexport default Page;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledFretboard = styled.div`\r\n    display: inline-grid;\r\n\twidth: 100%;\r\n\tbackground-image: radial-gradient(ellipse, #E8DBB8 0%, #D0B27C 100%);\r\n\tfont-size: 90%;\r\n\tmargin: 16px 0;\r\n\r\n    .fret {\r\n        display: inline-flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        position: relative;\r\n        border-right: 2px solid darkgrey;\r\n    }\r\n\r\n    .fret.open {\r\n        border-right: 3px solid grey;\r\n        background-color: #D0B27C;;\r\n    }\r\n\r\n    /* Used to maintain aspect ratio */\r\n\r\n    .fret::before {\r\n        content: \"\";\r\n        display: block;\r\n        height: 0;\r\n        width: 0;\r\n        margin-top: calc(1/2 * 100%);\r\n    }\r\n\r\n    /* Fret String */\r\n\r\n    .fret-string {\r\n        border-top: 1px solid grey;\r\n        width: 100%;\r\n    }\r\n\r\n    /* Fret Numbers */\r\n\r\n    .fret-number {\r\n        position: absolute;\r\n        bottom: 100%;\r\n    }\r\n\r\n    /* Fret Dots */\r\n\r\n    .fret-dots {\r\n        position: absolute;\r\n        top: 95%;\r\n        font-size: 16px;\r\n        white-space: nowrap;\r\n    }\r\n\r\n    .fret-number, .fret-dots {\r\n        color: #888;\r\n    }\r\n`;\r\n\r\nexport default StyledFretboard;\r\n","\r\nimport * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { IFretProps } from \"./Fretboard.utils\";\r\n\r\nconst StyledFretLabel = styled.div`\r\n\tposition: absolute;\r\n\theight: 60%;\r\n\taspect-ratio: 1;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tborder-radius: 100%;\r\n\tbackground-color: ${({ $bgColor }) => $bgColor ? $bgColor : 'transparent'};\r\n\tcolor: ${({ $fgColor }) => $fgColor ? $fgColor : ''};\r\n\r\n\t/*cursor: pointer;\r\n\t&:hover {\r\n\t\theight: 80%;\r\n\t}*/\r\n`;\r\n\r\n\r\nconst FretLabel: React.FC<IFretProps> = props => {\r\n\r\n\tconst bgColor = props.colorMapFn(props);\r\n\r\n\tlet fgColor = 'white';\r\n\r\n\treturn (\r\n\t\t<StyledFretLabel $bgColor={bgColor} $fgColor={fgColor} onClick={null} className=\"fret-label\">\r\n\t\t\t{null}\r\n\t\t</StyledFretLabel>\r\n\t);\r\n};\r\n\r\nexport default FretLabel;\r\n","import * as React from \"react\";\r\nimport StyledFretboard from \"./Fretboard.styles\";\r\nimport { DEFAULT_FRETBOARD_PROPS, getDotsForFret, getFretRatios, IFretboardProps, IFretProps } from \"./Fretboard.utils\";\r\nimport FretLabel from \"./FretLabel\";\r\n\r\nexport const Fret: React.FC<IFretProps> = props => {\r\n\r\n\tconst { tuning, stringIndex, fretIndex, showFretNumbers, showFretDots } = props;\r\n\r\n\tconst classes = ['fret'];\r\n\tif (fretIndex === 0)\r\n\t\tclasses.push('open');\r\n\r\n\tconst isLowString = stringIndex === tuning.length - 1;\r\n\tconst isHighString = stringIndex === 0;\r\n\r\n\treturn (\r\n\t\t<div className={classes.join(' ')}>\r\n\t\t\t<div className=\"fret-number\">\r\n\t\t\t\t{showFretNumbers && isHighString && fretIndex > 0 && fretIndex}\r\n\t\t\t</div>\r\n\t\t\t<div className='fret-string' />\r\n\t\t\t<FretLabel {...props} />\r\n\t\t\t<div className=\"fret-dots\">\r\n\t\t\t\t{showFretDots && isLowString && fretIndex > 0 && getDotsForFret(fretIndex)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst getFrets = (props: IFretboardProps) => {\r\n\tconst { fretRange, tuning } = props;\r\n\tconst [lo, hi] = fretRange;\r\n\r\n\tconst allFrets = [];\r\n\tfor (let s = 0; s < tuning.length; s++) {\r\n\t\tfor (let f = lo; f <= hi; f++) {\r\n\t\t\tallFrets.push(\r\n\t\t\t\t<Fret\r\n\t\t\t\t\tkey={`s${s}-f${f}`}\r\n\t\t\t\t\tstringIndex={s}\r\n\t\t\t\t\tfretIndex={f}\r\n\t\t\t\t\ttuning={tuning}\r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\treturn allFrets;\r\n};\r\n\r\nconst Fretboard: React.FC<IFretboardProps> = (userProps) => {\r\n\tconst props = { ...DEFAULT_FRETBOARD_PROPS, ...userProps };\r\n\r\n\tconst [lo, hi] = props.fretRange;\r\n\tconst numFrets = hi - lo + 1;\r\n\tconst numStrings = props.tuning.length;\r\n\tconst gridTemplateColumns = getFretRatios(numFrets).map(n => n + 'fr').join(' ');\r\n\tconst gridTemplateRows = `repeat(${numStrings}, 1fr)`;\r\n\tconst fretboardStyles = {\r\n\t\tgridTemplateColumns,\r\n\t\tgridTemplateRows\r\n\t};\r\n\r\n\treturn (\r\n\t\t<StyledFretboard className='fretboard' style={fretboardStyles}>\r\n\t\t\t{getFrets(props)}\r\n\t\t</StyledFretboard>\r\n\t);\r\n};\r\n\r\nexport default Fretboard;\r\n","import ArrayUtils from \"../../core/general/Array.utils\";\r\nimport Note from '../../core/models/Note';\r\nimport { NoteId } from './../../core/models/Model.constants';\r\n\r\nexport enum TuningId {\r\n    Standard = 'standard',\r\n    StandardSeven = 'standard-seven',\r\n    StandardBass = 'standard-bass',\r\n    Flat = 'flat',\r\n    DoubleFlat = 'double-flat',\r\n    DropD = 'drop-d',\r\n    DADGAD = 'dadgad',\r\n    Banjo = 'banjo',\r\n    Violin = 'violin',\r\n    OpenA = 'open-a',\r\n    OpenB = 'open-b',\r\n    OpenC = 'open-c',\r\n    OpenD = 'open-d',\r\n    OpenE = 'open-e',\r\n    OpenF = 'open-f',\r\n    OpenG = 'open-g',\r\n}\r\n\r\nexport interface ITuning {\r\n    id: TuningId;\r\n    name: string;\r\n    value: number[]\r\n}\r\n\r\nconst formatPreset = (id: TuningId, name: string, value: number[]): ITuning => ({\r\n    id,\r\n    name,\r\n    value\r\n});\r\n\r\nconst getPitch = (noteId: NoteId, octave: number): number => Note.getNote(noteId, octave).pod[0];\r\n\r\nexport const TUNING_PRESET_MAP = new Map<TuningId, ITuning>([\r\n    [TuningId.Standard, formatPreset(\r\n        TuningId.Standard,\r\n        'Standard Guitar',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.E, 3)\r\n        ]\r\n    )],\r\n    [TuningId.Flat, formatPreset(\r\n        TuningId.Flat,\r\n        'Flat Gtr',\r\n        [\r\n            getPitch(NoteId.Eb, 5),\r\n            getPitch(NoteId.Bb, 4),\r\n            getPitch(NoteId.Gb, 4),\r\n            getPitch(NoteId.Db, 4),\r\n            getPitch(NoteId.Ab, 3),\r\n            getPitch(NoteId.Eb, 3)\r\n        ]\r\n    )],\r\n    [TuningId.DoubleFlat, formatPreset(\r\n        TuningId.DoubleFlat,\r\n        'Double Flat Gtr',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.F, 4),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    [TuningId.StandardSeven, formatPreset(\r\n        TuningId.StandardSeven,\r\n        'Standard 7-String Gtr',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.E, 3),\r\n            getPitch(NoteId.B, 3)\r\n        ]\r\n    )],\r\n    [TuningId.StandardBass, formatPreset(\r\n        TuningId.StandardBass,\r\n        'Standard Bass',\r\n        [\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.D, 3),\r\n            getPitch(NoteId.A, 2),\r\n            getPitch(NoteId.E, 2)\r\n        ]\r\n    )],\r\n    [TuningId.DropD, formatPreset(\r\n        TuningId.DropD,\r\n        'Drop D Gtr',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    [TuningId.DADGAD, formatPreset(\r\n        TuningId.DADGAD,\r\n        'DADGAD',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    // Unconfirmed\r\n    /*[TuningId.Banjo, formatPreset(\r\n        TuningId.Banjo,\r\n        'Banjo',\r\n        [\r\n            getPitch(NoteId.G, 5),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],*/\r\n    // Unconfirmed\r\n    [TuningId.Violin, formatPreset(\r\n        TuningId.Violin,\r\n        'Violin',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.G, 4)\r\n        ]\r\n    )],\r\n    [TuningId.OpenA, formatPreset(\r\n        TuningId.OpenA,\r\n        'Open A',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.E, 4),\r\n            getPitch(NoteId.Cs, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.E, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenB, formatPreset(\r\n        TuningId.OpenB,\r\n        'Open B',\r\n        [\r\n            getPitch(NoteId.Ds, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.Fs, 4),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.Fs, 3),\r\n            getPitch(NoteId.B, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenC, formatPreset(\r\n        TuningId.OpenC,\r\n        'Open C',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.C, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenD, formatPreset(\r\n        TuningId.OpenD,\r\n        'Open D',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.Fs, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenE, formatPreset(\r\n        TuningId.OpenE,\r\n        'Open E',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.Gs, 4),\r\n            getPitch(NoteId.E, 4),\r\n            getPitch(NoteId.B, 3),\r\n            getPitch(NoteId.E, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenF, formatPreset(\r\n        TuningId.OpenF,\r\n        'Open F',\r\n        [\r\n            getPitch(NoteId.F, 5),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.F, 4),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.F, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenG, formatPreset(\r\n        TuningId.OpenG,\r\n        'Open G',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )]\r\n]);\r\n\r\nexport const FRETBOARD_TUNING_VALUES = ArrayUtils.mapToArray(TUNING_PRESET_MAP);\r\n","import Chord from '../../core/models/Chord';\r\nimport IntervalSpan from '../../core/models/Interval';\r\nimport { IModelConfig } from '../../core/models/Model.constants';\r\nimport Note from '../../core/models/Note';\r\nimport Scale from '../../core/models/Scale';\r\nimport { ITuning, TuningId, TUNING_PRESET_MAP } from './Fretboard.tuning';\r\nimport { IVoicing } from './Fretboard.voicing';\r\n\r\nexport interface IFretLabelProps {\r\n\tnote?: Note;\r\n\tcolor?: string;\r\n\tfreq?: number;\r\n}\r\n\r\nexport interface IFretboardProps {\r\n\tfretRange?: [number, number];\r\n\tshowFretDots?: boolean;\r\n\tshowFretNumbers?: boolean;\r\n\tcolorMapFn?: (fretProps: IFretProps) => string | undefined;\r\n\tvoicing?: IVoicing,\r\n\ttuning?: number[]; // ITuning,\r\n\tmodel?: Chord | Scale;\r\n}\r\n\r\nexport interface IFretProps extends IFretboardProps {\r\n\tstringIndex: number;\r\n\tfretIndex: number;\r\n}\r\n\r\nexport const DOTTED_FRET_INDICES = [true, false, false, true, false, true, false, true, false, true, false, false];\r\n\r\nexport const FRET_SIZE_RATIO = Math.pow((1 / 2), (1 / 12));\r\n\r\nexport const isIntervalInVoicing = (interval: IntervalSpan, voicing: IVoicing, stringIndex: number) => {\r\n\tif (!voicing || !voicing.value) return true;\r\n\tconst v = voicing.value[stringIndex];\r\n\tconst d = interval.getDegree();\r\n\tif (Array.isArray(v)) {\r\n\t\treturn v.some(n => doesVoicingValueMatch(d, n));\r\n\t}\r\n\telse if (typeof v === 'number') {\r\n\t\treturn doesVoicingValueMatch(d, v);\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nexport const getFretColor = (props: IFretProps): string | undefined => {\r\n\tconst { stringIndex, fretIndex, tuning, model, voicing } = props;\r\n\tconst noteIndex = tuning[stringIndex] + fretIndex;\r\n\tconst [interval, note] = model.tryGetPodPairAtPitch(noteIndex);\r\n\r\n\tif (!note) return;\r\n\r\n\tif (voicing && !isIntervalInVoicing(interval, voicing, stringIndex)) {\r\n\t\treturn `#00000033`\r\n\t}\r\n\r\n\treturn interval.getColor();\r\n}\r\n\r\nexport const DEFAULT_FRETBOARD_PROPS: IFretboardProps = {\r\n\tfretRange: [1, 12],\r\n\ttuning: TUNING_PRESET_MAP.get(TuningId.Standard).value,\r\n\tshowFretDots: true,\r\n\tshowFretNumbers: true,\r\n\tcolorMapFn: getFretColor\r\n};\r\n\r\nexport const getFretRatios = (numFrets: number): number[] => {\r\n\tconst ratios = [];\r\n\tfor (let i = 1; i <= numFrets; i++) {\r\n\t\tratios.push((i <= 1) ? 1 : ratios[i - 2] * FRET_SIZE_RATIO);\r\n\t}\r\n\treturn ratios;\r\n};\r\n\r\nexport const getDotsForFret = (fretNumber: number): string => {\r\n\tconst mod = fretNumber % 12;\r\n\tif (mod === 0)\r\n\t\treturn '• •';\r\n\telse if (DOTTED_FRET_INDICES[mod])\r\n\t\treturn '•';\r\n\treturn '';\r\n};\r\n\r\nconst doesVoicingValueMatch = (d: number, v: number) => {\r\n\treturn d + 1 === v;\r\n}\r\n","import ArrayUtils from \"../../core/general/Array.utils\";\r\n\r\nexport enum VoicingId {\r\n    None = 'None',\r\n    Chord_Triad_CShape_1 = 'Chord_Triad_CShape_1',\r\n    Chord_Triad_AShape_1 = 'Chord_Triad_AShape_1',\r\n    Chord_Triad_GShape_1 = 'Chord_Triad_GShape_1',\r\n    Chord_Triad_EShape_1 = 'Chord_Triad_EShape_1',\r\n    Chord_Triad_DShape_1 = 'Chord_Triad_DShape_1',\r\n    Chord_Sixth_CShape_1 = 'Chord_Sixth_CShape_1',\r\n    Chord_Sixth_AShape_1 = 'Chord_Sixth_AShape_1',\r\n    Chord_Sixth_GShape_1 = 'Chord_Sixth_GShape_1',\r\n    Chord_Sixth_EShape_1 = 'Chord_Sixth_EShape_1',\r\n    Chord_Sixth_DShape_1 = 'Chord_Sixth_DShape_1',\r\n    Chord_Seventh_CShape_1 = 'Chord_Seventh_CShape_1',\r\n    Chord_Seventh_AShape_1 = 'Chord_Seventh_AShape_1',\r\n    Chord_Seventh_GShape_1 = 'Chord_Seventh_GShape_1',\r\n    Chord_Seventh_EShape_1 = 'Chord_Seventh_EShape_1',\r\n    Chord_Seventh_DShape_1 = 'Chord_Seventh_DShape_1',\r\n    Chord_Shell_E_37 = 'Chord_Shell_E_37',\r\n    Chord_Shell_E_73 = 'Chord_Shell_E_73',\r\n    Chord_Shell_A_37 = 'Chord_Shell_A_37',\r\n    Chord_Shell_A_73 = 'Chord_Shell_A_73',\r\n    Chord_Shell_D_37 = 'Chord_Shell_D_37',\r\n    Chord_Shell_D_73 = 'Chord_Shell_D_73',\r\n    Scale_DoubleOctave_CShape_1 = 'Scale_DoubleOctave_CShape_1',\r\n    Scale_DoubleOctave_CShape_2 = 'Scale_DoubleOctave_CShape_2',\r\n    Scale_DoubleOctave_AShape_1 = 'Scale_DoubleOctave_AShape_1',\r\n    Scale_DoubleOctave_GShape_1 = 'Scale_DoubleOctave_GShape_1',\r\n    Scale_DoubleOctave_EShape_1 = 'Scale_DoubleOctave_EShape_1',\r\n    Scale_DoubleOctave_EShape_2 = 'Scale_DoubleOctave_EShape_2',\r\n    Scale_DoubleOctave_DShape_1 = 'Scale_DoubleOctave_DShape_1',\r\n}\r\n\r\nexport interface IVoicing {\r\n    id: VoicingId;\r\n    name: string;\r\n    value: (number | number[])[]\r\n}\r\n\r\nconst formatPreset = (id: VoicingId, name: string, value: (number | number[])[]): IVoicing => ({\r\n    id,\r\n    name,\r\n    value\r\n});\r\n\r\nexport const VOICING_PRESET_MAP = new Map<VoicingId, IVoicing>([\r\n    // Triads\r\n    [VoicingId.Chord_Triad_CShape_1, formatPreset(\r\n        VoicingId.Chord_Triad_CShape_1,\r\n        'C Shape Triad',\r\n        [3, 1, 5, 3, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Triad_AShape_1, formatPreset(\r\n        VoicingId.Chord_Triad_AShape_1,\r\n        'A Shape Triad',\r\n        [5, 3, 1, 5, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Triad_GShape_1, formatPreset(\r\n        VoicingId.Chord_Triad_GShape_1,\r\n        'G Shape Triad',\r\n        [1, 5, 1, 5, 3, 1]\r\n    )],\r\n    [VoicingId.Chord_Triad_EShape_1, formatPreset(\r\n        VoicingId.Chord_Triad_EShape_1,\r\n        'E Shape Triad',\r\n        [1, 5, 3, 1, 5, 1]\r\n    )],\r\n    [VoicingId.Chord_Triad_DShape_1, formatPreset(\r\n        VoicingId.Chord_Triad_DShape_1,\r\n        'D Shape Triad',\r\n        [3, 1, 5, 1, null, null]\r\n    )],\r\n    // Sixths\r\n    [VoicingId.Chord_Sixth_CShape_1, formatPreset(\r\n        VoicingId.Chord_Sixth_CShape_1,\r\n        'C Shape 6th Chord',\r\n        [3, 6, 5, 3, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Sixth_AShape_1, formatPreset(\r\n        VoicingId.Chord_Sixth_AShape_1,\r\n        'A Shape 6th Chord',\r\n        [5, 3, 6, 5, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Sixth_GShape_1, formatPreset(\r\n        VoicingId.Chord_Sixth_GShape_1,\r\n        'G Shape 6th Chord',\r\n        [6, 5, 1, 5, 3, 1]\r\n    )],\r\n    [VoicingId.Chord_Sixth_EShape_1, formatPreset(\r\n        VoicingId.Chord_Sixth_EShape_1,\r\n        'E Shape 6th Chord',\r\n        [1, 5, 3, 6, 5, 1]\r\n    )],\r\n    [VoicingId.Chord_Sixth_DShape_1, formatPreset(\r\n        VoicingId.Chord_Sixth_DShape_1,\r\n        'D Shape 6th Chord',\r\n        [3, 6, 5, 1, null, null]\r\n    )],\r\n    // Sevenths\r\n    [VoicingId.Chord_Seventh_CShape_1, formatPreset(\r\n        VoicingId.Chord_Seventh_CShape_1,\r\n        'C Shape 7th Chord',\r\n        [3, 7, 5, 3, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Seventh_AShape_1, formatPreset(\r\n        VoicingId.Chord_Seventh_AShape_1,\r\n        'A Shape 7th Chord',\r\n        [5, 3, 7, 5, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Seventh_GShape_1, formatPreset(\r\n        VoicingId.Chord_Seventh_GShape_1,\r\n        'G Shape 7th Chord',\r\n        [7, 5, 1, 5, 3, 1]\r\n    )],\r\n    [VoicingId.Chord_Seventh_EShape_1, formatPreset(\r\n        VoicingId.Chord_Seventh_EShape_1,\r\n        'E Shape 7th Chord',\r\n        [1, 5, 3, 7, 5, 1]\r\n    )],\r\n    [VoicingId.Chord_Seventh_DShape_1, formatPreset(\r\n        VoicingId.Chord_Seventh_DShape_1,\r\n        'D Shape 7th Chord',\r\n        [3, 7, 5, 1, null, null]\r\n    )],\r\n    // Shells\r\n    [VoicingId.Chord_Shell_E_37, formatPreset(\r\n        VoicingId.Chord_Shell_E_37,\r\n        'Shell E 3-7',\r\n        [null, null, null, 7, 3, 1]\r\n    )],\r\n    [VoicingId.Chord_Shell_E_73, formatPreset(\r\n        VoicingId.Chord_Shell_E_73,\r\n        'Shell E 7-3',\r\n        [null, null, 3, 7, null, 1]\r\n    )],\r\n    [VoicingId.Chord_Shell_A_37, formatPreset(\r\n        VoicingId.Chord_Shell_A_37,\r\n        'Shell A 3-7',\r\n        [null, null, 7, 3, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Shell_A_73, formatPreset(\r\n        VoicingId.Chord_Shell_A_73,\r\n        'Shell A 7-3',\r\n        [null, 3, 7, null, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Shell_D_37, formatPreset(\r\n        VoicingId.Chord_Shell_D_37,\r\n        'Shell D 3-7',\r\n        [null, 7, 3, 1, null, null]\r\n    )],\r\n    [VoicingId.Chord_Shell_D_73, formatPreset(\r\n        VoicingId.Chord_Shell_D_73,\r\n        'Shell D 7-3',\r\n        [3, 7, null, 1, null, null]\r\n    )],\r\n    // CAGED Scales\r\n    [VoicingId.Scale_DoubleOctave_EShape_1, formatPreset(\r\n        VoicingId.Scale_DoubleOctave_EShape_1,\r\n        'E Shape Scale (Locrian)',\r\n        [[1, 2, 3], [6, 7], [3, 4, 5], [7, 1, 2], [4, 5, 6], [1, 2, 3]]\r\n    )],\r\n    [VoicingId.Scale_DoubleOctave_EShape_2, formatPreset(\r\n        VoicingId.Scale_DoubleOctave_EShape_2,\r\n        'E Shape Scale (Ionian)',\r\n        [[7, 1, 2], [5, 6], [2, 3, 4], [6, 7, 1], [3, 4, 5], [1, 2]]\r\n    )],\r\n    [VoicingId.Scale_DoubleOctave_DShape_1, formatPreset(\r\n        VoicingId.Scale_DoubleOctave_DShape_1,\r\n        'D Shape Scale (Dorian)',\r\n        [[1, 2, 3], [5, 6, 7], [2, 3, 4], [6, 7, 1], [4, 5], [1, 2, 3]]\r\n    )],\r\n    [VoicingId.Scale_DoubleOctave_CShape_1, formatPreset(\r\n        VoicingId.Scale_DoubleOctave_CShape_1,\r\n        'C Shape Scale (Phrygian)',\r\n        [[1, 2, 3], [5, 6, 7], [3, 4], [7, 1, 2], [4, 5, 6], [1, 2, 3]]\r\n    )],\r\n    [VoicingId.Scale_DoubleOctave_CShape_2, formatPreset(\r\n        VoicingId.Scale_DoubleOctave_CShape_2,\r\n        'C Shape Scale (Lydian)',\r\n        [[7, 1, 2], [4, 5, 6], [2, 3], [6, 7, 1], [3, 4, 5], [1, 2]]\r\n    )],\r\n    [VoicingId.Scale_DoubleOctave_AShape_1, formatPreset(\r\n        VoicingId.Scale_DoubleOctave_AShape_1,\r\n        'A Shape Scale (Mixolydian)',\r\n        [[1, 2], [5, 6, 7], [2, 3, 4], [6, 7, 1], [3, 4, 5], [1, 2]]\r\n    )],\r\n    [VoicingId.Scale_DoubleOctave_GShape_1, formatPreset(\r\n        VoicingId.Scale_DoubleOctave_GShape_1,\r\n        'G Shape Scale (Aeolian)',\r\n        [[1, 2, 3], [5, 6, 7], [2, 3, 4], [7, 1], [4, 5, 6], [1, 2, 3]]\r\n    )]\r\n])\r\n\r\nexport const VOICING_PRESETS = ArrayUtils.mapToArray(VOICING_PRESET_MAP);\r\n"],"names":["StyledDropdownInput","styled","props","value","setValue","options","idProperty","displayProperty","React","className","onChange","e","target","selectedIndex","map","v","i","key","name","StyledCard","theme","surface","card","CardHeader","title","level","action","AsTag","subtitle","children","rest","StyledInputRow","$y","dark3","label","y","StyledCAGEDPage","PageLayout","withConfig","useState","NOTE_PRESET_MAP","NoteId","rootPreset","setRootPreset","root","Note","scale","Scale","ScaleId","diatonicItems","model","modelId","rootId","notes","voicingId","VoicingId","romanNumeralItems","Chord","ChordId","pentatonicItems","display","FRET_RANGE","InputRow","DropdownInput","NOTE_PRESETS","p","Card","item","j","instance","Fretboard","voicing","VOICING_PRESET_MAP","fretRange","showFretNumbers","showFretDots","StyledFretLabel","$bgColor","$fgColor","bgColor","colorMapFn","onClick","Fret","tuning","stringIndex","fretIndex","classes","push","isLowString","length","isHighString","join","FretLabel","getDotsForFret","userProps","DEFAULT_FRETBOARD_PROPS","lo","numFrets","numStrings","fretboardStyles","gridTemplateColumns","getFretRatios","n","gridTemplateRows","StyledFretboard","style","hi","allFrets","s","f","getFrets","TuningId","formatPreset","id","getPitch","noteId","octave","pod","TUNING_PRESET_MAP","Map","Standard","Flat","DoubleFlat","StandardSeven","StandardBass","DropD","DADGAD","Violin","OpenA","OpenB","OpenC","OpenD","OpenE","OpenF","OpenG","FRETBOARD_TUNING_VALUES","ArrayUtils","DOTTED_FRET_INDICES","FRET_SIZE_RATIO","Math","pow","isIntervalInVoicing","interval","d","getDegree","Array","isArray","some","doesVoicingValueMatch","noteIndex","tryGetPodPairAtPitch","getColor","ratios","fretNumber","mod","Chord_Triad_CShape_1","Chord_Triad_AShape_1","Chord_Triad_GShape_1","Chord_Triad_EShape_1","Chord_Triad_DShape_1","Chord_Sixth_CShape_1","Chord_Sixth_AShape_1","Chord_Sixth_GShape_1","Chord_Sixth_EShape_1","Chord_Sixth_DShape_1","Chord_Seventh_CShape_1","Chord_Seventh_AShape_1","Chord_Seventh_GShape_1","Chord_Seventh_EShape_1","Chord_Seventh_DShape_1","Chord_Shell_E_37","Chord_Shell_E_73","Chord_Shell_A_37","Chord_Shell_A_73","Chord_Shell_D_37","Chord_Shell_D_73","Scale_DoubleOctave_EShape_1","Scale_DoubleOctave_EShape_2","Scale_DoubleOctave_DShape_1","Scale_DoubleOctave_CShape_1","Scale_DoubleOctave_CShape_2","Scale_DoubleOctave_AShape_1","Scale_DoubleOctave_GShape_1","VOICING_PRESETS"],"sourceRoot":""}