{"version":3,"file":"component---src-components-pages-browse-index-page-tsx-a38b87ac30aec60d0bc1.js","mappings":"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","sources":["webpack://play-what/./src/components/column-manager/ColumnManager.tsx","webpack://play-what/./src/components/pages/browse/index.page.tsx","webpack://play-what/./src/components/ui/Card.tsx","webpack://play-what/./src/components/ui/List.styles.tsx","webpack://play-what/./src/components/ui/List.tsx","webpack://play-what/./src/core/routing/Routing.utils.ts"],"sourcesContent":["import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledColumnManager = styled.div`\r\n    display: grid;\r\n    gap: 16px;\r\n    grid-template-columns: 1fr;\r\n\r\n    ${({ $tablet }) => $tablet ? `\r\n        @media(min-width: 512px) {\r\n            grid-template-columns: ${$tablet.join(' ')}\r\n        }\r\n    ` : ''}\r\n\r\n    ${({ $desktop }) => $desktop ? `\r\n        @media(min-width: 1024px) {\r\n            grid-template-columns: ${$desktop.join(' ')}\r\n        }\r\n    ` : ``}\r\n   \r\n`;\r\n\r\nexport interface IColumnManagerProps {\r\n    tablet?: string[];\r\n    desktop?: string[];\r\n}\r\n\r\nconst ColumnManager: React.FC<any> = ({ children, tablet, desktop }) => {\r\n    return (\r\n        <StyledColumnManager $tablet={tablet} $desktop={desktop}>\r\n            {children}\r\n        </StyledColumnManager >\r\n    );\r\n};\r\n\r\nexport default ColumnManager;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useRootId } from \"../../../contexts/PagePropsContext\";\r\nimport {\r\n  ChordId,\r\n  ModelType,\r\n  NoteId,\r\n  ScaleId,\r\n} from \"../../../core/models/Model.constants\";\r\nimport { getModelRoute } from \"../../../core/routing/Routing.utils\";\r\nimport ColumnManager from \"../../column-manager/ColumnManager\";\r\nimport PageLayout from \"../../layout/PageLayout\";\r\nimport Card from \"../../ui/Card\";\r\nimport Icon from \"../../ui/Icon\";\r\nimport { SimpleList } from \"../../ui/List\";\r\n\r\nconst StyledBrowsePage = styled(PageLayout)`\r\n  a.all {\r\n    display: block;\r\n    font-size: 140%;\r\n    text-align: right;\r\n    margin-top: 32px;\r\n  }\r\n`;\r\n\r\nconst Page: React.FC<any> = (props) => {\r\n  const rootId = useRootId();\r\n\r\n  return (\r\n    <StyledBrowsePage title=\"Browse\">\r\n      <ColumnManager desktop={[\"1fr\", \"1fr\"]}>\r\n        <Card title=\"Chords\">\r\n          <SimpleList\r\n            items={[\r\n              [\r\n                \"Major Triad\",\r\n                getModelRoute(ModelType.Chord, ChordId.MajTriad, rootId),\r\n              ],\r\n              [\r\n                \"Minor Triad\",\r\n                getModelRoute(ModelType.Chord, ChordId.MinTriad, rootId),\r\n              ],\r\n              [\r\n                \"Major 7th\",\r\n                getModelRoute(ModelType.Chord, ChordId.Maj7, rootId),\r\n              ],\r\n              [\r\n                \"Minor 7th\",\r\n                getModelRoute(ModelType.Chord, ChordId.Min7, rootId),\r\n              ],\r\n              [\r\n                \"Dominant 7th\",\r\n                getModelRoute(ModelType.Chord, ChordId.Dom7, rootId),\r\n              ],\r\n              [\r\n                \"Half-Diminished 7th\",\r\n                getModelRoute(ModelType.Chord, ChordId.HalfDim7, rootId),\r\n              ],\r\n            ]}\r\n          />\r\n          <Link to={getModelRoute(ModelType.Chord)} className=\"all\">\r\n            See All Chords <Icon iconId=\"next\" size={12} />\r\n          </Link>\r\n        </Card>\r\n        <Card title=\"Scales\">\r\n          <SimpleList\r\n            items={[\r\n              [\r\n                \"Major (Ionian)\",\r\n                getModelRoute(ModelType.Scale, ScaleId.Ionian, rootId),\r\n              ],\r\n              [\r\n                \"Natural Minor (Aeolian)\",\r\n                getModelRoute(ModelType.Scale, ScaleId.Aeolian, rootId),\r\n              ],\r\n              [\r\n                \"Melodic Minor\",\r\n                getModelRoute(ModelType.Scale, ScaleId.MelodicMinor, rootId),\r\n              ],\r\n              [\r\n                \"Harmonic Minor\",\r\n                getModelRoute(ModelType.Scale, ScaleId.HarmonicMinor, rootId),\r\n              ],\r\n              [\r\n                \"Major Pentatonic\",\r\n                getModelRoute(ModelType.Scale, ScaleId.MajorPentatonic, rootId),\r\n              ],\r\n              [\r\n                \"Minor Pentatonic\",\r\n                getModelRoute(ModelType.Scale, ScaleId.MinorPentatonic, rootId),\r\n              ],\r\n            ]}\r\n          />\r\n          <Link to={getModelRoute(ModelType.Scale)} className=\"all\">\r\n            See All Scales <Icon iconId=\"next\" size={12} />\r\n          </Link>\r\n        </Card>\r\n      </ColumnManager>\r\n    </StyledBrowsePage>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledCard = styled.div`\r\n    background: ${props => props.theme.surface.card};\r\n    width: 100%;\r\n    border-radius: 16px;\r\n    padding: 16px;\r\n\r\n    .header {\r\n        margin-bottom: 16px;\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 8px;\r\n        justify-content: space-between;\r\n    }\r\n`;\r\n\r\nexport const CardHeader: React.FC<any> = ({ title, level = 2, action = null }) => {\r\n    const AsTag: any = `h${level}`;\r\n    return (\r\n        <div className=\"header\">\r\n            <AsTag>{title}</AsTag>\r\n            {action}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Card: React.FC<any> = ({ title, subtitle, action, children, level, ...rest }) => {\r\n    return (\r\n        <StyledCard {...rest}>\r\n            {title &&\r\n                <CardHeader title={title} action={action} level={level} />\r\n            }\r\n            {subtitle &&\r\n                <CardHeader title={subtitle} level={level + 1} />\r\n            }\r\n            {children}\r\n        </StyledCard >\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import { css } from 'styled-components';\r\n\r\nexport const LIST_STYLES_1 = css`\r\n    li {\r\n        margin-left: 8px;\r\n        &:not(:first-child) {\r\n            margin-top: 4px;\r\n        }\r\n    }\r\n    h1, h2, h3, h4, h5, h6, h7 {\r\n        font-weight: bold;\r\n    }\r\n    section {\r\n        margin-left: 8px;\r\n        &:not(:first-child) {\r\n            margin-top: 24px;\r\n        }\r\n    }\r\n    ul {\r\n        &:not(:first-child) {\r\n            margin-top: 8px;\r\n            margin-left: 8px;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const LIST_STYLES_2 = css`\r\n    li {\r\n        list-style-type: disc;\r\n        margin: 8px 0 8px 16px;\r\n    }\r\n`;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { LIST_STYLES_2 } from \"./List.styles\";\r\n\r\nexport interface IListItem {\r\n    text: string;\r\n    link?: string;\r\n}\r\n\r\nexport interface IList {\r\n    title?: string;\r\n    subtitle?: string;\r\n    lists?: IList[];\r\n    items?: | IListItem[];\r\n}\r\n\r\nexport interface IListProps extends IList {\r\n    level?: number;\r\n    prefix?: string;\r\n    styles?: any;\r\n}\r\n\r\nconst Heading: React.FC<any> = ({ title, subtitle, level }) => {\r\n    const Title = `h${level}` as any;\r\n    const Subtitle = `h${level + 1}` as any;\r\n    return (\r\n        <>\r\n            {title && <Title>{title}</Title>}\r\n            {subtitle && <Subtitle>{subtitle}</Subtitle>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport const List: React.FC<IListProps> = ({ title, subtitle, items, lists, level = 1, prefix = '', styles }) => {\r\n    return (\r\n        // @ts-ignore\r\n        <section css={styles}>\r\n            <Heading title={title} subtitle={subtitle} level={level} />\r\n            <ul>\r\n                {items && items.length > 0 && (\r\n                    items.map(({ text, link }) => (\r\n                        <li key={text}>{\r\n                            link ? <Link to={`${prefix}${link}`}>{text}</Link> : text\r\n                        }</li>\r\n                    ))\r\n                )}\r\n                {lists && (\r\n                    <li>\r\n                        {lists.map(l => <List {...l} key={l.title} level={level + 1} prefix={prefix} />)}\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport const SimpleList: React.FC<{ items: (string | [string, string])[] }> = ({ items }) => {\r\n    const formattedItems: IListItem[] = items.map(item => {\r\n        if (Array.isArray(item)) {\r\n            const [text, link] = item;\r\n            return {\r\n                text,\r\n                link\r\n            }\r\n        }\r\n        return {\r\n            text: item\r\n        }\r\n    })\r\n    return (\r\n        <List items={formattedItems} styles={LIST_STYLES_2} />\r\n    );\r\n}\r\n","import { ModelId, ModelType, NoteId } from \"../models/Model.constants\";\r\n\r\nexport const getModelRoute = (\r\n  modelType: ModelType,\r\n  modelId?: ModelId,\r\n  rootId?: NoteId\r\n) => {\r\n  const modelSuffix = modelId ? `/${modelId}` : \"\";\r\n  const rootSuffix = rootId ? `/root/${rootId}` : \"\";\r\n\r\n  return `/browse/${modelType}${modelSuffix}${rootSuffix}/`;\r\n};\r\n"],"names":["StyledColumnManager","styled","$tablet","join","$desktop","children","tablet","desktop","React","StyledBrowsePage","PageLayout","withConfig","props","rootId","useRootId","title","ColumnManager","Card","SimpleList","items","getModelRoute","ModelType","ChordId","Link","to","className","Icon","iconId","size","ScaleId","StyledCard","theme","surface","card","CardHeader","level","action","AsTag","subtitle","rest","LIST_STYLES_1","css","LIST_STYLES_2","Heading","Title","Subtitle","List","lists","prefix","styles","length","map","text","link","key","l","formattedItems","item","Array","isArray","modelType","modelId"],"sourceRoot":""}