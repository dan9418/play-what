{"version":3,"file":"component---src-pages-dev-practice-caged-tsx-85643707089e37ef25f9.js","mappings":"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","sources":["webpack://play-what/./src/components/layout/PageBody.tsx","webpack://play-what/./src/components/pages/dev/CAGEDPage.tsx","webpack://play-what/./src/pages/dev/practice/caged.tsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const StyledPageBody = styled.div`\r\n\twidth: 100%;\r\n\t//max-width: 1920px;\r\n\tmax-width: 1024px;\r\n\tmin-height: calc(100vh - 96px);\r\n    \r\n\tmargin: auto;\r\n\tpadding: 16px;\r\n`\r\n","import React, { useState } from \"react\";\r\nimport styled from 'styled-components';\r\nimport Chord from \"../../../core/models/Chord\";\r\nimport { ChordId, NoteId, ScaleId } from \"../../../core/models/Model.constants\";\r\nimport { NOTE_PRESETS, NOTE_PRESET_MAP } from \"../../../core/models/Model.presets\";\r\nimport Note from \"../../../core/models/Note\";\r\nimport Scale from \"../../../core/models/Scale\";\r\nimport Fretboard from \"../../../viewers/fretboard/Fretboard\";\r\nimport { VoicingId, VOICING_PRESET_MAP } from \"../../../viewers/fretboard/Fretboard.voicing\";\r\nimport DropdownInput from \"../../inputs/DropdownInput\";\r\nimport { StyledPageBody } from \"../../layout/PageBody\";\r\nimport PageTitle from \"../../layout/PageTitle\";\r\nimport Card, { StyledCard } from \"../../ui/Card\";\r\nimport InputRow, { StyledInputRow } from \"../../ui/InputRow\";\r\n\r\nconst StyledCAGEDPage = styled(StyledPageBody)`\r\n\twidth: 100%;\r\n    max-width: 100%;\r\n    margin: auto;\r\n    \r\n    ${StyledCard}, ${StyledInputRow} {\r\n        margin-top: 16px;\r\n        table {\r\n            width: 100%;\r\n\r\n            td {\r\n                width: 33%;\r\n                padding: 0 2px;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst CAGEDPage: React.FC<any> = () => {\r\n    const [rootPreset, setRootPreset] = useState(NOTE_PRESET_MAP.get(NoteId.Fs));\r\n\r\n    const root = new Note(rootPreset.value);\r\n    const scale = new Scale(ScaleId.Ionian, { root });\r\n\r\n    const diatonicItems = [\r\n        {\r\n            model: Scale,\r\n            modelId: ScaleId.Ionian,\r\n            rootId: scale.notes[0].modelId,\r\n            voicingId: VoicingId.Scale_DoubleOctave_EShape_2\r\n        },\r\n        {\r\n            model: Scale,\r\n            modelId: ScaleId.Dorian,\r\n            rootId: scale.notes[1].modelId,\r\n            voicingId: VoicingId.Scale_DoubleOctave_DShape_1\r\n        },\r\n        {\r\n            model: Scale,\r\n            modelId: ScaleId.Phrygian,\r\n            rootId: scale.notes[2].modelId,\r\n            voicingId: VoicingId.Scale_DoubleOctave_CShape_1\r\n        },\r\n        {\r\n            model: Scale,\r\n            modelId: ScaleId.Lydian,\r\n            rootId: scale.notes[3].modelId,\r\n            voicingId: VoicingId.Scale_DoubleOctave_CShape_2\r\n        },\r\n        {\r\n            model: Scale,\r\n            modelId: ScaleId.Mixolydian,\r\n            rootId: scale.notes[4].modelId,\r\n            voicingId: VoicingId.Scale_DoubleOctave_AShape_1\r\n        },\r\n        {\r\n            model: Scale,\r\n            modelId: ScaleId.Aeolian,\r\n            rootId: scale.notes[5].modelId,\r\n            voicingId: VoicingId.Scale_DoubleOctave_GShape_1\r\n        },\r\n        {\r\n            model: Scale,\r\n            modelId: ScaleId.Locrian,\r\n            rootId: scale.notes[6].modelId,\r\n            voicingId: VoicingId.Scale_DoubleOctave_EShape_1\r\n        }\r\n    ];\r\n\r\n    const romanNumeralItems = [\r\n        {\r\n            model: Chord,\r\n            modelId: ChordId.Maj7,\r\n            rootId: scale.notes[0].modelId,\r\n            voicingId: VoicingId.Scale_DoubleOctave_EShape_2\r\n        },\r\n        {\r\n            model: Chord,\r\n            modelId: ChordId.Min7,\r\n            rootId: scale.notes[1].modelId,\r\n            voicingId: VoicingId.Scale_DoubleOctave_DShape_1\r\n        },\r\n        {\r\n            model: Chord,\r\n            modelId: ChordId.Min7,\r\n            rootId: scale.notes[2].modelId,\r\n            voicingId: VoicingId.Scale_DoubleOctave_CShape_1\r\n        },\r\n        {\r\n            model: Chord,\r\n            modelId: ChordId.Maj7,\r\n            rootId: scale.notes[3].modelId,\r\n            voicingId: VoicingId.Scale_DoubleOctave_CShape_2\r\n        },\r\n        {\r\n            model: Chord,\r\n            modelId: ChordId.Dom7,\r\n            rootId: scale.notes[4].modelId,\r\n            voicingId: VoicingId.Scale_DoubleOctave_AShape_1\r\n        },\r\n        {\r\n            model: Chord,\r\n            modelId: ChordId.Min7,\r\n            rootId: scale.notes[5].modelId,\r\n            voicingId: VoicingId.Scale_DoubleOctave_GShape_1\r\n        },\r\n        {\r\n            model: Chord,\r\n            modelId: ChordId.HalfDim7,\r\n            rootId: scale.notes[6].modelId,\r\n            voicingId: VoicingId.Scale_DoubleOctave_EShape_1\r\n        }\r\n    ];\r\n\r\n    const pentatonicItems = [\r\n        {\r\n            model: Scale,\r\n            modelId: ScaleId.MajorPentatonic,\r\n            rootId: scale.notes[0].modelId,\r\n            voicingId: VoicingId.Scale_DoubleOctave_EShape_2\r\n        },\r\n        {\r\n            model: Scale,\r\n            modelId: ScaleId.Egyptian,\r\n            rootId: scale.notes[1].modelId,\r\n            voicingId: VoicingId.Scale_DoubleOctave_DShape_1\r\n        },\r\n        {\r\n            model: Scale,\r\n            modelId: ScaleId.ManGong,\r\n            rootId: scale.notes[2].modelId,\r\n            voicingId: VoicingId.Scale_DoubleOctave_CShape_1\r\n        },\r\n        {\r\n            model: Scale,\r\n            modelId: ScaleId.Ritusen,\r\n            rootId: scale.notes[4].modelId,\r\n            voicingId: VoicingId.Scale_DoubleOctave_AShape_1\r\n        },\r\n        {\r\n            model: Scale,\r\n            modelId: ScaleId.MinorPentatonic,\r\n            rootId: scale.notes[5].modelId,\r\n            voicingId: VoicingId.Scale_DoubleOctave_CShape_1\r\n        }\r\n    ];\r\n\r\n    const display = [\r\n        [pentatonicItems[0], diatonicItems[0], romanNumeralItems[0]],\r\n        [pentatonicItems[1], diatonicItems[1], romanNumeralItems[1]],\r\n        [pentatonicItems[2], diatonicItems[2], romanNumeralItems[2]],\r\n        [pentatonicItems[3], diatonicItems[4], romanNumeralItems[4]],\r\n        [pentatonicItems[4], diatonicItems[5], romanNumeralItems[5]],\r\n    ]\r\n\r\n    return (\r\n        <StyledCAGEDPage>\r\n            <PageTitle title=\"CAGED\" />\r\n            <InputRow label=\"Root\">\r\n                <DropdownInput options={NOTE_PRESETS} value={rootPreset} setValue={p => {\r\n                    setRootPreset(p);\r\n                }} />\r\n            </InputRow>\r\n            <Card title=\"Pentatonic Modes | Diatonic Modes | 7th Chords\" >\r\n                <table>\r\n                    <thead>\r\n                    </thead>\r\n                    <tbody>\r\n                        {display.map((item, i) => {\r\n                            return (\r\n                                <tr key={i}>\r\n                                    {item.map(item => {\r\n                                        const { model, modelId, rootId, voicingId } = item as any;\r\n                                        const instance = new model(modelId, { root: Note.fromId(rootId) });\r\n                                        return (\r\n                                            <td key={modelId}>\r\n                                                <h3>{modelId}</h3>\r\n                                                <Fretboard\r\n                                                    model={instance}\r\n                                                    voicing={VOICING_PRESET_MAP.get(voicingId)}\r\n                                                    fretRange={[1, 14]}\r\n                                                />\r\n                                            </td>\r\n                                        );\r\n                                    })}\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </Card>\r\n        </StyledCAGEDPage>\r\n    );\r\n};\r\n\r\nexport default CAGEDPage;\r\n","import CAGEDPage from \"../../../components/pages/dev/CAGEDPage\";\r\n\r\nexport default CAGEDPage;\r\n"],"names":["StyledPageBody","styled","StyledCAGEDPage","withConfig","StyledCard","StyledInputRow","useState","NOTE_PRESET_MAP","NoteId","rootPreset","setRootPreset","root","Note","value","scale","Scale","ScaleId","diatonicItems","model","modelId","rootId","notes","voicingId","VoicingId","romanNumeralItems","Chord","ChordId","pentatonicItems","display","React","PageTitle","title","InputRow","label","DropdownInput","options","NOTE_PRESETS","setValue","p","Card","map","item","i","key","instance","Fretboard","voicing","VOICING_PRESET_MAP","fretRange"],"sourceRoot":""}