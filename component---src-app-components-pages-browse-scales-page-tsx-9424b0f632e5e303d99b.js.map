{"version":3,"file":"component---src-app-components-pages-browse-scales-page-tsx-9424b0f632e5e303d99b.js","mappings":"2MAaA,MAAMA,GAAuBC,EAAAA,EAAAA,SAAOC,EAAAA,IAAK,0FAAZD,CAAY,uBAoBzC,MAduDE,IAKhD,IALiD,YACtDC,EAAW,KACXC,EAAI,WACJC,KACGC,GACJ,EACC,OACEC,EAAAA,cAACR,EAAyBO,EACvBH,GAAeI,EAAAA,cAAAA,IAAAA,KAAIJ,GACpBI,EAAAA,cAACC,EAAAA,EAAe,CAACH,WAAYA,EAAYD,KAAMA,IAC1B,ECtB3B,MAAMK,GAAuBT,EAAAA,EAAAA,SAAOU,EAAAA,GAAW,2FAAlBV,CAAkB,gDAiD/C,MA/BuDE,IAMhD,IANiD,MACtDS,EAAK,SACLC,EAAQ,MACRC,EAAK,WACLR,EAAU,MACVS,GACD,EACC,OACEP,EAAAA,cAACE,EAAoB,CAACE,MAAOA,EAAOC,SAAUA,GAC5CL,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,IAAAA,CAAGQ,UAAU,SAASF,IAExBN,EAAAA,cAACS,EAAAA,EAAa,KACZT,EAAAA,cAACS,EAAAA,EAAa,KACXF,EAAMG,KAAKC,IACV,MAAM,MAAEP,EAAK,YAAER,EAAW,KAAEC,GAASc,EACrC,OACEX,EAAAA,cAACY,EAAc,CACbd,WAAYA,EACZM,MAAOA,EACPR,YAAaA,EACbC,KAAMA,GACN,MAKW,C,yEC5C3B,MAAMgB,EAA+B,CACnC,CACET,MAAO,iBACPR,YAAa,uVAObC,KAAMiB,EAAAA,GAAAA,QAAsBC,GAAUA,EAAMC,KAAKC,SAASC,EAAAA,GAAAA,aAE5D,CACEd,MAAO,uBACPR,YAAa,2XAQbC,KAAMiB,EAAAA,GAAAA,QAAsBC,GAC1BA,EAAMC,KAAKC,SAASC,EAAAA,GAAAA,iBAGxB,CACEd,MAAO,sBACPR,YAAa,2RAMbC,KAAMiB,EAAAA,GAAAA,QAAsBC,GAAUA,EAAMC,KAAKC,SAASC,EAAAA,GAAAA,gBAE5D,CACEd,MAAO,mBACPR,YAAa,kOAKbC,KAAMiB,EAAAA,GAAAA,QAAsBC,GAAUA,EAAMC,KAAKC,SAASC,EAAAA,GAAAA,eAE5D,CACEd,MAAO,eACPR,YAAa,gEACbC,KAAMiB,EAAAA,GAAAA,QAAsBC,GAAUA,EAAMC,KAAKC,SAASC,EAAAA,GAAAA,UAE5D,CACEd,MAAO,eACPR,YAAa,wEACbC,KAAMiB,EAAAA,GAAAA,QAAsBC,GAAUA,EAAMC,KAAKC,SAASC,EAAAA,GAAAA,WAIxDC,EAA8B,CAClCrB,WAAYsB,EAAAA,GAAAA,MACZhB,MAAO,SACPC,SAAU,2BACVC,MAAO,qaAQPC,MAAOM,GAOT,UAJ6B,IACpBb,EAAAA,cAACqB,EAAAA,EAAmBF,E","sources":["webpack://play-what/./src/app/components/pages/browse/cards/CollectionCard.tsx","webpack://play-what/./src/app/components/pages/browse/CollectionPage.tsx","webpack://play-what/./src/app/components/pages/browse/scales.page.tsx"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { PresetType } from \"../../../../../core/Core.constants\";\r\nimport { AnyPodListPreset } from \"../../../../../core/Core.derived\";\r\nimport Card, { ICardProps } from \"../../../shared/ui/Card\";\r\nimport CollectionTable from \"./CollectionTable\";\r\n\r\nexport interface ICollectionCardProps extends ICardProps {\r\n  data: AnyPodListPreset[];\r\n  description?: string;\r\n  presetType: PresetType;\r\n}\r\n\r\nconst StyledCollectionCard = styled(Card)`\r\n  p {\r\n    margin: 16px 0;\r\n  }\r\n`;\r\n\r\nconst CollectionCard: React.FC<ICollectionCardProps> = ({\r\n  description,\r\n  data,\r\n  presetType,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <StyledCollectionCard {...rest}>\r\n      {description && <p>{description}</p>}\r\n      <CollectionTable presetType={presetType} data={data} />\r\n    </StyledCollectionCard>\r\n  );\r\n};\r\n\r\nexport default CollectionCard;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { PresetType } from \"../../../../core/Core.constants\";\r\nimport ColumnManager from \"../../shared/layout/ColumnManager\";\r\nimport PageLayout from \"../../shared/layout/PageLayout\";\r\nimport CollectionCard, { ICollectionCardProps } from \"./cards/CollectionCard\";\r\n\r\nconst StyledCollectionPage = styled(PageLayout)`\r\n  .intro {\r\n    padding: 0 16px;\r\n    margin-bottom: 16px;\r\n  }\r\n`;\r\n\r\nexport interface ICollectionPageCard\r\n  extends Omit<ICollectionCardProps, \"presetType\"> {}\r\n\r\nexport interface ICollectionPageProps {\r\n  title: string;\r\n  subtitle: string;\r\n  intro: string;\r\n  presetType: PresetType;\r\n  cards: ICollectionPageCard[];\r\n}\r\n\r\nconst CollectionPage: React.FC<ICollectionPageProps> = ({\r\n  title,\r\n  subtitle,\r\n  intro,\r\n  presetType,\r\n  cards,\r\n}) => {\r\n  return (\r\n    <StyledCollectionPage title={title} subtitle={subtitle}>\r\n      <div>\r\n        <p className=\"intro\">{intro}</p>\r\n      </div>\r\n      <ColumnManager>\r\n        <ColumnManager>\r\n          {cards.map((card) => {\r\n            const { title, description, data } = card;\r\n            return (\r\n              <CollectionCard\r\n                presetType={presetType}\r\n                title={title}\r\n                description={description}\r\n                data={data}\r\n              />\r\n            );\r\n          })}\r\n        </ColumnManager>\r\n      </ColumnManager>\r\n    </StyledCollectionPage>\r\n  );\r\n};\r\n\r\nexport default CollectionPage;\r\n","import React from \"react\";\r\nimport { PresetType, Tag } from \"../../../../core/Core.constants\";\r\nimport { SCALE_PRESETS } from \"../../../../core/Scale.constants\";\r\nimport CollectionPage, {\r\n  ICollectionPageCard,\r\n  ICollectionPageProps,\r\n} from \"./CollectionPage\";\r\n\r\nconst CARDS: ICollectionPageCard[] = [\r\n  {\r\n    title: \"Diatonic Modes\",\r\n    description: `\r\n      Diatonic scales are by far the most common type in Western music.\r\n      They are defined by a specific sequence of seven intervals\r\n      containing five whole-steps and two half-steps. The most common\r\n      form of the diatonic scale is the Major scale (AKA the Ionian\r\n      mode), which follows the pattern W-W-W-H-W-W-H.\r\n    `,\r\n    data: SCALE_PRESETS.filter((scale) => scale.tags.includes(Tag.Diatonic)),\r\n  },\r\n  {\r\n    title: \"Harmonic Minor Modes\",\r\n    description: `\r\n      The Harmonic Minor scale is a slight variation of the Natural\r\n      Minor scale (which itself is just a mode of the Diatonic scale).\r\n      The only difference is that the seventh degree is raised a\r\n      half-step, creating a Major 7th interval instead of a Minor 7th.\r\n      This slight variation to the diatonic scale creates seven more\r\n      unique modes.\r\n    `,\r\n    data: SCALE_PRESETS.filter((scale) =>\r\n      scale.tags.includes(Tag.HarmonicMode)\r\n    ),\r\n  },\r\n  {\r\n    title: \"Melodic Minor Modes\",\r\n    description: `\r\n      The Melodic Minor scale is formed by making one additional change\r\n      to the Harmonic Minor scale. We simply raise the sixth degree by a\r\n      half-step, creating a Major 6th interval instead of a Major 7th.\r\n      This variation also creates seven unique modes.\r\n    `,\r\n    data: SCALE_PRESETS.filter((scale) => scale.tags.includes(Tag.MelodicMode)),\r\n  },\r\n  {\r\n    title: \"Pentatonic Modes\",\r\n    description: `\r\n      Pentatonic scales contain only five notes and are often a subset\r\n      of diatonic scales. For example, the Major Pentatonic scale is the\r\n      same as a Major Diatonic scale without the 4th and 7th degrees.\r\n    `,\r\n    data: SCALE_PRESETS.filter((scale) => scale.tags.includes(Tag.Pentatonic)),\r\n  },\r\n  {\r\n    title: \"Blues Scales\",\r\n    description: `Blues scales are pentatonic scales with an extra \"blue\" note.`,\r\n    data: SCALE_PRESETS.filter((scale) => scale.tags.includes(Tag.Blues)),\r\n  },\r\n  {\r\n    title: \"Bebob Scales\",\r\n    description: `Bebop scales are diatonic scales with an extra chomatic passing note.`,\r\n    data: SCALE_PRESETS.filter((scale) => scale.tags.includes(Tag.Bebop)),\r\n  },\r\n];\r\n\r\nconst PROPS: ICollectionPageProps = {\r\n  presetType: PresetType.Scale,\r\n  title: \"Scales\",\r\n  subtitle: \"The foundation of melody\",\r\n  intro: `\r\n    A scale is a collection of musical notes, which are generally played\r\n    sequentially and ordered by pitch. Scales are defined by their first\r\n    note (the root) and its relationship to the following notes (intervals).\r\n    In their most common form, scales contain seven notes spanning a\r\n    single octave. These seven degrees are lettered A-G.\r\n    Additionally, a mode is simply a rotation of any given\r\n  `,\r\n  cards: CARDS,\r\n};\r\n\r\nconst ScalesPage: React.FC = () => {\r\n  return <CollectionPage {...PROPS} />;\r\n};\r\n\r\nexport default ScalesPage;\r\n"],"names":["StyledCollectionCard","styled","Card","_ref","description","data","presetType","rest","React","CollectionTable","StyledCollectionPage","PageLayout","title","subtitle","intro","cards","className","ColumnManager","map","card","CollectionCard","CARDS","SCALE_PRESETS","scale","tags","includes","Tag","PROPS","PresetType","CollectionPage"],"sourceRoot":""}