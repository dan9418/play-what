{"version":3,"file":"component---src-pages-dev-practice-voicings-tsx-3beceffd84dfbc32f0c3.js","mappings":"2RAcMA,GAAqBC,EAAAA,EAAAA,SAAOC,EAAAA,GAAV,sFAAGD,CAAH,+EAGlBE,EAAAA,GAAeC,EAAAA,GAWfC,EAAa,CACfC,EAAAA,GAAAA,qBACAA,EAAAA,GAAAA,uBACAA,EAAAA,GAAAA,iBACAA,EAAAA,GAAAA,kBAGEC,EAAa,CACfD,EAAAA,GAAAA,qBACAA,EAAAA,GAAAA,uBACAA,EAAAA,GAAAA,iBACAA,EAAAA,GAAAA,kBAGEE,EAAa,CACfF,EAAAA,GAAAA,qBACAA,EAAAA,GAAAA,uBACAA,EAAAA,GAAAA,iBACAA,EAAAA,GAAAA,kBAGEG,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,MAAOC,EAAtB,EAAsBA,QAASC,EAA/B,EAA+BA,KAA/B,OACf,0BACKH,EAAWI,KAAI,SAAAC,GACZ,IAAMC,EAAW,IAAIL,EAAMC,EAAS,CAAEC,KAAAA,IACtC,OACI,sBAAII,IAAKL,GACL,0BAAKA,GACL,gBAACM,EAAA,EAAD,CACIP,MAAOK,EACPG,QAASC,EAAAA,GAAAA,IAAuBL,GAChCM,UAAW,CAAC,EAAG,YAQjCC,EACF,6BACI,0BACI,mCACA,qCACA,sCACA,wCAKNC,EAAS,CACX,CACIZ,MAAOa,EAAAA,EACPZ,QAASa,EAAAA,EAAAA,MAEb,CACId,MAAOa,EAAAA,EACPZ,QAASa,EAAAA,EAAAA,MAEb,CACId,MAAOa,EAAAA,EACPZ,QAASa,EAAAA,EAAAA,MAEb,CACId,MAAOa,EAAAA,EACPZ,QAASa,EAAAA,EAAAA,WC3FjB,ED+F+B,WAC3B,OAAoCC,EAAAA,EAAAA,UAASC,EAAAA,GAAAA,IAAoBC,EAAAA,GAAAA,IAA1DC,EAAP,KAAmBC,EAAnB,KAEMjB,EAAO,IAAIkB,EAAAA,EAAKF,EAAWG,OAEjC,OACI,gBAAChC,EAAD,KACI,gBAACiC,EAAA,EAAD,CAAWC,MAAM,mBACjB,gBAACC,EAAA,EAAD,CAAUC,MAAM,QACZ,gBAACC,EAAA,EAAD,CAAeC,QAASC,EAAAA,GAAcP,MAAOH,EAAYW,SAAU,SAAAC,GAC/DX,EAAcW,OAGtB,gBAACC,EAAA,GAAD,CAAMR,MAAM,UACR,6BACKZ,EACD,6BACKC,EAAOT,KAAI,SAAC6B,EAAOC,GAChB,IAAQjC,EAAmBgC,EAAnBhC,MAAOC,EAAY+B,EAAZ/B,QACf,OACI,gBAACH,EAAD,CAAYQ,IAAK2B,EAAGjC,MAAOA,EAAOC,QAASA,EAASC,KAAMA,EAAMH,WAAYL,UAMhG,gBAACqC,EAAA,GAAD,CAAMR,MAAM,UACR,6BACKZ,EACD,6BACKC,EAAOT,KAAI,SAAC6B,EAAOC,GAChB,IAAQjC,EAAmBgC,EAAnBhC,MAAOC,EAAY+B,EAAZ/B,QACf,OACI,gBAACH,EAAD,CAAYQ,IAAK2B,EAAGjC,MAAOA,EAAOC,QAASA,EAASC,KAAMA,EAAMH,WAAYH,UAMhG,gBAACmC,EAAA,GAAD,CAAMR,MAAM,UACR,6BACKZ,EACD,6BACKC,EAAOT,KAAI,SAAC6B,EAAOC,GAChB,IAAQjC,EAAmBgC,EAAnBhC,MAAOC,EAAY+B,EAAZ/B,QACf,OACI,gBAACH,EAAD,CAAYQ,IAAK2B,EAAGjC,MAAOA,EAAOC,QAASA,EAASC,KAAMA,EAAMH,WAAYF","sources":["webpack://play-what/./src/components/pages/dev/VoicingsPage.tsx","webpack://play-what/./src/pages/dev/practice/voicings.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from 'styled-components';\r\nimport Chord from \"../../../core/models/Chord\";\r\nimport { ChordId, NoteId } from \"../../../core/models/Model.constants\";\r\nimport { NOTE_PRESETS, NOTE_PRESET_MAP } from \"../../../core/models/Model.presets\";\r\nimport Note from \"../../../core/models/Note\";\r\nimport Fretboard from \"../../../viewers/fretboard/Fretboard\";\r\nimport { VoicingId, VOICING_PRESET_MAP } from \"../../../viewers/fretboard/Fretboard.voicing\";\r\nimport DropdownInput from \"../../inputs/DropdownInput\";\r\nimport { StyledPageBody } from \"../../layout/PageBody\";\r\nimport PageTitle from \"../../layout/PageTitle\";\r\nimport Card, { StyledCard } from \"../../ui/Card\";\r\nimport InputRow, { StyledInputRow } from \"../../ui/InputRow\";\r\n\r\nconst StyledVoicingsPage = styled(StyledPageBody)`\r\n    max-width: 1920px;\r\n\r\n    ${StyledCard}, ${StyledInputRow} {\r\n        margin-top: 16px;\r\n        table {\r\n            width: 100%;\r\n            td {\r\n                width: 25%;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst VOICINGS_E = [\r\n    VoicingId.Chord_Triad_EShape_1,\r\n    VoicingId.Chord_Seventh_EShape_1,\r\n    VoicingId.Chord_Shell_A_37,\r\n    VoicingId.Chord_Shell_A_73,\r\n];\r\n\r\nconst VOICINGS_A = [\r\n    VoicingId.Chord_Triad_AShape_1,\r\n    VoicingId.Chord_Seventh_AShape_1,\r\n    VoicingId.Chord_Shell_A_37,\r\n    VoicingId.Chord_Shell_A_73,\r\n];\r\n\r\nconst VOICINGS_D = [\r\n    VoicingId.Chord_Triad_DShape_1,\r\n    VoicingId.Chord_Seventh_DShape_1,\r\n    VoicingId.Chord_Shell_D_37,\r\n    VoicingId.Chord_Shell_D_73,\r\n];\r\n\r\nconst VoicingRow = ({ voicingIds, model, modelId, root }) => (\r\n    <tr>\r\n        {voicingIds.map(voicingId => {\r\n            const instance = new model(modelId, { root });\r\n            return (\r\n                <td key={modelId}>\r\n                    <h3>{modelId}</h3>\r\n                    <Fretboard\r\n                        model={instance}\r\n                        voicing={VOICING_PRESET_MAP.get(voicingId)}\r\n                        fretRange={[1, 14]}\r\n                    />\r\n                </td>\r\n            );\r\n        })}\r\n    </tr>\r\n);\r\n\r\nconst THEAD = (\r\n    <thead>\r\n        <tr>\r\n            <th>Triad</th>\r\n            <th>Seventh</th>\r\n            <th>Drop 3-7</th>\r\n            <th>Drop 7-3</th>\r\n        </tr>\r\n    </thead>\r\n);\r\n\r\nconst CHORDS = [\r\n    {\r\n        model: Chord,\r\n        modelId: ChordId.Maj7,\r\n    },\r\n    {\r\n        model: Chord,\r\n        modelId: ChordId.Min7,\r\n    },\r\n    {\r\n        model: Chord,\r\n        modelId: ChordId.Dom7,\r\n    },\r\n    {\r\n        model: Chord,\r\n        modelId: ChordId.HalfDim7,\r\n    }\r\n];\r\n\r\nconst VoicingsPage: React.FC = () => {\r\n    const [rootPreset, setRootPreset] = useState(NOTE_PRESET_MAP.get(NoteId.C));\r\n\r\n    const root = new Note(rootPreset.value);\r\n\r\n    return (\r\n        <StyledVoicingsPage>\r\n            <PageTitle title=\"Chord Voicings\" />\r\n            <InputRow label=\"Root\">\r\n                <DropdownInput options={NOTE_PRESETS} value={rootPreset} setValue={p => {\r\n                    setRootPreset(p);\r\n                }} />\r\n            </InputRow>\r\n            <Card title=\"E Root\" >\r\n                <table>\r\n                    {THEAD}\r\n                    <tbody>\r\n                        {CHORDS.map((chord, i) => {\r\n                            const { model, modelId } = chord;\r\n                            return (\r\n                                <VoicingRow key={i} model={model} modelId={modelId} root={root} voicingIds={VOICINGS_E} />\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </Card>\r\n            <Card title=\"A Root\" >\r\n                <table>\r\n                    {THEAD}\r\n                    <tbody>\r\n                        {CHORDS.map((chord, i) => {\r\n                            const { model, modelId } = chord;\r\n                            return (\r\n                                <VoicingRow key={i} model={model} modelId={modelId} root={root} voicingIds={VOICINGS_A} />\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </Card>\r\n            <Card title=\"D Root\" >\r\n                <table>\r\n                    {THEAD}\r\n                    <tbody>\r\n                        {CHORDS.map((chord, i) => {\r\n                            const { model, modelId } = chord;\r\n                            return (\r\n                                <VoicingRow key={i} model={model} modelId={modelId} root={root} voicingIds={VOICINGS_D} />\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </Card>\r\n        </StyledVoicingsPage>\r\n    );\r\n};\r\n\r\nexport default VoicingsPage;\r\n","import VoicingsPage from \"../../../components/pages/dev/VoicingsPage\";\r\n\r\nexport default VoicingsPage;\r\n"],"names":["StyledVoicingsPage","styled","StyledPageBody","StyledCard","StyledInputRow","VOICINGS_E","VoicingId","VOICINGS_A","VOICINGS_D","VoicingRow","voicingIds","model","modelId","root","map","voicingId","instance","key","Fretboard","voicing","VOICING_PRESET_MAP","fretRange","THEAD","CHORDS","Chord","ChordId","useState","NOTE_PRESET_MAP","NoteId","rootPreset","setRootPreset","Note","value","PageTitle","title","InputRow","label","DropdownInput","options","NOTE_PRESETS","setValue","p","Card","chord","i"],"sourceRoot":""}