{"version":3,"file":"component---src-pages-index-tsx-adcaeffdd1caa41fd4fa.js","mappings":"mIAIMA,E,KAAkBC,QAAAA,KAAAA,WAAH,sEAAGA,CAAH,yZAWW,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,MAAMC,UAa3B,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,OAAOC,eAgD5D,IArCiC,SAAC,GAAkF,IAAhFC,EAA+E,EAA/EA,UAAkBC,EAA6D,EAApEC,MAAgCC,EAAoC,EAA9CC,SAA4BC,EAAkB,EAAlBA,YAC7F,GAA4BC,EAAAA,EAAAA,UAAS,IAA9BC,EAAP,KAAeC,EAAf,KACMN,OAAiC,IAAlBD,EAAgCM,EAASN,EACxDG,OAAuC,IAArBD,EAAmCK,EAAYL,EAgBvE,OACI,gBAACX,EAAD,CAAiBiB,KAAK,SAASC,SAXlB,SAAAC,GACbA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,OAAOC,SAASb,MAAMW,MAChCX,EAAQ,IAAIc,gBAAgB,CAAEd,MAAOW,IAErCI,EAAI,YADCf,EAAK,IAAOA,EAAMgB,WAAe,IAG5C,OADAC,EAAAA,EAAAA,IAASF,IACF,IAKH,uBAAKG,UAAU,cACX,yBACIC,KAAK,SACLC,GAAG,cACHC,KAAK,QACLC,IAAKxB,EACLyB,SAtBC,SAAAd,GACbP,EAASO,EAAEG,OAAOD,QAsBNA,MAAOX,EACPG,YAAaA,GAAe,uBAEhC,0BAAQgB,KAAK,UAAb,c,mJC7DVK,GAAiBjC,EAAAA,EAAAA,SAAOkC,EAAAA,GAAV,gFAAGlC,CAAH,q5BAmBT,qBAAGE,MAAkBiC,KAAKC,WAgB1B,qBAAGlC,MAAkBiC,KAAKE,aAgB1B,qBAAGnC,MAAkBoC,QAAQC,OAS7B,qBAAGrC,MAAkBiC,KAAKE,aAUf,SAAApC,GAAK,OAAIA,EAAMC,MAAMG,OAAOC,eC7ElD,ED6FiC,WAChC,OAAsCO,EAAAA,EAAAA,UAAS,mBAAxCD,EAAP,KAAoB4B,EAApB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACT,IAAMZ,EAAKa,aAAY,WACtB,IAAMC,EAAOC,EAAAA,GAAaC,KAAKC,MAAMD,KAAKE,SAAWH,EAAAA,GAAAA,SAC/CI,EAAYC,EAAAA,GAAYJ,KAAKC,MAAMD,KAAKE,SAAWE,EAAAA,GAAAA,SACnDd,EAAUQ,EAAKb,KAAX,IAAmBkB,EAAUlB,KAA7B,KAAqCoB,EAAAA,EAAAA,IAAeF,EAAUG,SACxEX,EAAeL,KACb,KACH,OAAO,kBAAMiB,cAAcvB,MACzB,IAGF,gBAACI,EAAD,KACC,gBAACoB,EAAA,EAAD,MACA,kCAAS,oCACT,qBAAG1B,UAAU,SAAb,4DAGA,qBAAGA,UAAU,cAAb,4FAGA,uDACA,gBAAC2B,EAAA,EAAD,CAAW1C,YAAaA,IACxB,uBAAKe,UAAU,MAAf,UAGA,gBAAC,KAAD,CAAM4B,GAAG,WAAT","sources":["webpack://play-what/./src/components/search/SearchBar.tsx","webpack://play-what/./src/components/pages/IndexPage.tsx","webpack://play-what/./src/pages/index.tsx"],"sourcesContent":["import { navigate } from \"gatsby\";\r\nimport React, { useState } from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nconst StyledSearchBar = styled.form`\r\n    width: 100%;\r\n    .search-bar {\r\n        width: 100%;\r\n        max-width: 512px;\r\n        display: grid;\r\n        grid-template-columns: 1fr auto;\r\n\r\n        input, button {\r\n            padding: 8px 8px;\r\n            border-radius: 8px;\r\n            border: 1px solid ${props => props.theme.utils.border};\r\n        }\r\n\r\n        input {\r\n            border-radius: 8px 0 0 8px;\r\n            border-right: none;\r\n        }\r\n\r\n        button {\r\n            border-radius: 0 8px 8px 0;\r\n            cursor: pointer;\r\n            color: white;\r\n            font-weight: bold;\r\n            background-color: ${props => props.theme.action.interactive};\r\n            border-left: none;\r\n            padding: 8px 16px;\r\n\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n        }\r\n    }\r\n`;\r\n\r\nconst SearchBar: React.FC<any> = ({ searchRef, query: externalQuery, setQuery: externalSetQuery, placeholder }) => {\r\n    const [_query, _setQuery] = useState('');\r\n    const query = typeof externalQuery === 'undefined' ? _query : externalQuery;\r\n    const setQuery = typeof externalSetQuery === 'undefined' ? _setQuery : externalSetQuery;\r\n\r\n    const onChange = e => {\r\n        setQuery(e.target.value);\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        const value = e.target.elements.query.value;\r\n        const query = new URLSearchParams({ query: value });\r\n        const qs = query ? `?${query.toString()}` : '';\r\n        const path = `/search/${qs}`;\r\n        navigate(path);\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <StyledSearchBar role=\"search\" onSubmit={onSubmit}>\r\n            <div className=\"search-bar\">\r\n                <input\r\n                    type=\"search\"\r\n                    id=\"site-search\"\r\n                    name=\"query\"\r\n                    ref={searchRef}\r\n                    onChange={onChange}\r\n                    value={query as string}\r\n                    placeholder={placeholder || \"Search the site...\"}\r\n                />\r\n                <button type=\"submit\" >Search</button>\r\n            </div>\r\n        </StyledSearchBar>\r\n    );\r\n};\r\n\r\nexport default SearchBar;\r\n","import { Link } from \"gatsby\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styled from 'styled-components';\r\nimport { getModelIdText, ModelId } from \"../../core/models/Model.constants\";\r\nimport { ALL_PRESETS, NOTE_PRESETS } from \"../../core/models/Model.presets\";\r\nimport SearchBar from \"../search/SearchBar\";\r\nimport { StyledPageBody } from \"../layout/PageBody\";\r\nimport SEO from \"../utils/SEO\";\r\n\r\nconst StyledHomePage = styled(StyledPageBody)`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\t//justify-content: center;\r\n\r\n\th1 {\r\n\t\tmargin: 32px auto;\r\n\t\tfont-size: 200%;\r\n\t\t@media(min-width: 512px) {\r\n\t\t\tfont-size: 360%;\r\n\t\t}\r\n\t\t@media(min-width: 1024px) {\r\n\t\t\tfont-size: 500%;\r\n\t\t}\r\n\t}\r\n\r\n\t.intro {\r\n\t\tmax-width: 768px;\r\n\t\tcolor: ${({ theme }) => theme.text.primary};\r\n\t\ttext-align: center;\r\n\t\tline-height: 120%;\r\n\t\tmargin-top: 32px;\r\n\t\tmargin-top: 32px;\r\n\t\tfont-size: 120%;\r\n\t\t@media(min-width: 512px) {\r\n\t\t\tfont-size: 140%;\r\n\t\t}\r\n\t\t@media(min-width: 1024px) {\r\n\t\t\tfont-size: 160%;\r\n\t\t}\r\n\t}\r\n\r\n\t.disclaimer {\r\n\t\tfont-style: italic;\r\n\t\tcolor: ${({ theme }) => theme.text.secondary};\r\n\t\ttext-align: center;\r\n\t\tmargin-top: 16px;\r\n\t\tmargin-top: 32px;\r\n\t\tfont-size: 80%;\r\n\t\t@media(min-width: 512px) {\r\n\t\t\tfont-size: 100%;\r\n\t\t}\r\n\t\t@media(min-width: 1024px) {\r\n\t\t\tfont-size: 120%;\r\n\t\t}\r\n\t}\r\n\r\n\th3 {\r\n\t\tmargin-top: 64px;\r\n\t\tfont-style: italic;\r\n\t\tcolor: ${({ theme }) => theme.surface.nav};\r\n\t}\r\n\r\n\t.search-bar {\r\n        margin: 8px auto 32px;\r\n    }\r\n\t\r\n\t.or {\r\n\t\tfont-size: 120%;\r\n\t\tcolor: ${({ theme }) => theme.text.secondary};\r\n\t\ttext-align: center;\r\n\t\tmargin-bottom: 32px;\r\n\t}\r\n\r\n\t> a {\r\n\t\tborder-radius: 8px;\r\n\t\tcursor: pointer;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\tbackground-color: ${props => props.theme.action.interactive};\r\n\t\tpadding: 8px 16px;\r\n\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\r\n\t\twidth: 100%;\r\n\t\tmax-width: 512px;\r\n\r\n\t\t&:hover {\r\n\t\t\tcolor: white;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst IndexPage: React.FC<any> = () => {\r\n\tconst [placeholder, setPlaceholder] = useState('Search the site');\r\n\r\n\tuseEffect(() => {\r\n\t\tconst id = setInterval(() => {\r\n\t\t\tconst root = NOTE_PRESETS[Math.floor(Math.random() * NOTE_PRESETS.length)];\r\n\t\t\tconst structure = ALL_PRESETS[Math.floor(Math.random() * ALL_PRESETS.length)];\r\n\t\t\tconst text = `${root.name} ${structure.name} ${getModelIdText(structure.modelId)}`;\r\n\t\t\tsetPlaceholder(text);\r\n\t\t}, 2000);\r\n\t\treturn () => clearInterval(id);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<StyledHomePage>\r\n\t\t\t<SEO />\r\n\t\t\t<h1>Play <em>What?</em></h1>\r\n\t\t\t<p className=\"intro\">\r\n\t\t\t\tA toolkit for exploring and visualizing musical concepts\r\n\t\t\t</p>\r\n\t\t\t<p className=\"disclaimer\">\r\n\t\t\t\tThis site is under active development and is slated for a formal Beta release in Q1 2022\r\n\t\t\t</p>\r\n\t\t\t<h3>What will you play today?</h3>\r\n\t\t\t<SearchBar placeholder={placeholder} />\r\n\t\t\t<div className=\"or\">\r\n\t\t\t\t{`~ or ~`}\r\n\t\t\t</div>\r\n\t\t\t<Link to=\"/browse\">Browse Chords & Scales</Link>\r\n\t\t</StyledHomePage>\r\n\t);\r\n};\r\n\r\nexport default IndexPage;\r\n","import IndexPage from \"../components/pages/IndexPage\";\r\n\r\nexport default IndexPage;\r\n"],"names":["StyledSearchBar","styled","props","theme","utils","border","action","interactive","searchRef","externalQuery","query","externalSetQuery","setQuery","placeholder","useState","_query","_setQuery","role","onSubmit","e","preventDefault","value","target","elements","URLSearchParams","path","toString","navigate","className","type","id","name","ref","onChange","StyledHomePage","StyledPageBody","text","primary","secondary","surface","nav","setPlaceholder","useEffect","setInterval","root","NOTE_PRESETS","Math","floor","random","structure","ALL_PRESETS","getModelIdText","modelId","clearInterval","SEO","SearchBar","to"],"sourceRoot":""}