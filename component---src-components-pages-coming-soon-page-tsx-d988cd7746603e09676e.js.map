{"version":3,"file":"component---src-components-pages-coming-soon-page-tsx-d988cd7746603e09676e.js","mappings":"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","sources":["webpack://play-what/./src/components/column-manager/ColumnManager.tsx","webpack://play-what/./src/components/pages/coming-soon.page.tsx","webpack://play-what/./src/components/ui/Card.tsx","webpack://play-what/./src/components/ui/List.styles.tsx","webpack://play-what/./src/components/ui/List.tsx","webpack://play-what/./src/components/ui/Table.tsx"],"sourcesContent":["import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledColumnManager = styled.div`\r\n    display: grid;\r\n    gap: 16px;\r\n    grid-template-columns: 1fr;\r\n\r\n    ${({ $tablet }) => $tablet ? `\r\n        @media(min-width: 512px) {\r\n            grid-template-columns: ${$tablet.join(' ')}\r\n        }\r\n    ` : ''}\r\n\r\n    ${({ $desktop }) => $desktop ? `\r\n        @media(min-width: 1024px) {\r\n            grid-template-columns: ${$desktop.join(' ')}\r\n        }\r\n    ` : ``}\r\n   \r\n`;\r\n\r\nexport interface IColumnManagerProps {\r\n    tablet?: string[];\r\n    desktop?: string[];\r\n}\r\n\r\nconst ColumnManager: React.FC<any> = ({ children, tablet, desktop }) => {\r\n    return (\r\n        <StyledColumnManager $tablet={tablet} $desktop={desktop}>\r\n            {children}\r\n        </StyledColumnManager >\r\n    );\r\n};\r\n\r\nexport default ColumnManager;\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { FEEDBACK_LINK } from \"../../config/constants\";\r\nimport ColumnManager from \"../column-manager/ColumnManager\";\r\nimport PageLayout from \"../layout/PageLayout\";\r\nimport Card from \"../ui/Card\";\r\nimport { SimpleList } from \"../ui/List\";\r\nimport { Table } from \"../ui/Table\";\r\n\r\nconst StyledComingSoonPage = styled(PageLayout)``;\r\n\r\nconst tableStyles = css`\r\n  border-collapse: collapse;\r\n  width: 100%;\r\n\r\n  td,\r\n  th {\r\n    padding: 8px;\r\n    text-align: left;\r\n    vertical-align: top;\r\n  }\r\n\r\n  th {\r\n    border-bottom: 1px solid ${(props) => props.theme.utils.border};\r\n  }\r\n\r\n  tr:not(:last-child) {\r\n    td {\r\n      border-bottom: 1px solid ${(props) => props.theme.utils.border};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Page: React.FC<any> = () => {\r\n  return (\r\n    <StyledComingSoonPage title=\"Coming Soon\" subtitle=\"Potential Features\">\r\n      <ColumnManager>\r\n        <Card title=\"Release Schedule\">\r\n          <Table\r\n            styles={tableStyles}\r\n            thead={[\r\n              {\r\n                cols: [\"Release\", \"Version\", \"Date\"],\r\n              },\r\n            ]}\r\n            tbody={[\r\n              {\r\n                cols: [\"Public User Beta\", \"0.1.0\", \"8/5/22\"],\r\n              },\r\n              {\r\n                cols: [\"Official Launch\", \"1.0.0\", \"2023\"],\r\n              },\r\n              {\r\n                cols: [\r\n                  {\r\n                    colSpan: 3,\r\n                    content: (\r\n                      <SimpleList\r\n                        items={[\r\n                          \"Possible name change\",\r\n                          \"Fresh logo\",\r\n                          \"Sharing features\",\r\n                          \"Chord progressions\",\r\n                          \"Cadences\",\r\n                          \"More tunings/voicings\",\r\n                          \"Open source license\",\r\n                          \"Technical documentation\",\r\n                          \"Bug fixes\",\r\n                        ]}\r\n                      />\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                cols: [\"Future Versions\", \"X.0.0\", \"TBD\"],\r\n              },\r\n              {\r\n                cols: [\r\n                  {\r\n                    colSpan: 3,\r\n                    content: (\r\n                      <SimpleList\r\n                        items={[\r\n                          \"Build-your-own practice materials\",\r\n                          \"Grand staff viewer\",\r\n                          \"Chord inversions\",\r\n                          \"Rhythm support\",\r\n                          \"Sound support\",\r\n                          \"Ear training\",\r\n                          \"User accounts\",\r\n                          \"...and more!\",\r\n                        ]}\r\n                      />\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </Card>\r\n        <Card title=\"Request A Feature\">\r\n          <p>\r\n            <a target=\"_blank\" href={FEEDBACK_LINK}>\r\n              Use this form\r\n            </a>{\" \"}\r\n            to submit a feature request or provide feedback.\r\n          </p>\r\n        </Card>\r\n      </ColumnManager>\r\n    </StyledComingSoonPage>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import React, { PropsWithChildren } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const StyledCard = styled.div`\r\n  background: ${(props) => props.theme.surface.card};\r\n  width: 100%;\r\n  border-radius: 16px;\r\n  padding: 16px;\r\n\r\n  .header {\r\n    margin-bottom: 16px;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nexport const CardHeader: React.FC<any> = ({\r\n  title,\r\n  level = 2,\r\n  action = null,\r\n}) => {\r\n  const AsTag: any = `h${level}`;\r\n  return (\r\n    <div className=\"header\">\r\n      <AsTag>{title}</AsTag>\r\n      {action}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport interface ICardProps extends PropsWithChildren<any> {\r\n  title?: string;\r\n  subtitle?: string;\r\n  action?: any;\r\n  level?: number;\r\n}\r\n\r\nconst Card: React.FC<ICardProps> = ({\r\n  title,\r\n  subtitle,\r\n  action,\r\n  children,\r\n  level = 1,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <StyledCard {...rest}>\r\n      {title && <CardHeader title={title} action={action} level={level} />}\r\n      {subtitle && <CardHeader title={subtitle} level={level + 1} />}\r\n      {children}\r\n    </StyledCard>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { css } from 'styled-components';\r\n\r\nexport const LIST_STYLES_1 = css`\r\n    li {\r\n        margin-left: 8px;\r\n        &:not(:first-child) {\r\n            margin-top: 4px;\r\n        }\r\n    }\r\n    h1, h2, h3, h4, h5, h6, h7 {\r\n        font-weight: bold;\r\n    }\r\n    section {\r\n        margin-left: 8px;\r\n        &:not(:first-child) {\r\n            margin-top: 24px;\r\n        }\r\n    }\r\n    ul {\r\n        &:not(:first-child) {\r\n            margin-top: 8px;\r\n            margin-left: 8px;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const LIST_STYLES_2 = css`\r\n    li {\r\n        list-style-type: disc;\r\n        margin: 8px 0 8px 16px;\r\n    }\r\n`;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { LIST_STYLES_2 } from \"./List.styles\";\r\n\r\nexport interface IListItem {\r\n    text: string;\r\n    link?: string;\r\n}\r\n\r\nexport interface IList {\r\n    title?: string;\r\n    subtitle?: string;\r\n    lists?: IList[];\r\n    items?: | IListItem[];\r\n}\r\n\r\nexport interface IListProps extends IList {\r\n    level?: number;\r\n    prefix?: string;\r\n    styles?: any;\r\n}\r\n\r\nconst Heading: React.FC<any> = ({ title, subtitle, level }) => {\r\n    const Title = `h${level}` as any;\r\n    const Subtitle = `h${level + 1}` as any;\r\n    return (\r\n        <>\r\n            {title && <Title>{title}</Title>}\r\n            {subtitle && <Subtitle>{subtitle}</Subtitle>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport const List: React.FC<IListProps> = ({ title, subtitle, items, lists, level = 1, prefix = '', styles }) => {\r\n    return (\r\n        // @ts-ignore\r\n        <section css={styles}>\r\n            <Heading title={title} subtitle={subtitle} level={level} />\r\n            <ul>\r\n                {items && items.length > 0 && (\r\n                    items.map(({ text, link }) => (\r\n                        <li key={text}>{\r\n                            link ? <Link to={`${prefix}${link}`}>{text}</Link> : text\r\n                        }</li>\r\n                    ))\r\n                )}\r\n                {lists && (\r\n                    <li>\r\n                        {lists.map(l => <List {...l} key={l.title} level={level + 1} prefix={prefix} />)}\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport const SimpleList: React.FC<{ items: (string | [string, string])[] }> = ({ items }) => {\r\n    const formattedItems: IListItem[] = items.map(item => {\r\n        if (Array.isArray(item)) {\r\n            const [text, link] = item;\r\n            return {\r\n                text,\r\n                link\r\n            }\r\n        }\r\n        return {\r\n            text: item\r\n        }\r\n    })\r\n    return (\r\n        <List items={formattedItems} styles={LIST_STYLES_2} />\r\n    );\r\n}\r\n","import { Link } from \"gatsby\";\r\nimport React, { Fragment, ReactNode } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledTable = styled.table``;\r\n\r\ntype TOmit = undefined | null | false;\r\n\r\nconst getIsTypeOmit = (data: any): data is TOmit =>\r\n  data === undefined || data === null || data === false;\r\n\r\n// Col\r\n\r\nexport interface IColConfig {\r\n  isHeader?: boolean;\r\n  content: any;\r\n  colSpan?: number;\r\n  className?: string;\r\n  link?: string;\r\n}\r\n\r\ninterface IColProps extends IColConfig {\r\n  index: number;\r\n}\r\n\r\ntype TCol = string | number | IColConfig | ReactNode;\r\n\r\nconst Col: React.FC<IColProps> = ({\r\n  index,\r\n  isHeader,\r\n  content,\r\n  colSpan,\r\n  className,\r\n  link,\r\n}) => {\r\n  const ColTag = isHeader ? \"th\" : \"td\";\r\n  const WrapperTag = link ? Link : Fragment;\r\n  const wrapperProps: any = link ? { to: link } : {};\r\n\r\n  return (\r\n    <ColTag colSpan={colSpan} className={className}>\r\n      <WrapperTag {...wrapperProps}>{content || \"\"}</WrapperTag>\r\n    </ColTag>\r\n  );\r\n};\r\n\r\n// Row\r\n\r\nexport interface IRowConfig {\r\n  cols: (TCol | TOmit)[];\r\n  className?: string;\r\n  isHeader?: boolean;\r\n  headerColIndicies?: number[];\r\n}\r\n\r\nconst getIsConfig = (col: TCol): col is IColConfig =>\r\n  typeof col === \"object\" && col !== null && col.hasOwnProperty(\"content\");\r\n\r\nconst Row: React.FC<IRowConfig> = ({\r\n  cols,\r\n  isHeader,\r\n  className,\r\n  headerColIndicies = [],\r\n}) => {\r\n  return (\r\n    <tr className={className}>\r\n      {cols.map((col: any, i) => {\r\n        if (getIsTypeOmit(col)) return null;\r\n        const isConfig = getIsConfig(col);\r\n        const colConfig = !isConfig ? { content: col } : col;\r\n        return (\r\n          <Col\r\n            key={i}\r\n            index={i}\r\n            isHeader={isHeader || headerColIndicies.includes(i)}\r\n            {...colConfig}\r\n          />\r\n        );\r\n      })}\r\n    </tr>\r\n  );\r\n};\r\n\r\n// Table Section\r\n\r\ninterface ITableSectionConfig {\r\n  Tag: \"thead\" | \"tfoot\" | \"tbody\";\r\n  rows: (IRowConfig | TOmit)[];\r\n  headerColIndicies?: number[];\r\n}\r\n\r\nconst TableSection: React.FC<ITableSectionConfig> = ({\r\n  Tag,\r\n  rows,\r\n  headerColIndicies,\r\n}) => (\r\n  <Tag>\r\n    {rows.map((row, i) => {\r\n      if (getIsTypeOmit(row)) return null;\r\n      return (\r\n        <Row\r\n          key={i}\r\n          isHeader={Tag !== \"tbody\"}\r\n          headerColIndicies={headerColIndicies}\r\n          {...row}\r\n        />\r\n      );\r\n    })}\r\n  </Tag>\r\n);\r\n\r\n// Table\r\n\r\ninterface IColGroup {\r\n  span?: number;\r\n  className?: string;\r\n}\r\n\r\nexport interface ITableConfig {\r\n  thead?: (IRowConfig | TOmit)[];\r\n  tfoot?: (IRowConfig | TOmit)[];\r\n  tbody: (IRowConfig | TOmit)[];\r\n  styles?: any;\r\n  caption?: string;\r\n  colGroups?: IColGroup[];\r\n  className?: string;\r\n  headerColIndicies?: number[];\r\n}\r\n\r\nexport const Table: React.FC<ITableConfig> = ({\r\n  thead,\r\n  tfoot,\r\n  tbody,\r\n  styles,\r\n  colGroups,\r\n  caption,\r\n  headerColIndicies,\r\n  className,\r\n}) => {\r\n  return (\r\n    <StyledTable css={styles} className={className}>\r\n      {colGroups && (\r\n        <colgroup>\r\n          {colGroups.map((cg, i) => (\r\n            <col key={i} {...cg} />\r\n          ))}\r\n        </colgroup>\r\n      )}\r\n      {caption && <caption>{caption}</caption>}\r\n      {thead && (\r\n        <TableSection\r\n          Tag=\"thead\"\r\n          rows={thead}\r\n          headerColIndicies={headerColIndicies}\r\n        />\r\n      )}\r\n      {tfoot && (\r\n        <TableSection\r\n          Tag=\"tfoot\"\r\n          rows={tfoot}\r\n          headerColIndicies={headerColIndicies}\r\n        />\r\n      )}\r\n      {tbody && (\r\n        <TableSection\r\n          Tag=\"tbody\"\r\n          rows={tbody}\r\n          headerColIndicies={headerColIndicies}\r\n        />\r\n      )}\r\n    </StyledTable>\r\n  );\r\n};\r\n"],"names":["StyledColumnManager","styled","_ref","$tablet","join","_ref2","$desktop","_ref3","children","tablet","desktop","React","StyledComingSoonPage","PageLayout","displayName","componentId","tableStyles","css","props","theme","utils","border","title","subtitle","ColumnManager","Card","Table","styles","thead","cols","tbody","colSpan","content","SimpleList","items","target","href","FEEDBACK_LINK","StyledCard","surface","card","CardHeader","level","action","AsTag","className","rest","LIST_STYLES_1","LIST_STYLES_2","Heading","Title","Subtitle","List","lists","prefix","length","map","text","link","key","Link","to","l","_ref4","formattedItems","item","Array","isArray","StyledTable","getIsTypeOmit","data","Col","index","isHeader","ColTag","WrapperTag","Fragment","wrapperProps","Row","headerColIndicies","col","i","isConfig","hasOwnProperty","getIsConfig","colConfig","includes","TableSection","Tag","rows","row","tfoot","colGroups","caption","cg"],"sourceRoot":""}