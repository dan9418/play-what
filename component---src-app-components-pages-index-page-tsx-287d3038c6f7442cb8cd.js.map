{"version":3,"file":"component---src-app-components-pages-index-page-tsx-287d3038c6f7442cb8cd.js","mappings":"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","sources":["webpack://play-what/./static/play_what_logo_web.png","webpack://play-what/./src/app/components/pages/home/useRandomModel.ts","webpack://play-what/./src/app/components/pages/home/HomeTiles.tsx","webpack://play-what/./src/app/components/pages/index.page.tsx"],"sourcesContent":["export default __webpack_public_path__ + \"static/play_what_logo_web-b14024555431be76d60a78008dbef88e.png\";","import { useEffect, useState } from \"react\";\r\nimport { CHORD_PRESETS } from \"../../../../core/Chord.constants\";\r\nimport { PresetType } from \"../../../../core/Core.constants\";\r\nimport { NOTE_PRESETS } from \"../../../../core/Note.constants\";\r\nimport { getModelRoute } from \"../../../../core/Routing.utils\";\r\nimport { SCALE_PRESETS } from \"../../../../core/Scale.constants\";\r\n\r\nconst useRandomModel = () => {\r\n  const [modelPath, setModelPath] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const id = setInterval(() => {\r\n      const root =\r\n        NOTE_PRESETS[Math.floor(Math.random() * NOTE_PRESETS.length)];\r\n      const type = Math.random() >= .5 ? PresetType.Chord : PresetType.Scale;\r\n      const typeData = type === PresetType.Chord ? CHORD_PRESETS : SCALE_PRESETS;\r\n      const structure =\r\n        typeData[Math.floor(Math.random() * typeData.length)];\r\n      //const text = `${root.name} ${structure.name}`;\r\n      const route = getModelRoute(\r\n        type,\r\n        structure.presetId,\r\n        root.presetId\r\n      );\r\n\r\n      setModelPath(route);\r\n    }, 2000);\r\n    return () => clearInterval(id);\r\n  }, []);\r\n\r\n  return modelPath;\r\n};\r\n\r\nexport default useRandomModel;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { PresetType } from \"../../../../core/Core.constants\";\r\nimport { getModelRoute } from \"../../../../core/Routing.utils\";\r\nimport { MediaQuery } from \"../../../styles/breakpoint\";\r\nimport Icon, { IconId } from \"../../shared/ui/Icon\";\r\nimport useRandomModel from \"./useRandomModel\";\r\n\r\nconst StyledHomeTiles = styled.div`\r\n  display: grid;\r\n  gap: 16px;\r\n  margin: 0 16px;\r\n\r\n  grid-template-columns: 100%;\r\n  ${MediaQuery.Tablet} {\r\n    grid-template-columns: repeat(4, 1fr);\r\n  }\r\n\r\n  a {\r\n    background-color: ${({ theme }) => theme?.surface?.card};\r\n    border-radius: 8px;\r\n    padding: 16px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    gap: 16px;\r\n    border: 1px solid ${({ theme }) => theme?.action?.interactive};\r\n    cursor: pointer;\r\n    color: ${({ theme }) => theme?.action?.interactive};\r\n    width: 100%;\r\n    max-width: 512px;\r\n\r\n    svg,\r\n    svg * {\r\n      fill: ${({ theme }) => theme?.action?.interactive};\r\n    }\r\n    &:hover {\r\n      svg,\r\n      svg * {\r\n        fill: ${({ theme }) => theme?.action?.active};\r\n      }\r\n      border-color: ${({ theme }) => theme?.action?.active};\r\n      color: ${({ theme }) => theme?.action?.active};\r\n    }\r\n  }\r\n`;\r\n\r\nconst TILES = [\r\n  {\r\n    link: getModelRoute(PresetType.Chord),\r\n    iconId: IconId.Browse,\r\n    text: \"Chords\",\r\n  },\r\n  {\r\n    link: getModelRoute(PresetType.Scale),\r\n    iconId: IconId.Browse,\r\n    text: \"Scales\",\r\n  },\r\n  {\r\n    link: \"/view/fretboard/?presetId=major-triad&presetType=chords&rootId=c\",\r\n    iconId: IconId.Guitar,\r\n    text: \"Fretboard\",\r\n  },\r\n  {\r\n    link: \"RANDOM\",\r\n    iconId: IconId.Dice,\r\n    text: \"Random Page\",\r\n  },\r\n];\r\n\r\nconst HomeTiles: React.FC = () => {\r\n  const modelPath = useRandomModel();\r\n  return (\r\n    <StyledHomeTiles>\r\n      {TILES.map((tile) => {\r\n        const { link, iconId, text } = tile;\r\n        return (\r\n          <Link key={text} to={link === \"RANDOM\" ? modelPath : link}>\r\n            <Icon iconId={iconId} size={48} />\r\n            {text}\r\n          </Link>\r\n        );\r\n      })}\r\n    </StyledHomeTiles>\r\n  );\r\n};\r\n\r\nexport default HomeTiles;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n// @ts-ignore\r\nimport logoSrc from \"../../../../static/play_what_logo_web.png\";\r\nimport { MediaQuery } from \"../../styles/breakpoint\";\r\nimport PageLayout from \"../shared/layout/PageLayout\";\r\nimport HomeGrid from \"./home/HomeGrid\";\r\nimport HomeTiles from \"./home/HomeTiles\";\r\n\r\nconst StyledHomePage = styled(PageLayout)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  .logo {\r\n    display: block;\r\n    width: 256px;\r\n    margin: 16px auto;\r\n    ${MediaQuery.Tablet} {\r\n      width: 512px;\r\n      margin: 32px auto;\r\n    }\r\n    ${MediaQuery.Desktop} {\r\n      width: 768px;\r\n      margin: 48px auto;\r\n    }\r\n  }\r\n\r\n  .intro {\r\n    max-width: 768px;\r\n    color: ${({ theme }) => theme?.text?.primary};\r\n    text-align: center;\r\n    line-height: 120%;\r\n    font-size: 120%;\r\n    margin: 32px auto;\r\n    ${MediaQuery.Tablet} {\r\n      font-size: 140%;\r\n    }\r\n    ${MediaQuery.Desktop} {\r\n      font-size: 160%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Page: React.FC = () => {\r\n  return (\r\n    <StyledHomePage hideHeader hideBreadcrumbs>\r\n      <img src={logoSrc} className=\"logo\" />\r\n      <p className=\"intro\">Every chord. Every scale. Every key.</p>\r\n      <HomeTiles />\r\n      {/*<HomeGrid /> */}\r\n    </StyledHomePage>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n"],"names":["modelPath","setModelPath","useState","useEffect","id","setInterval","root","NOTE_PRESETS","Math","floor","random","type","PresetType","typeData","CHORD_PRESETS","SCALE_PRESETS","structure","length","route","getModelRoute","presetId","clearInterval","StyledHomeTiles","styled","MediaQuery","_ref","theme","surface","_theme$surface","card","_ref2","action","_theme$action","interactive","_ref3","_theme$action2","_ref4","_theme$action3","_ref5","_theme$action4","active","_ref6","_theme$action5","_ref7","_theme$action6","TILES","link","iconId","IconId","text","useRandomModel","React","map","tile","Link","key","to","Icon","size","StyledHomePage","PageLayout","displayName","componentId","_theme$text","primary","hideHeader","hideBreadcrumbs","src","logoSrc","className","HomeTiles"],"sourceRoot":""}