{"version":3,"file":"component---src-components-pages-browse-chords-page-tsx-8f7702d7c1faa50dd773.js","mappings":"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","sources":["webpack://play-what/./src/components/collection/CollectionCard.tsx","webpack://play-what/./src/components/collection/CollectionTable.tsx","webpack://play-what/./src/components/column-manager/ColumnManager.tsx","webpack://play-what/./src/components/pages/browse/chords.page.tsx","webpack://play-what/./src/components/ui/Card.tsx","webpack://play-what/./src/components/ui/Table.tsx","webpack://play-what/./src/core/routing/Routing.utils.ts"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Card, { ICardProps } from \"../ui/Card\";\r\nimport CollectionTable from \"./CollectionTable\";\r\n\r\ninterface ICollectionCardProps extends ICardProps {\r\n  data: any[];\r\n  description?: string;\r\n}\r\n\r\nconst StyledCollectionCard = styled(Card)`\r\n  p {\r\n    margin: 16px 0;\r\n  }\r\n`;\r\n\r\nconst CollectionCard: React.FC<ICollectionCardProps> = ({\r\n  description,\r\n  data,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <StyledCollectionCard {...rest}>\r\n      {description && <p>{description}</p>}\r\n      <CollectionTable data={data} />\r\n    </StyledCollectionCard>\r\n  );\r\n};\r\n\r\nexport default CollectionCard;\r\n","import React from \"react\";\r\nimport { css } from \"styled-components\";\r\nimport { useRoot, useRootId } from \"../../contexts/PagePropsContext\";\r\nimport Chord from \"../../core/models/Chord\";\r\nimport {\r\n  IModelConfig,\r\n  ModelType,\r\n  NoteId,\r\n} from \"../../core/models/Model.constants\";\r\nimport Note from \"../../core/models/Note\";\r\nimport Scale from \"../../core/models/Scale\";\r\nimport { getModelRoute } from \"../../core/routing/Routing.utils\";\r\nimport { Table } from \"../ui/Table\";\r\n\r\nconst tableStyles = css`\r\n  width: 100%;\r\n  margin: auto;\r\n  border-collapse: collapse;\r\n  white-space: nowrap;\r\n\r\n  td {\r\n    &:not(:first-child) {\r\n      font-size: 80%;\r\n    }\r\n  }\r\n\r\n  td,\r\n  th {\r\n    line-height: 32px;\r\n    text-align: center;\r\n\r\n    &:not(:first-child) {\r\n      width: 32px;\r\n      height: 32px;\r\n\r\n      display: none;\r\n      @media (min-width: 512px) {\r\n        display: table-cell;\r\n      }\r\n    }\r\n\r\n    &:first-child {\r\n      text-align: left;\r\n      padding: 0 8px;\r\n    }\r\n  }\r\n\r\n  td {\r\n    //border-right: 1px solid ${(props) => props.theme.utils.border};\r\n    //border-bottom: 1px solid ${(props) => props.theme.utils.border};\r\n    &.active {\r\n      background-color: ${(props) => props.theme.surface.bg};\r\n    }\r\n  }\r\n\r\n  thead {\r\n    text-transform: uppercase;\r\n    font-size: 80%;\r\n\r\n    @media (max-width: 511px) {\r\n      display: none;\r\n    }\r\n    tr th {\r\n      background-color: ${(props) => props.theme.surface.nav};\r\n      color: ${({ theme }) => theme.text.inverted};\r\n    }\r\n\r\n    th:first-child {\r\n      border-radius: 8px 0 0 8px;\r\n    }\r\n    th:last-child {\r\n      border-radius: 0 8px 8px 0;\r\n    }\r\n  }\r\n\r\n  a {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nexport interface ICollectionTableProps {\r\n  data: IModelConfig[];\r\n  semitones?: number[];\r\n}\r\n\r\nconst SEMITONES = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\r\n\r\nconst getSemitoneCol = (\r\n  model: Chord | Scale,\r\n  h: number,\r\n  semitones: number[],\r\n  root?: Note\r\n) => {\r\n  const index = model.intervals.findIndex((ivl) => ivl.pod[0] + 1 === h);\r\n  const className = semitones.includes(h) ? \"active\" : undefined;\r\n  if (index < 0) {\r\n    return {\r\n      className,\r\n      content: \"\",\r\n    };\r\n  }\r\n  const mod = root ? (model.notes as Note[])[index] : model.intervals[index];\r\n  return {\r\n    className,\r\n    content: mod.getName(),\r\n  };\r\n};\r\n\r\nconst CollectionTable: React.FC<ICollectionTableProps> = ({\r\n  data,\r\n  semitones = [],\r\n}) => {\r\n  const rootId = useRootId();\r\n  const root = useRoot();\r\n  return (\r\n    <Table\r\n      styles={tableStyles}\r\n      thead={[\r\n        {\r\n          cols: [\r\n            \"Name\",\r\n            {\r\n              colSpan: 12,\r\n              content: root ? \"Notes\" : \"Intervals\",\r\n            },\r\n          ],\r\n        },\r\n      ]}\r\n      tbody={data.map((d, i) => {\r\n        const cl = d.modelType === ModelType.Chord ? Chord : Scale;\r\n        // @ts-ignore\r\n        const model = new cl(d.modelId, { root });\r\n        return {\r\n          cols: [\r\n            {\r\n              link: getModelRoute(\r\n                model.modelType,\r\n                model.modelId,\r\n                rootId as NoteId\r\n              ),\r\n              content: model.getName(),\r\n            },\r\n            ...SEMITONES.map((h, i) =>\r\n              getSemitoneCol(model, h, semitones, root)\r\n            ),\r\n          ],\r\n        };\r\n      })}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CollectionTable;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledColumnManager = styled.div`\r\n    display: grid;\r\n    gap: 16px;\r\n    grid-template-columns: 1fr;\r\n\r\n    ${({ $tablet }) => $tablet ? `\r\n        @media(min-width: 512px) {\r\n            grid-template-columns: ${$tablet.join(' ')}\r\n        }\r\n    ` : ''}\r\n\r\n    ${({ $desktop }) => $desktop ? `\r\n        @media(min-width: 1024px) {\r\n            grid-template-columns: ${$desktop.join(' ')}\r\n        }\r\n    ` : ``}\r\n   \r\n`;\r\n\r\nexport interface IColumnManagerProps {\r\n    tablet?: string[];\r\n    desktop?: string[];\r\n}\r\n\r\nconst ColumnManager: React.FC<any> = ({ children, tablet, desktop }) => {\r\n    return (\r\n        <StyledColumnManager $tablet={tablet} $desktop={desktop}>\r\n            {children}\r\n        </StyledColumnManager >\r\n    );\r\n};\r\n\r\nexport default ColumnManager;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Tag } from \"../../../core/models/Model.constants\";\r\nimport { CHORD_PRESETS } from \"../../../core/models/Model.presets\";\r\nimport CollectionCard from \"../../collection/CollectionCard\";\r\nimport ColumnManager from \"../../column-manager/ColumnManager\";\r\nimport PageLayout from \"../../layout/PageLayout\";\r\n\r\nconst StyledChordsPage = styled(PageLayout)`\r\n  .intro {\r\n    padding: 0 16px;\r\n    margin-bottom: 16px;\r\n  }\r\n`;\r\n\r\nconst ChordsPage: React.FC = () => {\r\n  return (\r\n    <StyledChordsPage title=\"Chords\" subtitle=\"The foundation of harmony\">\r\n      <div>\r\n        <p className=\"intro\">\r\n          A chord is a collection of musical notes, usually played\r\n          simultaneously. Chords are defined by their first note (the&nbsp;\r\n          <em>root</em>) and its relationship to the following notes (\r\n          <em>intervals</em>).\r\n        </p>\r\n      </div>\r\n      <ColumnManager>\r\n        <CollectionCard\r\n          title=\"Triads\"\r\n          description={`\r\n            A triad is the most basic type of chord. It consists of 3\r\n            intervals (a root, a third, and a fifth). The specific thirds and\r\n            fifths used determine the type (or quality) of the triad.\r\n          `}\r\n          data={CHORD_PRESETS.filter((chord) => chord.tags.includes(Tag.Triad))}\r\n        />\r\n        <CollectionCard\r\n          title=\"Seventh Chords\"\r\n          description={`\r\n            A seventh chord is a triad with an additional seventh interval\r\n            stacked on top.\r\n          `}\r\n          data={CHORD_PRESETS.filter(\r\n            (chord) =>\r\n              chord.tags.includes(Tag.Seventh) &&\r\n              !chord.tags.includes(Tag.Extended)\r\n          )}\r\n        />\r\n        <CollectionCard\r\n          title=\"Sixth Chords\"\r\n          description={`\r\n            A sixth chord is a triad with an additional sixth interval stacked\r\n            on top. They are similar in function to seventh chords.\r\n          `}\r\n          data={CHORD_PRESETS.filter(\r\n            (chord) =>\r\n              chord.tags.includes(Tag.Sixth) &&\r\n              !chord.tags.includes(Tag.Extended)\r\n          )}\r\n        />\r\n        <CollectionCard\r\n          title=\"Suspended Chords\"\r\n          description={`\r\n            A suspended chord is a like a triad, except it sustitutes a second\r\n            or fourth interval in place of the third.\r\n          `}\r\n          data={CHORD_PRESETS.filter((chord) =>\r\n            chord.tags.includes(Tag.Suspended)\r\n          )}\r\n        />\r\n        <CollectionCard\r\n          title=\"Extended Chords\"\r\n          description={`\r\n            An extended chord contains extended intervals. [INCOMPLETE]\r\n          `}\r\n          data={CHORD_PRESETS.filter((chord) =>\r\n            chord.tags.includes(Tag.Extended)\r\n          )}\r\n        />\r\n        {/* Altered Chords */}\r\n      </ColumnManager>\r\n    </StyledChordsPage>\r\n  );\r\n};\r\n\r\nexport default ChordsPage;\r\n","import React, { PropsWithChildren } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const StyledCard = styled.div`\r\n  background: ${(props) => props.theme.surface.card};\r\n  width: 100%;\r\n  border-radius: 16px;\r\n  padding: 16px;\r\n\r\n  .header {\r\n    margin-bottom: 16px;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nexport const CardHeader: React.FC<any> = ({\r\n  title,\r\n  level = 2,\r\n  action = null,\r\n}) => {\r\n  const AsTag: any = `h${level}`;\r\n  return (\r\n    <div className=\"header\">\r\n      <AsTag>{title}</AsTag>\r\n      {action}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport interface ICardProps extends PropsWithChildren<any> {\r\n  title?: string;\r\n  subtitle?: string;\r\n  action?: any;\r\n  level?: number;\r\n}\r\n\r\nconst Card: React.FC<ICardProps> = ({\r\n  title,\r\n  subtitle,\r\n  action,\r\n  children,\r\n  level = 1,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <StyledCard {...rest}>\r\n      {title && <CardHeader title={title} action={action} level={level} />}\r\n      {subtitle && <CardHeader title={subtitle} level={level + 1} />}\r\n      {children}\r\n    </StyledCard>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { Link } from \"gatsby\";\r\nimport React, { Fragment, ReactNode } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledTable = styled.table``;\r\n\r\ntype TOmit = undefined | null | false;\r\n\r\nconst getIsTypeOmit = (data: any): data is TOmit =>\r\n  data === undefined || data === null || data === false;\r\n\r\n// Col\r\n\r\nexport interface IColConfig {\r\n  isHeader?: boolean;\r\n  content: any;\r\n  colSpan?: number;\r\n  className?: string;\r\n  link?: string;\r\n}\r\n\r\ninterface IColProps extends IColConfig {\r\n  index: number;\r\n}\r\n\r\ntype TCol = string | number | IColConfig | ReactNode;\r\n\r\nconst Col: React.FC<IColProps> = ({\r\n  index,\r\n  isHeader,\r\n  content,\r\n  colSpan,\r\n  className,\r\n  link,\r\n}) => {\r\n  const ColTag = isHeader ? \"th\" : \"td\";\r\n  const WrapperTag = link ? Link : Fragment;\r\n  const wrapperProps: any = link ? { to: link } : {};\r\n\r\n  return (\r\n    <ColTag colSpan={colSpan} className={className}>\r\n      <WrapperTag {...wrapperProps}>{content || \"\"}</WrapperTag>\r\n    </ColTag>\r\n  );\r\n};\r\n\r\n// Row\r\n\r\nexport interface IRowConfig {\r\n  cols: (TCol | TOmit)[];\r\n  className?: string;\r\n  isHeader?: boolean;\r\n  headerColIndicies?: number[];\r\n}\r\n\r\nconst getIsConfig = (col: TCol): col is IColConfig =>\r\n  typeof col === \"object\" && col !== null && col.hasOwnProperty(\"content\");\r\n\r\nconst Row: React.FC<IRowConfig> = ({\r\n  cols,\r\n  isHeader,\r\n  className,\r\n  headerColIndicies = [],\r\n}) => {\r\n  return (\r\n    <tr className={className}>\r\n      {cols.map((col: any, i) => {\r\n        if (getIsTypeOmit(col)) return null;\r\n        const isConfig = getIsConfig(col);\r\n        const colConfig = !isConfig ? { content: col } : col;\r\n        return (\r\n          <Col\r\n            key={i}\r\n            index={i}\r\n            isHeader={isHeader || headerColIndicies.includes(i)}\r\n            {...colConfig}\r\n          />\r\n        );\r\n      })}\r\n    </tr>\r\n  );\r\n};\r\n\r\n// Table Section\r\n\r\ninterface ITableSectionConfig {\r\n  Tag: \"thead\" | \"tfoot\" | \"tbody\";\r\n  rows: (IRowConfig | TOmit)[];\r\n  headerColIndicies?: number[];\r\n}\r\n\r\nconst TableSection: React.FC<ITableSectionConfig> = ({\r\n  Tag,\r\n  rows,\r\n  headerColIndicies,\r\n}) => (\r\n  <Tag>\r\n    {rows.map((row, i) => {\r\n      if (getIsTypeOmit(row)) return null;\r\n      return (\r\n        <Row\r\n          key={i}\r\n          isHeader={Tag !== \"tbody\"}\r\n          headerColIndicies={headerColIndicies}\r\n          {...row}\r\n        />\r\n      );\r\n    })}\r\n  </Tag>\r\n);\r\n\r\n// Table\r\n\r\ninterface IColGroup {\r\n  span?: number;\r\n  className?: string;\r\n}\r\n\r\nexport interface ITableConfig {\r\n  thead?: (IRowConfig | TOmit)[];\r\n  tfoot?: (IRowConfig | TOmit)[];\r\n  tbody: (IRowConfig | TOmit)[];\r\n  styles?: any;\r\n  caption?: string;\r\n  colGroups?: IColGroup[];\r\n  className?: string;\r\n  headerColIndicies?: number[];\r\n}\r\n\r\nexport const Table: React.FC<ITableConfig> = ({\r\n  thead,\r\n  tfoot,\r\n  tbody,\r\n  styles,\r\n  colGroups,\r\n  caption,\r\n  headerColIndicies,\r\n  className,\r\n}) => {\r\n  return (\r\n    <StyledTable css={styles} className={className}>\r\n      {colGroups && (\r\n        <colgroup>\r\n          {colGroups.map((cg, i) => (\r\n            <col key={i} {...cg} />\r\n          ))}\r\n        </colgroup>\r\n      )}\r\n      {caption && <caption>{caption}</caption>}\r\n      {thead && (\r\n        <TableSection\r\n          Tag=\"thead\"\r\n          rows={thead}\r\n          headerColIndicies={headerColIndicies}\r\n        />\r\n      )}\r\n      {tfoot && (\r\n        <TableSection\r\n          Tag=\"tfoot\"\r\n          rows={tfoot}\r\n          headerColIndicies={headerColIndicies}\r\n        />\r\n      )}\r\n      {tbody && (\r\n        <TableSection\r\n          Tag=\"tbody\"\r\n          rows={tbody}\r\n          headerColIndicies={headerColIndicies}\r\n        />\r\n      )}\r\n    </StyledTable>\r\n  );\r\n};\r\n","import { ModelId, ModelType, NoteId } from \"../models/Model.constants\";\r\n\r\nexport const getModelRoute = (\r\n  modelType: ModelType,\r\n  modelId?: ModelId,\r\n  rootId?: NoteId\r\n) => {\r\n  const modelSuffix = modelId ? `/${modelId}` : \"\";\r\n  const rootSuffix = rootId ? `/root/${rootId}` : \"\";\r\n\r\n  return `/browse/${modelType}${modelSuffix}${rootSuffix}/`;\r\n};\r\n"],"names":["StyledCollectionCard","styled","Card","_ref","description","data","rest","React","CollectionTable","tableStyles","css","props","theme","surface","bg","nav","text","inverted","SEMITONES","_ref2","semitones","rootId","useRootId","root","useRoot","Table","styles","thead","cols","colSpan","content","tbody","map","d","i","model","modelType","ModelType","Chord","Scale","modelId","link","getModelRoute","getName","h","index","intervals","findIndex","ivl","pod","className","includes","undefined","notes","getSemitoneCol","StyledColumnManager","$tablet","join","$desktop","_ref3","children","tablet","desktop","StyledChordsPage","PageLayout","displayName","componentId","title","subtitle","ColumnManager","CollectionCard","CHORD_PRESETS","chord","tags","Tag","StyledCard","card","CardHeader","level","action","AsTag","StyledTable","getIsTypeOmit","Col","isHeader","ColTag","WrapperTag","Link","Fragment","wrapperProps","to","Row","headerColIndicies","col","isConfig","hasOwnProperty","getIsConfig","colConfig","key","TableSection","rows","row","_ref4","tfoot","colGroups","caption","cg"],"sourceRoot":""}