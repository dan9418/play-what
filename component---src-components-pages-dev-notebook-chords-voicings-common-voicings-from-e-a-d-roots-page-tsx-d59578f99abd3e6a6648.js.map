{"version":3,"file":"component---src-components-pages-dev-notebook-chords-voicings-common-voicings-from-e-a-d-roots-page-tsx-d59578f99abd3e6a6648.js","mappings":"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","sources":["webpack://play-what/./src/components/pages/dev/notebook/chords/voicings/common-voicings-from-e-a-d-roots.page.tsx","webpack://play-what/./src/components/ui/Card.tsx","webpack://play-what/./src/components/ui/InputRow.tsx","webpack://play-what/./src/components/ui/Table.tsx","webpack://play-what/./src/viewers/fret-table/FretFlag.tsx","webpack://play-what/./src/viewers/fret-table/FretTable.tsx","webpack://play-what/./src/viewers/fretboard/Fretboard.tuning.ts","webpack://play-what/./src/viewers/fretboard/Fretboard.utils.ts","webpack://play-what/./src/viewers/fretboard/Fretboard.voicing.ts"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Chord from \"../../../../../../core/models/Chord\";\r\nimport { ChordId, NoteId } from \"../../../../../../core/models/Model.constants\";\r\nimport Note from \"../../../../../../core/models/Note\";\r\nimport FretTable from \"../../../../../../viewers/fret-table/FretTable\";\r\nimport {\r\n  VoicingId,\r\n  VOICING_PRESET_MAP,\r\n} from \"../../../../../../viewers/fretboard/Fretboard.voicing\";\r\nimport PageLayout from \"../../../../../layout/PageLayout\";\r\nimport Card, { StyledCard } from \"../../../../../ui/Card\";\r\nimport { StyledInputRow } from \"../../../../../ui/InputRow\";\r\nimport { Table } from \"../../../../../ui/Table\";\r\n\r\nconst StyledVoicingsPage = styled(PageLayout)`\r\n  ${StyledCard} {\r\n    margin-bottom: 16px;\r\n    > table {\r\n      width: 100%;\r\n      > tbody > tr > td {\r\n        padding: 8px;\r\n      }\r\n    }\r\n  }\r\n\r\n  ${StyledInputRow} {\r\n    margin-bottom: 16px;\r\n  }\r\n`;\r\n\r\nconst VOICINGS_E = [\r\n  VoicingId.Chord_Triad_EShape_1,\r\n  VoicingId.Chord_Seventh_EShape_1,\r\n  VoicingId.Chord_Shell_E_37,\r\n  VoicingId.Chord_Shell_E_73,\r\n];\r\n\r\nconst VOICINGS_A = [\r\n  VoicingId.Chord_Triad_AShape_1,\r\n  VoicingId.Chord_Seventh_AShape_1,\r\n  VoicingId.Chord_Shell_A_37,\r\n  VoicingId.Chord_Shell_A_73,\r\n];\r\n\r\nconst VOICINGS_D = [\r\n  VoicingId.Chord_Triad_DShape_1,\r\n  VoicingId.Chord_Seventh_DShape_1,\r\n  VoicingId.Chord_Shell_D_37,\r\n  VoicingId.Chord_Shell_D_73,\r\n];\r\n\r\nconst ROOTS = [\r\n  [\"E\", VOICINGS_E, [6, 10]],\r\n  [\"A\", VOICINGS_A, [2, 6]],\r\n  [\"D\", VOICINGS_D, [8, 12]],\r\n];\r\n\r\nconst getVoicingCols = ({ voicingIds, model, modelId, root, range }) =>\r\n  voicingIds.map((voicingId, i) => {\r\n    const instance = new model(modelId, { root });\r\n    return {\r\n      content: (\r\n        <FretTable\r\n          model={instance}\r\n          voicing={VOICING_PRESET_MAP.get(voicingId)}\r\n          fretRange={range}\r\n          showFretDots={false}\r\n          showFretNumbers={false}\r\n        />\r\n      ),\r\n    };\r\n  });\r\n\r\nconst getChordRows = (chords: any[], voicingIds: any[], root, range) => {\r\n  return chords.map((chord, i) => {\r\n    const { model, modelId } = chord;\r\n    return {\r\n      cols: [\r\n        modelId,\r\n        ...getVoicingCols({\r\n          voicingIds,\r\n          model,\r\n          modelId,\r\n          root,\r\n          range,\r\n        }),\r\n      ],\r\n    };\r\n  });\r\n};\r\n\r\nconst getRootCard = (root: string, voicings: any[], range: any) => {\r\n  return (\r\n    <Card title={`${root} Root`}>\r\n      <Table\r\n        thead={[{ cols: THEAD }]}\r\n        tbody={getChordRows(CHORDS, voicings, ROOT, range)}\r\n        headerColIndicies={[0]}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst THEAD = [\"Model\", \"Triad\", \"Seventh\", \"Drop 3-7\", \"Drop 7-3\"];\r\n\r\nconst CHORDS = [\r\n  {\r\n    model: Chord,\r\n    modelId: ChordId.Maj7,\r\n  },\r\n  {\r\n    model: Chord,\r\n    modelId: ChordId.Min7,\r\n  },\r\n  {\r\n    model: Chord,\r\n    modelId: ChordId.Dom7,\r\n  },\r\n  {\r\n    model: Chord,\r\n    modelId: ChordId.HalfDim7,\r\n  },\r\n];\r\n\r\nconst ROOT = Note.fromId(NoteId.C);\r\n\r\nconst Page: React.FC = () => {\r\n  return (\r\n    <StyledVoicingsPage title=\"Chord Voicings\">\r\n      {ROOTS.map(([root, voicings, range]) =>\r\n        getRootCard(root as string, voicings as VoicingId[], range)\r\n      )}\r\n    </StyledVoicingsPage>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledCard = styled.div`\r\n    background: ${props => props.theme.surface.card};\r\n    width: 100%;\r\n    border-radius: 16px;\r\n    padding: 16px;\r\n\r\n    .header {\r\n        margin-bottom: 16px;\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 8px;\r\n        justify-content: space-between;\r\n    }\r\n`;\r\n\r\nexport const CardHeader: React.FC<any> = ({ title, level = 2, action = null }) => {\r\n    const AsTag: any = `h${level}`;\r\n    return (\r\n        <div className=\"header\">\r\n            <AsTag>{title}</AsTag>\r\n            {action}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Card: React.FC<any> = ({ title, subtitle, action, children, level, ...rest }) => {\r\n    return (\r\n        <StyledCard {...rest}>\r\n            {title &&\r\n                <CardHeader title={title} action={action} level={level} />\r\n            }\r\n            {subtitle &&\r\n                <CardHeader title={subtitle} level={level + 1} />\r\n            }\r\n            {children}\r\n        </StyledCard >\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledInputRow = styled.div`\r\n    display: flex;\r\n    align-items: flex-start;\r\n    flex-direction: column;\r\n    width: 100%;\r\n\r\n    ${props => props.$y ? '' : `\r\n        @media(min-width: 512px) {\r\n            align-items: center;\r\n            flex-direction: row;\r\n            justify-content: space-between;\r\n            //margin-bottom: 8px;\r\n        }\r\n    `}\r\n\r\n    > label {\r\n        color: ${({ theme }) => theme.dark3};\r\n        font-weight: bold;\r\n        margin: 8px;\r\n        white-space: nowrap;\r\n    }\r\n`;\r\n\r\nconst InputRow = ({ label, children, y = false, ...rest }) => {\r\n    return (\r\n        <StyledInputRow $y={y} {...rest}>\r\n            <label>{label}</label>\r\n            <div>\r\n                {children}\r\n            </div>\r\n        </StyledInputRow>\r\n    );\r\n}\r\n\r\nexport default InputRow;\r\n","import { Link } from \"gatsby\";\r\nimport React, { Fragment, ReactNode } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledTable = styled.table``;\r\n\r\ntype TOmit = undefined | null | false;\r\n\r\nconst getIsTypeOmit = (data: any): data is TOmit =>\r\n  data === undefined || data === null || data === false;\r\n\r\n// Col\r\n\r\nexport interface IColConfig {\r\n  isHeader?: boolean;\r\n  content: any;\r\n  colSpan?: number;\r\n  className?: string;\r\n  link?: string;\r\n}\r\n\r\ninterface IColProps extends IColConfig {\r\n  index: number;\r\n}\r\n\r\ntype TCol = string | number | IColConfig | ReactNode;\r\n\r\nconst Col: React.FC<IColProps> = ({\r\n  index,\r\n  isHeader,\r\n  content,\r\n  colSpan,\r\n  className,\r\n  link,\r\n}) => {\r\n  const ColTag = isHeader ? \"th\" : \"td\";\r\n  const WrapperTag = link ? Link : Fragment;\r\n  const wrapperProps: any = link ? { to: link } : {};\r\n\r\n  return (\r\n    <ColTag colSpan={colSpan} className={className}>\r\n      <WrapperTag {...wrapperProps}>{content || \"\"}</WrapperTag>\r\n    </ColTag>\r\n  );\r\n};\r\n\r\n// Row\r\n\r\nexport interface IRowConfig {\r\n  cols: (TCol | TOmit)[];\r\n  className?: string;\r\n  isHeader?: boolean;\r\n  headerColIndicies?: number[];\r\n}\r\n\r\nconst getIsConfig = (col: TCol): col is IColConfig =>\r\n  typeof col === \"object\" && col !== null && col.hasOwnProperty(\"content\");\r\n\r\nconst Row: React.FC<IRowConfig> = ({\r\n  cols,\r\n  isHeader,\r\n  className,\r\n  headerColIndicies = [],\r\n}) => {\r\n  return (\r\n    <tr className={className}>\r\n      {cols.map((col: any, i) => {\r\n        if (getIsTypeOmit(col)) return null;\r\n        const isConfig = getIsConfig(col);\r\n        const colConfig = !isConfig ? { content: col } : col;\r\n        return (\r\n          <Col\r\n            key={i}\r\n            index={i}\r\n            isHeader={isHeader || headerColIndicies.includes(i)}\r\n            {...colConfig}\r\n          />\r\n        );\r\n      })}\r\n    </tr>\r\n  );\r\n};\r\n\r\n// Table Section\r\n\r\ninterface ITableSectionConfig {\r\n  Tag: \"thead\" | \"tfoot\" | \"tbody\";\r\n  rows: (IRowConfig | TOmit)[];\r\n  headerColIndicies?: number[];\r\n}\r\n\r\nconst TableSection: React.FC<ITableSectionConfig> = ({\r\n  Tag,\r\n  rows,\r\n  headerColIndicies,\r\n}) => (\r\n  <Tag>\r\n    {rows.map((row, i) => {\r\n      if (getIsTypeOmit(row)) return null;\r\n      return (\r\n        <Row\r\n          key={i}\r\n          isHeader={Tag !== \"tbody\"}\r\n          headerColIndicies={headerColIndicies}\r\n          {...row}\r\n        />\r\n      );\r\n    })}\r\n  </Tag>\r\n);\r\n\r\n// Table\r\n\r\ninterface IColGroup {\r\n  span?: number;\r\n  className?: string;\r\n}\r\n\r\ninterface ITableConfig {\r\n  thead?: (IRowConfig | TOmit)[];\r\n  tfoot?: (IRowConfig | TOmit)[];\r\n  tbody: (IRowConfig | TOmit)[];\r\n  styles?: any;\r\n  caption?: string;\r\n  colGroups?: IColGroup[];\r\n  className?: string;\r\n  headerColIndicies?: number[];\r\n}\r\n\r\nexport const Table: React.FC<ITableConfig> = ({\r\n  thead,\r\n  tfoot,\r\n  tbody,\r\n  styles,\r\n  colGroups,\r\n  caption,\r\n  headerColIndicies,\r\n  className,\r\n}) => {\r\n  return (\r\n    <StyledTable css={styles} className={className}>\r\n      {colGroups && (\r\n        <colgroup>\r\n          {colGroups.map((cg, i) => (\r\n            <col key={i} {...cg} />\r\n          ))}\r\n        </colgroup>\r\n      )}\r\n      {caption && <caption>{caption}</caption>}\r\n      {thead && (\r\n        <TableSection\r\n          Tag=\"thead\"\r\n          rows={thead}\r\n          headerColIndicies={headerColIndicies}\r\n        />\r\n      )}\r\n      {tfoot && (\r\n        <TableSection\r\n          Tag=\"tfoot\"\r\n          rows={tfoot}\r\n          headerColIndicies={headerColIndicies}\r\n        />\r\n      )}\r\n      {tbody && (\r\n        <TableSection\r\n          Tag=\"tbody\"\r\n          rows={tbody}\r\n          headerColIndicies={headerColIndicies}\r\n        />\r\n      )}\r\n    </StyledTable>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IFretFlagProps {\r\n  color?: string;\r\n  text?: string | number;\r\n  opacity?: number;\r\n}\r\n\r\nexport const StyledFretFlag = styled.div<{\r\n  $color?: string;\r\n  $opacity?: number;\r\n}>`\r\n  height: 16px;\r\n  width: 16px;\r\n  background: ${(props) => props.$color || \"\"};\r\n  opacity: ${(props) => props.$opacity || 1};\r\n  border-radius: 100%;\r\n  z-index: 1;\r\n`;\r\n\r\nconst FretFlag: React.FC<IFretFlagProps> = ({ color, text, opacity }) => {\r\n  return (\r\n    <StyledFretFlag $color={color} $opacity={opacity}>\r\n      {text}\r\n    </StyledFretFlag>\r\n  );\r\n};\r\n\r\nexport default FretFlag;\r\n","import * as React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { IColConfig, IRowConfig, Table } from \"../../components/ui/Table\";\r\nimport {\r\n  DEFAULT_FRETBOARD_PROPS,\r\n  getDotsForFret,\r\n  IFretboardProps,\r\n} from \"../fretboard/Fretboard.utils\";\r\nimport FretFlag from \"./FretFlag\";\r\nconst StyledFretTable = styled.div``;\r\n\r\nconst tableStyles = css`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  td,\r\n  th {\r\n    min-width: 18px;\r\n    text-align: center;\r\n  }\r\n  tbody td {\r\n    background-color: #e8dbb8;\r\n\r\n    border-right: 1px solid grey;\r\n    &:first-child {\r\n      border-left: 1px solid grey;\r\n    }\r\n    .fret-content {\r\n      min-height: 32px;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      position: relative;\r\n    }\r\n    .fret-string {\r\n      height: 1px;\r\n      background: #bbb;\r\n      width: 100%;\r\n      position: absolute;\r\n      margin: auto 0;\r\n    }\r\n  }\r\n  tbody tr {\r\n    &:first-child {\r\n      border-top: 1px solid grey;\r\n    }\r\n    &:last-child {\r\n      border-bottom: 1px solid grey;\r\n    }\r\n  }\r\n`;\r\n\r\nconst FretTable: React.FC<IFretboardProps> = (userProps) => {\r\n  const props = { ...DEFAULT_FRETBOARD_PROPS, ...userProps };\r\n\r\n  const { fretRange, showFretDots, showFretNumbers, tuning, colorMapFn } =\r\n    props;\r\n  const [lo, hi] = fretRange as [number, number];\r\n\r\n  const numFrets = hi - lo + 1;\r\n  const numStrings = (tuning as number[]).length;\r\n\r\n  const fretNums: number[] = [];\r\n  for (let i = 0; i < numFrets; i++) {\r\n    fretNums.push(lo + i);\r\n  }\r\n\r\n  const fretDots: string[] = [];\r\n  for (let i = 0; i < numFrets; i++) {\r\n    fretDots.push(getDotsForFret(lo + i));\r\n  }\r\n\r\n  const strings: IRowConfig[] = [];\r\n  for (let s = 0; s < numStrings; s++) {\r\n    const frets: IColConfig[] = [];\r\n    for (let f = lo; f <= hi; f++) {\r\n      frets.push({\r\n        content: (\r\n          <div className=\"fret-content\">\r\n            <div className=\"fret-string\" />\r\n            <FretFlag\r\n              color={(colorMapFn as any)({\r\n                stringIndex: s,\r\n                fretIndex: f,\r\n                ...props,\r\n              })}\r\n              text=\"\"\r\n              opacity={1}\r\n            />\r\n          </div>\r\n        ),\r\n      });\r\n    }\r\n    strings.push({\r\n      cols: frets,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <StyledFretTable>\r\n      <Table\r\n        thead={showFretNumbers ? [{ cols: fretNums }] : undefined}\r\n        tfoot={showFretDots ? [{ cols: fretDots }] : undefined}\r\n        tbody={strings}\r\n        styles={tableStyles}\r\n      />\r\n    </StyledFretTable>\r\n  );\r\n};\r\n\r\nexport default FretTable;\r\n","import ArrayUtils from \"../../core/general/Array.utils\";\r\nimport Note from '../../core/models/Note';\r\nimport { NoteId } from './../../core/models/Model.constants';\r\n\r\nexport enum TuningId {\r\n    Standard = 'standard',\r\n    StandardSeven = 'standard-seven',\r\n    StandardBass = 'standard-bass',\r\n    Flat = 'flat',\r\n    DoubleFlat = 'double-flat',\r\n    DropD = 'drop-d',\r\n    DADGAD = 'dadgad',\r\n    Banjo = 'banjo',\r\n    Violin = 'violin',\r\n    OpenA = 'open-a',\r\n    OpenB = 'open-b',\r\n    OpenC = 'open-c',\r\n    OpenD = 'open-d',\r\n    OpenE = 'open-e',\r\n    OpenF = 'open-f',\r\n    OpenG = 'open-g',\r\n}\r\n\r\nexport interface ITuning {\r\n    id: TuningId;\r\n    name: string;\r\n    value: number[]\r\n}\r\n\r\nconst formatPreset = (id: TuningId, name: string, value: number[]): ITuning => ({\r\n    id,\r\n    name,\r\n    value\r\n});\r\n\r\nconst getPitch = (noteId: NoteId, octave: number): number => Note.getNote(noteId, octave).pod[0];\r\n\r\nexport const TUNING_PRESET_MAP = new Map<TuningId, ITuning>([\r\n    [TuningId.Standard, formatPreset(\r\n        TuningId.Standard,\r\n        'Standard Guitar',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.E, 3)\r\n        ]\r\n    )],\r\n    [TuningId.Flat, formatPreset(\r\n        TuningId.Flat,\r\n        'Flat Gtr',\r\n        [\r\n            getPitch(NoteId.Eb, 5),\r\n            getPitch(NoteId.Bb, 4),\r\n            getPitch(NoteId.Gb, 4),\r\n            getPitch(NoteId.Db, 4),\r\n            getPitch(NoteId.Ab, 3),\r\n            getPitch(NoteId.Eb, 3)\r\n        ]\r\n    )],\r\n    [TuningId.DoubleFlat, formatPreset(\r\n        TuningId.DoubleFlat,\r\n        'Double Flat Gtr',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.F, 4),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    [TuningId.StandardSeven, formatPreset(\r\n        TuningId.StandardSeven,\r\n        'Standard 7-String Gtr',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.E, 3),\r\n            getPitch(NoteId.B, 3)\r\n        ]\r\n    )],\r\n    [TuningId.StandardBass, formatPreset(\r\n        TuningId.StandardBass,\r\n        'Standard Bass',\r\n        [\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.D, 3),\r\n            getPitch(NoteId.A, 2),\r\n            getPitch(NoteId.E, 2)\r\n        ]\r\n    )],\r\n    [TuningId.DropD, formatPreset(\r\n        TuningId.DropD,\r\n        'Drop D Gtr',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    [TuningId.DADGAD, formatPreset(\r\n        TuningId.DADGAD,\r\n        'DADGAD',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    // Unconfirmed\r\n    /*[TuningId.Banjo, formatPreset(\r\n        TuningId.Banjo,\r\n        'Banjo',\r\n        [\r\n            getPitch(NoteId.G, 5),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],*/\r\n    // Unconfirmed\r\n    [TuningId.Violin, formatPreset(\r\n        TuningId.Violin,\r\n        'Violin',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.G, 4)\r\n        ]\r\n    )],\r\n    [TuningId.OpenA, formatPreset(\r\n        TuningId.OpenA,\r\n        'Open A',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.E, 4),\r\n            getPitch(NoteId.Cs, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.E, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenB, formatPreset(\r\n        TuningId.OpenB,\r\n        'Open B',\r\n        [\r\n            getPitch(NoteId.Ds, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.Fs, 4),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.Fs, 3),\r\n            getPitch(NoteId.B, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenC, formatPreset(\r\n        TuningId.OpenC,\r\n        'Open C',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.C, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenD, formatPreset(\r\n        TuningId.OpenD,\r\n        'Open D',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.Fs, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenE, formatPreset(\r\n        TuningId.OpenE,\r\n        'Open E',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.Gs, 4),\r\n            getPitch(NoteId.E, 4),\r\n            getPitch(NoteId.B, 3),\r\n            getPitch(NoteId.E, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenF, formatPreset(\r\n        TuningId.OpenF,\r\n        'Open F',\r\n        [\r\n            getPitch(NoteId.F, 5),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.F, 4),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.F, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenG, formatPreset(\r\n        TuningId.OpenG,\r\n        'Open G',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )]\r\n]);\r\n\r\nexport const FRETBOARD_TUNING_VALUES = ArrayUtils.mapToArray(TUNING_PRESET_MAP);\r\n","import Chord from \"../../core/models/Chord\";\r\nimport IntervalSpan from \"../../core/models/Interval\";\r\nimport { IModelConfig } from \"../../core/models/Model.constants\";\r\nimport Note from \"../../core/models/Note\";\r\nimport Scale from \"../../core/models/Scale\";\r\nimport { ITuning, TuningId, TUNING_PRESET_MAP } from \"./Fretboard.tuning\";\r\nimport { IVoicing } from \"./Fretboard.voicing\";\r\n\r\nexport interface IFretLabelProps {\r\n  note?: Note;\r\n  color?: string;\r\n  freq?: number;\r\n}\r\n\r\nexport interface IFretboardProps {\r\n  fretRange?: [number, number];\r\n  showFretDots?: boolean;\r\n  showFretNumbers?: boolean;\r\n  colorMapFn?: (fretProps: IFretProps) => string | undefined;\r\n  voicing?: IVoicing;\r\n  tuning?: number[]; // ITuning,\r\n  model?: Chord | Scale;\r\n}\r\n\r\nexport interface IFretProps extends IFretboardProps {\r\n  stringIndex: number;\r\n  fretIndex: number;\r\n}\r\n\r\nexport const DOTTED_FRET_INDICES = [\r\n  true,\r\n  false,\r\n  false,\r\n  true,\r\n  false,\r\n  true,\r\n  false,\r\n  true,\r\n  false,\r\n  true,\r\n  false,\r\n  false,\r\n];\r\n\r\nexport const FRET_SIZE_RATIO = Math.pow(1 / 2, 1 / 12);\r\n\r\nexport const isIntervalInVoicing = (\r\n  interval: IntervalSpan,\r\n  voicing: IVoicing,\r\n  stringIndex: number\r\n) => {\r\n  if (!voicing || !voicing.value) return true;\r\n  const v = voicing.value[stringIndex];\r\n  const d = interval.getDegree();\r\n  if (Array.isArray(v)) {\r\n    return v.some((n) => doesVoicingValueMatch(d, n));\r\n  } else if (typeof v === \"number\") {\r\n    return doesVoicingValueMatch(d, v);\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const getFretColor = (props: IFretProps): string | undefined => {\r\n  const { stringIndex, fretIndex, tuning, model, voicing } = props;\r\n  const noteIndex = tuning[stringIndex] + fretIndex;\r\n  const [interval, note] = model.tryGetPodPairAtPitch(noteIndex);\r\n\r\n  if (!note) return;\r\n\r\n  if (voicing && !isIntervalInVoicing(interval, voicing, stringIndex)) {\r\n    return `#00000011`;\r\n  }\r\n\r\n  return interval.getColor();\r\n};\r\n\r\nexport const DEFAULT_FRETBOARD_PROPS: IFretboardProps = {\r\n  fretRange: [1, 12],\r\n  tuning: TUNING_PRESET_MAP.get(TuningId.Standard).value,\r\n  showFretDots: true,\r\n  showFretNumbers: true,\r\n  colorMapFn: getFretColor,\r\n};\r\n\r\nexport const getFretRatios = (numFrets: number): number[] => {\r\n  const ratios = [];\r\n  for (let i = 1; i <= numFrets; i++) {\r\n    ratios.push(i <= 1 ? 1 : ratios[i - 2] * FRET_SIZE_RATIO);\r\n  }\r\n  return ratios;\r\n};\r\n\r\nexport const getDotsForFret = (fretNumber: number): string => {\r\n  if (fretNumber === 0) return \"\";\r\n  const mod = fretNumber % 12;\r\n  if (mod === 0) return \"• •\";\r\n  else if (DOTTED_FRET_INDICES[mod]) return \"•\";\r\n  return \"\";\r\n};\r\n\r\nconst doesVoicingValueMatch = (d: number, v: number) => {\r\n  return d + 1 === v;\r\n};\r\n","import ArrayUtils from \"../../core/general/Array.utils\";\r\n\r\nexport enum VoicingId {\r\n    None = 'None',\r\n    Chord_Triad_CShape_1 = 'Chord_Triad_CShape_1',\r\n    Chord_Triad_AShape_1 = 'Chord_Triad_AShape_1',\r\n    Chord_Triad_GShape_1 = 'Chord_Triad_GShape_1',\r\n    Chord_Triad_EShape_1 = 'Chord_Triad_EShape_1',\r\n    Chord_Triad_DShape_1 = 'Chord_Triad_DShape_1',\r\n    Chord_Sixth_CShape_1 = 'Chord_Sixth_CShape_1',\r\n    Chord_Sixth_AShape_1 = 'Chord_Sixth_AShape_1',\r\n    Chord_Sixth_GShape_1 = 'Chord_Sixth_GShape_1',\r\n    Chord_Sixth_EShape_1 = 'Chord_Sixth_EShape_1',\r\n    Chord_Sixth_DShape_1 = 'Chord_Sixth_DShape_1',\r\n    Chord_Seventh_CShape_1 = 'Chord_Seventh_CShape_1',\r\n    Chord_Seventh_AShape_1 = 'Chord_Seventh_AShape_1',\r\n    Chord_Seventh_GShape_1 = 'Chord_Seventh_GShape_1',\r\n    Chord_Seventh_EShape_1 = 'Chord_Seventh_EShape_1',\r\n    Chord_Seventh_DShape_1 = 'Chord_Seventh_DShape_1',\r\n    Chord_Shell_E_37 = 'Chord_Shell_E_37',\r\n    Chord_Shell_E_73 = 'Chord_Shell_E_73',\r\n    Chord_Shell_A_37 = 'Chord_Shell_A_37',\r\n    Chord_Shell_A_73 = 'Chord_Shell_A_73',\r\n    Chord_Shell_D_37 = 'Chord_Shell_D_37',\r\n    Chord_Shell_D_73 = 'Chord_Shell_D_73',\r\n    Scale_DoubleOctave_CShape_1 = 'Scale_DoubleOctave_CShape_1',\r\n    Scale_DoubleOctave_CShape_2 = 'Scale_DoubleOctave_CShape_2',\r\n    Scale_DoubleOctave_AShape_1 = 'Scale_DoubleOctave_AShape_1',\r\n    Scale_DoubleOctave_GShape_1 = 'Scale_DoubleOctave_GShape_1',\r\n    Scale_DoubleOctave_EShape_1 = 'Scale_DoubleOctave_EShape_1',\r\n    Scale_DoubleOctave_EShape_2 = 'Scale_DoubleOctave_EShape_2',\r\n    Scale_DoubleOctave_DShape_1 = 'Scale_DoubleOctave_DShape_1',\r\n}\r\n\r\nexport interface IVoicing {\r\n    id: VoicingId;\r\n    name: string;\r\n    value: (number | number[])[]\r\n}\r\n\r\nconst formatPreset = (id: VoicingId, name: string, value: (number | number[])[]): IVoicing => ({\r\n    id,\r\n    name,\r\n    value\r\n});\r\n\r\nexport const VOICING_PRESET_MAP = new Map<VoicingId, IVoicing>([\r\n    // Triads\r\n    [VoicingId.Chord_Triad_CShape_1, formatPreset(\r\n        VoicingId.Chord_Triad_CShape_1,\r\n        'C Shape Triad',\r\n        [3, 1, 5, 3, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Triad_AShape_1, formatPreset(\r\n        VoicingId.Chord_Triad_AShape_1,\r\n        'A Shape Triad',\r\n        [5, 3, 1, 5, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Triad_GShape_1, formatPreset(\r\n        VoicingId.Chord_Triad_GShape_1,\r\n        'G Shape Triad',\r\n        [1, 5, 1, 5, 3, 1]\r\n    )],\r\n    [VoicingId.Chord_Triad_EShape_1, formatPreset(\r\n        VoicingId.Chord_Triad_EShape_1,\r\n        'E Shape Triad',\r\n        [1, 5, 3, 1, 5, 1]\r\n    )],\r\n    [VoicingId.Chord_Triad_DShape_1, formatPreset(\r\n        VoicingId.Chord_Triad_DShape_1,\r\n        'D Shape Triad',\r\n        [3, 1, 5, 1, null, null]\r\n    )],\r\n    // Sixths\r\n    [VoicingId.Chord_Sixth_CShape_1, formatPreset(\r\n        VoicingId.Chord_Sixth_CShape_1,\r\n        'C Shape 6th Chord',\r\n        [3, 6, 5, 3, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Sixth_AShape_1, formatPreset(\r\n        VoicingId.Chord_Sixth_AShape_1,\r\n        'A Shape 6th Chord',\r\n        [5, 3, 6, 5, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Sixth_GShape_1, formatPreset(\r\n        VoicingId.Chord_Sixth_GShape_1,\r\n        'G Shape 6th Chord',\r\n        [6, 5, 1, 5, 3, 1]\r\n    )],\r\n    [VoicingId.Chord_Sixth_EShape_1, formatPreset(\r\n        VoicingId.Chord_Sixth_EShape_1,\r\n        'E Shape 6th Chord',\r\n        [1, 5, 3, 6, 5, 1]\r\n    )],\r\n    [VoicingId.Chord_Sixth_DShape_1, formatPreset(\r\n        VoicingId.Chord_Sixth_DShape_1,\r\n        'D Shape 6th Chord',\r\n        [3, 6, 5, 1, null, null]\r\n    )],\r\n    // Sevenths\r\n    [VoicingId.Chord_Seventh_CShape_1, formatPreset(\r\n        VoicingId.Chord_Seventh_CShape_1,\r\n        'C Shape 7th Chord',\r\n        [3, 7, 5, 3, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Seventh_AShape_1, formatPreset(\r\n        VoicingId.Chord_Seventh_AShape_1,\r\n        'A Shape 7th Chord',\r\n        [5, 3, 7, 5, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Seventh_GShape_1, formatPreset(\r\n        VoicingId.Chord_Seventh_GShape_1,\r\n        'G Shape 7th Chord',\r\n        [7, 5, 1, 5, 3, 1]\r\n    )],\r\n    [VoicingId.Chord_Seventh_EShape_1, formatPreset(\r\n        VoicingId.Chord_Seventh_EShape_1,\r\n        'E Shape 7th Chord',\r\n        [1, 5, 3, 7, 5, 1]\r\n    )],\r\n    [VoicingId.Chord_Seventh_DShape_1, formatPreset(\r\n        VoicingId.Chord_Seventh_DShape_1,\r\n        'D Shape 7th Chord',\r\n        [3, 7, 5, 1, null, null]\r\n    )],\r\n    // Shells\r\n    [VoicingId.Chord_Shell_E_37, formatPreset(\r\n        VoicingId.Chord_Shell_E_37,\r\n        'Shell E 3-7',\r\n        [null, null, null, 7, 3, 1]\r\n    )],\r\n    [VoicingId.Chord_Shell_E_73, formatPreset(\r\n        VoicingId.Chord_Shell_E_73,\r\n        'Shell E 7-3',\r\n        [null, null, 3, 7, null, 1]\r\n    )],\r\n    [VoicingId.Chord_Shell_A_37, formatPreset(\r\n        VoicingId.Chord_Shell_A_37,\r\n        'Shell A 3-7',\r\n        [null, null, 7, 3, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Shell_A_73, formatPreset(\r\n        VoicingId.Chord_Shell_A_73,\r\n        'Shell A 7-3',\r\n        [null, 3, 7, null, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Shell_D_37, formatPreset(\r\n        VoicingId.Chord_Shell_D_37,\r\n        'Shell D 3-7',\r\n        [null, 7, 3, 1, null, null]\r\n    )],\r\n    [VoicingId.Chord_Shell_D_73, formatPreset(\r\n        VoicingId.Chord_Shell_D_73,\r\n        'Shell D 7-3',\r\n        [3, 7, null, 1, null, null]\r\n    )],\r\n    // CAGED Scales\r\n    [VoicingId.Scale_DoubleOctave_EShape_1, formatPreset(\r\n        VoicingId.Scale_DoubleOctave_EShape_1,\r\n        'E Shape Scale (Locrian)',\r\n        [[1, 2, 3], [6, 7], [3, 4, 5], [7, 1, 2], [4, 5, 6], [1, 2, 3]]\r\n    )],\r\n    [VoicingId.Scale_DoubleOctave_EShape_2, formatPreset(\r\n        VoicingId.Scale_DoubleOctave_EShape_2,\r\n        'E Shape Scale (Ionian)',\r\n        [[7, 1, 2], [5, 6], [2, 3, 4], [6, 7, 1], [3, 4, 5], [1, 2]]\r\n    )],\r\n    [VoicingId.Scale_DoubleOctave_DShape_1, formatPreset(\r\n        VoicingId.Scale_DoubleOctave_DShape_1,\r\n        'D Shape Scale (Dorian)',\r\n        [[1, 2, 3], [5, 6, 7], [2, 3, 4], [6, 7, 1], [4, 5], [1, 2, 3]]\r\n    )],\r\n    [VoicingId.Scale_DoubleOctave_CShape_1, formatPreset(\r\n        VoicingId.Scale_DoubleOctave_CShape_1,\r\n        'C Shape Scale (Phrygian)',\r\n        [[1, 2, 3], [5, 6, 7], [3, 4], [7, 1, 2], [4, 5, 6], [1, 2, 3]]\r\n    )],\r\n    [VoicingId.Scale_DoubleOctave_CShape_2, formatPreset(\r\n        VoicingId.Scale_DoubleOctave_CShape_2,\r\n        'C Shape Scale (Lydian)',\r\n        [[7, 1, 2], [4, 5, 6], [2, 3], [6, 7, 1], [3, 4, 5], [1, 2]]\r\n    )],\r\n    [VoicingId.Scale_DoubleOctave_AShape_1, formatPreset(\r\n        VoicingId.Scale_DoubleOctave_AShape_1,\r\n        'A Shape Scale (Mixolydian)',\r\n        [[1, 2], [5, 6, 7], [2, 3, 4], [6, 7, 1], [3, 4, 5], [1, 2]]\r\n    )],\r\n    [VoicingId.Scale_DoubleOctave_GShape_1, formatPreset(\r\n        VoicingId.Scale_DoubleOctave_GShape_1,\r\n        'G Shape Scale (Aeolian)',\r\n        [[1, 2, 3], [5, 6, 7], [2, 3, 4], [7, 1], [4, 5, 6], [1, 2, 3]]\r\n    )]\r\n])\r\n\r\nexport const VOICING_PRESETS = ArrayUtils.mapToArray(VOICING_PRESET_MAP);\r\n"],"names":["StyledVoicingsPage","styled","PageLayout","withConfig","StyledCard","StyledInputRow","ROOTS","VoicingId","getVoicingCols","voicingIds","model","modelId","root","range","map","voicingId","i","instance","content","React","FretTable","voicing","VOICING_PRESET_MAP","fretRange","showFretDots","showFretNumbers","getChordRows","chords","chord","cols","THEAD","CHORDS","Chord","ChordId","ROOT","Note","NoteId","title","voicings","Card","Table","thead","tbody","headerColIndicies","getRootCard","props","theme","surface","card","CardHeader","level","action","AsTag","className","subtitle","children","rest","$y","dark3","label","y","StyledTable","getIsTypeOmit","data","Col","index","isHeader","colSpan","link","ColTag","WrapperTag","Link","Fragment","wrapperProps","to","Row","col","isConfig","hasOwnProperty","getIsConfig","colConfig","key","includes","TableSection","Tag","rows","row","tfoot","styles","colGroups","caption","cg","StyledFretFlag","$color","$opacity","color","text","opacity","StyledFretTable","tableStyles","css","userProps","DEFAULT_FRETBOARD_PROPS","tuning","colorMapFn","lo","hi","numFrets","numStrings","length","fretNums","push","fretDots","getDotsForFret","strings","s","frets","f","FretFlag","stringIndex","fretIndex","undefined","TuningId","formatPreset","id","name","value","getPitch","noteId","octave","pod","TUNING_PRESET_MAP","Map","Standard","Flat","DoubleFlat","StandardSeven","StandardBass","DropD","DADGAD","Violin","OpenA","OpenB","OpenC","OpenD","OpenE","OpenF","OpenG","FRETBOARD_TUNING_VALUES","ArrayUtils","DOTTED_FRET_INDICES","isIntervalInVoicing","Math","pow","interval","v","d","getDegree","Array","isArray","some","n","doesVoicingValueMatch","noteIndex","tryGetPodPairAtPitch","getColor","fretNumber","mod","Chord_Triad_CShape_1","Chord_Triad_AShape_1","Chord_Triad_GShape_1","Chord_Triad_EShape_1","Chord_Triad_DShape_1","Chord_Sixth_CShape_1","Chord_Sixth_AShape_1","Chord_Sixth_GShape_1","Chord_Sixth_EShape_1","Chord_Sixth_DShape_1","Chord_Seventh_CShape_1","Chord_Seventh_AShape_1","Chord_Seventh_GShape_1","Chord_Seventh_EShape_1","Chord_Seventh_DShape_1","Chord_Shell_E_37","Chord_Shell_E_73","Chord_Shell_A_37","Chord_Shell_A_73","Chord_Shell_D_37","Chord_Shell_D_73","Scale_DoubleOctave_EShape_1","Scale_DoubleOctave_EShape_2","Scale_DoubleOctave_DShape_1","Scale_DoubleOctave_CShape_1","Scale_DoubleOctave_CShape_2","Scale_DoubleOctave_AShape_1","Scale_DoubleOctave_GShape_1","VOICING_PRESETS"],"sourceRoot":""}