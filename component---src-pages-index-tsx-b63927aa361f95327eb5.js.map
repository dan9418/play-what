{"version":3,"file":"component---src-pages-index-tsx-b63927aa361f95327eb5.js","mappings":"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","sources":["webpack://play-what/./src/components/pages/view/view.defaults.ts","webpack://play-what/./src/components/search/SearchBar.tsx","webpack://play-what/./static/logo.png","webpack://play-what/./static/note-logo.png","webpack://play-what/./src/components/pages/IndexPage.tsx","webpack://play-what/./src/pages/index.tsx","webpack://play-what/./src/viewers/fretboard/Fretboard.styles.tsx","webpack://play-what/./src/viewers/fretboard/FretLabel.tsx","webpack://play-what/./src/viewers/fretboard/Fretboard.tsx","webpack://play-what/./src/viewers/fretboard/Fretboard.tuning.ts","webpack://play-what/./src/viewers/fretboard/Fretboard.utils.ts"],"sourcesContent":["import Chord from \"../../../core/models/Chord\";\r\nimport { ChordId, NoteId } from \"../../../core/models/Model.constants\";\r\nimport Note from \"../../../core/models/Note\";\r\n\r\nexport const DEFAULT_MODEL = new Chord(ChordId.Maj7, { root: Note.fromId(NoteId.C) })\r\n","import { navigate } from \"gatsby\";\r\nimport React, { useState } from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nconst StyledSearchBar = styled.form`\r\n    width: 100%;\r\n    .search-bar {\r\n        width: 100%;\r\n        max-width: 512px;\r\n        display: grid;\r\n        grid-template-columns: 1fr auto;\r\n\r\n        input, button {\r\n            padding: 8px 8px;\r\n            border-radius: 8px;\r\n            border: 1px solid ${props => props.theme.utils.border};\r\n        }\r\n\r\n        input {\r\n            border-radius: 8px 0 0 8px;\r\n            border-right: none;\r\n        }\r\n\r\n        button {\r\n            border-radius: 0 8px 8px 0;\r\n            cursor: pointer;\r\n            color: white;\r\n            font-weight: bold;\r\n            background-color: ${props => props.theme.action.interactive};\r\n            border-left: none;\r\n            padding: 8px 16px;\r\n\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n        }\r\n    }\r\n`;\r\n\r\nconst SearchBar: React.FC<any> = ({ searchRef, query: externalQuery, setQuery: externalSetQuery, placeholder }) => {\r\n    const [_query, _setQuery] = useState('');\r\n    const query = typeof externalQuery === 'undefined' ? _query : externalQuery;\r\n    const setQuery = typeof externalSetQuery === 'undefined' ? _setQuery : externalSetQuery;\r\n\r\n    const onChange = e => {\r\n        setQuery(e.target.value);\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        const value = e.target.elements.query.value;\r\n        const query = new URLSearchParams({ query: value });\r\n        const qs = query ? `?${query.toString()}` : '';\r\n        const path = `/search/${qs}`;\r\n        navigate(path);\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <StyledSearchBar role=\"search\" onSubmit={onSubmit}>\r\n            <div className=\"search-bar\">\r\n                <input\r\n                    type=\"search\"\r\n                    id=\"site-search\"\r\n                    name=\"query\"\r\n                    ref={searchRef}\r\n                    onChange={onChange}\r\n                    value={query as string}\r\n                    placeholder={placeholder || \"Search the site...\"}\r\n                />\r\n                <button type=\"submit\" >Search</button>\r\n            </div>\r\n        </StyledSearchBar>\r\n    );\r\n};\r\n\r\nexport default SearchBar;\r\n","export default __webpack_public_path__ + \"static/logo-d3957ffe370a23c288d3dadc5c305ef6.png\";","export default __webpack_public_path__ + \"static/note-logo-cb5461ffd02ca1a1d24052d2c99b9492.png\";","import { Link } from \"gatsby\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styled from 'styled-components';\r\nimport logoSrc from '../../../static/logo.png';\r\nimport placeholderSrc from '../../../static/note-logo.png';\r\nimport { getModelIdText } from \"../../core/models/Model.constants\";\r\nimport { ALL_PRESETS, NOTE_PRESETS } from \"../../core/models/Model.presets\";\r\nimport Fretboard from \"../../viewers/fretboard/Fretboard\";\r\nimport ButtonInput from \"../inputs/ButtonInput\";\r\nimport { StyledPageBody } from \"../layout/PageBody\";\r\nimport SearchBar from \"../search/SearchBar\";\r\nimport SEO from \"../utils/SEO\";\r\nimport { DEFAULT_MODEL } from \"./view/view.defaults\";\r\n\r\n\r\nconst StyledHomePage = styled(StyledPageBody)`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\t//justify-content: center;\r\n\r\n\t.logo {\r\n\t\twidth: 256px;\r\n\t\tmargin: 16px 0 32px;\r\n\t\t@media(min-width: 512px) {\r\n\t\t\twidth: 512px;\r\n\t\t\tmargin: 32px 0 64px;\r\n\t\t}\r\n\t\t@media(min-width: 1024px) {\r\n\t\t\twidth: 1024px;\r\n\t\t\tmargin: 64px 0 128px;\r\n\t\t}\r\n\t}\r\n\r\n\t.placeholder {\r\n\t\twidth: 128px;\r\n\t}\r\n\r\n\t.intro {\r\n\t\tmax-width: 768px;\r\n\t\tcolor: ${({ theme }) => theme.text.primary};\r\n\t\ttext-align: center;\r\n\t\tline-height: 120%;\r\n\t\tfont-size: 120%;\r\n\t\t@media(min-width: 512px) {\r\n\t\t\tfont-size: 140%;\r\n\t\t}\r\n\t\t@media(min-width: 1024px) {\r\n\t\t\tfont-size: 160%;\r\n\t\t}\r\n\t}\r\n\r\n\t.disclaimer {\r\n\t\tfont-style: italic;\r\n\t\tcolor: ${({ theme }) => theme.text.secondary};\r\n\t\ttext-align: center;\r\n\t\tmargin: 8px 0;\r\n\t\tfont-size: 80%;\r\n\t\t@media(min-width: 512px) {\r\n\t\t\tmargin: 16px 0;\r\n\t\t\tfont-size: 100%;\r\n\t\t}\r\n\t\t@media(min-width: 1024px) {\r\n\t\t\tmargin: 32px 0;\r\n\t\t\tfont-size: 120%;\r\n\t\t}\r\n\t}\r\n\r\n\tsection {\r\n\t\tborder-top: 1px solid ${({ theme }) => theme.utils.border};\r\n\t\twidth: 100%;\r\n    \tmargin-top: 32px;\r\n\r\n\t\t& > div {\r\n\t\t\tdisplay: grid;\r\n\t\t\tgrid-template-columns: 1fr;\r\n\t\t\tgap: 32px;\r\n\t\t\t@media(min-width: 512px) {\r\n\t\t\t\tgrid-template-columns: 1fr 1fr;\r\n\t\t\t}\r\n\r\n\t\t\t& > div:first-child {\r\n\t\t\t\ta {\r\n\t\t\t\t\tdisplay: block;\r\n\t\t\t\t\tmargin-top: 16px;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t& > div:last-child {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tjustify-content: center;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t&:last-child {\r\n\t\t\tmargin-bottom: 256px;\r\n\t\t}\r\n\t}\r\n\r\n\th3 {\r\n\t\tmargin: 32px 0 16px;\r\n\t\tcolor: ${({ theme }) => theme.surface.nav};\r\n\t}\r\n\r\n\t> a {\r\n\t\tborder-radius: 8px;\r\n\t\tcursor: pointer;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\tbackground-color: ${props => props.theme.action.interactive};\r\n\t\tpadding: 8px 16px;\r\n\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\r\n\t\twidth: 100%;\r\n\t\tmax-width: 512px;\r\n\r\n\t\t&:hover {\r\n\t\t\tcolor: white;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst IndexPage: React.FC<any> = () => {\r\n\tconst [placeholder, setPlaceholder] = useState('Search the site');\r\n\r\n\tuseEffect(() => {\r\n\t\tconst id = setInterval(() => {\r\n\t\t\tconst root = NOTE_PRESETS[Math.floor(Math.random() * NOTE_PRESETS.length)];\r\n\t\t\tconst structure = ALL_PRESETS[Math.floor(Math.random() * ALL_PRESETS.length)];\r\n\t\t\tconst text = `${root.name} ${structure.name} ${getModelIdText(structure.modelType)}`;\r\n\t\t\tsetPlaceholder(text);\r\n\t\t}, 2000);\r\n\t\treturn () => clearInterval(id);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<StyledHomePage>\r\n\t\t\t<SEO />\r\n\t\t\t<img src={logoSrc} className=\"logo\" />\r\n\t\t\t<p className=\"intro\">\r\n\t\t\t\tA toolkit for exploring and visualizing musical concepts\r\n\t\t\t</p>\r\n\t\t\t<p className=\"disclaimer\">\r\n\t\t\t\tThis site is under active development and is currently unstable.<br />A formal Beta release is planned for Q2 2022.\r\n\t\t\t</p>\r\n\t\t\t<section>\r\n\t\t\t\t<h3>Visualize notes on instruments</h3>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<p>Project notes on a variety of instruments and customize them to your hearts content. Play What supports different tunings, voicings, inversions, and colors.</p>\r\n\t\t\t\t\t\t<Link to=\"/view/fretboard\">Try It Now</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Fretboard\r\n\t\t\t\t\t\t\tmodel={DEFAULT_MODEL}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t\t<section>\r\n\t\t\t\t<h3>Explore chords and scales</h3>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<p>Browse an extensive library of chords, scales, and modes in every key. Easily identify relationships between them and jump between pages.</p>\r\n\t\t\t\t\t\t<Link to=\"/browse\">Start Browsing</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Link to=\"/browse\"><ButtonInput>Explore Now!</ButtonInput></Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t\t<section>\r\n\t\t\t\t<h3>Search the world of music theory</h3>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<p>Search for any chord, scale, or mode in any key. Bookmark any page.</p>\r\n\t\t\t\t\t\t<Link to=\"/search\">Go To Search Page</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<SearchBar placeholder={placeholder} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t\t<section>\r\n\t\t\t\t<h3>Build your own practice materials</h3>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<p>Customize your own cheat sheets, flash cards, chord charts, and tabs.</p>\r\n\t\t\t\t\t\t<Link to=\"/\">Coming Soon!</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<img src={placeholderSrc} className=\"placeholder\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t</StyledHomePage>\r\n\t);\r\n};\r\n\r\nexport default IndexPage;\r\n","import IndexPage from \"../components/pages/IndexPage\";\r\n\r\nexport default IndexPage;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledFretboard = styled.div`\r\n    display: inline-grid;\r\n\twidth: 100%;\r\n\tbackground-image: radial-gradient(ellipse, #E8DBB8 0%, #D0B27C 100%);\r\n\tfont-size: 90%;\r\n\tmargin: 16px 0;\r\n\r\n    .fret {\r\n        display: inline-flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        position: relative;\r\n        border-right: 2px solid darkgrey;\r\n    }\r\n\r\n    .fret.open {\r\n        border-right: 3px solid grey;\r\n        background-color: #D0B27C;;\r\n    }\r\n\r\n    /* Used to maintain aspect ratio */\r\n\r\n    .fret::before {\r\n        content: \"\";\r\n        display: block;\r\n        height: 0;\r\n        width: 0;\r\n        margin-top: calc(1/2 * 100%);\r\n    }\r\n\r\n    /* Fret String */\r\n\r\n    .fret-string {\r\n        border-top: 1px solid grey;\r\n        width: 100%;\r\n    }\r\n\r\n    /* Fret Numbers */\r\n\r\n    .fret-number {\r\n        position: absolute;\r\n        bottom: 100%;\r\n    }\r\n\r\n    /* Fret Dots */\r\n\r\n    .fret-dots {\r\n        position: absolute;\r\n        top: 95%;\r\n        font-size: 16px;\r\n        white-space: nowrap;\r\n    }\r\n\r\n    .fret-number, .fret-dots {\r\n        color: #888;\r\n    }\r\n`;\r\n\r\nexport default StyledFretboard;\r\n","\r\nimport * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { IFretProps } from \"./Fretboard.utils\";\r\n\r\nconst StyledFretLabel = styled.div`\r\n\tposition: absolute;\r\n\theight: 60%;\r\n\taspect-ratio: 1;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tborder-radius: 100%;\r\n\tbackground-color: ${({ $bgColor }) => $bgColor ? $bgColor : 'transparent'};\r\n\tcolor: ${({ $fgColor }) => $fgColor ? $fgColor : ''};\r\n\r\n\tcursor: pointer;\r\n\t&:hover {\r\n\t\theight: 80%;\r\n\t}\r\n`;\r\n\r\n\r\nconst FretLabel: React.FC<IFretProps> = props => {\r\n\r\n\tconst bgColor = props.colorMapFn(props);\r\n\r\n\tlet fgColor = 'white';\r\n\r\n\treturn (\r\n\t\t<StyledFretLabel $bgColor={bgColor} $fgColor={fgColor} onClick={null} className=\"fret-label\">\r\n\t\t\t{null}\r\n\t\t</StyledFretLabel>\r\n\t);\r\n};\r\n\r\nexport default FretLabel;\r\n","import * as React from \"react\";\r\nimport StyledFretboard from \"./Fretboard.styles\";\r\nimport { DEFAULT_FRETBOARD_PROPS, getDotsForFret, getFretRatios, IFretboardProps, IFretProps } from \"./Fretboard.utils\";\r\nimport FretLabel from \"./FretLabel\";\r\n\r\nexport const Fret: React.FC<IFretProps> = props => {\r\n\r\n\tconst { tuning, stringIndex, fretIndex, showFretNumbers, showFretDots } = props;\r\n\r\n\tconst classes = ['fret'];\r\n\tif (fretIndex === 0)\r\n\t\tclasses.push('open');\r\n\r\n\tconst isLowString = stringIndex === tuning.length - 1;\r\n\tconst isHighString = stringIndex === 0;\r\n\r\n\treturn (\r\n\t\t<div className={classes.join(' ')}>\r\n\t\t\t<div className=\"fret-number\">\r\n\t\t\t\t{showFretNumbers && isHighString && fretIndex > 0 && fretIndex}\r\n\t\t\t</div>\r\n\t\t\t<div className='fret-string' />\r\n\t\t\t<FretLabel {...props} />\r\n\t\t\t<div className=\"fret-dots\">\r\n\t\t\t\t{showFretDots && isLowString && fretIndex > 0 && getDotsForFret(fretIndex)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst getFrets = (props: IFretboardProps) => {\r\n\tconst { fretRange, tuning } = props;\r\n\tconst [lo, hi] = fretRange;\r\n\r\n\tconst allFrets = [];\r\n\tfor (let s = 0; s < tuning.length; s++) {\r\n\t\tfor (let f = lo; f <= hi; f++) {\r\n\t\t\tallFrets.push(\r\n\t\t\t\t<Fret\r\n\t\t\t\t\tkey={`s${s}-f${f}`}\r\n\t\t\t\t\tstringIndex={s}\r\n\t\t\t\t\tfretIndex={f}\r\n\t\t\t\t\ttuning={tuning}\r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\treturn allFrets;\r\n};\r\n\r\nconst Fretboard: React.FC<IFretboardProps> = (userProps) => {\r\n\tconst props = { ...DEFAULT_FRETBOARD_PROPS, ...userProps };\r\n\r\n\tconst [lo, hi] = props.fretRange;\r\n\tconst numFrets = hi - lo + 1;\r\n\tconst numStrings = props.tuning.length;\r\n\tconst gridTemplateColumns = getFretRatios(numFrets).map(n => n + 'fr').join(' ');\r\n\tconst gridTemplateRows = `repeat(${numStrings}, 1fr)`;\r\n\tconst fretboardStyles = {\r\n\t\tgridTemplateColumns,\r\n\t\tgridTemplateRows\r\n\t};\r\n\r\n\treturn (\r\n\t\t<StyledFretboard className='fretboard' style={fretboardStyles}>\r\n\t\t\t{getFrets(props)}\r\n\t\t</StyledFretboard>\r\n\t);\r\n};\r\n\r\nexport default Fretboard;\r\n","import ArrayUtils from \"../../core/general/Array.utils\";\r\nimport Note from '../../core/models/Note';\r\nimport { NoteId } from './../../core/models/Model.constants';\r\n\r\nexport enum TuningId {\r\n    Standard = 'standard',\r\n    StandardSeven = 'standard-seven',\r\n    StandardBass = 'standard-bass',\r\n    Flat = 'flat',\r\n    DoubleFlat = 'double-flat',\r\n    DropD = 'drop-d',\r\n    DADGAD = 'dadgad',\r\n    Banjo = 'banjo',\r\n    Violin = 'violin',\r\n    OpenA = 'open-a',\r\n    OpenB = 'open-b',\r\n    OpenC = 'open-c',\r\n    OpenD = 'open-d',\r\n    OpenE = 'open-e',\r\n    OpenF = 'open-f',\r\n    OpenG = 'open-g',\r\n}\r\n\r\nexport interface ITuning {\r\n    id: TuningId;\r\n    name: string;\r\n    value: number[]\r\n}\r\n\r\nconst formatPreset = (id: TuningId, name: string, value: number[]): ITuning => ({\r\n    id,\r\n    name,\r\n    value\r\n});\r\n\r\nconst getPitch = (noteId: NoteId, octave: number): number => Note.getNote(noteId, octave).pod[0];\r\n\r\nexport const TUNING_PRESET_MAP = new Map<TuningId, ITuning>([\r\n    [TuningId.Standard, formatPreset(\r\n        TuningId.Standard,\r\n        'Standard',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.E, 3)\r\n        ]\r\n    )],\r\n    [TuningId.Flat, formatPreset(\r\n        TuningId.Flat,\r\n        'Flat',\r\n        [\r\n            getPitch(NoteId.Eb, 5),\r\n            getPitch(NoteId.Bb, 4),\r\n            getPitch(NoteId.Gb, 4),\r\n            getPitch(NoteId.Db, 4),\r\n            getPitch(NoteId.Ab, 3),\r\n            getPitch(NoteId.Eb, 3)\r\n        ]\r\n    )],\r\n    [TuningId.DoubleFlat, formatPreset(\r\n        TuningId.DoubleFlat,\r\n        'Double Flat',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.F, 4),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    [TuningId.StandardSeven, formatPreset(\r\n        TuningId.StandardSeven,\r\n        'Standard 7-String',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.E, 3),\r\n            getPitch(NoteId.B, 3)\r\n        ]\r\n    )],\r\n    [TuningId.StandardBass, formatPreset(\r\n        TuningId.StandardBass,\r\n        'Standard Bass',\r\n        [\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.D, 3),\r\n            getPitch(NoteId.A, 2),\r\n            getPitch(NoteId.E, 2)\r\n        ]\r\n    )],\r\n    [TuningId.DropD, formatPreset(\r\n        TuningId.DropD,\r\n        'Drop D',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    [TuningId.DADGAD, formatPreset(\r\n        TuningId.DADGAD,\r\n        'DADGAD',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    // Unconfirmed\r\n    [TuningId.Banjo, formatPreset(\r\n        TuningId.Banjo,\r\n        'Banjo',\r\n        [\r\n            getPitch(NoteId.G, 5),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    // Unconfirmed\r\n    [TuningId.Violin, formatPreset(\r\n        TuningId.Violin,\r\n        'Violin',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.G, 4)\r\n        ]\r\n    )],\r\n    [TuningId.OpenA, formatPreset(\r\n        TuningId.OpenA,\r\n        'Open A',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.E, 4),\r\n            getPitch(NoteId.Cs, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.E, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenB, formatPreset(\r\n        TuningId.OpenB,\r\n        'Open B',\r\n        [\r\n            getPitch(NoteId.Ds, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.Fs, 4),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.Fs, 3),\r\n            getPitch(NoteId.B, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenC, formatPreset(\r\n        TuningId.OpenC,\r\n        'Open C',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.C, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenD, formatPreset(\r\n        TuningId.OpenD,\r\n        'Open D',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.Fs, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenE, formatPreset(\r\n        TuningId.OpenE,\r\n        'Open E',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.Gs, 4),\r\n            getPitch(NoteId.E, 4),\r\n            getPitch(NoteId.B, 3),\r\n            getPitch(NoteId.E, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenF, formatPreset(\r\n        TuningId.OpenF,\r\n        'Open F',\r\n        [\r\n            getPitch(NoteId.F, 5),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.F, 4),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.F, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenG, formatPreset(\r\n        TuningId.OpenG,\r\n        'Open G',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )]\r\n]);\r\n\r\nexport const FRETBOARD_TUNING_VALUES = ArrayUtils.mapToArray(TUNING_PRESET_MAP);\r\n","import Chord from '../../core/models/Chord';\r\nimport IntervalSpan from '../../core/models/Interval';\r\nimport { IModelConfig } from '../../core/models/Model.constants';\r\nimport Note from '../../core/models/Note';\r\nimport Scale from '../../core/models/Scale';\r\nimport { ITuning, TuningId, TUNING_PRESET_MAP } from './Fretboard.tuning';\r\nimport { IVoicing } from './Fretboard.voicing';\r\n\r\nexport interface IFretLabelProps {\r\n\tnote?: Note;\r\n\tcolor?: string;\r\n\tfreq?: number;\r\n}\r\n\r\nexport interface IFretboardProps {\r\n\tfretRange?: [number, number];\r\n\tshowFretDots?: boolean;\r\n\tshowFretNumbers?: boolean;\r\n\tcolorMapFn?: (fretProps: IFretProps) => string | undefined;\r\n\tvoicing?: IVoicing,\r\n\ttuning?: number[]; // ITuning,\r\n\tmodel?: Chord | Scale;\r\n}\r\n\r\nexport interface IFretProps extends IFretboardProps {\r\n\tstringIndex: number;\r\n\tfretIndex: number;\r\n}\r\n\r\nexport const DOTTED_FRET_INDICES = [true, false, false, true, false, true, false, true, false, true, false, false];\r\n\r\nexport const FRET_SIZE_RATIO = Math.pow((1 / 2), (1 / 12));\r\n\r\nconst isIntervalInVoicing = (interval: IntervalSpan, voicing: IVoicing, stringIndex: number) => {\r\n\tif (!voicing || !voicing.value) return true;\r\n\tconst v = voicing.value[stringIndex];\r\n\tconst d = interval.getDegree();\r\n\tif (Array.isArray(v)) {\r\n\t\treturn v.some(n => doesVoicingValueMatch(d, n));\r\n\t}\r\n\telse if (typeof v === 'number') {\r\n\t\treturn doesVoicingValueMatch(d, v);\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nexport const getFretColor = (props: IFretProps): string | undefined => {\r\n\tconst { stringIndex, fretIndex, tuning, model, voicing } = props;\r\n\tconst noteIndex = tuning[stringIndex] + fretIndex;\r\n\tconst [interval, note] = model.tryGetPodPairAtPitch(noteIndex);\r\n\r\n\tif (!note) return;\r\n\r\n\tif (voicing && !isIntervalInVoicing(interval, voicing, stringIndex)) {\r\n\t\treturn `#00000033`\r\n\t}\r\n\r\n\treturn interval.getColor();\r\n}\r\n\r\nexport const DEFAULT_FRETBOARD_PROPS: IFretboardProps = {\r\n\tfretRange: [1, 12],\r\n\ttuning: TUNING_PRESET_MAP.get(TuningId.Standard).value,\r\n\tshowFretDots: true,\r\n\tshowFretNumbers: true,\r\n\tcolorMapFn: getFretColor\r\n};\r\n\r\nexport const getFretRatios = (numFrets: number): number[] => {\r\n\tconst ratios = [];\r\n\tfor (let i = 1; i <= numFrets; i++) {\r\n\t\tratios.push((i <= 1) ? 1 : ratios[i - 2] * FRET_SIZE_RATIO);\r\n\t}\r\n\treturn ratios;\r\n};\r\n\r\nexport const getDotsForFret = (fretNumber: number): string => {\r\n\tconst mod = fretNumber % 12;\r\n\tif (mod === 0)\r\n\t\treturn '• •';\r\n\telse if (DOTTED_FRET_INDICES[mod])\r\n\t\treturn '•';\r\n\treturn '';\r\n};\r\n\r\nconst doesVoicingValueMatch = (d: number, v: number) => {\r\n\treturn d + 1 === v;\r\n}\r\n"],"names":["DEFAULT_MODEL","Chord","ChordId","root","Note","NoteId","StyledSearchBar","styled","props","theme","utils","border","action","interactive","searchRef","externalQuery","query","externalSetQuery","setQuery","placeholder","useState","_query","_setQuery","React","role","onSubmit","e","preventDefault","value","target","elements","URLSearchParams","path","toString","navigate","className","type","id","name","ref","onChange","StyledHomePage","StyledPageBody","withConfig","text","primary","secondary","surface","nav","setPlaceholder","useEffect","setInterval","NOTE_PRESETS","Math","floor","random","structure","ALL_PRESETS","getModelIdText","modelType","clearInterval","SEO","src","logoSrc","Link","to","Fretboard","model","ButtonInput","SearchBar","placeholderSrc","StyledFretLabel","$bgColor","$fgColor","bgColor","colorMapFn","onClick","Fret","tuning","stringIndex","fretIndex","showFretNumbers","showFretDots","classes","push","isLowString","length","isHighString","join","FretLabel","getDotsForFret","userProps","DEFAULT_FRETBOARD_PROPS","fretRange","lo","numFrets","numStrings","fretboardStyles","gridTemplateColumns","getFretRatios","map","n","gridTemplateRows","StyledFretboard","style","hi","allFrets","s","f","key","getFrets","TuningId","formatPreset","getPitch","noteId","octave","pod","TUNING_PRESET_MAP","Map","Standard","Flat","DoubleFlat","StandardSeven","StandardBass","DropD","DADGAD","Banjo","Violin","OpenA","OpenB","OpenC","OpenD","OpenE","OpenF","OpenG","FRETBOARD_TUNING_VALUES","ArrayUtils","DOTTED_FRET_INDICES","FRET_SIZE_RATIO","pow","voicing","noteIndex","tryGetPodPairAtPitch","interval","v","d","getDegree","Array","isArray","some","doesVoicingValueMatch","isIntervalInVoicing","getColor","ratios","i","fretNumber","mod"],"sourceRoot":""}