{"version":3,"file":"0e76d0d25ca0f6ce961db38cedbbe98ba1dcbbe1-fa435ff668d5230164c8.js","mappings":"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","sources":["webpack://play-what/./src/components/cards/DetailsCard.tsx","webpack://play-what/./src/components/inputs/NumericInput.tsx","webpack://play-what/./src/components/cards/GuitarCard.tsx","webpack://play-what/./src/components/cards/RelatedCard.tsx","webpack://play-what/./src/components/inputs/RootInput.tsx","webpack://play-what/./src/components/cards/RootCard.tsx","webpack://play-what/./src/components/collection/CollectionTable.tsx","webpack://play-what/./src/components/layout/Pane.tsx","webpack://play-what/./src/core/models/Scale.ts"],"sourcesContent":["import React from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport NumberUtils from \"../../core/general/Number.utils\";\r\nimport Note from \"../../core/models/Note\";\r\nimport { octaveState } from \"../../state/state\";\r\nimport { StyledCard } from \"../ui/Card\";\r\n\r\nconst StyledDetailsCard = styled(StyledCard)`\r\n    table {\r\n        &.mobile {\r\n            display: table;\r\n            @media(min-width: 512px) {\r\n                display: none;\r\n            }\r\n        }\r\n        &.desktop {\r\n            display: none;\r\n            @media(min-width: 512px) {\r\n                display: table;\r\n            }\r\n            th {\r\n                display: none;\r\n            }\r\n        }\r\n\r\n        margin: auto;\r\n        border-collapse: collapse;\r\n\r\n        td, th {\r\n            padding: 8px;\r\n            @media(min-width: 512px) {\r\n                padding: 8px 16px;\r\n            }\r\n            text-align: center;\r\n        }\r\n\r\n        th {\r\n            text-transform: uppercase;\r\n            font-size: 80%;\r\n        }\r\n\r\n        .featured {\r\n            font-weight: bold;\r\n            font-size: 150%;\r\n            @media(min-width: 512px) {\r\n                font-size: 300%;\r\n            }\r\n        }\r\n\r\n        .interval {\r\n            font-size: 120%;\r\n            @media(min-width: 512px) {\r\n                font-size: 200%;\r\n            }\r\n        }\r\n\r\n        .ratio, .frequency {\r\n            color: ${props => props.theme.text.secondary};\r\n            font-size: 80%;\r\n            @media(min-width: 512px) {\r\n                font-size: 100%;\r\n            }\r\n        }\r\n\r\n        .root {\r\n            color: red;\r\n        }\r\n    }\r\n`;\r\n\r\nconst NoteCell = ({ note, i }) => {\r\n    if (!note) return null;\r\n    return (\r\n        <td className={`note featured ${i === 0 ? 'root' : ''}`}>{note.name}<sub>{note.getOctave()}</sub></td>\r\n    );\r\n};\r\n\r\nconst IntervalCell = ({ interval, isFeatured }) => {\r\n    return (\r\n        <td className={`interval ${isFeatured ? 'featured' : ''}`}>{interval.getName()}</td>\r\n    );\r\n};\r\n\r\nconst PitchCell = ({ note }) => {\r\n    if (!note) return null;\r\n    return (\r\n        <td className={`frequency`}>{note.getFrequency(true)}</td>\r\n    );\r\n};\r\n\r\nconst RatioCell = ({ interval }) => {\r\n    return (\r\n        <td className={`ratio`}>{interval.getRatio()}</td>\r\n    );\r\n};\r\n\r\nconst DetailsCard: React.FC<any> = ({ model }) => {\r\n    const intervals = model.intervals;\r\n    const octave = useRecoilValue(octaveState);\r\n    const notes = model.notes && model.notes.map(n => new Note([\r\n        (octave - 4) * 12 + NumberUtils.modulo(n.pod[0], 12),\r\n        n.pod[1]\r\n    ]));\r\n\r\n    if (!intervals && !notes) return null;\r\n\r\n    return (\r\n        <StyledDetailsCard $n={intervals.length}>\r\n            <table className=\"mobile\">\r\n                <thead>\r\n                    <tr>\r\n                        {notes && <th>Note</th>}\r\n                        <th>Interval</th>\r\n                        {notes && <th>Pitch</th>}\r\n                        <th>Ratio</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {intervals.map((ivl, i) => {\r\n                        const note = notes && notes[i];\r\n                        return (\r\n                            <tr key={ivl.id}>\r\n                                <NoteCell note={note} key={i} i={i} />\r\n                                <IntervalCell interval={ivl} key={i} isFeatured={!note} />\r\n                                <PitchCell note={note} key={i} />\r\n                                <RatioCell interval={ivl} key={i} />\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n            <table className=\"desktop\">\r\n                <tbody>\r\n                    {notes && <tr>\r\n                        <th>Note</th>\r\n                        {notes.map((note, i) => <NoteCell note={note} key={i} i={i} />)}\r\n                    </tr>}\r\n                    <tr>\r\n                        <th>Interval</th>\r\n                        {intervals.map((ivl, i) => <IntervalCell interval={ivl} key={i} isFeatured={!notes} />)}\r\n                    </tr>\r\n                    {notes && <tr>\r\n                        <th>Pitch</th>\r\n                        {notes.map((note, i) => <PitchCell note={note} key={i} />)}\r\n                    </tr>}\r\n                    <tr>\r\n                        <th>Ratio</th>\r\n                        {intervals.map((ivl, i) => <RatioCell interval={ivl} key={i} />)}\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </StyledDetailsCard >\r\n    );\r\n};\r\n\r\nexport default DetailsCard;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport Icon from \"../ui/Icon\";\r\nimport ButtonInput from \"./ButtonInput\";\r\n\r\nexport const StyledNumbericInput = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\r\n\tinput, button {\r\n\t\theight: 32px;\r\n\t\tpadding: 0;\r\n\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\tbutton {\r\n\t\twidth: 32px;\r\n\t\tborder: 1px solid ${({ theme }) => theme.utils.border};\r\n\t\tsvg, svg * {\r\n\t\t\tfill: white;\r\n\t\t}\r\n\r\n\t\tbackground-color: ${({ theme }) => theme.status.interactive};\r\n\t\tcolor: white;\r\n\t\t&:hover {\r\n\t\t\tbackground-color: ${({ theme }) => theme.status.active};\r\n\t\t}\r\n\r\n\t\t:first-child {\r\n\t\t\tborder-right: none;\r\n\t\t\tborder-radius: 8px 0 0 8px;\r\n\t\t}\r\n\t\t:last-child {\r\n\t\t\tborder-left: none;\r\n\t\t\tborder-radius: 0 8px 8px 0\r\n\t\t}\r\n\t}\r\n\r\n\tinput {\r\n\t\twidth: 48px;\r\n\t\tcursor: pointer;\r\n\t\tborder: none;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t\tbackground-color: white;\r\n\t\t&:hover {\r\n\t\t\tbackground-color: ${({ theme }) => theme.status.highlight};\r\n\t\t}\r\n\r\n\t\tborder: 1px solid ${({ theme }) => theme.utils.border};\r\n\t}\r\n    \r\n\tfont-size: 110%;\r\n\tcursor: pointer;\r\n`;\r\n\r\ninterface INumericInputProps {\r\n\tvalue: number;\r\n\tsetValue: (number) => void;\r\n\tmin?: number;\r\n\tmax?: number;\r\n}\r\n\r\nconst NumericInput: React.FC<INumericInputProps> = ({ value, setValue, ...rest }) => {\r\n\tconst onChange = e => setValue(parseInt(e.target.value));\r\n\r\n\tconst onDown = () => {\r\n\t\tlet newVal = value - 1;\r\n\t\tif (typeof rest.min !== 'undefined') {\r\n\t\t\tnewVal = Math.max(rest.min, newVal);\r\n\t\t}\r\n\t\tsetValue(newVal);\r\n\t};\r\n\r\n\tconst onUp = () => {\r\n\t\tlet newVal = value + 1;\r\n\t\tif (typeof rest.max !== 'undefined') {\r\n\t\t\tnewVal = Math.min(rest.max, newVal);\r\n\t\t}\r\n\t\tsetValue(newVal);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<StyledNumbericInput>\r\n\t\t\t<ButtonInput onClick={onDown}><Icon iconId=\"minus\" size={12} /></ButtonInput>\r\n\t\t\t<input type=\"number\" value={value} onChange={null} {...rest} />\r\n\t\t\t<ButtonInput onClick={onUp}><Icon iconId=\"plus\" size={12} /></ButtonInput>\r\n\t\t</StyledNumbericInput>\r\n\t);\r\n}\r\n\r\nexport default NumericInput;\r\n","import React, { useState } from \"react\";\r\nimport styled from 'styled-components';\r\nimport Fretboard from \"../../viewers/fretboard/Fretboard\";\r\nimport { FRETBOARD_TUNING_VALUES, TuningId } from \"../../viewers/fretboard/Fretboard.tuning\";\r\nimport { DEFAULT_FRETBOARD_PROPS, getFretboardProps } from \"../../viewers/fretboard/Fretboard.utils\";\r\nimport { VoicingId, VOICING_PRESETS } from \"../../viewers/fretboard/Fretboard.voicing\";\r\nimport ButtonInput from \"../inputs/ButtonInput\";\r\nimport DropdownInput from \"../inputs/DropdownInput\";\r\nimport NumericInput from \"../inputs/NumericInput\";\r\nimport Card from \"../ui/Card\";\r\nimport InputRow from \"../ui/InputRow\";\r\n\r\nconst StyledGuitarCard = styled.div`\r\n    ul {\r\n        border: 1px solid ${props => props.theme.utils.border};\r\n        padding: 8px;\r\n        border-radius: 8px;\r\n        margin-bottom: 16px;\r\n\r\n        li {\r\n            padding: 8px 0;\r\n        }\r\n    }\r\n`;\r\n\r\nconst VOICING_OPTIONS = [\r\n    {\r\n        id: VoicingId.None,\r\n        name: '---',\r\n        value: undefined\r\n    },\r\n    ...VOICING_PRESETS\r\n]\r\n\r\nconst GuitarCard: React.FC<any> = ({ model }) => {\r\n\r\n    if (!model.root || !model.intervals) return null;\r\n\r\n    const filteredVoicings = VOICING_OPTIONS.filter(v => {\r\n        if (!v.value) return true;\r\n        const containsNonModelIntervals = v.value.some(x => x && !model.intervals.find(ivl => ivl.pod[1] + 1 === x));\r\n        return !containsNonModelIntervals;\r\n    });\r\n\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [voicing, setVoicing] = useState(filteredVoicings[0]);\r\n    const [tuning, setTuning] = useState(FRETBOARD_TUNING_VALUES[0]);\r\n    const [fretRange, setFretRange] = useState(DEFAULT_FRETBOARD_PROPS.fretRange);\r\n\r\n    const [fretLo, fretHi] = fretRange;\r\n\r\n    const fretboardProps = getFretboardProps(\r\n        model,\r\n        voicing.id === VoicingId.None ? undefined : voicing,\r\n        tuning,\r\n        fretRange\r\n    );\r\n\r\n    return (\r\n        <Card title=\"Guitar\" action={<ButtonInput onClick={() => setIsEditing(!isEditing)}>{isEditing ? 'Done' : 'Edit'}</ButtonInput>}>\r\n            <StyledGuitarCard>\r\n                {isEditing &&\r\n                    <ul className=\"edit\">\r\n                        <li>\r\n                            <InputRow label=\"Tuning\">\r\n                                <DropdownInput value={tuning} setValue={setTuning} options={FRETBOARD_TUNING_VALUES} />\r\n                            </InputRow>\r\n                        </li>\r\n                        {tuning.id === TuningId.Standard &&\r\n                            <li>\r\n                                <InputRow label=\"Voicing\">\r\n                                    <DropdownInput value={voicing} setValue={setVoicing} options={filteredVoicings} />\r\n                                </InputRow>\r\n                            </li>\r\n                        }\r\n                        <li>\r\n                            <InputRow label=\"Low Fret\">\r\n                                <NumericInput value={fretLo} min={0} max={fretHi} setValue={v => setFretRange([v, fretHi])} />\r\n                            </InputRow>\r\n                        </li>\r\n                        <li>\r\n                            <InputRow label=\"High Fret\">\r\n                                <NumericInput value={fretHi} min={fretLo} max={24} setValue={v => setFretRange([fretLo, v])} />\r\n                            </InputRow>\r\n                        </li>\r\n                    </ul>\r\n                }\r\n                <Fretboard {...fretboardProps} />\r\n            </StyledGuitarCard>\r\n        </Card >\r\n    );\r\n};\r\n\r\nexport default GuitarCard;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { useRootSuffix } from \"../../contexts/PagePropsContext\";\r\nimport { ModelId } from \"../../core/models/Model.constants\";\r\nimport { CHORD_PRESETS, NOTE_PRESETS, SCALE_PRESETS } from \"../../core/models/Model.presets\";\r\nimport CollectionTable from \"../collection/CollectionTable\";\r\nimport Card from \"../ui/Card\";\r\n\r\nconst StyledCollectionList = styled.ul`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 8px;\r\n\r\n    a {\r\n        padding: 4px 8px;\r\n    }\r\n`;\r\n\r\n\r\nconst RelatedCard: React.FC<any> = ({ model }) => {\r\n\r\n    const rootSuffix = useRootSuffix();\r\n\r\n    const subchords = model.getSubchords();\r\n    const subscales = model.getSubscales();\r\n    const superchords = model.getSuperchords();\r\n    const superscales = model.getSuperscales();\r\n\r\n    const semitones = model.intervals.map(ivl => ivl.pod[0] + 1);\r\n\r\n    return (\r\n        <>\r\n\r\n            {false && <Card title=\"Other Roots\">\r\n                <ul>\r\n                    {NOTE_PRESETS.map(s => (\r\n                        <li key={s.id}><Link to={`/browse/chords/${model.id}/${s.id}/${rootSuffix}`}>{s.name} {/*model.name*/}</Link></li>\r\n                    ))}\r\n                </ul>\r\n            </Card>}\r\n\r\n            {subchords.length > 0 &&\r\n                <Card title=\"Child Chords\">\r\n                    <CollectionTable data={subchords} semitones={semitones} />\r\n                </Card>\r\n            }\r\n            {superchords.length > 0 &&\r\n                <Card title=\"Parent Chords\">\r\n                    <CollectionTable data={superchords} semitones={semitones} />\r\n                </Card>\r\n            }\r\n            {subscales.length > 0 &&\r\n                <Card title=\"Child Scales\">\r\n                    <CollectionTable data={subscales} semitones={semitones} />\r\n                </Card>\r\n            }\r\n            {superscales.length > 0 &&\r\n                <Card title=\"Parent Scales\">\r\n                    <CollectionTable data={superscales} semitones={semitones} />\r\n                </Card>\r\n            }\r\n            {model.modelId === ModelId.Chord &&\r\n                <Card title=\"Other Chords\">\r\n                    <StyledCollectionList>\r\n                        {CHORD_PRESETS.map(p => <li key={p.id}>\r\n                            <Link to={`/browse/chords/${p.id}/${rootSuffix}`}>\r\n                                {p.name}\r\n                            </Link>\r\n                        </li>)}\r\n                    </StyledCollectionList>\r\n                </Card>\r\n            }\r\n            {model.modelId === ModelId.Scale &&\r\n                <Card title=\"Other Scales\">\r\n                    <StyledCollectionList>\r\n                        {SCALE_PRESETS.map(p => <li key={p.id}>\r\n                            <Link to={`/browse/scales/${p.id}/${rootSuffix}`}>\r\n                                {p.name}\r\n                            </Link>\r\n                        </li>)}\r\n                    </StyledCollectionList>\r\n                </Card>\r\n            }\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RelatedCard;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { usePageProps, useRoot } from \"../../contexts/PagePropsContext\";\r\nimport { NoteId } from \"../../core/models/Model.constants\";\r\nimport { NOTE_PRESET_MAP } from \"../../core/models/Model.presets\";\r\n\r\nconst StyledRootInput = styled.div`\r\n    margin-top: 16px;\r\n    display: grid;\r\n    grid-template-columns: repeat(7, 1fr);\r\n    width: 100%;\r\n\r\n    @media(min-width: 512px) {\r\n\r\n    }\r\n\r\n    a {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        width: 100%;\r\n        padding: 4px;\r\n\r\n        &.main {\r\n            font-size: 140%;\r\n            padding: 8px 4px;\r\n            font-weight: bold;\r\n        }\r\n\r\n        border-radius: 4px;\r\n\r\n        &:hover, &.active {\r\n            background-color: ${props => props.theme.action.active};\r\n            color: white;\r\n        }\r\n    }\r\n`;\r\n\r\nconst RootInput: React.FC<any> = () => {\r\n    const root = useRoot();\r\n    const pageProps = usePageProps();\r\n    const { path } = pageProps;\r\n\r\n    const rootIndex = pageProps.path.lastIndexOf('root');\r\n    const basePath = root ?\r\n        path.slice(0, rootIndex) :\r\n        path;\r\n\r\n    return (\r\n        <StyledRootInput>\r\n            <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.Cs}`}>{NOTE_PRESET_MAP.get(NoteId.Cs).name}</Link>\r\n            <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.Ds}`}>{NOTE_PRESET_MAP.get(NoteId.Ds).name}</Link>\r\n            <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.Es}`}>{NOTE_PRESET_MAP.get(NoteId.Es).name}</Link>\r\n            <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.Fs}`}>{NOTE_PRESET_MAP.get(NoteId.Fs).name}</Link>\r\n            <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.Gs}`}>{NOTE_PRESET_MAP.get(NoteId.Gs).name}</Link>\r\n            <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.As}`}>{NOTE_PRESET_MAP.get(NoteId.As).name}</Link>\r\n            <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.Bs}`}>{NOTE_PRESET_MAP.get(NoteId.Bs).name}</Link>\r\n\r\n            <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.C}`} className=\"main\">{NOTE_PRESET_MAP.get(NoteId.C).name}</Link>\r\n            <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.D}`} className=\"main\">{NOTE_PRESET_MAP.get(NoteId.D).name}</Link>\r\n            <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.E}`} className=\"main\">{NOTE_PRESET_MAP.get(NoteId.E).name}</Link>\r\n            <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.F}`} className=\"main\">{NOTE_PRESET_MAP.get(NoteId.F).name}</Link>\r\n            <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.G}`} className=\"main\">{NOTE_PRESET_MAP.get(NoteId.G).name}</Link>\r\n            <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.A}`} className=\"main\">{NOTE_PRESET_MAP.get(NoteId.A).name}</Link>\r\n            <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.B}`} className=\"main\">{NOTE_PRESET_MAP.get(NoteId.B).name}</Link>\r\n\r\n            <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.Cb}`}>{NOTE_PRESET_MAP.get(NoteId.Cb).name}</Link>\r\n            <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.Db}`}>{NOTE_PRESET_MAP.get(NoteId.Db).name}</Link>\r\n            <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.Eb}`}>{NOTE_PRESET_MAP.get(NoteId.Eb).name}</Link>\r\n            <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.Fb}`}>{NOTE_PRESET_MAP.get(NoteId.Fb).name}</Link>\r\n            <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.Gb}`}>{NOTE_PRESET_MAP.get(NoteId.Gb).name}</Link>\r\n            <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.Ab}`}>{NOTE_PRESET_MAP.get(NoteId.Ab).name}</Link>\r\n            <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.Bb}`}>{NOTE_PRESET_MAP.get(NoteId.Bb).name}</Link>\r\n        </StyledRootInput>\r\n    );\r\n};\r\n\r\nexport default RootInput;\r\n","import { navigate } from \"gatsby\";\r\nimport React, { useState } from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport styled from 'styled-components';\r\nimport { usePageProps, useRoot } from \"../../contexts/PagePropsContext\";\r\nimport { octaveState } from \"../../state/state\";\r\nimport THEME from \"../../styles/theme\";\r\nimport ButtonInput from \"../inputs/ButtonInput\";\r\nimport DropdownInput from \"../inputs/DropdownInput\";\r\nimport RootInput from \"../inputs/RootInput\";\r\nimport Card, { CardHeader, StyledCard } from \"../ui/Card\";\r\nimport InputRow from \"../ui/InputRow\";\r\n\r\nconst StyledRoot = styled.div`\r\n    margin-top: 16px;\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    gap: 16px;\r\n\r\n    @media(min-width: 512px) {\r\n\r\n    }\r\n\r\n    .root {\r\n        font-size: 200%;\r\n        font-weight: bolder;\r\n        text-align: center;\r\n\r\n        sub {\r\n            font-size: 80%;\r\n            font-weight: normal;\r\n        }\r\n\r\n        .f {\r\n            color: ${props => props.theme.text.secondary};\r\n            font-size: 60%;\r\n            margin-left: 16px;\r\n            font-weight: normal;\r\n        }\r\n    }\r\n\r\n    .edit {\r\n        margin-top: 16px;\r\n        //background-color: ${THEME.status.highlight};\r\n        border: 1px solid ${props => props.theme.utils.border};\r\n        border-radius: 8px;\r\n        padding: 8px;\r\n\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 8px;\r\n        align-items: flex-end;\r\n\r\n        button {\r\n            margin-left: auto;\r\n        }\r\n    }\r\n`;\r\n\r\nconst StyledRootless = styled(StyledCard)`\r\n    margin-top: 16px;\r\n    background-color: ${THEME.status.highlight};\r\n    border: 1px solid ${props => props.theme.utils.border};\r\n    color: ${THEME.text.primary};\r\n`;\r\n\r\nconst OCTAVE_OPTIONS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map((x, i) => ({ id: i + 1, name: i + 1 }))\r\n\r\nconst RootCard: React.FC<any> = () => {\r\n    const root = useRoot();\r\n    const pageProps = usePageProps();\r\n    const [octave, setOctave] = useRecoilState(octaveState);\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    const modelType = pageProps.path.includes('chord') ? 'chord' : 'scale';\r\n\r\n    if (!root) {\r\n        return (\r\n            <StyledRootless>\r\n                <CardHeader title=\"No Root\" />\r\n                This {modelType} does not have a root. To see the notes in this {modelType}, select a root below.\r\n                <RootInput />\r\n            </StyledRootless>\r\n        )\r\n    }\r\n\r\n\r\n    const onClear = () => {\r\n        const rootIndex = pageProps.path.lastIndexOf('root');\r\n        const sanitized = rootIndex === -1 ?\r\n            pageProps.path :\r\n            pageProps.path.slice(0, rootIndex);\r\n        navigate(sanitized);\r\n    }\r\n\r\n    const action = <ButtonInput onClick={() => setIsEditing(!isEditing)}>{isEditing ? 'Done' : 'Edit'}</ButtonInput>;\r\n\r\n    return (\r\n        <StyledRoot>\r\n            <Card title=\"Root\" action={action}>\r\n                <div className=\"root\">\r\n                    {root.name}\r\n                    <sub>{octave}</sub>\r\n                    <span className='f'>{root.getFrequency(true)}</span>\r\n                </div>\r\n                {isEditing && (\r\n                    <div className=\"edit\">\r\n                        <RootInput />\r\n                        <InputRow label=\"Octave\">\r\n                            <DropdownInput options={OCTAVE_OPTIONS} value={{ id: octave }} setValue={o => setOctave(o.id)} />\r\n                        </InputRow>\r\n                        <ButtonInput onClick={onClear}>Reset</ButtonInput>\r\n                    </div>\r\n                )}\r\n            </Card>\r\n        </StyledRoot>\r\n    );\r\n};\r\n\r\nexport default RootCard;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { useRoot, useRootSuffix } from \"../../contexts/PagePropsContext\";\r\nimport Chord from \"../../core/models/Chord\";\r\nimport { IModelConfig, ModelId } from \"../../core/models/Model.constants\";\r\nimport Scale from \"../../core/models/Scale\";\r\n\r\nconst StyledCollectionTable = styled.table`\r\n    width: 100%;\r\n    margin: auto;\r\n    border-collapse: collapse;\r\n    white-space: nowrap;\r\n\r\n    td, th {\r\n        line-height: 32px;\r\n        \r\n        &:not(:first-child) {\r\n            text-align: center;\r\n            width: 32px;\r\n            height: 32px;\r\n\r\n            display: none;\r\n            @media(min-width: 512px) {\r\n                display: table-cell;\r\n            }\r\n        }\r\n\r\n        &:first-child {\r\n            text-align: left;\r\n            padding: 0 8px;\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    td {\r\n        //border-right: 1px solid ${props => props.theme.utils.border};\r\n        //border-bottom: 1px solid ${props => props.theme.utils.border};\r\n        &.active {\r\n            background-color: ${props => props.theme.surface.bg};\r\n        }\r\n    }\r\n\r\n    thead {\r\n        tr th {\r\n            background-color: ${props => props.theme.surface.nav};\r\n            color: ${({ theme }) => theme.text.inverted};\r\n        }\r\n        th:first-child {\r\n            border-radius: 8px 0 0 8px;\r\n        }\r\n        th:last-child {\r\n            border-radius: 0 8px 8px 0;\r\n        }\r\n    }\r\n\r\n    tbody {\r\n        tr {\r\n            &:hover {\r\n                background-color: ${({ theme }) => theme.utils.hoverDark};\r\n            }\r\n        }\r\n    }\r\n\r\n    a {\r\n        display: block;\r\n    }\r\n`;\r\n\r\nexport interface ICollectionTableProps {\r\n    data: IModelConfig[];\r\n    semitones?: number[];\r\n}\r\n\r\nconst SEMITONES = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\r\n\r\nconst CollectionTable: React.FC<ICollectionTableProps> = ({ data, semitones = [] }) => {\r\n    const rootSuffix = useRootSuffix();\r\n    const root = useRoot();\r\n    return (\r\n        <StyledCollectionTable>\r\n            <thead>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    {SEMITONES.map((h, i) => <th key={i}>{h}</th>)}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    data.map(d => {\r\n                        const cl = d.modelId === ModelId.Chord ? Chord : Scale;\r\n                        const model = new cl(d.id, { root });\r\n\r\n                        return (\r\n                            <tr>\r\n                                <td>\r\n                                    <Link to={`/browse/${model.modelId}/${model.id}/${rootSuffix}`}>\r\n                                        {model.getShortName()}\r\n                                    </Link>\r\n                                </td>\r\n                                {SEMITONES.map((h, i) => {\r\n                                    const index = model.intervals.findIndex(ivl => ivl.pod[0] + 1 === h);\r\n                                    const className = semitones.includes(h) ? 'active' : '';\r\n                                    if (index < 0) return <td key={i} className={className} />;\r\n                                    const mod = root ? model.notes[index] : model.intervals[index];\r\n                                    return (\r\n                                        <td key={i} className={className}>\r\n                                            {mod.getName()}\r\n                                        </td>\r\n                                    );\r\n                                })}\r\n                            </tr>\r\n                        );\r\n                    })\r\n                }\r\n            </tbody>\r\n        </StyledCollectionTable>\r\n    );\r\n};\r\n\r\nexport default CollectionTable;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledDoublePane = styled.div`\r\n\tdisplay: grid;\r\n\tgap: 16px;\r\n\tgrid-template-columns: 1fr;\r\n\t@media(min-width: 512px) {\r\n\t\tgrid-template-columns: 3fr 2fr;\r\n\t}\r\n`\r\n\r\nexport const StyledPane = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: 16px;\r\n\tmargin: 16px 0;\r\n`\r\n","import IntervalSpan from '@pw-core/models/Interval';\r\nimport ArrayUtils from '../general/Array.utils';\r\nimport NumberUtils from '../general/Number.utils';\r\nimport Chord from './Chord';\r\nimport Model from './Model';\r\nimport { IntervalId, IPod, ModelId, ScaleId, Tag } from './Model.constants';\r\nimport { SCALE_PRESETS, SCALE_PRESET_MAP } from './Model.presets';\r\nimport { arePodListsEqual, reducePodList, subtractPods } from './Pod.static';\r\nimport PodList from './PodList';\r\n\r\nexport default class Scale extends PodList {\r\n\r\n    modelId = ModelId.Scale;\r\n\r\n    constructor(id: ScaleId, options = undefined) {\r\n        super(SCALE_PRESET_MAP, id, options);\r\n    }\r\n\r\n    static fromValue = (value: IPod[]) => Model.fromValue(SCALE_PRESETS, Scale, value, arePodListsEqual, reducePodList);\r\n\r\n    getMode(d) {\r\n        let rotated = [...this.podList];\r\n        rotated = ArrayUtils.rotate(rotated, d);\r\n        for (let i = (this.podList.length - d); i < rotated.length; i++) {\r\n            const curPod = rotated[i];\r\n            rotated[i] = [curPod[0] + 12, curPod[1] + 7];\r\n        }\r\n        // Get difference between each interval\r\n        const newPods: IPod[] = [[0, 0]];\r\n        const newIntervals = [new IntervalSpan(IntervalId.P1)];\r\n        for (let i = 0; i < rotated.length - 1; i++) {\r\n            const newPod = subtractPods(rotated[i + 1], rotated[0])\r\n            newPods.push(newPod);\r\n            const newIvl = IntervalSpan.fromValue(newPod);\r\n            newIntervals.push(newIvl);\r\n        }\r\n        const mode = Scale.fromValue(newPods);\r\n\r\n        /*if (this.root) {\r\n            numeral.applyRoot(this.notes[d]);\r\n            console.log('dpb num root', numeral);\r\n        }*/\r\n        return mode;\r\n    };\r\n\r\n    getAllModes() {\r\n        const modes = [];\r\n        if (this.tags.includes(Tag.Diatonic) ||\r\n            this.tags.includes(Tag.Pentatonic) ||\r\n            this.tags.includes(Tag.MelodicMode) ||\r\n            this.tags.includes(Tag.HarmonicMode)\r\n        ) {\r\n            for (let i = 0; i < this.podList.length; i++) {\r\n                modes.push(this.getMode(i));\r\n            }\r\n        }\r\n        return modes;\r\n    };\r\n\r\n    getNumeral(d) {\r\n        // Get every other interval\r\n        const curIntervals = [];\r\n        for (let i = 0; i < this.podList.length; i = i + 2) {\r\n            const curD = NumberUtils.moduloSum(d, i, this.podList.length);\r\n            const curIvl = this.intervals[curD];\r\n            curIntervals.push(curIvl);\r\n        }\r\n        // Get difference between each interval\r\n        const newPods: IPod[] = [[0, 0]];\r\n        //const newIntervals = [new IntervalSpan(IntervalId.P1)];\r\n        for (let i = 0; i < curIntervals.length - 1; i++) {\r\n            const newPod = subtractPods(curIntervals[i + 1].pod, curIntervals[0].pod)\r\n            newPods.push(newPod);\r\n            //const newIvl = IntervalSpan.fromValue(newPod);\r\n            //newIntervals.push(newIvl);\r\n        }\r\n        const numeral = Chord.fromValue(newPods);\r\n        if (this.root) {\r\n            numeral.applyRoot(this.notes[d]);\r\n        }\r\n        return numeral;\r\n    };\r\n\r\n    getAllNumerals() {\r\n        const numerals = [];\r\n        if (this.tags.includes(Tag.Diatonic)) {\r\n            for (let i = 0; i < this.podList.length; i++) {\r\n                numerals.push(this.getNumeral(i));\r\n            }\r\n        }\r\n        return numerals;\r\n    };\r\n}\r\n"],"names":["StyledDetailsCard","styled","StyledCard","props","theme","text","secondary","NoteCell","note","i","className","name","getOctave","IntervalCell","interval","isFeatured","getName","PitchCell","getFrequency","RatioCell","getRatio","model","intervals","octave","useRecoilValue","octaveState","notes","map","n","Note","NumberUtils","pod","$n","length","ivl","key","id","StyledNumbericInput","utils","border","status","interactive","active","highlight","value","setValue","rest","ButtonInput","onClick","newVal","min","Math","max","Icon","iconId","size","type","onChange","StyledGuitarCard","VOICING_OPTIONS","VoicingId","undefined","VOICING_PRESETS","root","filteredVoicings","filter","v","some","x","find","useState","isEditing","setIsEditing","voicing","setVoicing","FRETBOARD_TUNING_VALUES","tuning","setTuning","DEFAULT_FRETBOARD_PROPS","fretRange","setFretRange","fretLo","fretHi","fretboardProps","getFretboardProps","Card","title","action","InputRow","label","DropdownInput","options","TuningId","Fretboard","StyledCollectionList","rootSuffix","useRootSuffix","subchords","getSubchords","subscales","getSubscales","superchords","getSuperchords","superscales","getSuperscales","semitones","data","modelId","ModelId","CHORD_PRESETS","p","to","SCALE_PRESETS","StyledRootInput","useRoot","pageProps","usePageProps","path","rootIndex","lastIndexOf","basePath","slice","activeClassName","NoteId","NOTE_PRESET_MAP","StyledRoot","StyledRootless","THEME","OCTAVE_OPTIONS","useRecoilState","setOctave","modelType","includes","o","sanitized","navigate","StyledCollectionTable","surface","bg","nav","inverted","hoverDark","SEMITONES","h","d","Chord","Scale","getShortName","index","findIndex","mod","StyledDoublePane","StyledPane","SCALE_PRESET_MAP","getMode","rotated","this","podList","ArrayUtils","curPod","newPods","newIntervals","IntervalSpan","IntervalId","newPod","subtractPods","push","newIvl","fromValue","getAllModes","modes","tags","Tag","getNumeral","curIntervals","curD","curIvl","numeral","applyRoot","getAllNumerals","numerals","PodList","Model","arePodListsEqual","reducePodList"],"sourceRoot":""}