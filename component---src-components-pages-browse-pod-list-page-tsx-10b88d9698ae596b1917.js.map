{"version":3,"file":"component---src-components-pages-browse-pod-list-page-tsx-10b88d9698ae596b1917.js","mappings":"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","sources":["webpack://play-what/./src/components/collection/CollectionTable.tsx","webpack://play-what/./src/components/column-manager/ColumnManager.tsx","webpack://play-what/./src/components/inputs/DropdownInput.tsx","webpack://play-what/./src/components/cards/DetailsCard.tsx","webpack://play-what/./src/components/cards/GuitarCard.tsx","webpack://play-what/./src/components/cards/ModeCard.tsx","webpack://play-what/./src/components/collection/CollectionList.tsx","webpack://play-what/./src/components/cards/RelatedCard.tsx","webpack://play-what/./src/components/cards/RomanNumeralsCard.tsx","webpack://play-what/./src/components/inputs/RootInput.tsx","webpack://play-what/./src/components/cards/RootCard.tsx","webpack://play-what/./src/components/pages/browse/pod-list.page.tsx","webpack://play-what/./src/components/ui/Card.tsx","webpack://play-what/./src/components/ui/InputRow.tsx","webpack://play-what/./src/components/ui/Table.tsx","webpack://play-what/./src/core/routing/Routing.utils.ts","webpack://play-what/./src/viewers/fret-table/FretFlag.tsx","webpack://play-what/./src/viewers/fret-table/FretTable.tsx","webpack://play-what/./src/viewers/fretboard/Fretboard.tuning.ts","webpack://play-what/./src/viewers/fretboard/Fretboard.utils.ts"],"sourcesContent":["import React from \"react\";\r\nimport { css } from \"styled-components\";\r\nimport { useRoot, useRootId } from \"../../contexts/PagePropsContext\";\r\nimport Chord from \"../../core/models/Chord\";\r\nimport {\r\n  IModelConfig,\r\n  ModelType,\r\n  NoteId,\r\n} from \"../../core/models/Model.constants\";\r\nimport Note from \"../../core/models/Note\";\r\nimport Scale from \"../../core/models/Scale\";\r\nimport { getModelRoute } from \"../../core/routing/Routing.utils\";\r\nimport { Table } from \"../ui/Table\";\r\n\r\nconst tableStyles = css`\r\n  width: 100%;\r\n  margin: auto;\r\n  border-collapse: collapse;\r\n  white-space: nowrap;\r\n\r\n  td {\r\n    &:not(:first-child) {\r\n      font-size: 80%;\r\n    }\r\n  }\r\n\r\n  td,\r\n  th {\r\n    line-height: 32px;\r\n    text-align: center;\r\n\r\n    &:not(:first-child) {\r\n      width: 32px;\r\n      height: 32px;\r\n\r\n      display: none;\r\n      @media (min-width: 512px) {\r\n        display: table-cell;\r\n      }\r\n    }\r\n\r\n    &:first-child {\r\n      text-align: left;\r\n      padding: 0 8px;\r\n    }\r\n  }\r\n\r\n  td {\r\n    //border-right: 1px solid ${(props) => props.theme.utils.border};\r\n    //border-bottom: 1px solid ${(props) => props.theme.utils.border};\r\n    &.active {\r\n      background-color: ${(props) => props.theme.surface.bg};\r\n    }\r\n  }\r\n\r\n  thead {\r\n    text-transform: uppercase;\r\n    font-size: 80%;\r\n\r\n    @media (max-width: 511px) {\r\n      display: none;\r\n    }\r\n    tr th {\r\n      background-color: ${(props) => props.theme.surface.nav};\r\n      color: ${({ theme }) => theme.text.inverted};\r\n    }\r\n\r\n    th:first-child {\r\n      border-radius: 8px 0 0 8px;\r\n    }\r\n    th:last-child {\r\n      border-radius: 0 8px 8px 0;\r\n    }\r\n  }\r\n\r\n  a {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nexport interface ICollectionTableProps {\r\n  data: IModelConfig[];\r\n  semitones?: number[];\r\n}\r\n\r\nconst SEMITONES = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\r\n\r\nconst getSemitoneCol = (\r\n  model: Chord | Scale,\r\n  h: number,\r\n  semitones: number[],\r\n  root?: Note\r\n) => {\r\n  const index = model.intervals.findIndex((ivl) => ivl.pod[0] + 1 === h);\r\n  const className = semitones.includes(h) ? \"active\" : undefined;\r\n  if (index < 0) {\r\n    return {\r\n      className,\r\n      content: \"\",\r\n    };\r\n  }\r\n  const mod = root ? (model.notes as Note[])[index] : model.intervals[index];\r\n  return {\r\n    className,\r\n    content: mod.getName(),\r\n  };\r\n};\r\n\r\nconst CollectionTable: React.FC<ICollectionTableProps> = ({\r\n  data,\r\n  semitones = [],\r\n}) => {\r\n  const rootId = useRootId();\r\n  const root = useRoot();\r\n  return (\r\n    <Table\r\n      styles={tableStyles}\r\n      thead={[\r\n        {\r\n          cols: [\r\n            \"Name\",\r\n            {\r\n              colSpan: 12,\r\n              content: root ? \"Notes\" : \"Intervals\",\r\n            },\r\n          ],\r\n        },\r\n      ]}\r\n      tbody={data.map((d, i) => {\r\n        const cl = d.modelType === ModelType.Chord ? Chord : Scale;\r\n        // @ts-ignore\r\n        const model = new cl(d.modelId, { root });\r\n        return {\r\n          cols: [\r\n            {\r\n              link: getModelRoute(\r\n                model.modelType,\r\n                model.modelId,\r\n                rootId as NoteId\r\n              ),\r\n              content: model.getName(),\r\n            },\r\n            ...SEMITONES.map((h, i) =>\r\n              getSemitoneCol(model, h, semitones, root)\r\n            ),\r\n          ],\r\n        };\r\n      })}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CollectionTable;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledColumnManager = styled.div`\r\n    display: grid;\r\n    gap: 16px;\r\n    grid-template-columns: 1fr;\r\n\r\n    ${({ $tablet }) => $tablet ? `\r\n        @media(min-width: 512px) {\r\n            grid-template-columns: ${$tablet.join(' ')}\r\n        }\r\n    ` : ''}\r\n\r\n    ${({ $desktop }) => $desktop ? `\r\n        @media(min-width: 1024px) {\r\n            grid-template-columns: ${$desktop.join(' ')}\r\n        }\r\n    ` : ``}\r\n   \r\n`;\r\n\r\nexport interface IColumnManagerProps {\r\n    tablet?: string[];\r\n    desktop?: string[];\r\n}\r\n\r\nconst ColumnManager: React.FC<any> = ({ children, tablet, desktop }) => {\r\n    return (\r\n        <StyledColumnManager $tablet={tablet} $desktop={desktop}>\r\n            {children}\r\n        </StyledColumnManager >\r\n    );\r\n};\r\n\r\nexport default ColumnManager;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nconst StyledDropdownInput = styled.select`\r\n\tfont-size: 110%;\r\n    min-width: 128px;\r\n\r\n\tpadding: 4px 8px;\r\n\r\n    cursor: pointer;\r\n    border-radius: 4px;\r\n\r\n\toption {\r\n\t\tcursor: pointer;\r\n\t}\r\n`;\r\n\r\ninterface IDropdownInputProps {\r\n\tvalue: any;\r\n\tsetValue: Function;\r\n\toptions: any[];\r\n\tidProperty?: string;\r\n\tdisplayProperty?: string;\r\n}\r\n\r\nconst DropdownInput: React.FC<IDropdownInputProps> = props => {\r\n\tconst { value, setValue, options, idProperty, displayProperty } = props;\r\n\r\n\treturn (\r\n\t\t<StyledDropdownInput\r\n\t\t\tclassName='dropdown-input'\r\n\t\t\tonChange={e => setValue(options[e.target.selectedIndex], e.target.selectedIndex)}\r\n\t\t\tvalue={value ? value[idProperty || 'id'] : ''}\r\n\t\t>\r\n\t\t\t{(options || []).map((v, i) => (\r\n\t\t\t\t<option key={i} value={v[idProperty || 'id']}>{displayProperty ? v[displayProperty] : v.name}</option>\r\n\t\t\t))}\r\n\t\t</StyledDropdownInput>\r\n\t);\r\n}\r\n\r\nexport default DropdownInput;\r\n","import React from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport NumberUtils from \"../../core/general/Number.utils\";\r\nimport Note from \"../../core/models/Note\";\r\nimport { octaveState } from \"../../state/state\";\r\nimport { CardHeader, StyledCard } from \"../ui/Card\";\r\nimport { Table } from \"../ui/Table\";\r\n\r\nconst StyledDetailsCard = styled(StyledCard)`\r\n    .header {\r\n        display: none;\r\n        @media(min-width: 512px) {\r\n            display: unset;\r\n        }\r\n    }\r\n    table {\r\n        margin: auto;\r\n        border-collapse: collapse;\r\n\r\n        &.mobile {\r\n            display: table;\r\n            @media(min-width: 512px) {\r\n                display: none;\r\n            }\r\n        }\r\n        &.desktop {\r\n            display: none;\r\n            @media(min-width: 512px) {\r\n                display: table;\r\n            }\r\n            th {\r\n                display: none;\r\n            }\r\n        }\r\n\r\n        td, th {\r\n            padding: 4px;\r\n            @media(min-width: 512px) {\r\n                padding: 4px 8px;\r\n            }\r\n            text-align: center;\r\n        }\r\n\r\n        th {\r\n            text-transform: uppercase;\r\n            font-size: 80%;\r\n        }\r\n\r\n        .featured {\r\n            font-weight: bold;\r\n            font-size: 150%;\r\n            @media(min-width: 512px) {\r\n                font-size: 200%;\r\n            }\r\n        }\r\n\r\n        .interval {\r\n            font-size: 120%;\r\n            @media(min-width: 512px) {\r\n                font-size: 150%;\r\n            }\r\n        }\r\n\r\n        .ratio, .frequency {\r\n            color: ${props => props.theme.text.secondary};\r\n            font-size: 80%;\r\n            @media(min-width: 512px) {\r\n                font-size: 100%;\r\n            }\r\n        }\r\n\r\n        .root {\r\n            color: red;\r\n        }\r\n    }\r\n`;\r\n\r\nconst getNoteCell = (note, i) => {\r\n    return (\r\n        {\r\n            className: `note featured ${i === 0 ? 'root' : ''}`,\r\n            content: (\r\n                <>\r\n                    {note.name}\r\n                    <sub>{note.getOctave()}</sub>\r\n                </>\r\n            )\r\n        }\r\n    );\r\n};\r\n\r\nconst getIntervalCell = (interval, isFeatured) => {\r\n    return (\r\n        <td className={`interval ${isFeatured ? 'featured' : ''}`}>{interval.getName()}</td>\r\n    );\r\n};\r\n\r\nconst getPitchCell = (note) => {\r\n    return (\r\n        <td className={`frequency`}>{note.getFrequency(true)}</td>\r\n    );\r\n};\r\n\r\nconst getRatioCell = (interval) => {\r\n    return (\r\n        <td className={`ratio`}>{interval.getRatio()}</td>\r\n    );\r\n};\r\n\r\nconst DetailsCard: React.FC<any> = ({ model }) => {\r\n    const intervals = model.intervals;\r\n    const octave = useRecoilValue(octaveState);\r\n    const hasNotes = !!model.notes;\r\n    const notes = hasNotes && model.notes.map(n => new Note([\r\n        (octave - 4) * 12 + NumberUtils.modulo(n.pod[0], 12),\r\n        n.pod[1]\r\n    ]));\r\n\r\n    if (!intervals && !notes) return null;\r\n\r\n    return (\r\n        <StyledDetailsCard $n={intervals.length}>\r\n            <CardHeader title={hasNotes ? 'Notes' : 'Intervals'} />\r\n            <Table\r\n                className=\"mobile\"\r\n                thead={[{\r\n                    cols: [\r\n                        hasNotes ? 'Note' : undefined,\r\n                        'Interval',\r\n                        hasNotes ? 'Pitch' : undefined,\r\n                        'Ratio'\r\n                    ]\r\n                }]}\r\n                tbody={intervals.map((ivl, i) => {\r\n                    const note = hasNotes && notes[i];\r\n                    return (\r\n                        {\r\n                            cols: [\r\n                                hasNotes ? getNoteCell(note, i) : undefined,\r\n                                getIntervalCell(ivl, !note),\r\n                                hasNotes ? getPitchCell(note) : undefined,\r\n                                getRatioCell(ivl)\r\n                            ]\r\n                        }\r\n                    );\r\n                })}\r\n            />\r\n            <Table\r\n                className=\"desktop\"\r\n                headerColIndicies={[0]}\r\n                tbody={[\r\n                    hasNotes ? {\r\n                        cols: [\r\n                            'Note',\r\n                            ...notes.map((note, i) => getNoteCell(note, i))\r\n                        ]\r\n                    } : undefined,\r\n                    {\r\n                        cols: [\r\n                            'Interval',\r\n                            ...intervals.map((ivl, i) => getIntervalCell(ivl, !notes))\r\n                        ]\r\n                    },\r\n                    hasNotes ? {\r\n                        cols: [\r\n                            'Pitch',\r\n                            ...notes.map((note, i) => getPitchCell(note))\r\n                        ]\r\n                    } : undefined,\r\n                    {\r\n                        cols: [\r\n                            'Ratio',\r\n                            ...intervals.map((ivl, i) => getRatioCell(ivl))\r\n                        ]\r\n                    },\r\n                ]}\r\n            />\r\n        </StyledDetailsCard >\r\n    );\r\n};\r\n\r\nexport default DetailsCard;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport FretTable from \"../../viewers/fret-table/FretTable\";\r\nimport Card from \"../ui/Card\";\r\nimport Icon from \"../ui/Icon\";\r\n\r\nconst StyledGuitarCard = styled.div`\r\n  .customize {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst GuitarCard: React.FC<any> = ({ model }) => {\r\n  if (!model.root || !model.intervals) return null;\r\n\r\n  const qp = new URLSearchParams({\r\n    modelId: model.modelId,\r\n    modelType: model.modelType,\r\n    rootId: model.root.modelId,\r\n  });\r\n\r\n  return (\r\n    <Card\r\n      title=\"Fretboard\"\r\n      action={\r\n        <Link className=\"customize\" to={`/view/fretboard?${qp.toString()}`}>\r\n          Customize <Icon iconId=\"next\" size={8} />\r\n        </Link>\r\n      }\r\n    >\r\n      <StyledGuitarCard>\r\n        <FretTable model={model} />\r\n      </StyledGuitarCard>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default GuitarCard;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useRootId } from \"../../contexts/PagePropsContext\";\r\nimport { NoteId, Tag } from \"../../core/models/Model.constants\";\r\nimport { SCALE_PRESETS } from \"../../core/models/Model.presets\";\r\nimport { getModelRoute } from \"../../core/routing/Routing.utils\";\r\nimport Card from \"../ui/Card\";\r\n\r\nconst StyledModeCard = styled.div`\r\n  ul {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    gap: 4px;\r\n    flex-wrap: wrap;\r\n    a {\r\n      padding: 4px;\r\n      &.active {\r\n        font-weight: bold;\r\n        text-decoration: underline;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ModeCard: React.FC<any> = ({ model }) => {\r\n  const rootId = useRootId();\r\n\r\n  const type = model.tags.find(\r\n    (t) =>\r\n      t === Tag.Diatonic ||\r\n      t === Tag.Pentatonic ||\r\n      t === Tag.MelodicMode ||\r\n      t === Tag.HarmonicMode\r\n  );\r\n\r\n  if (!type) return null;\r\n\r\n  let modeType = \"\";\r\n  switch (type) {\r\n    case Tag.Diatonic:\r\n      modeType = \"Diatonic\";\r\n      break;\r\n    case Tag.Pentatonic:\r\n      modeType = \"Pentatonic\";\r\n      break;\r\n    case Tag.MelodicMode:\r\n      modeType = \"Melodic Minor\";\r\n      break;\r\n    case Tag.HarmonicMode:\r\n      modeType = \"Harmonic Minor\";\r\n      break;\r\n  }\r\n\r\n  const modes = SCALE_PRESETS.filter((p) => p.tags.includes(type));\r\n\r\n  return (\r\n    <Card title={`${modeType} Modes`}>\r\n      <StyledModeCard>\r\n        <ul>\r\n          {modes.map((n) => (\r\n            <li key={n.modelId}>\r\n              <Link\r\n                to={getModelRoute(n.modelType, n.modelId, rootId)}\r\n                className={model.modelId === n.modelId ? \"active\" : \"\"}\r\n              >\r\n                {n.name}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </StyledModeCard>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ModeCard;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useRoot, useRootId } from \"../../contexts/PagePropsContext\";\r\nimport Chord from \"../../core/models/Chord\";\r\nimport { ModelType, NoteId } from \"../../core/models/Model.constants\";\r\nimport Scale from \"../../core/models/Scale\";\r\nimport { getModelRoute } from \"../../core/routing/Routing.utils\";\r\n\r\nconst StyledCollectionList = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 8px;\r\n\r\n  a {\r\n    padding: 2px;\r\n  }\r\n  li {\r\n    &:not(:last-child) {\r\n      ::after {\r\n        content: \", \";\r\n        color: ${(props) => props.theme.text.secondary};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\ninterface ICollectionListProps {\r\n  data: any[];\r\n}\r\n\r\nconst CollectionList: React.FC<ICollectionListProps> = ({ data }) => {\r\n  const rootId = useRootId();\r\n  const root = useRoot();\r\n  return (\r\n    <StyledCollectionList>\r\n      {data.map((d) => {\r\n        const cl = d.modelType === ModelType.Chord ? Chord : Scale;\r\n        // @ts-ignore\r\n        const model = new cl(d.modelId, { root });\r\n\r\n        return (\r\n          <li key={d.modelId}>\r\n            <Link to={getModelRoute(d.modelType, d.modelId, rootId)}>\r\n              {model.name}\r\n            </Link>\r\n          </li>\r\n        );\r\n      })}\r\n    </StyledCollectionList>\r\n  );\r\n};\r\n\r\nexport default CollectionList;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { useRootSuffix } from \"../../contexts/PagePropsContext\";\r\nimport { ModelType } from \"../../core/models/Model.constants\";\r\nimport {\r\n  CHORD_PRESETS,\r\n  NOTE_PRESETS,\r\n  SCALE_PRESETS,\r\n} from \"../../core/models/Model.presets\";\r\nimport CollectionList from \"../collection/CollectionList\";\r\nimport CollectionTable from \"../collection/CollectionTable\";\r\nimport Card from \"../ui/Card\";\r\n\r\nconst RelatedCard: React.FC<any> = ({ model }) => {\r\n  const subchords = model.getSubchords();\r\n  const subscales = model.getSubscales();\r\n  const superchords = model.getSuperchords();\r\n  const superscales = model.getSuperscales();\r\n\r\n  const semitones = model.intervals.map((ivl) => ivl.pod[0] + 1);\r\n\r\n  return (\r\n    <>\r\n      {subchords.length > 0 && (\r\n        <Card title=\"Child Chords\">\r\n          <CollectionTable data={subchords} semitones={semitones} />\r\n        </Card>\r\n      )}\r\n      {superchords.length > 0 && (\r\n        <Card title=\"Parent Chords\">\r\n          <CollectionTable data={superchords} semitones={semitones} />\r\n        </Card>\r\n      )}\r\n      {subscales.length > 0 && (\r\n        <Card title=\"Child Scales\">\r\n          <CollectionTable data={subscales} semitones={semitones} />\r\n        </Card>\r\n      )}\r\n      {superscales.length > 0 && (\r\n        <Card title=\"Parent Scales\">\r\n          <CollectionTable data={superscales} semitones={semitones} />\r\n        </Card>\r\n      )}\r\n      {model.modelType === ModelType.Chord && (\r\n        <Card title=\"Other Chords\">\r\n          <CollectionList data={CHORD_PRESETS} />\r\n        </Card>\r\n      )}\r\n      {model.modelType === ModelType.Scale && (\r\n        <Card title=\"Other Scales\">\r\n          <CollectionList data={SCALE_PRESETS} />\r\n        </Card>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RelatedCard;\r\n","import React from \"react\";\r\nimport { css } from \"styled-components\";\r\nimport { NoteId } from \"../../core/models/Model.constants\";\r\nimport { getModelRoute } from \"../../core/routing/Routing.utils\";\r\nimport Card from \"../ui/Card\";\r\nimport { Table } from \"../ui/Table\";\r\n\r\nconst tableStyles = css`\r\n  border-collapse: collapse;\r\n  width: 100%;\r\n\r\n  th {\r\n    //color: ${(props) => props.theme.brand.accent};\r\n    &:first-child {\r\n      text-align: right;\r\n    }\r\n    padding: 4px;\r\n  }\r\n\r\n  td {\r\n    padding: 4px;\r\n    text-align: center;\r\n    sup {\r\n      font-size: 80%;\r\n    }\r\n  }\r\n\r\n  .numeral td {\r\n    font-size: 160%;\r\n    font-family: serif;\r\n  }\r\n`;\r\n\r\nconst RomanNumeralsCard: React.FC<any> = ({ model }) => {\r\n  const numerals = model.getAllNumerals();\r\n\r\n  if (!numerals.length) return null;\r\n\r\n  return (\r\n    <Card title=\"Roman Numerals\">\r\n      <Table\r\n        styles={tableStyles}\r\n        headerColIndicies={[0]}\r\n        tbody={[\r\n          {\r\n            className: \"numeral\",\r\n            cols: [\r\n              \"Numeral\",\r\n              ...numerals.map((n, i) => {\r\n                const [numeral, symbol] = n.getNumeralParts(i + 1);\r\n                return {\r\n                  content: (\r\n                    <>\r\n                      {numeral}\r\n                      <sup className=\"symbol\">{symbol}</sup>\r\n                    </>\r\n                  ),\r\n                };\r\n              }),\r\n            ],\r\n          },\r\n          {\r\n            cols: [\"Degree\", ...numerals.map((n, i) => i + 1)],\r\n          },\r\n          {\r\n            cols: [\r\n              \"Name\",\r\n              ...numerals.map((n, i) => ({\r\n                link: getModelRoute(n.modelType, n.modelId, n.root as NoteId),\r\n                content: n.getShortName(),\r\n              })),\r\n            ],\r\n          },\r\n        ]}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default RomanNumeralsCard;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport styled from 'styled-components';\r\nimport { usePageProps, useRoot } from \"../../contexts/PagePropsContext\";\r\nimport { NoteId } from \"../../core/models/Model.constants\";\r\nimport { NOTE_PRESET_MAP } from \"../../core/models/Model.presets\";\r\nimport { octaveState } from \"../../state/state\";\r\nimport InputRow from \"../ui/InputRow\";\r\nimport DropdownInput from \"./DropdownInput\";\r\n\r\nconst StyledRootInput = styled.div`\r\n    display: grid;\r\n    grid-template-rows: repeat(3, 1fr);\r\n    width: 100%;\r\n\r\n    @media(min-width: 512px) {\r\n\r\n    }\r\n\r\n    .spelling, .accidental {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        gap: 4px;\r\n    }\r\n\r\n    .accidental > a:nth-child(2) {\r\n        width: 64px\r\n    }\r\n\r\n    a {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n\r\n        height: 32px;\r\n        width: 32px;\r\n        border-radius: 4px;\r\n\r\n        &:hover, &.active {\r\n            background-color: ${props => props.theme.action.active};\r\n            color: white;\r\n        }\r\n    }\r\n`;\r\n\r\nconst OCTAVE_OPTIONS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map((x, i) => ({ id: i + 1, name: i + 1 }))\r\n\r\nconst RootInput: React.FC<any> = () => {\r\n    const root = useRoot();\r\n    const pageProps = usePageProps();\r\n    const { path } = pageProps;\r\n\r\n    const rootIndex = pageProps.path.lastIndexOf('root');\r\n    const basePath = root ?\r\n        path.slice(0, rootIndex) :\r\n        path;\r\n    const rootKey = root ?\r\n        path.slice(rootIndex + 5, rootIndex + 6) :\r\n        path;\r\n\r\n    const [octave, setOctave] = useRecoilState(octaveState);\r\n\r\n    return (\r\n        <StyledRootInput>\r\n            <InputRow label={root ? \"Spelling\" : undefined} y>\r\n                <div className=\"spelling\">\r\n                    <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.C}`} >{NOTE_PRESET_MAP.get(NoteId.C).name}</Link>\r\n                    <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.D}`} >{NOTE_PRESET_MAP.get(NoteId.D).name}</Link>\r\n                    <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.E}`} >{NOTE_PRESET_MAP.get(NoteId.E).name}</Link>\r\n                    <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.F}`} >{NOTE_PRESET_MAP.get(NoteId.F).name}</Link>\r\n                    <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.G}`} >{NOTE_PRESET_MAP.get(NoteId.G).name}</Link>\r\n                    <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.A}`} >{NOTE_PRESET_MAP.get(NoteId.A).name}</Link>\r\n                    <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.B}`} >{NOTE_PRESET_MAP.get(NoteId.B).name}</Link>\r\n                </div>\r\n            </InputRow>\r\n            {root && (\r\n                <>\r\n                    <InputRow label=\"Accidental\" y>\r\n                        <div className=\"accidental\">\r\n                            <Link activeClassName=\"active\" to={`${basePath}root/${rootKey}-flat`} >b</Link>\r\n                            <Link activeClassName=\"active\" to={`${basePath}root/${rootKey}`} >none</Link>\r\n                            <Link activeClassName=\"active\" to={`${basePath}root/${rootKey}-sharp`} >#</Link>\r\n                        </div>\r\n                    </InputRow>\r\n                    <InputRow label=\"Octave\" y>\r\n                        <DropdownInput options={OCTAVE_OPTIONS} value={{ id: octave }} setValue={o => setOctave(o.id)} />\r\n                    </InputRow>\r\n                </>\r\n            )}\r\n        </StyledRootInput>\r\n    );\r\n};\r\n\r\nexport default RootInput;\r\n","import { navigate } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport styled from 'styled-components';\r\nimport { usePageProps, useRoot } from \"../../contexts/PagePropsContext\";\r\nimport { isEditingKeyState, octaveState } from \"../../state/state\";\r\nimport THEME from \"../../styles/theme\";\r\nimport ButtonInput from \"../inputs/ButtonInput\";\r\nimport RootInput from \"../inputs/RootInput\";\r\nimport Card from \"../ui/Card\";\r\n\r\nconst StyledRoot = styled.div`\r\n    margin-top: 8px;\r\n    .preview {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        font-size: 300%;\r\n    }\r\n    .rootless {\r\n        margin: 8px 0 16px;\r\n    }\r\n    .remove {\r\n        margin-top: 24px;\r\n        margin-left: auto;\r\n        display: block;\r\n        font-size: 80%;\r\n        color: red; //${THEME.status.negative};\r\n    }\r\n`;\r\n\r\nconst RootCard: React.FC<any> = () => {\r\n    const root = useRoot();\r\n    const pageProps = usePageProps();\r\n    const [octave, setOctave] = useRecoilState(octaveState);\r\n    const [isEditing, setIsEditing] = useRecoilState(isEditingKeyState);\r\n\r\n    const modelType = pageProps.path.includes('chord') ? 'chord' : 'scale';\r\n\r\n    const onClear = () => {\r\n        const rootIndex = pageProps.path.lastIndexOf('root');\r\n        const sanitized = rootIndex === -1 ?\r\n            pageProps.path :\r\n            pageProps.path.slice(0, rootIndex);\r\n        navigate(sanitized);\r\n    }\r\n\r\n    const toggle = (\r\n        <ButtonInput isLink onClick={() => setIsEditing(!isEditing)}>\r\n            {isEditing ? 'Done' : 'Edit'}\r\n        </ButtonInput>\r\n    );\r\n\r\n    const remove = root ? (\r\n        <ButtonInput isLink onClick={onClear} className=\"remove\">\r\n            Remove Root\r\n        </ButtonInput>\r\n    ) : null;\r\n\r\n    return (\r\n        <Card title=\"Root\" action={root && toggle} css={root ? `color: ${THEME.text.primary};` : `background-color: ${THEME.status.highlight}; border: 1px solid ${THEME.status.warning}; color: ${THEME.text.primary};`}>\r\n            <StyledRoot $isRootless={!root}>\r\n                {!root && (\r\n                    <div className=\"rootless\">\r\n                        <b>This {modelType} does not have a root.</b>\r\n                        <br />\r\n                        Please select a root to see the notes.\r\n                    </div>\r\n                )}\r\n                {(isEditing || !root) && (\r\n                    <RootInput />\r\n                )}\r\n\r\n                {isEditing && remove}\r\n\r\n                {(!isEditing && root) && (\r\n                    <div className=\"preview\">\r\n                        <b>{root.name}</b>\r\n                        <sub>{octave}</sub>\r\n                    </div>\r\n                )}\r\n            </StyledRoot>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default RootCard;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useRoot } from \"../../../contexts/PagePropsContext\";\r\nimport {\r\n  getModelIdClass,\r\n  getModelIdText,\r\n  ModelType,\r\n} from \"../../../core/models/Model.constants\";\r\nimport DetailsCard from \"../../cards/DetailsCard\";\r\nimport GuitarCard from \"../../cards/GuitarCard\";\r\nimport ModeCard from \"../../cards/ModeCard\";\r\nimport RelatedCard from \"../../cards/RelatedCard\";\r\nimport RomanNumeralsCard from \"../../cards/RomanNumeralsCard\";\r\nimport RootCard from \"../../cards/RootCard\";\r\nimport ColumnManager from \"../../column-manager/ColumnManager\";\r\nimport PageLayout from \"../../layout/PageLayout\";\r\n\r\nconst StyledPodlistPage = styled(PageLayout)``;\r\n\r\ninterface IPodListPageProps {\r\n  pageContext: any;\r\n}\r\n\r\nconst PodListPage: React.FC<IPodListPageProps> = (props) => {\r\n  const { modelType, modelId } = props.pageContext;\r\n  const root = useRoot();\r\n\r\n  const cl = getModelIdClass(modelType);\r\n  const clText = getModelIdText(modelType);\r\n\r\n  const podList = new cl(modelId, { root });\r\n  const title = `${podList.name} ${clText}`;\r\n\r\n  //const subtitle = podList.aliases.length ? `Also known as ${podList.aliases.join(', ')}` : 'Podlist';\r\n\r\n  return (\r\n    <StyledPodlistPage title={title}>\r\n      <ColumnManager>\r\n        <ColumnManager tablet={[\"300px\", \"auto\"]}>\r\n          <RootCard />\r\n          <DetailsCard model={podList} />\r\n        </ColumnManager>\r\n\r\n        {modelType === ModelType.Scale && <RomanNumeralsCard model={podList} />}\r\n        {modelType === ModelType.Scale && <ModeCard model={podList} />}\r\n        <ColumnManager>\r\n          <GuitarCard model={podList} />\r\n        </ColumnManager>\r\n        <RelatedCard model={podList} />\r\n      </ColumnManager>\r\n    </StyledPodlistPage>\r\n  );\r\n};\r\n\r\nexport default PodListPage;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledCard = styled.div`\r\n    background: ${props => props.theme.surface.card};\r\n    width: 100%;\r\n    border-radius: 16px;\r\n    padding: 16px;\r\n\r\n    .header {\r\n        margin-bottom: 16px;\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 8px;\r\n        justify-content: space-between;\r\n    }\r\n`;\r\n\r\nexport const CardHeader: React.FC<any> = ({ title, level = 2, action = null }) => {\r\n    const AsTag: any = `h${level}`;\r\n    return (\r\n        <div className=\"header\">\r\n            <AsTag>{title}</AsTag>\r\n            {action}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Card: React.FC<any> = ({ title, subtitle, action, children, level, ...rest }) => {\r\n    return (\r\n        <StyledCard {...rest}>\r\n            {title &&\r\n                <CardHeader title={title} action={action} level={level} />\r\n            }\r\n            {subtitle &&\r\n                <CardHeader title={subtitle} level={level + 1} />\r\n            }\r\n            {children}\r\n        </StyledCard >\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledInputRow = styled.div`\r\n    display: flex;\r\n    align-items: flex-start;\r\n    flex-direction: column;\r\n    width: 100%;\r\n\r\n    ${props => props.$y ? '' : `\r\n        @media(min-width: 512px) {\r\n            align-items: center;\r\n            flex-direction: row;\r\n            justify-content: space-between;\r\n            //margin-bottom: 8px;\r\n        }\r\n    `}\r\n\r\n    > label {\r\n        color: ${({ theme }) => theme.dark3};\r\n        font-weight: bold;\r\n        margin: 8px;\r\n        white-space: nowrap;\r\n    }\r\n`;\r\n\r\nconst InputRow = ({ label, children, y = false, ...rest }) => {\r\n    return (\r\n        <StyledInputRow $y={y} {...rest}>\r\n            <label>{label}</label>\r\n            <div>\r\n                {children}\r\n            </div>\r\n        </StyledInputRow>\r\n    );\r\n}\r\n\r\nexport default InputRow;\r\n","import { Link } from \"gatsby\";\r\nimport React, { Fragment, ReactNode } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledTable = styled.table``;\r\n\r\ntype TOmit = undefined | null | false;\r\n\r\nconst getIsTypeOmit = (data: any): data is TOmit =>\r\n  data === undefined || data === null || data === false;\r\n\r\n// Col\r\n\r\nexport interface IColConfig {\r\n  isHeader?: boolean;\r\n  content: any;\r\n  colSpan?: number;\r\n  className?: string;\r\n  link?: string;\r\n}\r\n\r\ninterface IColProps extends IColConfig {\r\n  index: number;\r\n}\r\n\r\ntype TCol = string | number | IColConfig | ReactNode;\r\n\r\nconst Col: React.FC<IColProps> = ({\r\n  index,\r\n  isHeader,\r\n  content,\r\n  colSpan,\r\n  className,\r\n  link,\r\n}) => {\r\n  const ColTag = isHeader ? \"th\" : \"td\";\r\n  const WrapperTag = link ? Link : Fragment;\r\n  const wrapperProps: any = link ? { to: link } : {};\r\n\r\n  return (\r\n    <ColTag colSpan={colSpan} className={className}>\r\n      <WrapperTag {...wrapperProps}>{content || \"\"}</WrapperTag>\r\n    </ColTag>\r\n  );\r\n};\r\n\r\n// Row\r\n\r\nexport interface IRowConfig {\r\n  cols: (TCol | TOmit)[];\r\n  className?: string;\r\n  isHeader?: boolean;\r\n  headerColIndicies?: number[];\r\n}\r\n\r\nconst getIsConfig = (col: TCol): col is IColConfig =>\r\n  typeof col === \"object\" && col !== null && col.hasOwnProperty(\"content\");\r\n\r\nconst Row: React.FC<IRowConfig> = ({\r\n  cols,\r\n  isHeader,\r\n  className,\r\n  headerColIndicies = [],\r\n}) => {\r\n  return (\r\n    <tr className={className}>\r\n      {cols.map((col: any, i) => {\r\n        if (getIsTypeOmit(col)) return null;\r\n        const isConfig = getIsConfig(col);\r\n        const colConfig = !isConfig ? { content: col } : col;\r\n        return (\r\n          <Col\r\n            key={i}\r\n            index={i}\r\n            isHeader={isHeader || headerColIndicies.includes(i)}\r\n            {...colConfig}\r\n          />\r\n        );\r\n      })}\r\n    </tr>\r\n  );\r\n};\r\n\r\n// Table Section\r\n\r\ninterface ITableSectionConfig {\r\n  Tag: \"thead\" | \"tfoot\" | \"tbody\";\r\n  rows: (IRowConfig | TOmit)[];\r\n  headerColIndicies?: number[];\r\n}\r\n\r\nconst TableSection: React.FC<ITableSectionConfig> = ({\r\n  Tag,\r\n  rows,\r\n  headerColIndicies,\r\n}) => (\r\n  <Tag>\r\n    {rows.map((row, i) => {\r\n      if (getIsTypeOmit(row)) return null;\r\n      return (\r\n        <Row\r\n          key={i}\r\n          isHeader={Tag !== \"tbody\"}\r\n          headerColIndicies={headerColIndicies}\r\n          {...row}\r\n        />\r\n      );\r\n    })}\r\n  </Tag>\r\n);\r\n\r\n// Table\r\n\r\ninterface IColGroup {\r\n  span?: number;\r\n  className?: string;\r\n}\r\n\r\nexport interface ITableConfig {\r\n  thead?: (IRowConfig | TOmit)[];\r\n  tfoot?: (IRowConfig | TOmit)[];\r\n  tbody: (IRowConfig | TOmit)[];\r\n  styles?: any;\r\n  caption?: string;\r\n  colGroups?: IColGroup[];\r\n  className?: string;\r\n  headerColIndicies?: number[];\r\n}\r\n\r\nexport const Table: React.FC<ITableConfig> = ({\r\n  thead,\r\n  tfoot,\r\n  tbody,\r\n  styles,\r\n  colGroups,\r\n  caption,\r\n  headerColIndicies,\r\n  className,\r\n}) => {\r\n  return (\r\n    <StyledTable css={styles} className={className}>\r\n      {colGroups && (\r\n        <colgroup>\r\n          {colGroups.map((cg, i) => (\r\n            <col key={i} {...cg} />\r\n          ))}\r\n        </colgroup>\r\n      )}\r\n      {caption && <caption>{caption}</caption>}\r\n      {thead && (\r\n        <TableSection\r\n          Tag=\"thead\"\r\n          rows={thead}\r\n          headerColIndicies={headerColIndicies}\r\n        />\r\n      )}\r\n      {tfoot && (\r\n        <TableSection\r\n          Tag=\"tfoot\"\r\n          rows={tfoot}\r\n          headerColIndicies={headerColIndicies}\r\n        />\r\n      )}\r\n      {tbody && (\r\n        <TableSection\r\n          Tag=\"tbody\"\r\n          rows={tbody}\r\n          headerColIndicies={headerColIndicies}\r\n        />\r\n      )}\r\n    </StyledTable>\r\n  );\r\n};\r\n","import { ModelId, ModelType, NoteId } from \"../models/Model.constants\";\r\n\r\nexport const getModelRoute = (\r\n  modelType: ModelType,\r\n  modelId?: ModelId,\r\n  rootId?: NoteId\r\n) => {\r\n  const modelSuffix = modelId ? `/${modelId}` : \"\";\r\n  const rootSuffix = rootId ? `/root/${rootId}` : \"\";\r\n\r\n  return `/browse/${modelType}${modelSuffix}${rootSuffix}/`;\r\n};\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IFretFlagProps {\r\n  color?: string;\r\n  text?: string | number;\r\n  opacity?: number;\r\n}\r\n\r\nexport const StyledFretFlag = styled.div<{\r\n  $color?: string;\r\n  $opacity?: number;\r\n}>`\r\n  height: 16px;\r\n  width: 16px;\r\n  background: ${(props) => props.$color || \"\"};\r\n  opacity: ${(props) => props.$opacity || 1};\r\n  border-radius: 100%;\r\n  z-index: 1;\r\n`;\r\n\r\nconst FretFlag: React.FC<IFretFlagProps> = ({ color, text, opacity }) => {\r\n  return (\r\n    <StyledFretFlag $color={color} $opacity={opacity}>\r\n      {text}\r\n    </StyledFretFlag>\r\n  );\r\n};\r\n\r\nexport default FretFlag;\r\n","import * as React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { IColConfig, IRowConfig, Table } from \"../../components/ui/Table\";\r\nimport {\r\n  DEFAULT_FRETBOARD_PROPS,\r\n  getDotsForFret,\r\n  IFretboardProps,\r\n} from \"../fretboard/Fretboard.utils\";\r\nimport FretFlag from \"./FretFlag\";\r\nconst StyledFretTable = styled.div``;\r\n\r\nconst tableStyles = css`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  td,\r\n  th {\r\n    min-width: 18px;\r\n    text-align: center;\r\n  }\r\n  tbody td {\r\n    background-color: #e8dbb8;\r\n\r\n    border-right: 1px solid grey;\r\n    &:first-child {\r\n      border-left: 1px solid grey;\r\n    }\r\n    .fret-content {\r\n      min-height: 32px;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      position: relative;\r\n    }\r\n    .fret-string {\r\n      height: 1px;\r\n      background: #bbb;\r\n      width: 100%;\r\n      position: absolute;\r\n      margin: auto 0;\r\n    }\r\n  }\r\n  tbody tr {\r\n    &:first-child {\r\n      border-top: 1px solid grey;\r\n    }\r\n    &:last-child {\r\n      border-bottom: 1px solid grey;\r\n    }\r\n  }\r\n`;\r\n\r\nconst FretTable: React.FC<IFretboardProps> = (userProps) => {\r\n  const props = { ...DEFAULT_FRETBOARD_PROPS, ...userProps };\r\n\r\n  const { fretRange, showFretDots, showFretNumbers, tuning, colorMapFn } =\r\n    props;\r\n  const [lo, hi] = fretRange as [number, number];\r\n\r\n  const numFrets = hi - lo + 1;\r\n  const numStrings = (tuning as number[]).length;\r\n\r\n  const fretNums: number[] = [];\r\n  for (let i = 0; i < numFrets; i++) {\r\n    fretNums.push(lo + i);\r\n  }\r\n\r\n  const fretDots: string[] = [];\r\n  for (let i = 0; i < numFrets; i++) {\r\n    fretDots.push(getDotsForFret(lo + i));\r\n  }\r\n\r\n  const strings: IRowConfig[] = [];\r\n  for (let s = 0; s < numStrings; s++) {\r\n    const frets: IColConfig[] = [];\r\n    for (let f = lo; f <= hi; f++) {\r\n      frets.push({\r\n        content: (\r\n          <div className=\"fret-content\">\r\n            <div className=\"fret-string\" />\r\n            <FretFlag\r\n              color={(colorMapFn as any)({\r\n                stringIndex: s,\r\n                fretIndex: f,\r\n                ...props,\r\n              })}\r\n              text=\"\"\r\n              opacity={1}\r\n            />\r\n          </div>\r\n        ),\r\n      });\r\n    }\r\n    strings.push({\r\n      cols: frets,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <StyledFretTable>\r\n      <Table\r\n        thead={showFretNumbers ? [{ cols: fretNums }] : undefined}\r\n        tfoot={showFretDots ? [{ cols: fretDots }] : undefined}\r\n        tbody={strings}\r\n        styles={tableStyles}\r\n      />\r\n    </StyledFretTable>\r\n  );\r\n};\r\n\r\nexport default FretTable;\r\n","import ArrayUtils from \"../../core/general/Array.utils\";\r\nimport Note from '../../core/models/Note';\r\nimport { NoteId } from './../../core/models/Model.constants';\r\n\r\nexport enum TuningId {\r\n    Standard = 'standard',\r\n    StandardSeven = 'standard-seven',\r\n    StandardBass = 'standard-bass',\r\n    Flat = 'flat',\r\n    DoubleFlat = 'double-flat',\r\n    DropD = 'drop-d',\r\n    DADGAD = 'dadgad',\r\n    Banjo = 'banjo',\r\n    Violin = 'violin',\r\n    OpenA = 'open-a',\r\n    OpenB = 'open-b',\r\n    OpenC = 'open-c',\r\n    OpenD = 'open-d',\r\n    OpenE = 'open-e',\r\n    OpenF = 'open-f',\r\n    OpenG = 'open-g',\r\n}\r\n\r\nexport interface ITuning {\r\n    id: TuningId;\r\n    name: string;\r\n    value: number[]\r\n}\r\n\r\nconst formatPreset = (id: TuningId, name: string, value: number[]): ITuning => ({\r\n    id,\r\n    name,\r\n    value\r\n});\r\n\r\nconst getPitch = (noteId: NoteId, octave: number): number => Note.getNote(noteId, octave).pod[0];\r\n\r\nexport const TUNING_PRESET_MAP = new Map<TuningId, ITuning>([\r\n    [TuningId.Standard, formatPreset(\r\n        TuningId.Standard,\r\n        'Standard Guitar',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.E, 3)\r\n        ]\r\n    )],\r\n    [TuningId.Flat, formatPreset(\r\n        TuningId.Flat,\r\n        'Flat Gtr',\r\n        [\r\n            getPitch(NoteId.Eb, 5),\r\n            getPitch(NoteId.Bb, 4),\r\n            getPitch(NoteId.Gb, 4),\r\n            getPitch(NoteId.Db, 4),\r\n            getPitch(NoteId.Ab, 3),\r\n            getPitch(NoteId.Eb, 3)\r\n        ]\r\n    )],\r\n    [TuningId.DoubleFlat, formatPreset(\r\n        TuningId.DoubleFlat,\r\n        'Double Flat Gtr',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.F, 4),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    [TuningId.StandardSeven, formatPreset(\r\n        TuningId.StandardSeven,\r\n        'Standard 7-String Gtr',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.E, 3),\r\n            getPitch(NoteId.B, 3)\r\n        ]\r\n    )],\r\n    [TuningId.StandardBass, formatPreset(\r\n        TuningId.StandardBass,\r\n        'Standard Bass',\r\n        [\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.D, 3),\r\n            getPitch(NoteId.A, 2),\r\n            getPitch(NoteId.E, 2)\r\n        ]\r\n    )],\r\n    [TuningId.DropD, formatPreset(\r\n        TuningId.DropD,\r\n        'Drop D Gtr',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    [TuningId.DADGAD, formatPreset(\r\n        TuningId.DADGAD,\r\n        'DADGAD',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    // Unconfirmed\r\n    /*[TuningId.Banjo, formatPreset(\r\n        TuningId.Banjo,\r\n        'Banjo',\r\n        [\r\n            getPitch(NoteId.G, 5),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],*/\r\n    // Unconfirmed\r\n    [TuningId.Violin, formatPreset(\r\n        TuningId.Violin,\r\n        'Violin',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.G, 4)\r\n        ]\r\n    )],\r\n    [TuningId.OpenA, formatPreset(\r\n        TuningId.OpenA,\r\n        'Open A',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.E, 4),\r\n            getPitch(NoteId.Cs, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.E, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenB, formatPreset(\r\n        TuningId.OpenB,\r\n        'Open B',\r\n        [\r\n            getPitch(NoteId.Ds, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.Fs, 4),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.Fs, 3),\r\n            getPitch(NoteId.B, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenC, formatPreset(\r\n        TuningId.OpenC,\r\n        'Open C',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.C, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenD, formatPreset(\r\n        TuningId.OpenD,\r\n        'Open D',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.Fs, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenE, formatPreset(\r\n        TuningId.OpenE,\r\n        'Open E',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.Gs, 4),\r\n            getPitch(NoteId.E, 4),\r\n            getPitch(NoteId.B, 3),\r\n            getPitch(NoteId.E, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenF, formatPreset(\r\n        TuningId.OpenF,\r\n        'Open F',\r\n        [\r\n            getPitch(NoteId.F, 5),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.F, 4),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.F, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenG, formatPreset(\r\n        TuningId.OpenG,\r\n        'Open G',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )]\r\n]);\r\n\r\nexport const FRETBOARD_TUNING_VALUES = ArrayUtils.mapToArray(TUNING_PRESET_MAP);\r\n","import Chord from \"../../core/models/Chord\";\r\nimport IntervalSpan from \"../../core/models/Interval\";\r\nimport { IModelConfig } from \"../../core/models/Model.constants\";\r\nimport Note from \"../../core/models/Note\";\r\nimport Scale from \"../../core/models/Scale\";\r\nimport { ITuning, TuningId, TUNING_PRESET_MAP } from \"./Fretboard.tuning\";\r\nimport { IVoicing } from \"./Fretboard.voicing\";\r\n\r\nexport interface IFretLabelProps {\r\n  note?: Note;\r\n  color?: string;\r\n  freq?: number;\r\n}\r\n\r\nexport interface IFretboardProps {\r\n  fretRange?: [number, number];\r\n  showFretDots?: boolean;\r\n  showFretNumbers?: boolean;\r\n  colorMapFn?: (fretProps: IFretProps) => string | undefined;\r\n  voicing?: IVoicing;\r\n  tuning?: number[]; // ITuning,\r\n  model?: Chord | Scale;\r\n}\r\n\r\nexport interface IFretProps extends IFretboardProps {\r\n  stringIndex: number;\r\n  fretIndex: number;\r\n}\r\n\r\nexport const DOTTED_FRET_INDICES = [\r\n  true,\r\n  false,\r\n  false,\r\n  true,\r\n  false,\r\n  true,\r\n  false,\r\n  true,\r\n  false,\r\n  true,\r\n  false,\r\n  false,\r\n];\r\n\r\nexport const FRET_SIZE_RATIO = Math.pow(1 / 2, 1 / 12);\r\n\r\nexport const isIntervalInVoicing = (\r\n  interval: IntervalSpan,\r\n  voicing: IVoicing,\r\n  stringIndex: number\r\n) => {\r\n  if (!voicing || !voicing.value) return true;\r\n  const v = voicing.value[stringIndex];\r\n  const d = interval.getDegree();\r\n  if (Array.isArray(v)) {\r\n    return v.some((n) => doesVoicingValueMatch(d, n));\r\n  } else if (typeof v === \"number\") {\r\n    return doesVoicingValueMatch(d, v);\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const getFretColor = (props: IFretProps): string | undefined => {\r\n  const { stringIndex, fretIndex, tuning, model, voicing } = props;\r\n  const noteIndex = tuning[stringIndex] + fretIndex;\r\n  const [interval, note] = model.tryGetPodPairAtPitch(noteIndex);\r\n\r\n  if (!note) return;\r\n\r\n  if (voicing && !isIntervalInVoicing(interval, voicing, stringIndex)) {\r\n    return `#00000011`;\r\n  }\r\n\r\n  return interval.getColor();\r\n};\r\n\r\nexport const DEFAULT_FRETBOARD_PROPS: IFretboardProps = {\r\n  fretRange: [1, 12],\r\n  tuning: TUNING_PRESET_MAP.get(TuningId.Standard).value,\r\n  showFretDots: true,\r\n  showFretNumbers: true,\r\n  colorMapFn: getFretColor,\r\n};\r\n\r\nexport const getFretRatios = (numFrets: number): number[] => {\r\n  const ratios = [];\r\n  for (let i = 1; i <= numFrets; i++) {\r\n    ratios.push(i <= 1 ? 1 : ratios[i - 2] * FRET_SIZE_RATIO);\r\n  }\r\n  return ratios;\r\n};\r\n\r\nexport const getDotsForFret = (fretNumber: number): string => {\r\n  if (fretNumber === 0) return \"\";\r\n  const mod = fretNumber % 12;\r\n  if (mod === 0) return \"• •\";\r\n  else if (DOTTED_FRET_INDICES[mod]) return \"•\";\r\n  return \"\";\r\n};\r\n\r\nconst doesVoicingValueMatch = (d: number, v: number) => {\r\n  return d + 1 === v;\r\n};\r\n"],"names":["tableStyles","css","props","theme","surface","bg","nav","text","inverted","SEMITONES","data","semitones","rootId","useRootId","root","useRoot","React","Table","styles","thead","cols","colSpan","content","tbody","map","d","i","model","modelType","ModelType","Chord","Scale","modelId","link","getModelRoute","getName","h","index","intervals","findIndex","ivl","pod","className","includes","undefined","notes","getSemitoneCol","StyledColumnManager","styled","$tablet","join","$desktop","children","tablet","desktop","StyledDropdownInput","value","setValue","options","idProperty","displayProperty","onChange","e","target","selectedIndex","v","key","name","StyledDetailsCard","StyledCard","withConfig","secondary","getNoteCell","note","getOctave","getIntervalCell","interval","isFeatured","getPitchCell","getFrequency","getRatioCell","getRatio","octave","useRecoilValue","octaveState","hasNotes","n","Note","NumberUtils","$n","length","CardHeader","title","headerColIndicies","StyledGuitarCard","qp","URLSearchParams","Card","action","Link","to","toString","Icon","iconId","size","FretTable","StyledModeCard","type","tags","find","t","Tag","modeType","modes","SCALE_PRESETS","p","StyledCollectionList","subchords","getSubchords","subscales","getSubscales","superchords","getSuperchords","superscales","getSuperscales","CollectionTable","CollectionList","CHORD_PRESETS","numerals","getAllNumerals","getNumeralParts","numeral","symbol","getShortName","StyledRootInput","active","OCTAVE_OPTIONS","x","id","pageProps","usePageProps","path","rootIndex","lastIndexOf","basePath","slice","rootKey","useRecoilState","setOctave","InputRow","label","y","activeClassName","NoteId","NOTE_PRESET_MAP","DropdownInput","o","StyledRoot","isEditingKeyState","isEditing","setIsEditing","toggle","ButtonInput","isLink","onClick","remove","sanitized","navigate","THEME","$isRootless","RootInput","StyledPodlistPage","PageLayout","pageContext","cl","getModelIdClass","clText","getModelIdText","podList","ColumnManager","RootCard","DetailsCard","RomanNumeralsCard","ModeCard","GuitarCard","RelatedCard","card","level","AsTag","subtitle","rest","StyledInputRow","$y","dark3","StyledTable","getIsTypeOmit","Col","isHeader","ColTag","WrapperTag","Fragment","wrapperProps","Row","col","isConfig","hasOwnProperty","getIsConfig","colConfig","TableSection","rows","row","tfoot","colGroups","caption","cg","StyledFretFlag","$color","$opacity","color","opacity","StyledFretTable","userProps","DEFAULT_FRETBOARD_PROPS","fretRange","showFretDots","showFretNumbers","tuning","colorMapFn","lo","hi","numFrets","numStrings","fretNums","push","fretDots","getDotsForFret","strings","s","frets","f","FretFlag","stringIndex","fretIndex","TuningId","formatPreset","getPitch","noteId","TUNING_PRESET_MAP","Map","Standard","Flat","DoubleFlat","StandardSeven","StandardBass","DropD","DADGAD","Violin","OpenA","OpenB","OpenC","OpenD","OpenE","OpenF","OpenG","FRETBOARD_TUNING_VALUES","ArrayUtils","DOTTED_FRET_INDICES","isIntervalInVoicing","Math","pow","voicing","getDegree","Array","isArray","some","doesVoicingValueMatch","noteIndex","tryGetPodPairAtPitch","getColor","fretNumber","mod"],"sourceRoot":""}