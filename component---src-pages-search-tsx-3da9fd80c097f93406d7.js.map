{"version":3,"file":"component---src-pages-search-tsx-3da9fd80c097f93406d7.js","mappings":"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","sources":["webpack://play-what/./src/components/_shared/breadcrumb-list/BreadcrumbList.tsx","webpack://play-what/./src/components/_shared/layout/PageTitle.tsx","webpack://play-what/./src/components/_shared/ui/Card.tsx","webpack://play-what/./src/components/search/SearchBar.tsx","webpack://play-what/./src/core/general/Nav.utils.ts","webpack://play-what/./src/components/_shared/inputs/FilterList.tsx","webpack://play-what/./src/components/search/SearchResultsCard.tsx","webpack://play-what/./src/components/search/SearchPage.tsx","webpack://play-what/./src/pages/search.tsx"],"sourcesContent":["import { Link } from \"gatsby\";\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { usePageProps } from \"../../../contexts/PagePropsContext\";\r\nimport Icon from \"../ui/Icon\";\r\n\r\nconst StyledBreadcrumbList = styled.ul`\r\n    font-size: 80%;\r\n    padding: 0 0 8px 0;\r\n    @media(min-width: 512px) {\r\n        font-size: 110%;\r\n        padding: 0 0 16px 0;\r\n    }\r\n\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    gap: 8px;\r\n    white-space: nowrap;\r\n    text-transform: capitalize;\r\n    svg {\r\n        margin-right: 8px;\r\n    }\r\n\r\n    span {\r\n        color: ${props => props.theme.text.secondary};\r\n    }\r\n`\r\n\r\nconst BreadcrumbList = () => {\r\n    const { path } = usePageProps();\r\n    let pieces = path.split('/');\r\n    const paths = [];\r\n    pieces.reduce((prev, cur, i, arr) => {\r\n        const path = `${prev}/${cur}`.replace('//', '/') || '/';\r\n        const isLink = !['root'].includes(cur);\r\n        const text = i === 0 ? 'Home' : cur.replaceAll('-', ' ').replace(' sharp', '#').replace(' flat', 'b');\r\n\r\n        const Tag = isLink ? Link : 'span';\r\n        const to = isLink ? path : undefined;\r\n\r\n        paths.push(\r\n            <li key={i}>\r\n                {i > 0 && <Icon iconId=\"next\" size={10} color=\"grey\" />}\r\n                <Tag to={to}>{text}</Tag>\r\n            </li>\r\n        );\r\n        return path;\r\n    }, '/');\r\n    return <StyledBreadcrumbList>{paths.slice(0, paths.length - 1)}</StyledBreadcrumbList>;\r\n}\r\n\r\nexport default BreadcrumbList;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport BreadcrumbList from '../breadcrumb-list/BreadcrumbList';\r\nimport SEO from \"../utils/SEO\";\r\n\r\nconst StyledPageTitle = styled.div`\r\n    width: 100%;\r\n\r\n    .header {\r\n        border-bottom: 1px solid ${({ theme }) => theme.utils.border};    \r\n        width: 100%;\r\n        margin: auto;\r\n        padding-bottom: 8px;\r\n        @media(min-width: 512px) {\r\n            padding-bottom: 16px;\r\n        }\r\n\r\n        > h1 {\r\n            width: 100%;\r\n            font-size: 150%;\r\n            @media(min-width: 512px) {\r\n                font-size: 300%;\r\n            }\r\n            text-align: left;\r\n            color: ${({ theme }) => theme.text.primary};;\r\n        }\r\n\r\n        > h2 {\r\n            margin-top: 4px;\r\n            width: 100%;\r\n            text-align: left;\r\n            color: ${({ theme }) => theme.text.secondary};;\r\n            font-size: 80%;\r\n            @media(min-width: 512px) {\r\n                font-size: 100%;\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst PageTitle: React.FC<any> = ({ title, subtitle, children }) => {\r\n    return (\r\n        <>\r\n            <SEO title={title} />\r\n            <BreadcrumbList />\r\n            <StyledPageTitle>\r\n                <div className=\"header\">\r\n                    <h1>{title}</h1>\r\n                    {subtitle && <h2>{subtitle}</h2>}\r\n                </div>\r\n                {children}\r\n            </StyledPageTitle>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledCard = styled.div`\r\n    background: ${props => props.theme.surface.card};\r\n    width: 100%;\r\n    border-radius: 16px;\r\n    padding: 16px;\r\n\r\n    .header {\r\n        margin-bottom: 16px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n    }\r\n`;\r\n\r\nconst Card: React.FC<any> = ({ title, action, children, ...rest }) => {\r\n    return (\r\n        <StyledCard {...rest}>\r\n            {title &&\r\n                <div className=\"header\">\r\n                    <h2>{title}</h2>\r\n                    {action}\r\n                </div>\r\n            }\r\n            {children}\r\n        </StyledCard >\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import { navigate } from \"gatsby\";\r\nimport React, { useState } from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nconst StyledSearchBar = styled.form`\r\n    width: 100%;\r\n    .search-bar {\r\n        width: 100%;\r\n        max-width: 512px;\r\n        display: grid;\r\n        grid-template-columns: 1fr auto;\r\n\r\n        input, button {\r\n            padding: 8px 8px;\r\n            border-radius: 8px;\r\n            border: 1px solid ${props => props.theme.utils.border};\r\n        }\r\n\r\n        input {\r\n            border-radius: 8px 0 0 8px;\r\n            border-right: none;\r\n        }\r\n\r\n        button {\r\n            border-radius: 0 8px 8px 0;\r\n            cursor: pointer;\r\n            color: white;\r\n            font-weight: bold;\r\n            background-color: ${props => props.theme.action.interactive};\r\n            border-left: none;\r\n            padding: 8px 16px;\r\n\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n        }\r\n    }\r\n`;\r\n\r\nconst SearchBar: React.FC<any> = ({ searchRef, query: externalQuery, setQuery: externalSetQuery, placeholder }) => {\r\n    const [_query, _setQuery] = useState('');\r\n    const query = typeof externalQuery === 'undefined' ? _query : externalQuery;\r\n    const setQuery = typeof externalSetQuery === 'undefined' ? _setQuery : externalSetQuery;\r\n\r\n    const onChange = e => {\r\n        setQuery(e.target.value);\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        const value = e.target.elements.query.value;\r\n        console.log('dpb', e, value);\r\n        const query = new URLSearchParams({ query: value });\r\n        const path = `/search/?${query.toString()}`;\r\n        navigate(path);\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <StyledSearchBar role=\"search\" onSubmit={onSubmit}>\r\n            <div className=\"search-bar\">\r\n                <input\r\n                    type=\"search\"\r\n                    id=\"site-search\"\r\n                    name=\"query\"\r\n                    ref={searchRef}\r\n                    onChange={onChange}\r\n                    value={query as string}\r\n                    placeholder={placeholder || \"Search the site...\"}\r\n                />\r\n                <button type=\"submit\" >Search</button>\r\n            </div>\r\n        </StyledSearchBar>\r\n    );\r\n};\r\n\r\nexport default SearchBar;\r\n","import { IModelConfig, ModelId, NoteId, Tag } from '../models/Model.constants';\r\nimport { ALL_PRESETS, NOTE_PRESET_MAP } from './../models/Model.presets';\r\n\r\ninterface ISearchResult {\r\n    to: string;\r\n    text: string;\r\n}\r\n\r\ninterface ISearchCandidate {\r\n    text: string;\r\n    to: string;\r\n    keywords: string[];\r\n}\r\n\r\nconst doesQueryMatch = (query = '', keywords: (string | RegExp)[]) => {\r\n    return keywords.some(kw => query.match(new RegExp(kw, 'gi')));\r\n}\r\n\r\nconst getLink = (modelType: ModelId, id: string, root?: string): string => {\r\n    return `/browse/${modelType}/${id}${root ? `/root/${root}/` : ''}`;\r\n}\r\n\r\nconst getName = (modelType: ModelId, name: string, root?: string): string => {\r\n    switch (modelType) {\r\n        case ModelId.Chord:\r\n            return `${root ? root : ''} ${name} Chord`\r\n        case ModelId.Scale:\r\n            return `${root ? root : ''} ${name} Scale`\r\n        default:\r\n            return `${root ? root : ''} ${name}`;\r\n    }\r\n}\r\n\r\nconst BASIC_PAGES: ISearchCandidate[] = [\r\n    {\r\n        text: 'Browse',\r\n        to: '/browse',\r\n        keywords: ['all', 'chord', 'scale', 'browse']\r\n    },\r\n    {\r\n        text: 'All Chords',\r\n        to: '/browse/chords',\r\n        keywords: ['all', 'chord']\r\n    },\r\n    {\r\n        text: 'All Scales',\r\n        to: '/browse/scales',\r\n        keywords: ['all', 'scale', 'mode']\r\n    }\r\n];\r\n\r\nconst REGEX_NOTE_NAME = /\\b[A-G](b|\\sflat|\\ssharp)*\\b/gi; // accidental symbols should be sanitized\r\nconst REGEX_FLAT = /\\b[A-G]b\\b/gi;\r\n\r\nconst getNoteIdFromQuery = (query: string): string | undefined => {\r\n    const noteMatches = query.match(REGEX_NOTE_NAME);\r\n\r\n    if (!noteMatches || !noteMatches.length) return;\r\n\r\n    const match = noteMatches[0];\r\n    const noteId = match.replaceAll(' ', '-');\r\n\r\n    return noteId;\r\n}\r\n\r\nconst getModelIdFromQuery = (query: string): ModelId | undefined => {\r\n    if (query.match('chord')) return ModelId.Chord;\r\n    if (query.match('scale')) return ModelId.Scale;\r\n}\r\n\r\ninterface IModelPresetResult extends IModelConfig {\r\n    score: number;\r\n}\r\n\r\nconst getTags = (query: string): Tag[] => {\r\n    const items = [];\r\n    if (query.match(/maj|major/)) items.push(Tag.Major);\r\n    if (query.match(/min|minor/)) items.push(Tag.Minor);\r\n    if (query.match(/triad|chord/)) items.push(Tag.Triad);\r\n    if (query.match(/aug|augmented/)) items.push(Tag.Augmented);\r\n    if (query.match(/dim|diminished/)) items.push(Tag.Diminished);\r\n    if (query.match(/sus|suspended/)) items.push(Tag.Suspended);\r\n    if (query.match(/dom|dominant/)) items.push(Tag.Dominant);\r\n    if (query.match(/pent|pentatonic/)) items.push(Tag.Pentatonic);\r\n    if (query.match(/hex|hexatonic/)) items.push(Tag.Hexatonic);\r\n    if (query.match(/oct|octatonic/)) items.push(Tag.Octatonic);\r\n    if (query.match(/dia|diatonic/)) items.push(Tag.Diatonic);\r\n    if (query.match(/2|2nd|two|second/)) items.push(Tag.Second);\r\n    if (query.match(/3|3rd|three|third/)) items.push(Tag.Third);\r\n    if (query.match(/4|4th|four|fourth/)) items.push(Tag.Fourth);\r\n    if (query.match(/5|5th|five|fifth/)) items.push(Tag.Fifth);\r\n    if (query.match(/6|6th|six|sixth/)) items.push(Tag.Sixth);\r\n    if (query.match(/7|7th|seven|seventh/)) items.push(Tag.Seventh);\r\n    if (query.match(/beb|bebop/)) items.push(Tag.Bebop);\r\n    if (query.match(/blu|blues/)) items.push(Tag.Blues);\r\n    if (query.match(/mel|melodic|minor/)) items.push(Tag.MelodicMode);\r\n    if (query.match(/harm|harmonic|minor/)) items.push(Tag.HarmonicMode);\r\n    return items;\r\n}\r\n\r\nconst extendPreset = (preset: IModelConfig, query: string, allTags: Tag[]): IModelPresetResult => {\r\n\r\n    let score = 0;\r\n\r\n    if (query.match(preset.name.toLowerCase())) {\r\n        score = 100;\r\n    }\r\n\r\n    if (preset.name.toLowerCase().match(new RegExp(query.split(' ').join('|'), 'gi'))) {\r\n        score = score + 50;\r\n    }\r\n\r\n    score = score + allTags.filter(queryTag => preset.tags.some(presetTag => presetTag === queryTag)).length;\r\n\r\n    return {\r\n        ...preset,\r\n        score\r\n    }\r\n}\r\n\r\nconst getPresetsFromQuery = (query: string, modelId?: ModelId): IModelPresetResult[] => {\r\n    const allTags = getTags(query);\r\n    return ALL_PRESETS.filter(p => !(modelId && p.modelId !== modelId))\r\n        .map(p => {\r\n            return extendPreset(p, query, allTags);\r\n            //return query.split(' ').some(query => query.match(query));\r\n        });\r\n}\r\n\r\nconst rankResults = (results: IModelPresetResult[], rootId): IModelPresetResult[] => {\r\n    return results.filter(r => rootId || r.score).sort((a, b) => b.score - a.score)\r\n}\r\n\r\nconst formatPresets = (presets: IModelConfig[], rootId?: string): ISearchResult[] => {\r\n    return presets.map(p => {\r\n        const root = rootId ? NOTE_PRESET_MAP.get(rootId as NoteId).name : undefined;\r\n        return {\r\n            text: getName(p.modelId, p.name, root),\r\n            to: getLink(p.modelId, p.id, rootId)\r\n        };\r\n    });\r\n}\r\n\r\nconst sanitizeQuery = query => query.trim().toLowerCase().replaceAll('#', '-sharp').replaceAll(REGEX_FLAT, m => `${m.charAt(0)}-flat`).replaceAll(/[^A-Z1-9]/gi, ' ');\r\n\r\nexport const getSearchResults = (query: string): ISearchResult[] => {\r\n    if (!query) return BASIC_PAGES;\r\n\r\n    const sanitized = sanitizeQuery(query);\r\n\r\n    const rootId = getNoteIdFromQuery(sanitized);\r\n    const modelId = getModelIdFromQuery(sanitized);\r\n\r\n    const presets = getPresetsFromQuery(sanitized, modelId);\r\n\r\n    const ranked = rankResults(presets, rootId);\r\n\r\n    const results = formatPresets(ranked, rootId);\r\n\r\n    const basics = BASIC_PAGES.filter(p => doesQueryMatch(sanitized, p.keywords));\r\n\r\n    return [...results, ...basics];\r\n};\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport ButtonInput from \"./ButtonInput\";\r\n\r\nconst StyledFilterList = styled.div`\r\n\r\n    border: 1px solid ${props => props.theme.action.interactive};\r\n    border-radius: 8px;\r\n    padding: 8px;\r\n    margin-bottom: 16px;\r\n\r\n    .top {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n    }\r\n    \r\n    ul {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        align-items: center;\r\n        justify-content: center;\r\n        gap: 8px;\r\n\r\n        > li {\r\n            margin: 0  !important;\r\n            list-style-type: none !important;\r\n        }\r\n\r\n        button {\r\n            background-color: ${({ theme }) => theme.utils.transparent};;\r\n            border: 1px solid ${props => props.theme.action.interactive};;\r\n            color: ${props => props.theme.action.interactive};\r\n            padding: 4px 8px;\r\n            font-size: 80%;\r\n            :hover {\r\n                background-color: ${({ theme }) => theme.utils.hoverDark};\r\n            }\r\n\r\n            &.active {\r\n                color: ${({ theme }) => theme.text.inverted};;\r\n                background-color: ${props => props.theme.action.interactive};\r\n            }\r\n\r\n            :disabled {\r\n                color: ${({ theme }) => theme.text.inverted};\r\n                background-color: ${props => props.theme.text.secondary};\r\n                cursor: not-allowed;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nconst FilterList: React.FC<any> = ({ tags, availableTags, selectedTags, setSelectedTags }) => {\r\n\r\n    const toggle = t => {\r\n        if (selectedTags.includes(t)) {\r\n            setSelectedTags(selectedTags.filter(x => x !== t));\r\n        }\r\n        else {\r\n            setSelectedTags([...selectedTags, t]);\r\n        }\r\n    };\r\n    return (\r\n        <StyledFilterList>\r\n            {false && <div className=\"top\">\r\n                {selectedTags.length > 0 &&\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={() => setSelectedTags([])}\r\n                        className=\"clear\"\r\n                    >Clear</button>\r\n                }\r\n            </div>}\r\n            <ul>\r\n                {tags.map(t => (\r\n                    <li key={t}>\r\n                        <ButtonInput\r\n                            onClick={() => toggle(t)}\r\n                            className={selectedTags.includes(t) ? 'active' : ''}\r\n                            disabled={!availableTags.includes(t)}\r\n                        >\r\n                            {t}\r\n                        </ButtonInput>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </StyledFilterList>\r\n    );\r\n};\r\n\r\nexport default FilterList;\r\n","import { Link, navigate } from \"gatsby\";\r\nimport React, { useState } from \"react\";\r\nimport styled, { css } from 'styled-components';\r\nimport ArrayUtils from \"../../core/general/Array.utils\";\r\nimport { getSearchResults } from \"../../core/general/Nav.utils\";\r\nimport ButtonInput from \"../_shared/inputs/ButtonInput\";\r\nimport FilterList from \"../_shared/inputs/FilterList\";\r\nimport Card from \"../_shared/ui/Card\";\r\n\r\nconst StyledSearchResultsList = styled.ul` \r\n    font-size: 110%;\r\n    li a {\r\n        padding: 4px 0;\r\n        display: block;\r\n\r\n        &:focus, &:hover {\r\n            padding: 8px;\r\n            background-color: ${props => props.theme.action.interactive};\r\n            color: white;\r\n            border-radius: 8px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst ALL_RESULTS = [];\r\n\r\nconst SearchResultsCard: React.FC<any> = ({ resultsRef, query }) => {\r\n\r\n    const [isFiltering, setIsFiltering] = useState(false);\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n\r\n    const action = <ButtonInput\r\n        className={`filter ${isFiltering ? 'active' : ''}`}\r\n        onClick={() => setIsFiltering(!isFiltering)}\r\n        css={css`\r\n            color: ${props => props.theme.action.interactive};\r\n            background-color: transparent;\r\n            text-decoration: underline;\r\n            &.active {\r\n                color: white;\r\n                background-color: ${props => props.theme.action.interactive};\r\n            }\r\n        `}\r\n    >\r\n        Filter\r\n    </ButtonInput>;\r\n\r\n    let filteredResults = getSearchResults(query);\r\n\r\n    const tagSet = new Set();\r\n    ALL_RESULTS.forEach(r => {\r\n        if (r.to.includes('root')) return;\r\n        r.tags.forEach(t => tagSet.add(t));\r\n    });\r\n    const tags = ArrayUtils.setToArray(tagSet) || [];\r\n\r\n\r\n    return (\r\n        <Card title={!query ? 'Popular Pages' : 'Results'} action={null}>\r\n            {isFiltering && <FilterList\r\n                tags={tags}\r\n                availableTags={[]}\r\n                selectedTags={selectedTags}\r\n                setSelectedTags={setSelectedTags}\r\n            />}\r\n            <StyledSearchResultsList>\r\n                {filteredResults.map((r, i) => <li key={r.text}>\r\n                    <Link\r\n                        id={`search-result=${i}`}\r\n                        to={r.to}\r\n                        ref={i === 0 ? resultsRef : undefined}\r\n                        onKeyDown={(e) => {\r\n                            e.preventDefault();\r\n                            if (e.key === 'Enter') {\r\n                                navigate(r.to);\r\n                            }\r\n                            if (e.key === 'ArrowDown') {\r\n                                const next = document.getElementById(`search-result=${i + 1}`);\r\n                                if (next) next.focus();\r\n                            }\r\n                            if (e.key === 'ArrowUp') {\r\n                                const prev = document.getElementById(`search-result=${i - 1}`);\r\n                                if (prev) prev.focus();\r\n                            }\r\n                        }}\r\n                    >\r\n                        {r.text}\r\n                    </Link>\r\n                </li>)}\r\n            </StyledSearchResultsList>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default SearchResultsCard;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport styled from 'styled-components';\r\nimport { useQueryParam } from \"use-query-params\";\r\nimport { StyledPageBody } from \"../_shared/layout/PageBody\";\r\nimport PageTitle from \"../_shared/layout/PageTitle\";\r\nimport { StyledCard } from \"../_shared/ui/Card\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport SearchResultsCard from \"./SearchResultsCard\";\r\n\r\nconst StyledSearchPage = styled(StyledPageBody)`\r\n    ${StyledCard} {\r\n        max-width: 768px;\r\n        margin: auto;\r\n    }\r\n\r\n    .search-bar {\r\n        margin: 32px auto;\r\n    }\r\n`;\r\n\r\nconst SearchPage: React.FC<any> = () => {\r\n\r\n    const [qp] = useQueryParam('query');\r\n\r\n    const [query, setQuery] = useState(qp || '');\r\n    const searchRef = useRef();\r\n    const resultsRef = useRef();\r\n\r\n    useEffect(() => {\r\n        const ref = qp ? resultsRef : searchRef;\r\n        const cur = ref.current as any;\r\n        cur && cur.focus();\r\n    }, []);\r\n\r\n    return (\r\n        <StyledSearchPage>\r\n            <PageTitle title=\"Search\" />\r\n            <SearchBar searchRef={searchRef} query={query} setQuery={setQuery} />\r\n            <SearchResultsCard resultsRef={resultsRef} query={query} />\r\n        </StyledSearchPage>\r\n    );\r\n};\r\n\r\nexport default SearchPage;\r\n","import SearchPage from \"../components/search/SearchPage\";\r\n\r\nexport default SearchPage;\r\n"],"names":["StyledBreadcrumbList","styled","props","theme","text","secondary","pieces","usePageProps","path","split","paths","reduce","prev","cur","i","arr","replace","isLink","includes","replaceAll","Tag","Link","to","undefined","push","key","Icon","iconId","size","color","slice","length","StyledPageTitle","utils","border","primary","title","subtitle","children","SEO","className","StyledCard","surface","card","action","rest","StyledSearchBar","interactive","searchRef","externalQuery","query","externalSetQuery","setQuery","placeholder","useState","_query","_setQuery","role","onSubmit","e","preventDefault","value","target","elements","console","log","URLSearchParams","toString","navigate","type","id","name","ref","onChange","getLink","modelType","root","getName","ModelId","BASIC_PAGES","keywords","REGEX_NOTE_NAME","REGEX_FLAT","getPresetsFromQuery","modelId","allTags","items","match","getTags","ALL_PRESETS","p","map","preset","score","toLowerCase","RegExp","join","filter","queryTag","tags","some","presetTag","extendPreset","getSearchResults","sanitized","trim","m","charAt","sanitizeQuery","rootId","noteMatches","getNoteIdFromQuery","getModelIdFromQuery","ranked","results","r","sort","a","b","rankResults","presets","NOTE_PRESET_MAP","formatPresets","basics","kw","doesQueryMatch","StyledFilterList","transparent","hoverDark","inverted","availableTags","selectedTags","setSelectedTags","t","ButtonInput","onClick","x","toggle","disabled","StyledSearchResultsList","ALL_RESULTS","resultsRef","isFiltering","filteredResults","tagSet","Set","forEach","add","ArrayUtils","Card","onKeyDown","next","document","getElementById","focus","StyledSearchPage","StyledPageBody","qp","useQueryParam","useRef","useEffect","current","PageTitle","SearchBar"],"sourceRoot":""}