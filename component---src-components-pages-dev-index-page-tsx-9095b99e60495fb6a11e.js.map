{"version":3,"file":"component---src-components-pages-dev-index-page-tsx-9095b99e60495fb6a11e.js","mappings":"kLAOMA,GAAgBC,EAAAA,EAAAA,SAAOC,EAAAA,GAAW,YAAAC,YAAAA,2BAAAC,YAAAA,gBAAlBH,CAAkB,MAwCxC,UAtC4B,WACxB,OACII,EAAAA,cAACL,EAAa,CAACM,MAAM,kBAAkBC,SAAS,uBAC5CF,EAAAA,cAACG,EAAAA,GAAI,KACDH,EAAAA,cAACI,EAAAA,EAAI,CACDC,OAAO,OACPC,OAAQC,EAAAA,EACRC,MAAO,CACH,CACIP,MAAO,QACPQ,MAAO,CACH,CACIC,KAAM,+BACNC,KAAM,wCAIlB,CACIV,MAAO,eACPQ,MAAO,CACH,CACIC,KAAM,WACNC,KAAM,cAEV,CACID,KAAM,aACNC,KAAM,qC,mKChC7BC,EAAahB,EAAAA,QAAAA,IAAAA,WAAU,2DAAVA,CAAU,kKAClB,SAAAiB,GAAK,OAAIA,EAAMC,MAAMC,QAAQC,QAclCC,EAA4B,SAAH,GAA6C,IAAvChB,EAAK,EAALA,MAAM,EAAD,EAAEiB,MAAAA,OAAK,MAAG,EAAC,MAAEC,OAAAA,OAAM,MAAG,KAAI,EACjEC,EAAU,IAAOF,EACvB,OACIlB,EAAAA,cAAAA,MAAAA,CAAKqB,UAAU,UACXrB,EAAAA,cAACoB,EAAK,KAAEnB,GACPkB,IAmBb,KAd4B,SAAH,GAA+D,IAAzDlB,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAAUiB,EAAM,EAANA,OAAQG,EAAQ,EAARA,SAAUJ,EAAK,EAALA,MAAUK,GAAI,YAC5E,OACIvB,EAAAA,cAACY,EAAeW,EACXtB,GACGD,EAAAA,cAACiB,EAAU,CAAChB,MAAOA,EAAOkB,OAAQA,EAAQD,MAAOA,IAEpDhB,GACGF,EAAAA,cAACiB,EAAU,CAAChB,MAAOC,EAAUgB,MAAOA,EAAQ,IAE/CI,K,0FCnCAf,GAAgBiB,EAAAA,EAAAA,KAAG,2NAwBnBC,GAAgBD,EAAAA,EAAAA,KAAG,sD,wHCJ1BE,EAAyB,SAAH,GAAoC,IAA9BzB,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAAUgB,EAAK,EAALA,MACzCS,EAAK,IAAOT,EACZU,EAAQ,KAAOV,EAAQ,GAC7B,OACIlB,EAAAA,cAAAA,EAAAA,SAAAA,KACKC,GAASD,EAAAA,cAAC2B,EAAK,KAAE1B,GACjBC,GAAYF,EAAAA,cAAC4B,EAAQ,KAAE1B,KAKvBE,EAA6B,SAA7BA,EAA0B,GAA2E,IAArEH,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAAUO,EAAK,EAALA,MAAOD,EAAK,EAALA,MAAM,EAAD,EAAEU,MAAAA,OAAK,MAAG,EAAC,MAAEb,OAAAA,OAAM,MAAG,GAAE,EAAEC,EAAM,EAANA,OAChG,OAEIN,EAAAA,cAAAA,EAAAA,CAAAA,MAAcM,GACVN,EAAAA,cAAC0B,EAAO,CAACzB,MAAOA,EAAOC,SAAUA,EAAUgB,MAAOA,IAClDlB,EAAAA,cAAAA,KAAAA,KACKS,GAASA,EAAMoB,OAAS,GACrBpB,EAAMqB,KAAI,gBAAGpB,EAAI,EAAJA,KAAMC,EAAI,EAAJA,KAAI,OACnBX,EAAAA,cAAAA,KAAAA,CAAI+B,IAAKrB,GACLC,EAAOX,EAAAA,cAACgC,EAAAA,GAAI,CAACC,GAAE,GAAK5B,EAASM,GAASD,GAAeA,MAIhEF,GACGR,EAAAA,cAAAA,KAAAA,KACKQ,EAAMsB,KAAI,SAAAI,GAAC,OAAIlC,EAAAA,cAACI,EAAI,iBAAK8B,EAAC,CAAEH,IAAKG,EAAEjC,MAAOiB,MAAOA,EAAQ,EAAGb,OAAQA,YAQhF8B,EAAiE,SAAH,GAAmB,IACpFC,EAD4E,EAAL3B,MACnCqB,KAAI,SAAAO,GAC1C,OAAIC,MAAMC,QAAQF,GAEP,CACH3B,KAFiB2B,EAAI,GAGrB1B,KAHiB0B,EAAI,IAMtB,CACH3B,KAAM2B,MAGd,OACIrC,EAAAA,cAACI,EAAI,CAACK,MAAO2B,EAAgB9B,OAAQmB,EAAAA,KAE5C","sources":["webpack://play-what/./src/components/pages/dev/index.page.tsx","webpack://play-what/./src/components/ui/Card.tsx","webpack://play-what/./src/components/ui/List.styles.tsx","webpack://play-what/./src/components/ui/List.tsx"],"sourcesContent":["import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport PageLayout from \"../../layout/PageLayout\";\r\nimport Card from \"../../ui/Card\";\r\nimport { List } from \"../../ui/List\";\r\nimport { LIST_STYLES_1 } from \"../../ui/List.styles\";\r\n\r\nconst StyledDevPage = styled(PageLayout)``;\r\n\r\nconst Page: React.FC<any> = () => {\r\n    return (\r\n        <StyledDevPage title=\"Developer Panel\" subtitle=\"Advanced Users Only\" >\r\n            <Card>\r\n                <List\r\n                    prefix=\"/dev\"\r\n                    styles={LIST_STYLES_1}\r\n                    lists={[\r\n                        {\r\n                            title: 'Tests',\r\n                            items: [\r\n                                {\r\n                                    text: 'All Intervals From All Roots',\r\n                                    link: '/test/all-intervals-from-all-roots'\r\n                                }\r\n                            ]\r\n                        },\r\n                        {\r\n                            title: 'Experimental',\r\n                            items: [\r\n                                {\r\n                                    text: 'Notebook',\r\n                                    link: '/notebook/'\r\n                                },\r\n                                {\r\n                                    text: 'Edit Theme',\r\n                                    link: '/experimental/edit-theme'\r\n                                },\r\n\r\n                            ]\r\n                        }\r\n                    ]}\r\n                />\r\n            </Card>\r\n        </StyledDevPage >\r\n    )\r\n};\r\n\r\nexport default Page;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledCard = styled.div`\r\n    background: ${props => props.theme.surface.card};\r\n    width: 100%;\r\n    border-radius: 16px;\r\n    padding: 16px;\r\n\r\n    .header {\r\n        margin-bottom: 16px;\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 8px;\r\n        justify-content: space-between;\r\n    }\r\n`;\r\n\r\nexport const CardHeader: React.FC<any> = ({ title, level = 2, action = null }) => {\r\n    const AsTag: any = `h${level}`;\r\n    return (\r\n        <div className=\"header\">\r\n            <AsTag>{title}</AsTag>\r\n            {action}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Card: React.FC<any> = ({ title, subtitle, action, children, level, ...rest }) => {\r\n    return (\r\n        <StyledCard {...rest}>\r\n            {title &&\r\n                <CardHeader title={title} action={action} level={level} />\r\n            }\r\n            {subtitle &&\r\n                <CardHeader title={subtitle} level={level + 1} />\r\n            }\r\n            {children}\r\n        </StyledCard >\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import { css } from 'styled-components';\r\n\r\nexport const LIST_STYLES_1 = css`\r\n    li {\r\n        margin-left: 8px;\r\n        &:not(:first-child) {\r\n            margin-top: 4px;\r\n        }\r\n    }\r\n    h1, h2, h3, h4, h5, h6, h7 {\r\n        font-weight: bold;\r\n    }\r\n    section {\r\n        margin-left: 8px;\r\n        &:not(:first-child) {\r\n            margin-top: 24px;\r\n        }\r\n    }\r\n    ul {\r\n        &:not(:first-child) {\r\n            margin-top: 8px;\r\n            margin-left: 8px;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const LIST_STYLES_2 = css`\r\n    li {\r\n        list-style-type: disc;\r\n        margin: 8px 0 8px 16px;\r\n    }\r\n`;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { LIST_STYLES_2 } from \"./List.styles\";\r\n\r\nexport interface IListItem {\r\n    text: string;\r\n    link?: string;\r\n}\r\n\r\nexport interface IList {\r\n    title?: string;\r\n    subtitle?: string;\r\n    lists?: IList[];\r\n    items?: | IListItem[];\r\n}\r\n\r\nexport interface IListProps extends IList {\r\n    level?: number;\r\n    prefix?: string;\r\n    styles?: any;\r\n}\r\n\r\nconst Heading: React.FC<any> = ({ title, subtitle, level }) => {\r\n    const Title = `h${level}` as any;\r\n    const Subtitle = `h${level + 1}` as any;\r\n    return (\r\n        <>\r\n            {title && <Title>{title}</Title>}\r\n            {subtitle && <Subtitle>{subtitle}</Subtitle>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport const List: React.FC<IListProps> = ({ title, subtitle, items, lists, level = 1, prefix = '', styles }) => {\r\n    return (\r\n        // @ts-ignore\r\n        <section css={styles}>\r\n            <Heading title={title} subtitle={subtitle} level={level} />\r\n            <ul>\r\n                {items && items.length > 0 && (\r\n                    items.map(({ text, link }) => (\r\n                        <li key={text}>{\r\n                            link ? <Link to={`${prefix}${link}`}>{text}</Link> : text\r\n                        }</li>\r\n                    ))\r\n                )}\r\n                {lists && (\r\n                    <li>\r\n                        {lists.map(l => <List {...l} key={l.title} level={level + 1} prefix={prefix} />)}\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport const SimpleList: React.FC<{ items: (string | [string, string])[] }> = ({ items }) => {\r\n    const formattedItems: IListItem[] = items.map(item => {\r\n        if (Array.isArray(item)) {\r\n            const [text, link] = item;\r\n            return {\r\n                text,\r\n                link\r\n            }\r\n        }\r\n        return {\r\n            text: item\r\n        }\r\n    })\r\n    return (\r\n        <List items={formattedItems} styles={LIST_STYLES_2} />\r\n    );\r\n}\r\n"],"names":["StyledDevPage","styled","PageLayout","displayName","componentId","React","title","subtitle","Card","List","prefix","styles","LIST_STYLES_1","lists","items","text","link","StyledCard","props","theme","surface","card","CardHeader","level","action","AsTag","className","children","rest","css","LIST_STYLES_2","Heading","Title","Subtitle","length","map","key","Link","to","l","SimpleList","formattedItems","item","Array","isArray"],"sourceRoot":""}