{"version":3,"file":"component---src-pages-view-keyboard-tsx-4dec774fbb0df6da6c4f.js","mappings":"sOAGaA,EAAaC,EAAAA,QAAAA,IAAAA,WAAH,2DAAGA,CAAH,0JACL,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,QAAQC,QAalCC,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,IAAUC,OAAAA,OAAV,MAAmB,KAAnB,SACtBC,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,UACXD,EAAAA,cAAAA,KAAAA,KAAKF,GACJC,IAeT,KAX4B,SAAC,GAA0C,IAAxCD,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,OAAQG,EAAwB,EAAxBA,SAAaC,GAAW,YAClE,OACIH,EAAAA,cAACT,EAAeY,EACXL,GACGE,EAAAA,cAACH,EAAD,CAAYC,MAAOA,EAAOC,OAAQA,IAErCG,K,kHC3BAE,EAAiBZ,EAAAA,QAAAA,IAAAA,WAAH,oEAAGA,CAAH,iJAMrB,SAAAC,GAAK,OAAIA,EAAMY,GAAK,GAAXZ,+MAUE,qBAAGC,MAAkBY,SAkBtC,IAXiB,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MAAOL,EAAmC,EAAnCA,SAAmC,IAAzBM,EAAAA,OAAyB,SAAXL,GAAW,YAC1D,OACIH,EAAAA,cAACI,EAAD,eAAgBC,GAAIG,GAAOL,GACvBH,EAAAA,cAAAA,QAAAA,KAAQO,GACRP,EAAAA,cAAAA,MAAAA,KACKE,M,iLC3BJO,EAAgB,IAAIC,EAAAA,EAAMC,EAAAA,EAAAA,KAAc,CAAEC,KAAMC,EAAAA,EAAAA,OAAYC,EAAAA,GAAAA,KCMnEC,EAAkBvB,EAAAA,QAAAA,IAAAA,WAAH,yEAAGA,CAAH,MCRrB,EDaiC,WAE7B,IAAIwB,EAAQP,EAEZ,GAAkCQ,EAAAA,EAAAA,WAAS,GAApCC,EAAP,KAAkBC,EAAlB,KACA,GAAgCF,EAAAA,EAAAA,UAASG,EAAAA,GAAAA,UAAlCC,EAAP,KAAiBC,EAAjB,KAEOC,EAAgBF,EAAvB,GAAcG,EAASH,EAAvB,GAEA,OACIrB,EAAAA,cAACyB,EAAAA,GAAD,CAAM3B,MAAM,eAAeC,OAAQC,EAAAA,cAAC0B,EAAAA,EAAD,CAAaC,QAAM,EAACC,QAAS,kBAAMT,GAAcD,KAAaA,EAAY,OAAS,SAClHlB,EAAAA,cAACe,EAAD,KACKG,GACGlB,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,QACVD,EAAAA,cAAAA,KAAAA,KACIA,EAAAA,cAAC6B,EAAAA,EAAD,CAAUtB,MAAM,WACZP,EAAAA,cAAC8B,EAAAA,EAAD,CAAcC,MAAOR,EAAOS,KAAM,GAAIC,IAAKT,EAAOU,SAAU,SAAAC,GAAC,OAAIb,EAAY,CAACa,EAAGX,SAGzFxB,EAAAA,cAAAA,KAAAA,KACIA,EAAAA,cAAC6B,EAAAA,EAAD,CAAUtB,MAAM,YACZP,EAAAA,cAAC8B,EAAAA,EAAD,CAAcC,MAAOP,EAAOQ,IAAKT,EAAOU,IAAK,GAAIC,SAAU,SAAAC,GAAC,OAAIb,EAAY,CAACC,EAAOY,UAKpGnC,EAAAA,cAACoC,EAAAA,EAAD,CACIpB,MAAOA,EACPK,SAAUA","sources":["webpack://play-what/./src/components/ui/Card.tsx","webpack://play-what/./src/components/ui/InputRow.tsx","webpack://play-what/./src/components/pages/view/view.defaults.ts","webpack://play-what/./src/components/pages/view/KeyboardPage.tsx","webpack://play-what/./src/pages/view/keyboard.tsx"],"sourcesContent":["import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledCard = styled.div`\r\n    background: ${props => props.theme.surface.card};\r\n    width: 100%;\r\n    border-radius: 16px;\r\n    padding: 16px;\r\n\r\n    .header {\r\n        margin-bottom: 16px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n    }\r\n`;\r\n\r\nexport const CardHeader = ({ title, action = null }) => (\r\n    <div className=\"header\">\r\n        <h2>{title}</h2>\r\n        {action}\r\n    </div>\r\n);\r\n\r\nconst Card: React.FC<any> = ({ title, action, children, ...rest }) => {\r\n    return (\r\n        <StyledCard {...rest}>\r\n            {title &&\r\n                <CardHeader title={title} action={action} />\r\n            }\r\n            {children}\r\n        </StyledCard >\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledInputRow = styled.div`\r\n    display: flex;\r\n    align-items: flex-start;\r\n    flex-direction: column;\r\n    width: 100%;\r\n\r\n    ${props => props.$y ? '' : `\r\n        @media(min-width: 512px) {\r\n            align-items: center;\r\n            flex-direction: row;\r\n            justify-content: space-between;\r\n            //margin-bottom: 8px;\r\n        }\r\n    `}\r\n\r\n    > label {\r\n        color: ${({ theme }) => theme.dark3};\r\n        font-weight: bold;\r\n        margin: 8px;\r\n        white-space: nowrap;\r\n    }\r\n`;\r\n\r\nconst InputRow = ({ label, children, y = false, ...rest }) => {\r\n    return (\r\n        <StyledInputRow $y={y} {...rest}>\r\n            <label>{label}</label>\r\n            <div>\r\n                {children}\r\n            </div>\r\n        </StyledInputRow>\r\n    );\r\n}\r\n\r\nexport default InputRow;\r\n","import Chord from \"../../../core/models/Chord\";\r\nimport { ChordId, NoteId } from \"../../../core/models/Model.constants\";\r\nimport Note from \"../../../core/models/Note\";\r\n\r\nexport const DEFAULT_MODEL = new Chord(ChordId.Maj7, { root: Note.fromId(NoteId.C) })\r\n","import React, { useState } from \"react\";\r\nimport styled from 'styled-components';\r\nimport Keyboard from \"../../../viewers/keyboard/Keyboard\";\r\nimport DEFAULT_KEYBOARD_PROPS from \"../../../viewers/keyboard/Keyboard.defaults\";\r\nimport ButtonInput from \"../../inputs/ButtonInput\";\r\nimport NumericInput from \"../../inputs/NumericInput\";\r\nimport Card from \"../../ui/Card\";\r\nimport InputRow from \"../../ui/InputRow\";\r\nimport { DEFAULT_MODEL } from \"./view.defaults\";\r\n\r\nconst StyledPianoCard = styled.div`\r\n   \r\n`;\r\n\r\n\r\nconst PianoCard: React.FC<any> = () => {\r\n\r\n    let model = DEFAULT_MODEL;\r\n\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [keyRange, setKeyRange] = useState(DEFAULT_KEYBOARD_PROPS.keyRange);\r\n\r\n    const [keyLo, keyHi] = keyRange;\r\n\r\n    return (\r\n        <Card title=\"Piano [BETA]\" action={<ButtonInput isLink onClick={() => setIsEditing(!isEditing)}>{isEditing ? 'Done' : 'Edit'}</ButtonInput>}>\r\n            <StyledPianoCard>\r\n                {isEditing &&\r\n                    <ul className=\"edit\">\r\n                        <li>\r\n                            <InputRow label=\"Low Key\">\r\n                                <NumericInput value={keyLo} min={-24} max={keyHi} setValue={v => setKeyRange([v, keyHi])} />\r\n                            </InputRow>\r\n                        </li>\r\n                        <li>\r\n                            <InputRow label=\"High Key\">\r\n                                <NumericInput value={keyHi} min={keyLo} max={24} setValue={v => setKeyRange([keyLo, v])} />\r\n                            </InputRow>\r\n                        </li>\r\n                    </ul>\r\n                }\r\n                <Keyboard\r\n                    model={model}\r\n                    keyRange={keyRange as [number, number]}\r\n                />\r\n            </StyledPianoCard>\r\n        </Card >\r\n    );\r\n};\r\n\r\nexport default PianoCard;\r\n","import KeyboardPage from \"../../components/pages/view/KeyboardPage\";\r\n\r\nexport default KeyboardPage;\r\n"],"names":["StyledCard","styled","props","theme","surface","card","CardHeader","title","action","React","className","children","rest","StyledInputRow","$y","dark3","label","y","DEFAULT_MODEL","Chord","ChordId","root","Note","NoteId","StyledPianoCard","model","useState","isEditing","setIsEditing","DEFAULT_KEYBOARD_PROPS","keyRange","setKeyRange","keyLo","keyHi","Card","ButtonInput","isLink","onClick","InputRow","NumericInput","value","min","max","setValue","v","Keyboard"],"sourceRoot":""}