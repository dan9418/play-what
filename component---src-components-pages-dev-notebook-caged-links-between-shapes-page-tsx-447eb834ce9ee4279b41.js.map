{"version":3,"file":"component---src-components-pages-dev-notebook-caged-links-between-shapes-page-tsx-447eb834ce9ee4279b41.js","mappings":"oMAaMA,GAAkBC,EAAAA,EAAAA,SAAOC,EAAAA,GAAVC,WAAA,qFAAGF,CAAH,4GAKjBG,EAAAA,IAuGJ,UA5FuB,WACrB,OACEC,EAAAA,cAACL,EAAD,CAAiBM,MAAM,SACrBD,EAAAA,cAACE,EAAAA,GAAD,CAAMD,MAAM,eACVD,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,UACbH,EAAAA,cAAAA,QAAAA,CAAOG,UAAU,SACfH,EAAAA,cAAAA,QAAAA,KACEA,EAAAA,cAAAA,KAAAA,KAAAA,aAEFA,EAAAA,cAAAA,QAAAA,KACGI,EAAAA,GAAAA,KAAmB,SAACC,EAAMC,GACzB,MAA8CD,EAAtCE,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,OAAQC,EAAhC,EAAgCA,UAC1BC,EAAW,IAAIJ,EAAMC,EAAS,CAClCI,KAAMC,EAAAA,EAAAA,OAAYJ,KAEpB,OACET,EAAAA,cAAAA,KAAAA,CAAIc,IAAKR,GACPN,EAAAA,cAAAA,KAAAA,CAAIc,IAAKN,GACPR,EAAAA,cAAAA,KAAAA,KAAKW,EAASI,WACdf,EAAAA,cAACgB,EAAAA,EAAD,CACET,MAAOI,EACPM,QAASC,EAAAA,GAAAA,IAAuBR,GAChCS,UAAW,CAAC,EAAG,IACfC,iBAAiB,EACjBC,cAAc,WAQ5BrB,EAAAA,cAAAA,QAAAA,CAAOG,UAAU,SACfH,EAAAA,cAAAA,QAAAA,KACEA,EAAAA,cAAAA,KAAAA,KAAAA,eAEFA,EAAAA,cAAAA,QAAAA,KACGsB,EAAAA,GAAAA,KAAqB,SAACjB,EAAMC,GAC3B,MAA8CD,EAAtCE,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,OAAQC,EAAhC,EAAgCA,UAC1BC,EAAW,IAAIJ,EAAMC,EAAS,CAClCI,KAAMC,EAAAA,EAAAA,OAAYJ,KAEpB,OACET,EAAAA,cAAAA,KAAAA,CAAIc,IAAKR,GACPN,EAAAA,cAAAA,KAAAA,CAAIc,IAAKN,GACPR,EAAAA,cAAAA,KAAAA,KAAKW,EAASI,WACdf,EAAAA,cAACgB,EAAAA,EAAD,CACET,MAAOI,EACPM,QAASC,EAAAA,GAAAA,IAAuBR,GAChCS,UAAW,CAAC,EAAG,IACfC,iBAAiB,EACjBC,cAAc,WAQ5BrB,EAAAA,cAAAA,QAAAA,CAAOG,UAAU,SACfH,EAAAA,cAAAA,QAAAA,KACEA,EAAAA,cAAAA,KAAAA,KAAAA,mBAEFA,EAAAA,cAAAA,QAAAA,KACGuB,EAAAA,GAAAA,KAAwB,SAAClB,EAAMC,GAC9B,MAA8CD,EAAtCE,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,OAAQC,EAAhC,EAAgCA,UAC1BC,EAAW,IAAIJ,EAAMC,EAAS,CAClCI,KAAMC,EAAAA,EAAAA,OAAYJ,KAEpB,OACET,EAAAA,cAAAA,KAAAA,CAAIc,IAAKR,GACPN,EAAAA,cAAAA,KAAAA,CAAIc,IAAKN,GACPR,EAAAA,cAAAA,KAAAA,KAAKW,EAASI,WACdf,EAAAA,cAACgB,EAAAA,EAAD,CACET,MAAOI,EACPM,QAASC,EAAAA,GAAAA,IAAuBR,GAChCS,UAAW,CAAC,EAAG,IACfC,iBAAiB,EACjBC,cAAc","sources":["webpack://play-what/./src/components/pages/dev/notebook/caged/links-between-shapes.page.tsx"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Note from \"../../../../../core/models/Note\";\r\nimport FretTable from \"../../../../../viewers/fret-table/FretTable\";\r\nimport { VOICING_PRESET_MAP } from \"../../../../../viewers/fretboard/Fretboard.voicing\";\r\nimport PageLayout from \"../../../../layout/PageLayout\";\r\nimport Card, { StyledCard } from \"../../../../ui/Card\";\r\nimport {\r\n  DIATONIC_ITEMS,\r\n  PENTATONIC_ITEMS,\r\n  ROMAN_NUMERAL_ITEMS,\r\n} from \"./caged.shared\";\r\n\r\nconst StyledCAGEDPage = styled(PageLayout)`\r\n  .scroll {\r\n    overflow-x: auto;\r\n  }\r\n\r\n  ${StyledCard} {\r\n    margin-top: 16px;\r\n    table.links {\r\n      width: 100%;\r\n      > tbody > tr > td {\r\n        padding: 0 4px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Page: React.FC = () => {\r\n  return (\r\n    <StyledCAGEDPage title=\"CAGED\">\r\n      <Card title=\"Shape Links\">\r\n        <div className=\"scroll\">\r\n          <table className=\"links\">\r\n            <thead>\r\n              <th>Diatonic</th>\r\n            </thead>\r\n            <tbody>\r\n              {DIATONIC_ITEMS.map((item, i) => {\r\n                const { model, modelId, rootId, voicingId } = item as any;\r\n                const instance = new model(modelId, {\r\n                  root: Note.fromId(rootId),\r\n                });\r\n                return (\r\n                  <tr key={i}>\r\n                    <td key={modelId}>\r\n                      <h3>{instance.getName()}</h3>\r\n                      <FretTable\r\n                        model={instance}\r\n                        voicing={VOICING_PRESET_MAP.get(voicingId)}\r\n                        fretRange={[0, 24]}\r\n                        showFretNumbers={false}\r\n                        showFretDots={false}\r\n                      />\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n          <table className=\"links\">\r\n            <thead>\r\n              <th>Pentatonic</th>\r\n            </thead>\r\n            <tbody>\r\n              {PENTATONIC_ITEMS.map((item, i) => {\r\n                const { model, modelId, rootId, voicingId } = item as any;\r\n                const instance = new model(modelId, {\r\n                  root: Note.fromId(rootId),\r\n                });\r\n                return (\r\n                  <tr key={i}>\r\n                    <td key={modelId}>\r\n                      <h3>{instance.getName()}</h3>\r\n                      <FretTable\r\n                        model={instance}\r\n                        voicing={VOICING_PRESET_MAP.get(voicingId)}\r\n                        fretRange={[0, 24]}\r\n                        showFretNumbers={false}\r\n                        showFretDots={false}\r\n                      />\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n          <table className=\"links\">\r\n            <thead>\r\n              <th>Roman Numerals</th>\r\n            </thead>\r\n            <tbody>\r\n              {ROMAN_NUMERAL_ITEMS.map((item, i) => {\r\n                const { model, modelId, rootId, voicingId } = item as any;\r\n                const instance = new model(modelId, {\r\n                  root: Note.fromId(rootId),\r\n                });\r\n                return (\r\n                  <tr key={i}>\r\n                    <td key={modelId}>\r\n                      <h3>{instance.getName()}</h3>\r\n                      <FretTable\r\n                        model={instance}\r\n                        voicing={VOICING_PRESET_MAP.get(voicingId)}\r\n                        fretRange={[0, 24]}\r\n                        showFretNumbers={false}\r\n                        showFretDots={false}\r\n                      />\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </Card>\r\n    </StyledCAGEDPage>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n"],"names":["StyledCAGEDPage","styled","PageLayout","withConfig","StyledCard","React","title","Card","className","DIATONIC_ITEMS","item","i","model","modelId","rootId","voicingId","instance","root","Note","key","getName","FretTable","voicing","VOICING_PRESET_MAP","fretRange","showFretNumbers","showFretDots","PENTATONIC_ITEMS","ROMAN_NUMERAL_ITEMS"],"sourceRoot":""}