{"version":3,"file":"component---src-components-pages-dev-notebook-intervals-basic-intervals-table-page-tsx-19630994488d3c89da39.js","mappings":"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","sources":["webpack://play-what/./src/components/pages/dev/notebook/intervals/IntervalsTable.tsx","webpack://play-what/./src/components/pages/dev/notebook/intervals/basic/intervals-table.page.tsx","webpack://play-what/./src/components/ui/Card.tsx","webpack://play-what/./src/components/ui/Table.styles.tsx","webpack://play-what/./src/components/ui/Table.tsx"],"sourcesContent":["\r\nimport React from 'react';\r\nimport IntervalSpan from '../../../../../core/models/Interval';\r\nimport { IntervalId } from '../../../../../core/models/Model.constants';\r\nimport { Table } from '../../../../ui/Table';\r\nimport { TABLE_STYLES_1 } from '../../../../ui/Table.styles';\r\n\r\n\r\nconst getName = (id: IntervalId): string => {\r\n    return (new IntervalSpan(id)).getName();\r\n}\r\n\r\nconst FOOTERS = [\r\n    {\r\n        cols: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11']\r\n    }\r\n];\r\n\r\nconst ROWS = [\r\n    {\r\n        cols: [\r\n            '',\r\n            '',\r\n            '',\r\n            getName(IntervalId.A2),\r\n            '',\r\n            getName(IntervalId.A3),\r\n            getName(IntervalId.A4),\r\n            '',\r\n            getName(IntervalId.A5),\r\n            '',\r\n            getName(IntervalId.A6),\r\n            ''\r\n        ]\r\n    },\r\n    {\r\n        cols: [\r\n            getName(IntervalId.P1),\r\n            getName(IntervalId.m2),\r\n            getName(IntervalId.M2),\r\n            getName(IntervalId.m3),\r\n            getName(IntervalId.M3),\r\n            getName(IntervalId.P4),\r\n            '',\r\n            getName(IntervalId.P5),\r\n            getName(IntervalId.m6),\r\n            getName(IntervalId.M6),\r\n            getName(IntervalId.m7),\r\n            getName(IntervalId.M7)\r\n        ]\r\n    },\r\n    {\r\n        cols: [\r\n            '',\r\n            '',\r\n            getName(IntervalId.d3),\r\n            '',\r\n            getName(IntervalId.d4),\r\n            '',\r\n            getName(IntervalId.d5),\r\n            getName(IntervalId.d6),\r\n            '',\r\n            getName(IntervalId.d7),\r\n            '',\r\n            ''\r\n        ]\r\n    }\r\n];\r\n\r\nexport const IntervalsTable: React.FC = () => {\r\n    return (\r\n        <Table tfoot={FOOTERS} tbody={ROWS} styles={TABLE_STYLES_1} />\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport PageLayout from \"../../../../../layout/PageLayout\";\r\nimport Card from \"../../../../../ui/Card\";\r\nimport { IntervalsTable } from \"../IntervalsTable\";\r\n\r\nconst StyledExtensionsPage = styled(PageLayout)`\r\n\r\n`;\r\n\r\nconst Page: React.FC<any> = () => {\r\n    return (\r\n        <StyledExtensionsPage title=\"Intervals Table\">\r\n            <Card>\r\n                <IntervalsTable />\r\n            </Card>\r\n        </StyledExtensionsPage>\r\n    )\r\n};\r\n\r\nexport default Page;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledCard = styled.div`\r\n    background: ${props => props.theme.surface.card};\r\n    width: 100%;\r\n    border-radius: 16px;\r\n    padding: 16px;\r\n\r\n    .header {\r\n        margin-bottom: 16px;\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 8px;\r\n        justify-content: space-between;\r\n    }\r\n`;\r\n\r\nexport const CardHeader: React.FC<any> = ({ title, level = 2, action = null }) => {\r\n    const AsTag: any = `h${level}`;\r\n    return (\r\n        <div className=\"header\">\r\n            <AsTag>{title}</AsTag>\r\n            {action}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Card: React.FC<any> = ({ title, subtitle, action, children, level, ...rest }) => {\r\n    return (\r\n        <StyledCard {...rest}>\r\n            {title &&\r\n                <CardHeader title={title} action={action} level={level} />\r\n            }\r\n            {subtitle &&\r\n                <CardHeader title={subtitle} level={level + 1} />\r\n            }\r\n            {children}\r\n        </StyledCard >\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import { css } from 'styled-components';\r\n\r\nexport const TABLE_STYLES_1 = css`\r\n    width: 100%;\r\n    td, th {\r\n        padding: 4px;\r\n        text-align: center;\r\n    }\r\n`;\r\n","\r\nimport { Link } from 'gatsby';\r\nimport React, { Fragment, ReactNode } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledTable = styled.table`\r\n   \r\n`;\r\n\r\ntype TOmit = undefined | null | false;\r\n\r\nconst getIsTypeOmit = (data: any): data is TOmit => data === undefined || data === null || data === false;\r\n\r\n// Col\r\n\r\ninterface IColConfig {\r\n    isHeader?: boolean;\r\n    content: any;\r\n    colSpan?: number;\r\n    className?: string;\r\n    link?: string;\r\n}\r\n\r\ninterface IColProps extends IColConfig {\r\n    index: number;\r\n}\r\n\r\ntype TCol = string | number | IColConfig | ReactNode;\r\n\r\nconst Col: React.FC<IColProps> = ({ index, isHeader, content, colSpan, className, link }) => {\r\n    const ColTag = isHeader ? 'th' : 'td';\r\n    const WrapperTag = link ? Link : Fragment;\r\n    const wrapperProps: any = link ? { to: link } : {};\r\n\r\n    return (\r\n        <ColTag colSpan={colSpan} className={className}>\r\n            <WrapperTag {...wrapperProps}>\r\n                {content || ''}\r\n            </WrapperTag>\r\n        </ColTag>\r\n    );\r\n}\r\n\r\n// Row\r\n\r\ninterface IRowConfig {\r\n    cols: (TCol | TOmit)[];\r\n    className?: string;\r\n    isHeader?: boolean;\r\n    headerColIndicies?: number[];\r\n}\r\n\r\nconst getIsConfig = (col: TCol): col is IColConfig => typeof col === 'object' && col !== null && col.hasOwnProperty('content');\r\n\r\nconst Row: React.FC<IRowConfig> = ({ cols, isHeader, className, headerColIndicies = [] }) => {\r\n    return (\r\n        <tr className={className}>\r\n            {cols.map((col: any, i) => {\r\n                if (getIsTypeOmit(col)) return null;\r\n                const isConfig = getIsConfig(col);\r\n                const colConfig = !isConfig ? { content: col } : col\r\n                return <Col key={i} index={i} isHeader={isHeader || headerColIndicies.includes(i)} {...colConfig} />\r\n            })}\r\n        </tr>\r\n    );\r\n}\r\n\r\n// Table Section\r\n\r\ninterface ITableSectionConfig {\r\n    Tag: 'thead' | 'tfoot' | 'tbody';\r\n    rows: (IRowConfig | TOmit)[];\r\n    headerColIndicies?: number[];\r\n}\r\n\r\nconst TableSection: React.FC<ITableSectionConfig> = ({ Tag, rows, headerColIndicies }) => (\r\n    <Tag>\r\n        {rows.map((row, i) => {\r\n            if (getIsTypeOmit(row)) return null;\r\n            return (\r\n                <Row\r\n                    key={i}\r\n                    isHeader={Tag !== 'tbody'}\r\n                    headerColIndicies={headerColIndicies}\r\n                    {...row} />\r\n            );\r\n        })}\r\n    </Tag>\r\n)\r\n\r\n// Table\r\n\r\ninterface IColGroup {\r\n    span?: number;\r\n    className?: string;\r\n}\r\n\r\ninterface ITableConfig {\r\n    thead?: (IRowConfig | TOmit)[];\r\n    tfoot?: (IRowConfig | TOmit)[];\r\n    tbody: (IRowConfig | TOmit)[];\r\n    styles?: any;\r\n    caption?: string;\r\n    colGroups?: IColGroup[];\r\n    className?: string;\r\n    headerColIndicies?: number[];\r\n}\r\n\r\nexport const Table: React.FC<ITableConfig> = ({ thead, tfoot, tbody, styles, colGroups, caption, headerColIndicies, className }) => {\r\n    return (\r\n        <StyledTable css={styles} className={className}>\r\n            {colGroups && <colgroup>{colGroups.map((cg, i) => <col key={i} {...cg} />)}</colgroup>}\r\n            {caption && <caption>{caption}</caption>}\r\n            {thead && <TableSection Tag=\"thead\" rows={thead} headerColIndicies={headerColIndicies} />}\r\n            {tfoot && <TableSection Tag=\"tfoot\" rows={tfoot} headerColIndicies={headerColIndicies} />}\r\n            {tbody && <TableSection Tag=\"tbody\" rows={tbody} headerColIndicies={headerColIndicies} />}\r\n        </StyledTable>\r\n    );\r\n}\r\n"],"names":["getName","id","IntervalSpan","FOOTERS","cols","ROWS","IntervalId","IntervalsTable","React","Table","tfoot","tbody","styles","TABLE_STYLES_1","StyledExtensionsPage","styled","PageLayout","withConfig","title","Card","StyledCard","props","theme","surface","card","CardHeader","level","action","AsTag","className","subtitle","children","rest","css","StyledTable","getIsTypeOmit","data","Col","index","isHeader","content","colSpan","link","ColTag","WrapperTag","Link","Fragment","wrapperProps","to","Row","headerColIndicies","map","col","i","isConfig","hasOwnProperty","getIsConfig","colConfig","key","includes","TableSection","Tag","rows","row","thead","colGroups","caption","cg"],"sourceRoot":""}