{"version":3,"file":"component---src-components-pages-index-page-tsx-590938087691d3446c20.js","mappings":"0LAAA,EAAe,IAA0B,iE,gFCI5BA,EAAgB,I,OAAIC,GAAMC,EAAAA,EAAAA,KAAc,CAAEC,KAAMC,EAAAA,EAAAA,OAAYC,EAAAA,GAAAA,KCcnEC,GAAiBC,EAAAA,EAAAA,SAAOC,EAAAA,GAAVC,WAAA,qEAAGF,CAAH,8qDAyBP,qBAAGG,MAAkBC,KAAKC,WAe1B,qBAAGF,MAAkBC,KAAKE,YAcnCC,EAAAA,GA8DS,qBAAGJ,MAAkBC,KAAKC,WAQf,SAACG,GAAD,OAAWA,EAAML,MAAMM,OAAOC,eA0B5B,SAACF,GAAD,OAAWA,EAAML,MAAMQ,QAAQC,QAS/B,SAACJ,GAAD,OAAWA,EAAML,MAAMM,OAAOC,eAIxC,SAACF,GAAD,OAAWA,EAAML,MAAMM,OAAOC,eAK5B,SAACF,GAAD,OAAWA,EAAML,MAAMM,OAAOI,UAExB,SAACL,GAAD,OAAWA,EAAML,MAAMM,OAAOI,UAkHtD,EA5G4B,WAC1B,OAAsCC,EAAAA,EAAAA,UAAS,mBAAxCC,EAAP,KAAoBC,EAApB,KACA,GAA0BF,EAAAA,EAAAA,UAASrB,GAA5BwB,EAAP,KAAcC,EAAd,KAEMC,GAAYC,EAAAA,EAAAA,GAChBH,EAAMI,UACNJ,EAAMK,QACNL,EAAMrB,KAAK0B,SAqBb,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAKC,aAAY,WACrB,IAAM7B,EACJ8B,EAAAA,GAAaC,KAAKC,MAAMD,KAAKE,SAAWH,EAAAA,GAAAA,SACpCI,EACJC,EAAAA,GAAYJ,KAAKC,MAAMD,KAAKE,SAAWE,EAAAA,GAAAA,SACnC3B,EAAUR,EAAKoC,KAAX,IAAmBF,EAAUE,KAA7B,KAAqCC,EAAAA,EAAAA,IAC7CH,EAAUT,WAGNa,EAAI,KADCC,EAAAA,EAAAA,IAAgBL,EAAUT,WAC3B,CAAOS,EAAUR,QAAS,CAAE1B,KAAMC,EAAAA,EAAAA,OAAYD,EAAK0B,WAE7DN,EAAeZ,GACfc,EAASgB,KACR,KACH,OAAO,kBAAME,cAAcZ,MAC1B,IAGDa,EAAAA,cAACtC,EAAD,CAAgBuC,QAAM,GACpBD,EAAAA,cAAAA,MAAAA,CAAKE,IAAKC,EAASC,UAAU,SAC7BJ,EAAAA,cAAAA,IAAAA,CAAGI,UAAU,SAAb,wCACAJ,EAAAA,cAACK,EAAAA,EAAD,CAAW3B,YAAaA,IACxBsB,EAAAA,cAAAA,MAAAA,CAAKI,UAAU,SACbJ,EAAAA,cAACM,EAAAA,GAAD,CAAMC,GAAG,UAAUH,UAAU,QAC3BJ,EAAAA,cAACQ,EAAAA,GAAD,CAAMC,OAAQC,EAAAA,GAAAA,OAAeC,KAAM,KADrC,0BAIAX,EAAAA,cAACM,EAAAA,GAAD,CAAMC,GAAG,QAAQH,UAAU,QACzBJ,EAAAA,cAACQ,EAAAA,GAAD,CAAMC,OAAQC,EAAAA,GAAAA,OAAeC,KAAM,KADrC,oBAIAX,EAAAA,cAACM,EAAAA,GAAD,CAAMC,GAAIzB,EAAWsB,UAAU,QAC7BJ,EAAAA,cAACQ,EAAAA,GAAD,CAAMC,OAAQC,EAAAA,GAAAA,KAAaC,KAAM,KADnC,gBAKFX,EAAAA,cAAAA,MAAAA,CAAKI,UAAU,QACbJ,EAAAA,cAAAA,UAAAA,KACEA,EAAAA,cAAAA,KAAAA,KAAAA,wBACAA,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,MAAAA,CAAKI,UAAU,OACbJ,EAAAA,cAAAA,IAAAA,KAAAA,oHAIAA,EAAAA,cAACM,EAAAA,GAAD,CAAMC,IAAIxB,EAAAA,EAAAA,GAAc6B,EAAAA,GAAAA,QAAxB,UACAZ,EAAAA,cAACM,EAAAA,GAAD,CAAMC,IAAIxB,EAAAA,EAAAA,GAAc6B,EAAAA,GAAAA,QAAxB,aAINZ,EAAAA,cAAAA,UAAAA,KACEA,EAAAA,cAAAA,KAAAA,KAAAA,yBACAA,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,MAAAA,CAAKI,UAAU,OACbJ,EAAAA,cAAAA,IAAAA,KAAAA,iGAIAA,EAAAA,cAACM,EAAAA,GAAD,CAAMC,GAAG,mBAAT,aACAP,EAAAA,cAACM,EAAAA,GAAD,CAAMC,GAAG,kBAAT,eAINP,EAAAA,cAAAA,UAAAA,KACEA,EAAAA,cAAAA,KAAAA,KAAAA,+BACAA,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,MAAAA,CAAKI,UAAU,OACbJ,EAAAA,cAAAA,IAAAA,KAAAA,iGAIAA,EAAAA,cAACM,EAAAA,GAAD,CAAMO,OAAO,SAASN,GAAIO,EAAAA,GAA1B,sBAMNd,EAAAA,cAAAA,UAAAA,KACEA,EAAAA,cAAAA,KAAAA,KAAAA,wBACAA,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,MAAAA,CAAKI,UAAU,OACbJ,EAAAA,cAAAA,IAAAA,KAAAA,mIAKAA,EAAAA,cAACM,EAAAA,GAAD,CAAMC,GAAG,SAAT,QACAP,EAAAA,cAACM,EAAAA,GAAD,CAAMC,GAAG,UAAT,SACAP,EAAAA,cAACM,EAAAA,GAAD,CAAMC,GAAG,gBAAT,sB,6ECjSDrC,E,QAAkBP,QAAAA,KAAAA,WAAH,sEAAGA,CAAH,ubAWI,SAAAQ,GAAK,OAAIA,EAAML,MAAMiD,MAAMC,UAa3B,SAAA7C,GAAK,OAAIA,EAAML,MAAMM,OAAOC,eAClB,SAAAF,GAAK,OAAIA,EAAML,MAAMM,OAAOI,UAgDtE,IArCiC,SAAC,GAAkF,IAAhFyC,EAA+E,EAA/EA,UAAkBC,EAA6D,EAApEC,MAAgCC,EAAoC,EAA9CC,SAA4B3C,EAAkB,EAAlBA,YAC7F,GAA4BD,EAAAA,EAAAA,UAAS,IAA9B6C,EAAP,KAAeC,EAAf,KACMJ,OAAiC,IAAlBD,EAAgCI,EAASJ,EACxDG,OAAuC,IAArBD,EAAmCG,EAAYH,EAgBvE,OACIpB,EAAAA,cAAC9B,EAAD,CAAiBsD,KAAK,SAASC,SAXlB,SAAAC,GACbA,EAAEC,iBACF,IAAMC,EAAQF,EAAEb,OAAOgB,SAASV,MAAMS,MAChCT,EAAQ,IAAIW,gBAAgB,CAAEX,MAAOS,IAErCG,EAAI,YADCZ,EAAK,IAAOA,EAAMa,WAAe,IAG5C,OADAC,EAAAA,EAAAA,IAASF,IACF,IAKH/B,EAAAA,cAAAA,MAAAA,CAAKI,UAAU,cACXJ,EAAAA,cAAAA,QAAAA,CACIkC,KAAK,SACL/C,GAAG,cACHQ,KAAK,QACLwC,IAAKlB,EACLmB,SAtBC,SAAAV,GACbL,EAASK,EAAEb,OAAOe,QAsBNA,MAAOT,EACPzC,YAAaA,GAAe,uBAEhCsB,EAAAA,cAAAA,SAAAA,CAAQkC,KAAK,UAAb,c,qDCrET,IAAMnD,EAAgB,SAC3BC,EACAC,EACAoD,GAKA,MAAM,WAAYrD,GAHEC,EAAO,IAAOA,EAAY,KAC3BoD,EAAM,SAAYA,EAAW,IAEhD","sources":["webpack://play-what/./static/play_what_logo_web.png","webpack://play-what/./src/components/pages/view/view.defaults.ts","webpack://play-what/./src/components/pages/index.page.tsx","webpack://play-what/./src/components/search/SearchBar.tsx","webpack://play-what/./src/core/routing/Routing.utils.ts"],"sourcesContent":["export default __webpack_public_path__ + \"static/play_what_logo_web-b14024555431be76d60a78008dbef88e.png\";","import Chord from \"../../../core/models/Chord\";\r\nimport { ChordId, NoteId } from \"../../../core/models/Model.constants\";\r\nimport Note from \"../../../core/models/Note\";\r\n\r\nexport const DEFAULT_MODEL = new Chord(ChordId.Maj7, { root: Note.fromId(NoteId.C) })\r\n","import { Link } from \"gatsby\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport logoSrc from \"../../../static/play_what_logo_web.png\";\r\nimport { FEEDBACK_LINK } from \"../../config/constants\";\r\nimport {\r\n  getModelIdClass,\r\n  getModelIdText,\r\n  ModelType,\r\n} from \"../../core/models/Model.constants\";\r\nimport { ALL_PRESETS, NOTE_PRESETS } from \"../../core/models/Model.presets\";\r\nimport Note from \"../../core/models/Note\";\r\nimport { getModelRoute } from \"../../core/routing/Routing.utils\";\r\nimport PageLayout from \"../layout/PageLayout\";\r\nimport SearchBar, { StyledSearchBar } from \"../search/SearchBar\";\r\nimport Icon, { IconId } from \"../ui/Icon\";\r\nimport { DEFAULT_MODEL } from \"./view/view.defaults\";\r\n\r\nconst StyledHomePage = styled(PageLayout)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  .logo {\r\n    display: block;\r\n    width: 256px;\r\n    margin: 16px auto;\r\n    @media (min-width: 512px) {\r\n      width: 512px;\r\n      margin: 32px auto;\r\n    }\r\n    @media (min-width: 1024px) {\r\n      width: 768px;\r\n      margin: 48px auto;\r\n    }\r\n  }\r\n\r\n  .placeholder {\r\n    width: 128px;\r\n  }\r\n\r\n  .intro {\r\n    max-width: 768px;\r\n    color: ${({ theme }) => theme.text.primary};\r\n    text-align: center;\r\n    line-height: 120%;\r\n    font-size: 120%;\r\n    margin: auto;\r\n    @media (min-width: 512px) {\r\n      font-size: 140%;\r\n    }\r\n    @media (min-width: 1024px) {\r\n      font-size: 160%;\r\n    }\r\n  }\r\n\r\n  .disclaimer {\r\n    font-style: italic;\r\n    color: ${({ theme }) => theme.text.secondary};\r\n    text-align: center;\r\n    margin: 8px 0;\r\n    font-size: 80%;\r\n    @media (min-width: 512px) {\r\n      margin: 16px 0;\r\n      font-size: 100%;\r\n    }\r\n    @media (min-width: 1024px) {\r\n      margin: 32px 0;\r\n      font-size: 120%;\r\n    }\r\n  }\r\n\r\n  ${StyledSearchBar} {\r\n    margin: 32px auto;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n\r\n  .preview {\r\n    margin: 32px;\r\n    display: grid;\r\n    @media (min-width: 512px) {\r\n      grid-template-columns: 1fr 1fr;\r\n    }\r\n    gap: 16px;\r\n\r\n    width: 80%;\r\n\r\n    & > * {\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n  .grid {\r\n    display: grid;\r\n    @media (min-width: 512px) {\r\n      grid-template-columns: 1fr 1fr;\r\n    }\r\n    gap: 32px;\r\n    margin: 0 16px;\r\n  }\r\n\r\n  section {\r\n    width: 100%;\r\n    margin-top: 32px;\r\n\r\n    & > div {\r\n      // display: grid;\r\n      // grid-template-columns: 1fr;\r\n      // gap: 32px;\r\n      // @media(min-width: 512px) {\r\n      // \tgrid-template-columns: 1fr 1fr;\r\n      // }\r\n\r\n      & > div.txt {\r\n        a {\r\n          display: block;\r\n          margin-top: 16px;\r\n        }\r\n      }\r\n      & > div.action {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n      }\r\n    }\r\n\r\n    &:last-child {\r\n      margin-bottom: 256px;\r\n    }\r\n  }\r\n\r\n  h3 {\r\n    margin: 32px 0 16px;\r\n    color: ${({ theme }) => theme.text.primary};\r\n  }\r\n\r\n  > a {\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n    color: white;\r\n    font-weight: bold;\r\n    background-color: ${(props) => props.theme.action.interactive};\r\n    padding: 8px 16px;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    width: 100%;\r\n    max-width: 512px;\r\n\r\n    &:hover {\r\n      color: white;\r\n    }\r\n  }\r\n\r\n  .tiles {\r\n    display: grid;\r\n    gap: 16px;\r\n    margin: 0 16px;\r\n\r\n    grid-template-columns: 100%;\r\n    @media (min-width: 512px) {\r\n      grid-template-columns: repeat(3, 1fr);\r\n    }\r\n\r\n    .tile {\r\n      background-color: ${(props) => props.theme.surface.card};\r\n      border-radius: 8px;\r\n      padding: 20px;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      flex-direction: column;\r\n      gap: 16px;\r\n\r\n      border: 1px solid ${(props) => props.theme.action.interactive};\r\n\r\n      svg,\r\n      svg * {\r\n        fill: ${(props) => props.theme.action.interactive};\r\n      }\r\n      &:hover {\r\n        svg,\r\n        svg * {\r\n          fill: ${(props) => props.theme.action.active};\r\n        }\r\n        border-color: ${(props) => props.theme.action.active};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Page: React.FC<any> = () => {\r\n  const [placeholder, setPlaceholder] = useState(\"Search the site\");\r\n  const [model, setModel] = useState(DEFAULT_MODEL);\r\n\r\n  const modelPath = getModelRoute(\r\n    model.modelType,\r\n    model.modelId,\r\n    model.root.modelId\r\n  );\r\n\r\n  useEffect(() => {\r\n    const id = setInterval(() => {\r\n      const root =\r\n        NOTE_PRESETS[Math.floor(Math.random() * NOTE_PRESETS.length)];\r\n      const structure =\r\n        ALL_PRESETS[Math.floor(Math.random() * ALL_PRESETS.length)];\r\n      const text = `${root.name} ${structure.name} ${getModelIdText(\r\n        structure.modelType\r\n      )}`;\r\n      const cl = getModelIdClass(structure.modelType);\r\n      const m = new cl(structure.modelId, { root: Note.fromId(root.modelId) });\r\n\r\n      setPlaceholder(text);\r\n      setModel(m);\r\n    }, 2000);\r\n    return () => clearInterval(id);\r\n  }, []);\r\n\r\n  return (\r\n    <StyledHomePage isHome>\r\n      <img src={logoSrc} className=\"logo\" /*width={768} height={128}*/ />\r\n      <p className=\"intro\">Every chord. Every scale. Every key.</p>\r\n      <SearchBar placeholder={placeholder} />\r\n      <div className=\"tiles\">\r\n        <Link to=\"/browse\" className=\"tile\">\r\n          <Icon iconId={IconId.Browse} size={64} />\r\n          Browse Chords & Scales\r\n        </Link>\r\n        <Link to=\"/view\" className=\"tile\">\r\n          <Icon iconId={IconId.Guitar} size={64} />\r\n          View Instruments\r\n        </Link>\r\n        <Link to={modelPath} className=\"tile\">\r\n          <Icon iconId={IconId.Dice} size={64} />\r\n          Random Page\r\n        </Link>\r\n      </div>\r\n      <div className=\"grid\">\r\n        <section>\r\n          <h3>Explore Music Theory</h3>\r\n          <div>\r\n            <div className=\"txt\">\r\n              <p>\r\n                Browse an extensive library of chords and scales. Explore their\r\n                relationships and physical properties in detail.\r\n              </p>\r\n              <Link to={getModelRoute(ModelType.Scale)}>Chords</Link>\r\n              <Link to={getModelRoute(ModelType.Chord)}>Scales</Link>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section>\r\n          <h3>Customize Instruments</h3>\r\n          <div>\r\n            <div className=\"txt\">\r\n              <p>\r\n                Play What currently supports two instrument types. Both can be\r\n                customized to suit your needs.\r\n              </p>\r\n              <Link to=\"/view/fretboard\">Fretboard</Link>\r\n              <Link to=\"/view/keyboard\">Keyboard</Link>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section>\r\n          <h3>Have Feedback? Get In Touch</h3>\r\n          <div>\r\n            <div className=\"txt\">\r\n              <p>\r\n                Use the form below to provide feedback, report bugs, request\r\n                features, or contact the author.\r\n              </p>\r\n              <Link target=\"_blank\" to={FEEDBACK_LINK}>\r\n                Take The Survey\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section>\r\n          <h3>Confused? Learn More</h3>\r\n          <div>\r\n            <div className=\"txt\">\r\n              <p>\r\n                Play What offers something for musicians of all skill levels.\r\n                Use the resources below to find the features most useful for\r\n                you.\r\n              </p>\r\n              <Link to=\"/help\">Help</Link>\r\n              <Link to=\"/about\">About</Link>\r\n              <Link to=\"/coming-soon\">Coming Soon</Link>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </StyledHomePage>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import { navigate } from \"gatsby\";\r\nimport React, { useState } from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledSearchBar = styled.form`\r\n    width: 100%;\r\n    .search-bar {\r\n        width: 100%;\r\n        max-width: 512px;\r\n        display: grid;\r\n        grid-template-columns: 1fr auto;\r\n\r\n        input, button {\r\n            padding: 8px 8px;\r\n            border-radius: 8px;\r\n            border: 1px solid ${props => props.theme.utils.border};\r\n        }\r\n\r\n        input {\r\n            border-radius: 8px 0 0 8px;\r\n            border-right: none;\r\n        }\r\n\r\n        button {\r\n            border-radius: 0 8px 8px 0;\r\n            cursor: pointer;\r\n            color: white;\r\n            font-weight: bold;\r\n            background-color: ${props => props.theme.action.interactive};\r\n            &:hover { background-color: ${props => props.theme.action.active}; }\r\n            border-left: none;\r\n            padding: 8px 16px;\r\n\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n        }\r\n    }\r\n`;\r\n\r\nconst SearchBar: React.FC<any> = ({ searchRef, query: externalQuery, setQuery: externalSetQuery, placeholder }) => {\r\n    const [_query, _setQuery] = useState('');\r\n    const query = typeof externalQuery === 'undefined' ? _query : externalQuery;\r\n    const setQuery = typeof externalSetQuery === 'undefined' ? _setQuery : externalSetQuery;\r\n\r\n    const onChange = e => {\r\n        setQuery(e.target.value);\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        const value = e.target.elements.query.value;\r\n        const query = new URLSearchParams({ query: value });\r\n        const qs = query ? `?${query.toString()}` : '';\r\n        const path = `/search/${qs}`;\r\n        navigate(path);\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <StyledSearchBar role=\"search\" onSubmit={onSubmit}>\r\n            <div className=\"search-bar\">\r\n                <input\r\n                    type=\"search\"\r\n                    id=\"site-search\"\r\n                    name=\"query\"\r\n                    ref={searchRef}\r\n                    onChange={onChange}\r\n                    value={query as string}\r\n                    placeholder={placeholder || \"Search the site...\"}\r\n                />\r\n                <button type=\"submit\" >Search</button>\r\n            </div>\r\n        </StyledSearchBar>\r\n    );\r\n};\r\n\r\nexport default SearchBar;\r\n","import { ModelId, ModelType, NoteId } from \"../models/Model.constants\";\r\n\r\nexport const getModelRoute = (\r\n  modelType: ModelType,\r\n  modelId?: ModelId,\r\n  rootId?: NoteId\r\n) => {\r\n  const modelSuffix = modelId ? `/${modelId}` : \"\";\r\n  const rootSuffix = rootId ? `/root/${rootId}` : \"\";\r\n\r\n  return `/browse/${modelType}${modelSuffix}${rootSuffix}/`;\r\n};\r\n"],"names":["DEFAULT_MODEL","Chord","ChordId","root","Note","NoteId","StyledHomePage","styled","PageLayout","withConfig","theme","text","primary","secondary","StyledSearchBar","props","action","interactive","surface","card","active","useState","placeholder","setPlaceholder","model","setModel","modelPath","getModelRoute","modelType","modelId","useEffect","id","setInterval","NOTE_PRESETS","Math","floor","random","structure","ALL_PRESETS","name","getModelIdText","m","getModelIdClass","clearInterval","React","isHome","src","logoSrc","className","SearchBar","Link","to","Icon","iconId","IconId","size","ModelType","target","FEEDBACK_LINK","utils","border","searchRef","externalQuery","query","externalSetQuery","setQuery","_query","_setQuery","role","onSubmit","e","preventDefault","value","elements","URLSearchParams","path","toString","navigate","type","ref","onChange","rootId"],"sourceRoot":""}