{"version":3,"file":"component---src-components-pages-dev-notebook-intervals-intervals-vs-semitones-page-tsx-0b1557f7647cc16c2c92.js","mappings":"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","sources":["webpack://play-what/./src/components/pages/dev/notebook/intervals/intervals-vs-semitones.page.tsx","webpack://play-what/./src/components/ui/Card.tsx","webpack://play-what/./src/components/ui/Table.styles.tsx","webpack://play-what/./src/components/ui/Table.tsx"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport IntervalSpan from \"../../../../../core/models/Interval\";\r\nimport { IntervalId } from \"../../../../../core/models/Model.constants\";\r\nimport PageLayout from \"../../../../layout/PageLayout\";\r\nimport Card from \"../../../../ui/Card\";\r\nimport { Table } from \"../../../../ui/Table\";\r\nimport { TABLE_STYLES_1 } from \"../../../../ui/Table.styles\";\r\n\r\nconst getName = (id: IntervalId): string => {\r\n  return new IntervalSpan(id).getName();\r\n};\r\n\r\nconst FOOTERS = [\r\n  {\r\n    cols: [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\"],\r\n  },\r\n];\r\n\r\nconst ROWS = [\r\n  {\r\n    cols: [\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      getName(IntervalId.A2),\r\n      \"\",\r\n      getName(IntervalId.A3),\r\n      getName(IntervalId.A4),\r\n      \"\",\r\n      getName(IntervalId.A5),\r\n      \"\",\r\n      getName(IntervalId.A6),\r\n      \"\",\r\n    ],\r\n  },\r\n  {\r\n    cols: [\r\n      getName(IntervalId.P1),\r\n      getName(IntervalId.m2),\r\n      getName(IntervalId.M2),\r\n      getName(IntervalId.m3),\r\n      getName(IntervalId.M3),\r\n      getName(IntervalId.P4),\r\n      \"\",\r\n      getName(IntervalId.P5),\r\n      getName(IntervalId.m6),\r\n      getName(IntervalId.M6),\r\n      getName(IntervalId.m7),\r\n      getName(IntervalId.M7),\r\n    ],\r\n  },\r\n  {\r\n    cols: [\r\n      \"\",\r\n      \"\",\r\n      getName(IntervalId.d3),\r\n      \"\",\r\n      getName(IntervalId.d4),\r\n      \"\",\r\n      getName(IntervalId.d5),\r\n      getName(IntervalId.d6),\r\n      \"\",\r\n      getName(IntervalId.d7),\r\n      \"\",\r\n      \"\",\r\n    ],\r\n  },\r\n];\r\n\r\nconst StyledPage = styled(PageLayout)``;\r\n\r\nconst Page: React.FC = () => {\r\n  return (\r\n    <StyledPage title=\"Intervals vs Semitones\">\r\n      <Card>\r\n        <Table tfoot={FOOTERS} tbody={ROWS} styles={TABLE_STYLES_1} />\r\n      </Card>\r\n    </StyledPage>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import React, { PropsWithChildren } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const StyledCard = styled.div`\r\n  background: ${(props) => props.theme.surface.card};\r\n  width: 100%;\r\n  border-radius: 16px;\r\n  padding: 16px;\r\n\r\n  .header {\r\n    margin-bottom: 16px;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nexport const CardHeader: React.FC<any> = ({\r\n  title,\r\n  level = 2,\r\n  action = null,\r\n}) => {\r\n  const AsTag: any = `h${level}`;\r\n  return (\r\n    <div className=\"header\">\r\n      <AsTag>{title}</AsTag>\r\n      {action}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport interface ICardProps extends PropsWithChildren<any> {\r\n  title?: string;\r\n  subtitle?: string;\r\n  action?: any;\r\n  level?: number;\r\n}\r\n\r\nconst Card: React.FC<ICardProps> = ({\r\n  title,\r\n  subtitle,\r\n  action,\r\n  children,\r\n  level = 1,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <StyledCard {...rest}>\r\n      {title && <CardHeader title={title} action={action} level={level} />}\r\n      {subtitle && <CardHeader title={subtitle} level={level + 1} />}\r\n      {children}\r\n    </StyledCard>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { css } from \"styled-components\";\r\n\r\nexport const TABLE_STYLES_1 = css`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  td,\r\n  th {\r\n    padding: 4px;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const FRET_POSITION_TABLE_STYLES = css`\r\n  border-collapse: collapse;\r\n  width: unset !important;\r\n  margin: auto;\r\n  td,\r\n  th {\r\n    height: 48px;\r\n    width: 48px;\r\n    text-align: center;\r\n    vertical-align: middle !important;\r\n  }\r\n  td {\r\n    border: 1px solid black;\r\n  }\r\n`;\r\n","import { Link } from \"gatsby\";\r\nimport React, { Fragment, ReactNode } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledTable = styled.table``;\r\n\r\ntype TOmit = undefined | null | false;\r\n\r\nconst getIsTypeOmit = (data: any): data is TOmit =>\r\n  data === undefined || data === null || data === false;\r\n\r\n// Col\r\n\r\nexport interface IColConfig {\r\n  isHeader?: boolean;\r\n  content: any;\r\n  colSpan?: number;\r\n  className?: string;\r\n  link?: string;\r\n}\r\n\r\ninterface IColProps extends IColConfig {\r\n  index: number;\r\n}\r\n\r\ntype TCol = string | number | IColConfig | ReactNode;\r\n\r\nconst Col: React.FC<IColProps> = ({\r\n  index,\r\n  isHeader,\r\n  content,\r\n  colSpan,\r\n  className,\r\n  link,\r\n}) => {\r\n  const ColTag = isHeader ? \"th\" : \"td\";\r\n  const WrapperTag = link ? Link : Fragment;\r\n  const wrapperProps: any = link ? { to: link } : {};\r\n\r\n  return (\r\n    <ColTag colSpan={colSpan} className={className}>\r\n      <WrapperTag {...wrapperProps}>{content || \"\"}</WrapperTag>\r\n    </ColTag>\r\n  );\r\n};\r\n\r\n// Row\r\n\r\nexport interface IRowConfig {\r\n  cols: (TCol | TOmit)[];\r\n  className?: string;\r\n  isHeader?: boolean;\r\n  headerColIndicies?: number[];\r\n}\r\n\r\nconst getIsConfig = (col: TCol): col is IColConfig =>\r\n  typeof col === \"object\" && col !== null && col.hasOwnProperty(\"content\");\r\n\r\nconst Row: React.FC<IRowConfig> = ({\r\n  cols,\r\n  isHeader,\r\n  className,\r\n  headerColIndicies = [],\r\n}) => {\r\n  return (\r\n    <tr className={className}>\r\n      {cols.map((col: any, i) => {\r\n        if (getIsTypeOmit(col)) return null;\r\n        const isConfig = getIsConfig(col);\r\n        const colConfig = !isConfig ? { content: col } : col;\r\n        return (\r\n          <Col\r\n            key={i}\r\n            index={i}\r\n            isHeader={isHeader || headerColIndicies.includes(i)}\r\n            {...colConfig}\r\n          />\r\n        );\r\n      })}\r\n    </tr>\r\n  );\r\n};\r\n\r\n// Table Section\r\n\r\ninterface ITableSectionConfig {\r\n  Tag: \"thead\" | \"tfoot\" | \"tbody\";\r\n  rows: (IRowConfig | TOmit)[];\r\n  headerColIndicies?: number[];\r\n}\r\n\r\nconst TableSection: React.FC<ITableSectionConfig> = ({\r\n  Tag,\r\n  rows,\r\n  headerColIndicies,\r\n}) => (\r\n  <Tag>\r\n    {rows.map((row, i) => {\r\n      if (getIsTypeOmit(row)) return null;\r\n      return (\r\n        <Row\r\n          key={i}\r\n          isHeader={Tag !== \"tbody\"}\r\n          headerColIndicies={headerColIndicies}\r\n          {...row}\r\n        />\r\n      );\r\n    })}\r\n  </Tag>\r\n);\r\n\r\n// Table\r\n\r\ninterface IColGroup {\r\n  span?: number;\r\n  className?: string;\r\n}\r\n\r\nexport interface ITableConfig {\r\n  thead?: (IRowConfig | TOmit)[];\r\n  tfoot?: (IRowConfig | TOmit)[];\r\n  tbody: (IRowConfig | TOmit)[];\r\n  styles?: any;\r\n  caption?: string;\r\n  colGroups?: IColGroup[];\r\n  className?: string;\r\n  headerColIndicies?: number[];\r\n}\r\n\r\nexport const Table: React.FC<ITableConfig> = ({\r\n  thead,\r\n  tfoot,\r\n  tbody,\r\n  styles,\r\n  colGroups,\r\n  caption,\r\n  headerColIndicies,\r\n  className,\r\n}) => {\r\n  return (\r\n    <StyledTable css={styles} className={className}>\r\n      {colGroups && (\r\n        <colgroup>\r\n          {colGroups.map((cg, i) => (\r\n            <col key={i} {...cg} />\r\n          ))}\r\n        </colgroup>\r\n      )}\r\n      {caption && <caption>{caption}</caption>}\r\n      {thead && (\r\n        <TableSection\r\n          Tag=\"thead\"\r\n          rows={thead}\r\n          headerColIndicies={headerColIndicies}\r\n        />\r\n      )}\r\n      {tfoot && (\r\n        <TableSection\r\n          Tag=\"tfoot\"\r\n          rows={tfoot}\r\n          headerColIndicies={headerColIndicies}\r\n        />\r\n      )}\r\n      {tbody && (\r\n        <TableSection\r\n          Tag=\"tbody\"\r\n          rows={tbody}\r\n          headerColIndicies={headerColIndicies}\r\n        />\r\n      )}\r\n    </StyledTable>\r\n  );\r\n};\r\n"],"names":["getName","id","IntervalSpan","FOOTERS","cols","ROWS","IntervalId","StyledPage","styled","PageLayout","displayName","componentId","React","title","Card","Table","tfoot","tbody","styles","TABLE_STYLES_1","StyledCard","props","theme","surface","card","CardHeader","_ref","level","action","AsTag","className","_ref2","subtitle","children","rest","css","FRET_POSITION_TABLE_STYLES","StyledTable","getIsTypeOmit","data","Col","index","isHeader","content","colSpan","link","ColTag","WrapperTag","Link","Fragment","wrapperProps","to","Row","headerColIndicies","map","col","i","isConfig","hasOwnProperty","getIsConfig","colConfig","key","includes","TableSection","_ref3","Tag","rows","row","_ref4","thead","colGroups","caption","cg"],"sourceRoot":""}