{"version":3,"file":"component---src-components-scales-scale-page-tsx-59ac31b1f523b4b50fcb.js","mappings":"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","sources":["webpack://play-what/./src/components/_shared/breadcrumb-list/BreadcrumbList.tsx","webpack://play-what/./src/components/_shared/cards/DetailsCard.tsx","webpack://play-what/./src/components/_shared/cards/GuitarCard.tsx","webpack://play-what/./src/components/_shared/cards/RelatedCard.tsx","webpack://play-what/./src/components/_shared/cards/RootCard.tsx","webpack://play-what/./src/components/_shared/cards/SoundCard.tsx","webpack://play-what/./src/components/_shared/layout/Pane.tsx","webpack://play-what/./src/components/collection/CollectionTable.tsx","webpack://play-what/./src/components/_shared/cards/ModeCard.tsx","webpack://play-what/./src/components/_shared/cards/RomanNumeralsCard.tsx","webpack://play-what/./src/components/scales/ScalePage.tsx"],"sourcesContent":["import { Link } from \"gatsby\";\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport Icon from \"../ui/Icon\";\r\n\r\nconst StyledBreadcrumbList = styled.ul`\r\n    font-size: 80%;\r\n    padding: 0 0 8px 0;\r\n    @media(min-width: 512px) {\r\n        font-size: 110%;\r\n        padding: 0 0 16px 0;\r\n    }\r\n\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    gap: 8px;\r\n    white-space: nowrap;\r\n    text-transform: capitalize;\r\n    svg {\r\n        margin-right: 8px;\r\n    }\r\n`\r\n\r\nconst BreadcrumbList = ({ path }) => {\r\n    let pieces = path.split('/');\r\n    pieces = pieces.slice(0, pieces.length - 1).filter(p => !['root'].includes(p));\r\n    const paths = [];\r\n    pieces.reduce((prev, cur, i, arr) => {\r\n        const path = `${prev}/${cur}`.replace('//', '/');\r\n        paths.push(\r\n            <li key={i}>\r\n                {i > 0 && <Icon iconId=\"next\" size={10} color=\"grey\" />}\r\n                <Link to={path || '/'}>{i === 0 ? 'Home' : cur.replaceAll('-', ' ')}</Link>\r\n            </li>\r\n        );\r\n        return path;\r\n    }, '/');\r\n    return <StyledBreadcrumbList>{paths}</StyledBreadcrumbList>;\r\n}\r\n\r\nexport default BreadcrumbList;\r\n","import React from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport NumberUtils from \"../../../core/general/Number.utils\";\r\nimport Note from \"../../../core/models/Note\";\r\nimport { octaveState } from \"../../../state/state\";\r\nimport { StyledCard } from \"../ui/Card\";\r\n\r\nconst StyledDetailsCard = styled(StyledCard)`\r\n    table {\r\n        &.mobile {\r\n            display: table;\r\n            @media(min-width: 512px) {\r\n                display: none;\r\n            }\r\n        }\r\n        &.desktop {\r\n            display: none;\r\n            @media(min-width: 512px) {\r\n                display: table;\r\n            }\r\n            th {\r\n                display: none;\r\n            }\r\n        }\r\n\r\n        margin: auto;\r\n        border-collapse: collapse;\r\n\r\n        td, th {\r\n            padding: 8px;\r\n            @media(min-width: 512px) {\r\n                padding: 8px 16px;\r\n            }\r\n            text-align: center;\r\n        }\r\n\r\n        th {\r\n            text-transform: uppercase;\r\n            font-size: 80%;\r\n        }\r\n\r\n        .featured {\r\n            font-weight: bold;\r\n            font-size: 150%;\r\n            @media(min-width: 512px) {\r\n                font-size: 300%;\r\n            }\r\n        }\r\n\r\n        .interval {\r\n            font-size: 120%;\r\n            @media(min-width: 512px) {\r\n                font-size: 200%;\r\n            }\r\n        }\r\n\r\n        .ratio, .frequency {\r\n            color: ${props => props.theme.text.secondary};\r\n            font-size: 80%;\r\n            @media(min-width: 512px) {\r\n                font-size: 100%;\r\n            }\r\n        }\r\n\r\n        .root {\r\n            color: red;\r\n        }\r\n    }\r\n`;\r\n\r\nconst NoteCell = ({ note, i }) => {\r\n    if (!note) return null;\r\n    return (\r\n        <td className={`note featured ${i === 0 ? 'root' : ''}`}>{note.name}<sub>{note.getOctave()}</sub></td>\r\n    );\r\n};\r\n\r\nconst IntervalCell = ({ interval, isFeatured }) => {\r\n    return (\r\n        <td className={`interval ${isFeatured ? 'featured' : ''}`}>{interval.getName()}</td>\r\n    );\r\n};\r\n\r\nconst PitchCell = ({ note }) => {\r\n    if (!note) return null;\r\n    return (\r\n        <td className={`frequency`}>{note.getFrequency(true)}</td>\r\n    );\r\n};\r\n\r\nconst RatioCell = ({ interval }) => {\r\n    return (\r\n        <td className={`ratio`}>{interval.getRatio()}</td>\r\n    );\r\n};\r\n\r\nconst DetailsCard: React.FC<any> = ({ model }) => {\r\n    const intervals = model.intervals;\r\n    const octave = useRecoilValue(octaveState);\r\n    const notes = model.notes && model.notes.map(n => new Note([\r\n        (octave - 4) * 12 + NumberUtils.modulo(n.pod[0], 12),\r\n        n.pod[1]\r\n    ]));\r\n\r\n    if (!intervals && !notes) return null;\r\n\r\n    return (\r\n        <StyledDetailsCard $n={intervals.length}>\r\n            <table className=\"mobile\">\r\n                <thead>\r\n                    <tr>\r\n                        {notes && <th>Note</th>}\r\n                        <th>Interval</th>\r\n                        {notes && <th>Pitch</th>}\r\n                        <th>Ratio</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {intervals.map((ivl, i) => {\r\n                        const note = notes && notes[i];\r\n                        return (\r\n                            <tr key={ivl.id}>\r\n                                <NoteCell note={note} key={i} i={i} />\r\n                                <IntervalCell interval={ivl} key={i} isFeatured={!note} />\r\n                                <PitchCell note={note} key={i} />\r\n                                <RatioCell interval={ivl} key={i} />\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n            <table className=\"desktop\">\r\n                <tbody>\r\n                    {notes && <tr>\r\n                        <th>Note</th>\r\n                        {notes.map((note, i) => <NoteCell note={note} key={i} i={i} />)}\r\n                    </tr>}\r\n                    <tr>\r\n                        <th>Interval</th>\r\n                        {intervals.map((ivl, i) => <IntervalCell interval={ivl} key={i} isFeatured={!notes} />)}\r\n                    </tr>\r\n                    {notes && <tr>\r\n                        <th>Pitch</th>\r\n                        {notes.map((note, i) => <PitchCell note={note} key={i} />)}\r\n                    </tr>}\r\n                    <tr>\r\n                        <th>Ratio</th>\r\n                        {intervals.map((ivl, i) => <RatioCell interval={ivl} key={i} />)}\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </StyledDetailsCard >\r\n    );\r\n};\r\n\r\nexport default DetailsCard;\r\n","import React, { useState } from \"react\";\r\nimport styled from 'styled-components';\r\nimport Fretboard from \"../../../viewers/fretboard/Fretboard\";\r\nimport { FRETBOARD_TUNING_VALUES, TuningId } from \"../../../viewers/fretboard/Fretboard.tuning\";\r\nimport { getFretboardProps } from \"../../../viewers/fretboard/Fretboard.utils\";\r\nimport { VoicingId, VOICING_PRESETS } from \"../../../viewers/fretboard/Fretboard.voicing\";\r\nimport DropdownInput from \"../../_shared/inputs/DropdownInput\";\r\nimport Card from \"../../_shared/ui/Card\";\r\nimport InputRow from \"../../_shared/ui/InputRow\";\r\n\r\nconst StyledGuitarCard = styled.div`\r\n    \r\n`;\r\n\r\nconst VOICING_OPTIONS = [\r\n    {\r\n        id: VoicingId.None,\r\n        name: '---',\r\n        value: undefined\r\n    },\r\n    ...VOICING_PRESETS\r\n]\r\n\r\nconst GuitarCard: React.FC<any> = ({ model }) => {\r\n\r\n    if (!model.root || !model.intervals) return null;\r\n\r\n    const [voicing, setVoicing] = useState(VOICING_OPTIONS[0]);\r\n    const [tuning, setTuning] = useState(FRETBOARD_TUNING_VALUES[0]);\r\n\r\n    const fretboardProps = getFretboardProps(\r\n        model,\r\n        voicing.id === VoicingId.None ? undefined : voicing,\r\n        tuning\r\n    );\r\n\r\n    return (\r\n        <Card title=\"Guitar\">\r\n            <StyledGuitarCard>\r\n                <Fretboard {...fretboardProps} />\r\n                <InputRow label=\"Tuning\">\r\n                    <DropdownInput value={tuning} setValue={setTuning} options={FRETBOARD_TUNING_VALUES} />\r\n                </InputRow>\r\n                {tuning.id === TuningId.Standard &&\r\n                    <InputRow label=\"Voicing\">\r\n                        <DropdownInput value={voicing} setValue={setVoicing} options={VOICING_OPTIONS} />\r\n                    </InputRow>\r\n                }\r\n            </StyledGuitarCard>\r\n        </Card >\r\n    );\r\n};\r\n\r\nexport default GuitarCard;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { useRootSuffix } from \"../../../contexts/PagePropsContext\";\r\nimport { ModelId } from \"../../../core/models/Model.constants\";\r\nimport { CHORD_PRESETS, NOTE_PRESETS, SCALE_PRESETS } from \"../../../core/models/Model.presets\";\r\nimport CollectionTable from \"../../collection/CollectionTable\";\r\nimport Card from \"../../_shared/ui/Card\";\r\n\r\nconst StyledRelated = styled.div`\r\n    overflow-x: auto;\r\n`;\r\n\r\n\r\nconst RelatedCard: React.FC<any> = ({ model }) => {\r\n\r\n    const rootSuffix = useRootSuffix();\r\n\r\n    const subchords = model.getSubchords();\r\n    const subscales = model.getSubscales();\r\n    const superchords = model.getSuperchords();\r\n    const superscales = model.getSuperscales();\r\n\r\n    const semitones = model.intervals.map(ivl => ivl.pod[0] + 1);\r\n\r\n    return (\r\n        <>\r\n            {false && <Card title=\"Other Roots\">\r\n                <StyledRelated>\r\n                    <ul>\r\n                        {NOTE_PRESETS.map(s => (\r\n                            <li key={s.id}><Link to={`/browse/chords/${model.id}/${s.id}/${rootSuffix}`}>{s.name} {/*model.name*/}</Link></li>\r\n                        ))}\r\n                    </ul>\r\n                </StyledRelated>\r\n            </Card>}\r\n\r\n            {subchords.length > 0 &&\r\n                <Card title=\"Child Chords\">\r\n                    <StyledRelated>\r\n                        <CollectionTable data={subchords} semitones={semitones} />\r\n                    </StyledRelated>\r\n                </Card>\r\n            }\r\n            {superchords.length > 0 &&\r\n                <Card title=\"Parent Chords\">\r\n                    <StyledRelated>\r\n                        <CollectionTable data={superchords} semitones={semitones} />\r\n                    </StyledRelated>\r\n                </Card>\r\n            }\r\n            {subscales.length > 0 &&\r\n                <Card title=\"Child Scales\">\r\n                    <StyledRelated>\r\n                        <CollectionTable data={subscales} semitones={semitones} />\r\n                    </StyledRelated>\r\n                </Card>\r\n            }\r\n            {superscales.length > 0 &&\r\n                <Card title=\"Parent Scales\">\r\n                    <StyledRelated>\r\n                        <CollectionTable data={superscales} semitones={semitones} />\r\n                    </StyledRelated>\r\n                </Card>\r\n            }\r\n            {model.modelId === ModelId.Chord &&\r\n                <Card title=\"Other Chords\">\r\n                    <StyledRelated>\r\n                        <CollectionTable data={CHORD_PRESETS} semitones={semitones} />\r\n                    </StyledRelated>\r\n                </Card>\r\n            }\r\n            {model.modelId === ModelId.Scale &&\r\n                <Card title=\"Other Scales\">\r\n                    <StyledRelated>\r\n                        <CollectionTable data={SCALE_PRESETS} semitones={semitones} />\r\n                    </StyledRelated>\r\n                </Card>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RelatedCard;\r\n","import { navigate } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport styled from 'styled-components';\r\nimport { usePageProps, useRoot } from \"../../../contexts/PagePropsContext\";\r\nimport { NOTE_PRESETS } from \"../../../core/models/Model.presets\";\r\nimport { octaveState } from \"../../../state/state\";\r\nimport InputRow from \"../../_shared/ui/InputRow\";\r\nimport DropdownInput from \"../inputs/DropdownInput\";\r\nimport Card, { StyledCard } from \"../ui/Card\";\r\n\r\nconst StyledRoot = styled.div`\r\n    margin-top: 16px;\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    gap: 16px;\r\n\r\n    select {\r\n        width: 100%;\r\n    }\r\n\r\n    @media(min-width: 512px) {\r\n        grid-template-columns: 1fr 1fr;\r\n        select {\r\n            width: 128px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst NOTE_OPTIONS = [\r\n    {\r\n        id: 'unselected',\r\n        name: '---'\r\n    },\r\n    ...NOTE_PRESETS\r\n];\r\n\r\nconst OCTAVE_OPTIONS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map((x, i) => ({ id: i + 1, name: i + 1 }))\r\n\r\nconst RootCard: React.FC<any> = () => {\r\n    const root = useRoot();\r\n    const pageProps = usePageProps();\r\n    const [octave, setOctave] = useRecoilState(octaveState);\r\n\r\n    const selectedRoot = root ? root : { id: 'unselected' };\r\n\r\n    const onChangeRoot = note => {\r\n        console.log(pageProps);\r\n\r\n        const rootIndex = pageProps.path.lastIndexOf('root');\r\n        const sanitized = rootIndex === -1 ?\r\n            pageProps.path :\r\n            pageProps.path.slice(0, rootIndex);\r\n\r\n        if (note.id === 'unselected') {\r\n            navigate(sanitized);\r\n        }\r\n        else {\r\n            navigate(`${sanitized}root/${note.id}`);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card title=\"Root\">\r\n            <StyledRoot>\r\n                <InputRow label=\"Spelling\">\r\n                    <DropdownInput options={NOTE_OPTIONS} value={selectedRoot} setValue={onChangeRoot} />\r\n                </InputRow>\r\n                <InputRow label=\"Octave\">\r\n                    <DropdownInput options={OCTAVE_OPTIONS} value={{ id: octave }} setValue={o => setOctave(o.id)} />\r\n                </InputRow>\r\n            </StyledRoot>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default RootCard;\r\n","import Model from \"@pw-core/models/Model\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport ButtonInput from \"../../_shared/inputs/ButtonInput\";\r\nimport Card from \"../../_shared/ui/Card\";\r\nimport Icon from \"../../_shared/ui/Icon\";\r\n\r\nconst StyledSoundCard = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    button {\r\n        padding: 8px 32px;\r\n    }\r\n`;\r\n\r\n\r\nconst SoundCard: React.FC<any> = () => {\r\n    return null;\r\n\r\n    const intervals = null;\r\n\r\n    return (\r\n        <Card title=\"Sound\">\r\n            <StyledSoundCard>\r\n                <ButtonInput onClick={() => Model.playSoundList(intervals.value)}><Icon iconId=\"speaker\" size={32} color=\"white\" /></ButtonInput >\r\n            </StyledSoundCard>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default SoundCard;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledDoublePane = styled.div`\r\n\tdisplay: grid;\r\n\tgap: 16px;\r\n\tgrid-template-columns: 1fr;\r\n\t@media(min-width: 512px) {\r\n\t\tgrid-template-columns: 3fr 2fr;\r\n\t}\r\n`\r\n\r\nexport const StyledPane = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: 16px;\r\n\tmargin: 16px 0;\r\n`\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { useRoot, useRootSuffix } from \"../../contexts/PagePropsContext\";\r\nimport Chord from \"../../core/models/Chord\";\r\nimport { IModelConfig, ModelId } from \"../../core/models/Model.constants\";\r\nimport Scale from \"../../core/models/Scale\";\r\n\r\nconst StyledCollectionTable = styled.table`\r\n    width: 100%;\r\n    margin: auto;\r\n    border-collapse: collapse;\r\n    white-space: nowrap;\r\n\r\n    td, th {\r\n        line-height: 32px;\r\n        \r\n        &:not(:first-child) {\r\n            text-align: center;\r\n            width: 32px;\r\n            height: 32px;\r\n        }\r\n\r\n        &:first-child {\r\n            text-align: left;\r\n            padding: 0 8px;\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    td {\r\n        //border-right: 1px solid ${props => props.theme.utils.border};\r\n        //border-bottom: 1px solid ${props => props.theme.utils.border};\r\n        &.active {\r\n            background-color: ${props => props.theme.surface.bg};\r\n        }\r\n    }\r\n\r\n    thead {\r\n        tr th {\r\n            background-color: ${props => props.theme.surface.nav};\r\n            color: ${({ theme }) => theme.text.inverted};\r\n        }\r\n        th:first-child {\r\n            border-radius: 8px 0 0 8px;\r\n        }\r\n        th:last-child {\r\n            border-radius: 0 8px 8px 0;\r\n        }\r\n    }\r\n\r\n    tbody {\r\n        tr {\r\n            &:hover {\r\n                background-color: ${({ theme }) => theme.utils.hoverDark};\r\n            }\r\n        }\r\n    }\r\n\r\n    a {\r\n        display: block;\r\n    }\r\n`;\r\n\r\nexport interface ICollectionTableProps {\r\n    data: IModelConfig[];\r\n    semitones?: number[];\r\n}\r\n\r\nconst SEMITONES = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\r\n\r\nconst CollectionTable: React.FC<ICollectionTableProps> = ({ data, semitones = [] }) => {\r\n    const rootSuffix = useRootSuffix();\r\n    const root = useRoot();\r\n    return (\r\n        <StyledCollectionTable>\r\n            <thead>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    {SEMITONES.map((h, i) => <th key={i}>{h}</th>)}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    data.map(d => {\r\n                        const cl = d.modelId === ModelId.Chord ? Chord : Scale;\r\n                        const model = new cl(d.id, { root });\r\n\r\n                        return (\r\n                            <tr>\r\n                                <td>\r\n                                    <Link to={`/browse/${model.modelId}/${model.id}/${rootSuffix}`}>\r\n                                        {model.getShortName()}\r\n                                    </Link>\r\n                                </td>\r\n                                {SEMITONES.map((h, i) => {\r\n                                    const index = model.intervals.findIndex(ivl => ivl.pod[0] + 1 === h);\r\n                                    const className = semitones.includes(h) ? 'active' : '';\r\n                                    if (index < 0) return <td key={i} className={className} />;\r\n                                    const mod = root ? model.notes[index] : model.intervals[index];\r\n                                    return (\r\n                                        <td key={i} className={className}>\r\n                                            {mod.getName()}\r\n                                        </td>\r\n                                    );\r\n                                })}\r\n                            </tr>\r\n                        );\r\n                    })\r\n                }\r\n            </tbody>\r\n        </StyledCollectionTable>\r\n    );\r\n};\r\n\r\nexport default CollectionTable;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { useRootSuffix } from \"../../../contexts/PagePropsContext\";\r\nimport { ScaleTag } from \"../../../core/models/Model.constants\";\r\nimport { SCALE_PRESETS } from \"../../../core/models/Model.presets\";\r\nimport Card from \"../../_shared/ui/Card\";\r\n\r\nconst StyledModeCard = styled.div`\r\n    ul {\r\n        display: flex;\r\n        justify-content: space-around;\r\n        gap: 4px;\r\n        flex-wrap: wrap;\r\n        a {\r\n            padding: 4px;\r\n            &.active {\r\n                font-weight: bold;\r\n                text-decoration: underline;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst ModeCard: React.FC<any> = ({ model }) => {\r\n\r\n    const rootSuffix = useRootSuffix();\r\n\r\n    const type = model.tags.find(t =>\r\n        t === ScaleTag.Diatonic ||\r\n        t === ScaleTag.Pentatonic ||\r\n        t === ScaleTag.MelodicMode ||\r\n        t === ScaleTag.HarmonicMode\r\n    );\r\n\r\n    if (!type) return null;\r\n\r\n    let modeType = '';\r\n    switch (type) {\r\n        case ScaleTag.Diatonic:\r\n            modeType = 'Diatonic';\r\n            break;\r\n        case ScaleTag.Pentatonic:\r\n            modeType = 'Pentatonic';\r\n            break;\r\n        case ScaleTag.MelodicMode:\r\n            modeType = 'Melodic Minor';\r\n            break;\r\n        case ScaleTag.HarmonicMode:\r\n            modeType = 'Harmonic Minor';\r\n            break;\r\n    }\r\n\r\n    const modes = SCALE_PRESETS.filter(p => p.tags.includes(type));\r\n\r\n    return (\r\n        <Card\r\n            title={`${modeType} Modes`}\r\n        >\r\n            <StyledModeCard>\r\n                <ul>\r\n                    {modes.map(n => (\r\n                        <li key={n.id}>\r\n                            <Link to={`/browse/${n.modelId}/${n.id}/${rootSuffix}`} className={model.id === n.id ? 'active' : ''}>{n.name}</Link>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </StyledModeCard>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ModeCard;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport Card from \"../../_shared/ui/Card\";\r\n\r\nconst StyledRomanNumeralsCard = styled.div`\r\n    table {\r\n        border-collapse: collapse;\r\n        width: 100%;\r\n\r\n        th {\r\n            //color: ${props => props.theme.brand.accent};\r\n            &:first-child {\r\n                text-align: right;\r\n            }\r\n            padding: 4px;\r\n        }\r\n        \r\n        td {\r\n            padding: 4px;\r\n            text-align: center;\r\n        }\r\n\r\n        .numeral td {\r\n            font-size: 160%;\r\n            font-family: serif;\r\n        }\r\n    }\r\n`;\r\n\r\nconst RomanNumeralsCard: React.FC<any> = ({ model }) => {\r\n\r\n    const numerals = model.getAllNumerals();\r\n\r\n    if (!numerals.length) return null;\r\n\r\n    return (\r\n        <Card\r\n            title=\"Roman Numerals\"\r\n        >\r\n            <StyledRomanNumeralsCard>\r\n                <table>\r\n                    <tbody>\r\n                        <tr className=\"numeral\">\r\n                            <th>Numeral</th>\r\n                            {numerals.map((n, i) => (\r\n                                <td key={i}>\r\n                                    {n.getNumeral(i + 1)}\r\n                                </td>\r\n                            ))}\r\n                        </tr>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            {numerals.map((n, i) => (\r\n                                <td key={i}>\r\n                                    <Link to={`/browse/${n.modelId}/${n.id}/${n.root ? `root/${n.root.id}` : ''}`}>{n.getShortName()}</Link>\r\n                                </td>\r\n                            ))}\r\n                        </tr>\r\n                    </tbody>\r\n                    <tfoot>\r\n                        <tr>\r\n                            <th >Degree</th>\r\n                            {numerals.map((n, i) => (\r\n                                <th key={i}>\r\n                                    {i + 1}\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n            </StyledRomanNumeralsCard>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default RomanNumeralsCard;\r\n","import Scale from \"@pw-core/models/Scale\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { useRoot } from \"../../contexts/PagePropsContext\";\r\nimport BreadcrumbList from \"../_shared/breadcrumb-list/BreadcrumbList\";\r\nimport DetailsCard from \"../_shared/cards/DetailsCard\";\r\nimport GuitarCard from \"../_shared/cards/GuitarCard\";\r\nimport ModeCard from \"../_shared/cards/ModeCard\";\r\nimport RelatedCard from \"../_shared/cards/RelatedCard\";\r\nimport RomanNumeralsCard from \"../_shared/cards/RomanNumeralsCard\";\r\nimport RootCard from \"../_shared/cards/RootCard\";\r\nimport SoundCard from \"../_shared/cards/SoundCard\";\r\nimport { StyledPageBody } from \"../_shared/layout/PageBody\";\r\nimport PageTitle from \"../_shared/layout/PageTitle\";\r\nimport { StyledPane } from \"../_shared/layout/Pane\";\r\n\r\nconst StyledScalePage = styled(StyledPageBody)`\r\n   \r\n`;\r\n\r\n\r\nconst ScalePage: React.FC<any> = props => {\r\n\r\n    const root = useRoot();\r\n    const scale = new Scale(props.pageContext.modelId, { root });\r\n\r\n    return (\r\n        <StyledScalePage>\r\n            <BreadcrumbList path={props.path} />\r\n            <PageTitle title={scale.name} subtitle=\"Scale\" />\r\n            <StyledPane>\r\n                <DetailsCard model={scale} />\r\n                <RootCard />\r\n                <RomanNumeralsCard model={scale} />\r\n                <ModeCard model={scale} />\r\n                <GuitarCard model={scale} />\r\n                <RelatedCard model={scale} />\r\n                <SoundCard model={scale} />\r\n            </StyledPane>\r\n        </StyledScalePage >\r\n    );\r\n};\r\n\r\nexport default ScalePage;\r\n"],"names":["StyledBreadcrumbList","styled","pieces","path","split","slice","length","filter","p","includes","paths","reduce","prev","cur","i","arr","replace","push","key","iconId","size","color","to","replaceAll","StyledDetailsCard","StyledCard","props","theme","text","secondary","NoteCell","note","className","name","getOctave","IntervalCell","interval","isFeatured","getName","PitchCell","getFrequency","RatioCell","getRatio","model","intervals","octave","useRecoilValue","octaveState","notes","map","n","Note","NumberUtils","pod","$n","ivl","id","StyledGuitarCard","VOICING_OPTIONS","VoicingId","value","undefined","VOICING_PRESETS","root","useState","voicing","setVoicing","FRETBOARD_TUNING_VALUES","tuning","setTuning","fretboardProps","getFretboardProps","title","label","setValue","options","TuningId","StyledRelated","subchords","useRootSuffix","getSubchords","subscales","getSubscales","superchords","getSuperchords","superscales","getSuperscales","semitones","data","modelId","ModelId","CHORD_PRESETS","SCALE_PRESETS","StyledRoot","NOTE_OPTIONS","NOTE_PRESETS","OCTAVE_OPTIONS","x","useRoot","pageProps","usePageProps","useRecoilState","setOctave","selectedRoot","console","log","rootIndex","lastIndexOf","sanitized","navigate","o","StyledDoublePane","StyledPane","StyledCollectionTable","surface","bg","nav","inverted","utils","hoverDark","SEMITONES","rootSuffix","h","d","Chord","Scale","getShortName","index","findIndex","mod","StyledModeCard","type","tags","find","t","ScaleTag","modeType","modes","Card","StyledRomanNumeralsCard","numerals","getAllNumerals","getNumeral","StyledScalePage","StyledPageBody","scale","pageContext","BreadcrumbList","PageTitle","subtitle","DetailsCard","RootCard","GuitarCard","RelatedCard","SoundCard"],"sourceRoot":""}