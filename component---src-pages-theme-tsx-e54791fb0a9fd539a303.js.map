{"version":3,"file":"component---src-pages-theme-tsx-e54791fb0a9fd539a303.js","mappings":"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","sources":["webpack://play-what/./src/components/_shared/layout/PageBody.tsx","webpack://play-what/./src/components/_shared/layout/PageTitle.tsx","webpack://play-what/./src/components/_shared/ui/Card.tsx","webpack://play-what/./src/pages/theme.tsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const StyledPageBody = styled.div`\r\n\twidth: 100%;\r\n\t//max-width: 1920px;\r\n\tmax-width: 1024px;\r\n\tmin-height: calc(100vh - 96px);\r\n    \r\n\tmargin: auto;\r\n\tpadding: 16px;\r\n`\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledPageTitle = styled.div`\r\n    width: 100%;\r\n\r\n    .header {\r\n        border-bottom: 1px solid ${({ theme }) => theme.utils.border};    \r\n        padding-bottom: 16px;\r\n        width: 100%;\r\n        margin: auto;\r\n\r\n        > h1 {\r\n            width: 100%;\r\n            font-size: 300%;\r\n            text-align: left;\r\n            color: ${({ theme }) => theme.text.primary};;\r\n        }\r\n\r\n        > h2 {\r\n            margin-top: 8px;\r\n            width: 100%;\r\n            text-align: left;\r\n            color: ${({ theme }) => theme.text.secondary};;\r\n            font-size: 100%;\r\n        }\r\n    }\r\n`\r\n\r\nconst PageTitle: React.FC<any> = ({ title, subtitle, children }) => {\r\n    return (\r\n        <StyledPageTitle>\r\n            <div className=\"header\">\r\n                <h1>{title}</h1>\r\n                <h2>{subtitle}</h2>\r\n            </div>\r\n            {children}\r\n        </StyledPageTitle>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledCard = styled.div`\r\n    background: ${props => props.theme.surface.card};\r\n    width: 100%;\r\n    border-radius: 16px;\r\n    padding: 16px;\r\n\r\n    .header {\r\n        margin-bottom: 16px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n    }\r\n`;\r\n\r\nconst Card: React.FC<any> = ({ title, action, children, ...rest }) => {\r\n    return (\r\n        <StyledCard {...rest}>\r\n            {title &&\r\n                <div className=\"header\">\r\n                    <h2>{title}</h2>\r\n                    {action}\r\n                </div>\r\n            }\r\n            {children}\r\n        </StyledCard >\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport styled, { useTheme } from 'styled-components';\r\nimport ButtonInput from \"../components/_shared/inputs/ButtonInput\";\r\nimport { StyledPageBody } from \"../components/_shared/layout/PageBody\";\r\nimport PageTitle from \"../components/_shared/layout/PageTitle\";\r\nimport Card, { StyledCard } from \"../components/_shared/ui/Card\";\r\nimport { themeState } from \"../state/state\";\r\nimport THEME, { DARK_THEME } from \"../styles/theme\";\r\nimport { useSetTheme } from \"../styles/ThemeManager\";\r\n\r\nconst StyledThemePage = styled(StyledPageBody)`\r\n    max-width: 1024px;\r\n    .grid {\r\n        margin-top: 16px;\r\n        display: grid;\r\n        gap: 16px;\r\n        grid-template-columns: 1fr;\r\n        @media(min-width: 512px) {\r\n            grid-template-columns: 1fr 1fr;\r\n        }\r\n    }\r\n\r\n    .theme-btns {\r\n        font-weight: bold;\r\n        margin-top: 16px;\r\n        display: grid;\r\n        gap: 16px;\r\n        grid-template-columns: 1fr;\r\n        @media(min-width: 512px) {\r\n            grid-template-columns: 1fr 1fr;\r\n        }\r\n\r\n        button {\r\n            width: 100%;\r\n        }\r\n    }\r\n\r\n    ${StyledCard} {\r\n        margin: 16px 0;\r\n    }\r\n\r\n    .row {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 16px;\r\n        margin-bottom: 16px;\r\n        //justify-content: space-between;\r\n        .text {\r\n            display: flex;\r\n            flex-direction: column;\r\n            gap: 4px;\r\n            label {\r\n                font-weight: bold;\r\n                font-size: 120%;\r\n            }\r\n            li {\r\n                list-style-type: disc;\r\n                margin-left: 16px;\r\n                font-style: italic;\r\n            }\r\n            span {\r\n                color: ${props => props.theme.text.secondary};\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst Swatch = styled.input`\r\n    appearance: none;\r\n\tborder: none;\r\n    cursor: pointer;\r\n    height: 64px;\r\n    width: 64px;\r\n    border: 1px solid black;\r\n    background-color: ${props => props.$color};\r\n`;\r\n\r\nconst SwatchSelector: React.FC<any> = ({ type, attr, title }) => {\r\n    const setTheme = useSetTheme();\r\n    const theme = useTheme();\r\n    let color;\r\n    if (type) {\r\n        color = theme[type][attr];\r\n    }\r\n    else {\r\n        color = theme[attr];\r\n    }\r\n    return (\r\n        <div className=\"row\">\r\n            <Swatch\r\n                type=\"color\"\r\n                $color={color}\r\n                value={color}\r\n                onChange={e => setTheme(e.target.value, attr, type)}\r\n            />\r\n            <div className=\"text\">\r\n                <label>{title}</label>\r\n                <span>{color}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ThemePage: React.FC<any> = () => {\r\n    const setTheme = useSetRecoilState(themeState);\r\n    return (\r\n        <StyledThemePage>\r\n            <PageTitle title=\"Theme\" />\r\n            <Card title=\"Reset Theme\">\r\n                <div className=\"theme-btns\">\r\n                    <ButtonInput onClick={() => setTheme(THEME)} >Light</ButtonInput>\r\n                    <ButtonInput onClick={() => setTheme(DARK_THEME)} >Dark</ButtonInput>\r\n                </div>\r\n            </Card>\r\n            <div className=\"grid\">\r\n                <div>\r\n                    <Card title=\"Brand\">\r\n                        <SwatchSelector title=\"Primary\" type=\"brand\" attr=\"primary\" />\r\n                        <SwatchSelector title=\"Secondary\" type=\"brand\" attr=\"secondary\" />\r\n                        <SwatchSelector title=\"Accent\" type=\"brand\" attr=\"accent\" />\r\n                    </Card>\r\n\r\n                    <Card title=\"Action\">\r\n                        <SwatchSelector title=\"Active\" type=\"action\" attr=\"active\" />\r\n                        <SwatchSelector title=\"Interactive\" type=\"action\" attr=\"interactive\" />\r\n                    </Card>\r\n\r\n                    <Card title=\"Status\">\r\n                        <SwatchSelector title=\"Positive\" type=\"status\" attr=\"positive\" />\r\n                        <SwatchSelector title=\"Negative\" type=\"status\" attr=\"negative\" />\r\n                        <SwatchSelector title=\"Warning\" type=\"status\" attr=\"warning\" />\r\n                        <SwatchSelector title=\"Info\" type=\"status\" attr=\"info\" />\r\n                        <SwatchSelector title=\"Highlight\" type=\"status\" attr=\"highlight\" />\r\n                    </Card>\r\n                    {/*<Card title=\"Palette\">\r\n                        <SwatchSelector title=\"Dark Blue\" attr=\"darkBlue\" />\r\n                        <SwatchSelector title=\"Light Blue\" attr=\"lightBlue\" />\r\n                        <SwatchSelector title=\"Green\" attr=\"green\" />\r\n                        <SwatchSelector title=\"Orange\" attr=\"orange\" />\r\n                        <SwatchSelector title=\"Red\" attr=\"red\" />\r\n                        <SwatchSelector title=\"Ivory\" attr=\"ivory\" />\r\n                    </Card>\r\n                    <Card title=\"Neutral\">\r\n                        <SwatchSelector title=\"White\" attr=\"white\" />\r\n                        <SwatchSelector title=\"Light 1\" attr=\"light1\" />\r\n                        <SwatchSelector title=\"Light 2\" attr=\"light2\" />\r\n                        <SwatchSelector title=\"Light 3\" attr=\"light3\" />\r\n                        <SwatchSelector title=\"Medium 1\" attr=\"medium1\" />\r\n                        <SwatchSelector title=\"Medium 2\" attr=\"medium2\" />\r\n                        <SwatchSelector title=\"Medium 3\" attr=\"medium3\" />\r\n                        <SwatchSelector title=\"Dark 1\" attr=\"dark1\" />\r\n                        <SwatchSelector title=\"Dark 2\" attr=\"dark2\" />\r\n                        <SwatchSelector title=\"Dark 3\" attr=\"dark3\" />\r\n                        <SwatchSelector title=\"Black\" attr=\"black\" />\r\n                    </Card>*/}\r\n                </div>\r\n                <div>\r\n                    <Card title=\"Surface\">\r\n                        <SwatchSelector title=\"Navigation\" type=\"surface\" attr=\"nav\" />\r\n                        <SwatchSelector title=\"Background\" type=\"surface\" attr=\"bg\" />\r\n                        <SwatchSelector title=\"Card\" type=\"surface\" attr=\"card\" />\r\n                    </Card>\r\n\r\n                    <Card title=\"Text\">\r\n                        <SwatchSelector title=\"Primary\" type=\"text\" attr=\"primary\" />\r\n                        <SwatchSelector title=\"Secondary\" type=\"text\" attr=\"secondary\" />\r\n                        <SwatchSelector title=\"Inverted\" type=\"text\" attr=\"inverted\" />\r\n                    </Card>\r\n\r\n                    <Card title=\"Utility\">\r\n                        <SwatchSelector title=\"Border\" type=\"utils\" attr=\"border\" />\r\n                        <SwatchSelector title=\"Hover Dark\" type=\"utils\" attr=\"hoverDark\" />\r\n                        <SwatchSelector title=\"Hover Light\" type=\"utils\" attr=\"hoverLight\" />\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        </StyledThemePage>\r\n    );\r\n};\r\n\r\nexport default ThemePage;\r\n"],"names":["StyledPageBody","styled","StyledPageTitle","theme","utils","border","text","primary","secondary","title","subtitle","children","className","StyledCard","props","surface","card","action","rest","StyledThemePage","Swatch","$color","SwatchSelector","color","type","attr","setTheme","useSetTheme","useTheme","value","onChange","e","target","useSetRecoilState","themeState","onClick","THEME","DARK_THEME"],"sourceRoot":""}