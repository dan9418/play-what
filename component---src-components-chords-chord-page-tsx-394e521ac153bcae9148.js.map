{"version":3,"file":"component---src-components-chords-chord-page-tsx-394e521ac153bcae9148.js","mappings":"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","sources":["webpack://play-what/./src/components/_shared/breadcrumb-list/BreadcrumbList.tsx","webpack://play-what/./src/components/_shared/cards/RootCard.tsx","webpack://play-what/./src/components/_shared/cards/DetailsCard.tsx","webpack://play-what/./src/components/_shared/cards/GuitarCard.tsx","webpack://play-what/./src/components/_shared/cards/RelatedCard.tsx","webpack://play-what/./src/components/_shared/cards/SoundCard.tsx","webpack://play-what/./src/components/_shared/layout/Pane.tsx","webpack://play-what/./src/components/chords/ChordPage.tsx"],"sourcesContent":["import { Link } from \"gatsby\";\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport Icon from \"../ui/Icon\";\r\n\r\nconst StyledBreadcrumbList = styled.ul`\r\n    font-size: 110%;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    gap: 8px;\r\n    padding: 0 0 16px 0;\r\n    white-space: nowrap;\r\n    text-transform: capitalize;\r\n    svg {\r\n        margin-right: 8px;\r\n    }\r\n`\r\n\r\nconst BreadcrumbList = ({ path }) => {\r\n    let pieces = path.split('/');\r\n    pieces = pieces.slice(0, pieces.length - 1).filter(p => !['root'].includes(p));\r\n    const paths = [];\r\n    pieces.reduce((prev, cur, i, arr) => {\r\n        const path = `${prev}/${cur}`.replace('//', '/');\r\n        paths.push(\r\n            <li key={i}>\r\n                {i > 0 && <Icon iconId=\"next\" size={10} color=\"grey\" />}\r\n                <Link to={path || '/'}>{i === 0 ? 'Home' : cur.replaceAll('-', ' ')}</Link>\r\n            </li>\r\n        );\r\n        return path;\r\n    }, '/');\r\n    return <StyledBreadcrumbList>{paths}</StyledBreadcrumbList>;\r\n}\r\n\r\nexport default BreadcrumbList;\r\n","import { navigate } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport styled from 'styled-components';\r\nimport { usePageProps, useRoot } from \"../../../contexts/PagePropsContext\";\r\nimport { NOTE_PRESETS } from \"../../../core/models/Model.presets\";\r\nimport { octaveState } from \"../../../state/state\";\r\nimport InputRow from \"../../_shared/ui/InputRow\";\r\nimport DropdownInput from \"../inputs/DropdownInput\";\r\n\r\nconst StyledRoot = styled.div`\r\n    margin-top: 16px;\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    gap: 16px;\r\n    @media(min-width: 512px) {\r\n        grid-template-columns: 1fr 1fr;\r\n    }\r\n`;\r\n\r\nconst NOTE_OPTIONS = [\r\n    {\r\n        id: 'unselected',\r\n        name: '---'\r\n    },\r\n    ...NOTE_PRESETS\r\n];\r\n\r\nconst OCTAVE_OPTIONS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map((x, i) => ({ id: i + 1, name: i + 1 }))\r\n\r\nconst RootCard: React.FC<any> = () => {\r\n    const root = useRoot();\r\n    const pageProps = usePageProps();\r\n    const [octave, setOctave] = useRecoilState(octaveState);\r\n\r\n    const selectedRoot = root ? root : { id: 'unselected' };\r\n\r\n    const onChangeRoot = note => {\r\n        console.log(pageProps);\r\n\r\n        const rootIndex = pageProps.path.lastIndexOf('root');\r\n        const sanitized = rootIndex === -1 ?\r\n            pageProps.path :\r\n            pageProps.path.slice(0, rootIndex);\r\n\r\n        if (note.id === 'unselected') {\r\n            navigate(sanitized);\r\n        }\r\n        else {\r\n            navigate(`${sanitized}root/${note.id}`);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <StyledRoot>\r\n            <InputRow label=\"Root\">\r\n                <DropdownInput options={NOTE_OPTIONS} value={selectedRoot} setValue={onChangeRoot} />\r\n            </InputRow>\r\n            <InputRow label=\"Octave\">\r\n                <DropdownInput options={OCTAVE_OPTIONS} value={{ id: octave }} setValue={o => setOctave(o.id)} />\r\n            </InputRow>\r\n        </StyledRoot>\r\n    );\r\n};\r\n\r\nexport default RootCard;\r\n","import React from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport styled from 'styled-components';\r\nimport NumberUtils from \"../../../core/general/Number.utils\";\r\nimport Note from \"../../../core/models/Note\";\r\nimport { octaveState } from \"../../../state/state\";\r\nimport { StyledCard } from \"../ui/Card\";\r\nimport RootCard from \"./RootCard\";\r\n\r\nconst StyledDetailsCard = styled(StyledCard)`\r\n    ul {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n\r\n        flex-direction: column;\r\n        @media(min-width: 512px) {\r\n            flex-direction: row;\r\n        }\r\n\r\n        .box {\r\n            padding: 8px 16px;\r\n            text-align: center;\r\n            font-size: 140%;\r\n            .featured {\r\n                font-weight: bold;\r\n                @media(min-width: 512px) {\r\n                    font-size: 200%;\r\n                }\r\n            }\r\n            .frequency, .ratio {\r\n                color: ${({ theme }) => theme.text.secondary};\r\n                font-size: 80%;\r\n                padding: 4px;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst DetailsCard: React.FC<any> = ({ model }) => {\r\n    const intervals = model.intervals;\r\n    const notes = model.notes;\r\n    const octave = useRecoilValue(octaveState);\r\n\r\n    if (!intervals && !notes) return null;\r\n\r\n    return (\r\n        <StyledDetailsCard>\r\n            <ul>\r\n                {intervals.map((ivl, i) => {\r\n                    const octaveCorrectNote = notes && new Note([\r\n                        (octave - 4) * 12 + NumberUtils.modulo(notes[i].pod[0], 12),\r\n                        notes[i].pod[1]\r\n                    ]);\r\n                    return (\r\n                        <li key={ivl.id} className={`box`}>\r\n                            {notes && <div className={`note featured`}>{notes[i].name}<sub>{notes[i].getOctave()}</sub></div>}\r\n                            <div className={`interval ${notes ? '' : 'featured'}`}>{ivl.getName()}</div>\r\n                            {notes && <div className={`frequency`}>{octaveCorrectNote.getFrequency(true)}</div>}\r\n                            <div className={`ratio`}>{ivl.getRatio()}</div>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n            <RootCard />\r\n        </StyledDetailsCard>\r\n    );\r\n};\r\n\r\nexport default DetailsCard;\r\n","import React, { useState } from \"react\";\r\nimport styled from 'styled-components';\r\nimport Fretboard from \"../../../viewers/fretboard/Fretboard\";\r\nimport { FRETBOARD_TUNING_VALUES, TuningId } from \"../../../viewers/fretboard/Fretboard.tuning\";\r\nimport { getFretboardProps } from \"../../../viewers/fretboard/Fretboard.utils\";\r\nimport { VoicingId, VOICING_PRESETS } from \"../../../viewers/fretboard/Fretboard.voicing\";\r\nimport DropdownInput from \"../../_shared/inputs/DropdownInput\";\r\nimport Card from \"../../_shared/ui/Card\";\r\nimport InputRow from \"../../_shared/ui/InputRow\";\r\n\r\nconst StyledGuitarCard = styled.div`\r\n    \r\n`;\r\n\r\nconst VOICING_OPTIONS = [\r\n    {\r\n        id: VoicingId.None,\r\n        name: '---',\r\n        value: undefined\r\n    },\r\n    ...VOICING_PRESETS\r\n]\r\n\r\nconst GuitarCard: React.FC<any> = ({ model }) => {\r\n\r\n    if (!model.root || !model.intervals) return null;\r\n\r\n    const [voicing, setVoicing] = useState(VOICING_OPTIONS[0]);\r\n    const [tuning, setTuning] = useState(FRETBOARD_TUNING_VALUES[0]);\r\n\r\n    const fretboardProps = getFretboardProps(\r\n        model,\r\n        voicing.id === VoicingId.None ? undefined : voicing,\r\n        tuning\r\n    );\r\n\r\n    return (\r\n        <Card title=\"Guitar\">\r\n            <StyledGuitarCard>\r\n                <Fretboard {...fretboardProps} />\r\n                <InputRow label=\"Tuning\">\r\n                    <DropdownInput value={tuning} setValue={setTuning} options={FRETBOARD_TUNING_VALUES} />\r\n                </InputRow>\r\n                {tuning.id === TuningId.Standard &&\r\n                    <InputRow label=\"Voicing\">\r\n                        <DropdownInput value={voicing} setValue={setVoicing} options={VOICING_OPTIONS} />\r\n                    </InputRow>\r\n                }\r\n            </StyledGuitarCard>\r\n        </Card >\r\n    );\r\n};\r\n\r\nexport default GuitarCard;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { useRootSuffix } from \"../../../contexts/PagePropsContext\";\r\nimport { NOTE_PRESETS } from \"../../../core/models/Model.presets\";\r\nimport Card from \"../../_shared/ui/Card\";\r\n\r\nconst StyledRelated = styled.div`\r\n    ul {\r\n        display: flex;\r\n        gap: 4px;\r\n        flex-wrap: wrap;\r\n        a {\r\n            padding: 4px;\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nconst RelatedCard: React.FC<any> = ({ model }) => {\r\n\r\n    const rootSuffix = useRootSuffix();\r\n\r\n    const subchords = model.getSubchords();\r\n    const subscales = model.getSubscales();\r\n    const superchords = model.getSuperchords();\r\n    const superscales = model.getSuperscales();\r\n\r\n    return (\r\n        <>\r\n            {false && <Card title=\"Other Roots\">\r\n                <StyledRelated>\r\n                    <ul>\r\n                        {NOTE_PRESETS.map(s => (\r\n                            <li key={s.id}><Link to={`/browse/chords/${model.id}/${s.id}/${rootSuffix}`}>{s.name} {/*model.name*/}</Link></li>\r\n                        ))}\r\n                    </ul>\r\n                </StyledRelated>\r\n            </Card>}\r\n            {subchords.length > 0 &&\r\n                <Card title=\"Child Chords\">\r\n                    <StyledRelated>\r\n                        <ul>\r\n                            {subchords.map(s => (\r\n                                <li key={s.id}><Link to={`/browse/chords/${s.id}/${rootSuffix}`}>{s.name}</Link></li>\r\n                            ))}\r\n                        </ul>\r\n                    </StyledRelated>\r\n                </Card>\r\n            }\r\n            {superchords.length > 0 &&\r\n                <Card title=\"Parent Chords\">\r\n                    <StyledRelated>\r\n                        <ul>\r\n                            {superchords.map(s => (\r\n                                <li key={s.id}><Link to={`/browse/chords/${s.id}/${rootSuffix}`}>{s.name}</Link></li>\r\n                            ))}\r\n                        </ul>\r\n                    </StyledRelated>\r\n                </Card>\r\n            }\r\n            {subscales.length > 0 &&\r\n                <Card title=\"Child Scales\">\r\n                    <StyledRelated>\r\n                        <ul>\r\n                            {subscales.map(s => (\r\n                                <li key={s.id}><Link to={`/browse/scales/${s.id}/${rootSuffix}`}>{s.name}</Link></li>\r\n                            ))}\r\n                        </ul>\r\n                    </StyledRelated>\r\n                </Card>\r\n            }\r\n            {superscales.length > 0 &&\r\n                <Card title=\"Parent Scales\">\r\n                    <StyledRelated>\r\n                        <ul>\r\n                            {superscales.map(s => (\r\n                                <li key={s.id}><Link to={`/browse/scales/${s.id}/${rootSuffix}`}>{s.name}</Link></li>\r\n                            ))}\r\n                        </ul>\r\n                    </StyledRelated>\r\n                </Card>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RelatedCard;\r\n","import Model from \"@pw-core/models/Model\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport ButtonInput from \"../../_shared/inputs/ButtonInput\";\r\nimport Card from \"../../_shared/ui/Card\";\r\nimport Icon from \"../../_shared/ui/Icon\";\r\n\r\nconst StyledSoundCard = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    button {\r\n        padding: 8px 32px;\r\n    }\r\n`;\r\n\r\n\r\nconst SoundCard: React.FC<any> = () => {\r\n    return null;\r\n\r\n    const intervals = null;\r\n\r\n    return (\r\n        <Card title=\"Sound\">\r\n            <StyledSoundCard>\r\n                <ButtonInput onClick={() => Model.playSoundList(intervals.value)}><Icon iconId=\"speaker\" size={32} color=\"white\" /></ButtonInput >\r\n            </StyledSoundCard>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default SoundCard;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledDoublePane = styled.div`\r\n\tdisplay: grid;\r\n\tgap: 16px;\r\n\tgrid-template-columns: 1fr;\r\n\t@media(min-width: 512px) {\r\n\t\tgrid-template-columns: 3fr 2fr;\r\n\t}\r\n`\r\n\r\nexport const StyledPane = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: 16px;\r\n\tmargin: 16px 0;\r\n`\r\n","import Chord from \"@pw-core/models/Chord\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { useRoot } from \"../../contexts/PagePropsContext\";\r\nimport Note from \"../../core/models/Note\";\r\nimport { useRootParam } from \"../../state/state\";\r\nimport BreadcrumbList from \"../_shared/breadcrumb-list/BreadcrumbList\";\r\nimport DetailsCard from \"../_shared/cards/DetailsCard\";\r\nimport GuitarCard from \"../_shared/cards/GuitarCard\";\r\nimport RelatedCard from \"../_shared/cards/RelatedCard\";\r\nimport SoundCard from \"../_shared/cards/SoundCard\";\r\nimport { StyledPageBody } from \"../_shared/layout/PageBody\";\r\nimport PageTitle from \"../_shared/layout/PageTitle\";\r\nimport { StyledPane } from \"../_shared/layout/Pane\";\r\n\r\nconst StyledChordPage = styled(StyledPageBody)`\r\n\r\n`;\r\n\r\nconst ChordPage: React.FC<any> = props => {\r\n\r\n    const root = useRoot();\r\n\r\n    const chord = new Chord(props.pageContext.modelId, { root });\r\n\r\n    return (\r\n        <StyledChordPage>\r\n            <BreadcrumbList id={chord.id} name={chord.name} path={props.path} />\r\n            <PageTitle title={chord.name} subtitle=\"Chord\" />\r\n            <StyledPane>\r\n                <DetailsCard model={chord} />\r\n                <GuitarCard model={chord} />\r\n                <RelatedCard model={chord} />\r\n                <SoundCard model={chord} />\r\n            </StyledPane>\r\n        </StyledChordPage >\r\n    );\r\n};\r\n\r\nexport default ChordPage;\r\n"],"names":["StyledBreadcrumbList","styled","pieces","path","split","slice","length","filter","p","includes","paths","reduce","prev","cur","i","arr","replace","push","key","iconId","size","color","to","replaceAll","StyledRoot","NOTE_OPTIONS","id","name","NOTE_PRESETS","OCTAVE_OPTIONS","map","x","root","useRoot","pageProps","usePageProps","useRecoilState","octaveState","octave","setOctave","selectedRoot","InputRow","label","DropdownInput","options","value","setValue","note","console","log","rootIndex","lastIndexOf","sanitized","navigate","o","StyledDetailsCard","StyledCard","theme","text","secondary","model","intervals","notes","useRecoilValue","ivl","octaveCorrectNote","Note","NumberUtils","pod","className","getOctave","getName","getFrequency","getRatio","StyledGuitarCard","VOICING_OPTIONS","VoicingId","undefined","VOICING_PRESETS","useState","voicing","setVoicing","FRETBOARD_TUNING_VALUES","tuning","setTuning","fretboardProps","getFretboardProps","title","TuningId","StyledRelated","rootSuffix","useRootSuffix","subchords","getSubchords","subscales","getSubscales","superchords","getSuperchords","superscales","getSuperscales","s","StyledDoublePane","StyledPane","StyledChordPage","StyledPageBody","props","chord","Chord","pageContext","modelId","subtitle"],"sourceRoot":""}