{"version":3,"file":"component---src-components-pages-dev-index-page-tsx-8e7d6714897bb6234bb4.js","mappings":"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","sources":["webpack://play-what/./src/components/pages/dev/index.page.tsx","webpack://play-what/./src/components/ui/Card.tsx","webpack://play-what/./src/components/ui/List.styles.tsx","webpack://play-what/./src/components/ui/List.tsx"],"sourcesContent":["import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport PageLayout from \"../../layout/PageLayout\";\r\nimport Card from \"../../ui/Card\";\r\nimport { List } from \"../../ui/List\";\r\nimport { LIST_STYLES_1 } from \"../../ui/List.styles\";\r\n\r\nconst StyledDevPage = styled(PageLayout)``;\r\n\r\nconst Page: React.FC<any> = () => {\r\n    return (\r\n        <StyledDevPage title=\"Developer Panel\" subtitle=\"Advanced Users Only\" >\r\n            <Card>\r\n                <List\r\n                    prefix=\"/dev\"\r\n                    styles={LIST_STYLES_1}\r\n                    lists={[\r\n                        {\r\n                            title: 'Tests',\r\n                            items: [\r\n                                {\r\n                                    text: 'All Intervals From All Roots',\r\n                                    link: '/test/all-intervals-from-all-roots'\r\n                                }\r\n                            ]\r\n                        },\r\n                        {\r\n                            title: 'Experimental',\r\n                            items: [\r\n                                {\r\n                                    text: 'Notebook',\r\n                                    link: '/notebook/'\r\n                                },\r\n                                {\r\n                                    text: 'Edit Theme',\r\n                                    link: '/experimental/edit-theme'\r\n                                },\r\n\r\n                            ]\r\n                        }\r\n                    ]}\r\n                />\r\n            </Card>\r\n        </StyledDevPage >\r\n    )\r\n};\r\n\r\nexport default Page;\r\n","import React, { PropsWithChildren } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const StyledCard = styled.div`\r\n  background: ${(props) => props.theme.surface.card};\r\n  width: 100%;\r\n  border-radius: 16px;\r\n  padding: 16px;\r\n\r\n  .header {\r\n    margin-bottom: 16px;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nexport const CardHeader: React.FC<any> = ({\r\n  title,\r\n  level = 2,\r\n  action = null,\r\n}) => {\r\n  const AsTag: any = `h${level}`;\r\n  return (\r\n    <div className=\"header\">\r\n      <AsTag>{title}</AsTag>\r\n      {action}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport interface ICardProps extends PropsWithChildren<any> {\r\n  title?: string;\r\n  subtitle?: string;\r\n  action?: any;\r\n  level?: number;\r\n}\r\n\r\nconst Card: React.FC<ICardProps> = ({\r\n  title,\r\n  subtitle,\r\n  action,\r\n  children,\r\n  level = 1,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <StyledCard {...rest}>\r\n      {title && <CardHeader title={title} action={action} level={level} />}\r\n      {subtitle && <CardHeader title={subtitle} level={level + 1} />}\r\n      {children}\r\n    </StyledCard>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { css } from 'styled-components';\r\n\r\nexport const LIST_STYLES_1 = css`\r\n    li {\r\n        margin-left: 8px;\r\n        &:not(:first-child) {\r\n            margin-top: 4px;\r\n        }\r\n    }\r\n    h1, h2, h3, h4, h5, h6, h7 {\r\n        font-weight: bold;\r\n    }\r\n    section {\r\n        margin-left: 8px;\r\n        &:not(:first-child) {\r\n            margin-top: 24px;\r\n        }\r\n    }\r\n    ul {\r\n        &:not(:first-child) {\r\n            margin-top: 8px;\r\n            margin-left: 8px;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const LIST_STYLES_2 = css`\r\n    li {\r\n        list-style-type: disc;\r\n        margin: 8px 0 8px 16px;\r\n    }\r\n`;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { LIST_STYLES_2 } from \"./List.styles\";\r\n\r\nexport interface IListItem {\r\n    text: string;\r\n    link?: string;\r\n}\r\n\r\nexport interface IList {\r\n    title?: string;\r\n    subtitle?: string;\r\n    lists?: IList[];\r\n    items?: | IListItem[];\r\n}\r\n\r\nexport interface IListProps extends IList {\r\n    level?: number;\r\n    prefix?: string;\r\n    styles?: any;\r\n}\r\n\r\nconst Heading: React.FC<any> = ({ title, subtitle, level }) => {\r\n    const Title = `h${level}` as any;\r\n    const Subtitle = `h${level + 1}` as any;\r\n    return (\r\n        <>\r\n            {title && <Title>{title}</Title>}\r\n            {subtitle && <Subtitle>{subtitle}</Subtitle>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport const List: React.FC<IListProps> = ({ title, subtitle, items, lists, level = 1, prefix = '', styles }) => {\r\n    return (\r\n        // @ts-ignore\r\n        <section css={styles}>\r\n            <Heading title={title} subtitle={subtitle} level={level} />\r\n            <ul>\r\n                {items && items.length > 0 && (\r\n                    items.map(({ text, link }) => (\r\n                        <li key={text}>{\r\n                            link ? <Link to={`${prefix}${link}`}>{text}</Link> : text\r\n                        }</li>\r\n                    ))\r\n                )}\r\n                {lists && (\r\n                    <li>\r\n                        {lists.map(l => <List {...l} key={l.title} level={level + 1} prefix={prefix} />)}\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport const SimpleList: React.FC<{ items: (string | [string, string])[] }> = ({ items }) => {\r\n    const formattedItems: IListItem[] = items.map(item => {\r\n        if (Array.isArray(item)) {\r\n            const [text, link] = item;\r\n            return {\r\n                text,\r\n                link\r\n            }\r\n        }\r\n        return {\r\n            text: item\r\n        }\r\n    })\r\n    return (\r\n        <List items={formattedItems} styles={LIST_STYLES_2} />\r\n    );\r\n}\r\n"],"names":["StyledDevPage","styled","PageLayout","displayName","componentId","React","title","subtitle","Card","List","prefix","styles","LIST_STYLES_1","lists","items","text","link","StyledCard","props","theme","surface","card","CardHeader","_ref","level","action","AsTag","className","_ref2","children","rest","css","LIST_STYLES_2","Heading","Title","Subtitle","length","map","_ref3","key","Link","to","l","SimpleList","_ref4","formattedItems","item","Array","isArray"],"sourceRoot":""}