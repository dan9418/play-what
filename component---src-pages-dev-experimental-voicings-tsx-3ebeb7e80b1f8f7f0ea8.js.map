{"version":3,"file":"component---src-pages-dev-experimental-voicings-tsx-3ebeb7e80b1f8f7f0ea8.js","mappings":"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","sources":["webpack://play-what/./src/components/inputs/DropdownInput.tsx","webpack://play-what/./src/components/layout/PageBody.tsx","webpack://play-what/./src/components/breadcrumb-list/BreadcrumbList.tsx","webpack://play-what/./src/components/layout/PageTitle.tsx","webpack://play-what/./src/components/ui/Card.tsx","webpack://play-what/./src/components/ui/InputRow.tsx","webpack://play-what/./src/components/pages/dev/VoicingsPage.tsx","webpack://play-what/./src/pages/dev/experimental/voicings.tsx","webpack://play-what/./src/viewers/fretboard/Fretboard.styles.tsx","webpack://play-what/./src/viewers/fretboard/FretLabel.tsx","webpack://play-what/./src/viewers/fretboard/Fretboard.tsx","webpack://play-what/./src/viewers/fretboard/Fretboard.tuning.ts","webpack://play-what/./src/viewers/fretboard/Fretboard.utils.ts","webpack://play-what/./src/viewers/fretboard/Fretboard.voicing.ts"],"sourcesContent":["import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nconst StyledDropdownInput = styled.select`\r\n\tfont-size: 110%;\r\n    min-width: 128px;\r\n\r\n\tpadding: 4px 8px;\r\n\r\n    cursor: pointer;\r\n    border-radius: 4px;\r\n\r\n\toption {\r\n\t\tcursor: pointer;\r\n\t}\r\n`;\r\n\r\ninterface IDropdownInputProps {\r\n\tvalue: any;\r\n\tsetValue: Function;\r\n\toptions: any[];\r\n\tidProperty?: string;\r\n\tdisplayProperty?: string;\r\n}\r\n\r\nconst DropdownInput: React.FC<IDropdownInputProps> = props => {\r\n\tconst { value, setValue, options, idProperty, displayProperty } = props;\r\n\r\n\treturn (\r\n\t\t<StyledDropdownInput\r\n\t\t\tclassName='dropdown-input'\r\n\t\t\tonChange={e => setValue(options[e.target.selectedIndex], e.target.selectedIndex)}\r\n\t\t\tvalue={value ? value[idProperty || 'id'] : ''}\r\n\t\t>\r\n\t\t\t{(options || []).map((v, i) => (\r\n\t\t\t\t<option key={i} value={v[idProperty || 'id']}>{displayProperty ? v[displayProperty] : v.name}</option>\r\n\t\t\t))}\r\n\t\t</StyledDropdownInput>\r\n\t);\r\n}\r\n\r\nexport default DropdownInput;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledPageBody = styled.div`\r\n\twidth: 100%;\r\n\t//max-width: 1920px;\r\n\tmax-width: 1024px;\r\n\tmin-height: calc(100vh - 96px);\r\n    \r\n\tmargin: auto;\r\n\tpadding: 16px;\r\n`\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport styled from 'styled-components';\r\nimport { usePageProps } from \"../../contexts/PagePropsContext\";\r\nimport Icon from \"../ui/Icon\";\r\n\r\nconst StyledBreadcrumbList = styled.ul`\r\n    font-size: 80%;\r\n    padding: 0 0 8px 0;\r\n    @media(min-width: 512px) {\r\n        font-size: 110%;\r\n        padding: 0 0 16px 0;\r\n    }\r\n\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    gap: 8px;\r\n    white-space: nowrap;\r\n    text-transform: capitalize;\r\n    svg {\r\n        margin-right: 8px;\r\n    }\r\n\r\n    span {\r\n        color: ${props => props.theme.text.secondary};\r\n    }\r\n`\r\n\r\nconst BreadcrumbList = () => {\r\n    const { path } = usePageProps();\r\n    let pieces = path.split('/');\r\n    const paths: any[] = [];\r\n    pieces.reduce((prev, cur, i, arr) => {\r\n        const path = `${prev}/${cur}`.replace('//', '/') || '/';\r\n        const isLink = !['root', 'test', 'experimental'].includes(cur);\r\n        const text = i === 0 ? 'Home' : cur.replaceAll('-', ' ').replace(' sharp', '#').replace(' flat', 'b');\r\n\r\n        const Tag = isLink ? Link : 'span';\r\n        const to: any = isLink ? path : undefined;\r\n\r\n        paths.push(\r\n            <li key={i}>\r\n                {i > 0 && <Icon iconId=\"next\" size={10} color=\"grey\" />}\r\n                <Tag to={to}>{text}</Tag>\r\n            </li>\r\n        );\r\n        return path;\r\n    }, '/');\r\n    return <StyledBreadcrumbList>{paths.slice(0, paths.length - 1)}</StyledBreadcrumbList>;\r\n}\r\n\r\nexport default BreadcrumbList;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport BreadcrumbList from '../breadcrumb-list/BreadcrumbList';\r\nimport SEO from \"../utils/SEO\";\r\n\r\nconst StyledPageTitle = styled.div`\r\n    width: 100%;\r\n\r\n    .header {\r\n        border-bottom: 1px solid ${({ theme }) => theme.utils.border};    \r\n        width: 100%;\r\n        margin: auto;\r\n        padding-bottom: 8px;\r\n        @media(min-width: 512px) {\r\n            padding-bottom: 16px;\r\n        }\r\n\r\n        > h1 {\r\n            width: 100%;\r\n            font-size: 150%;\r\n            @media(min-width: 512px) {\r\n                font-size: 300%;\r\n            }\r\n            text-align: left;\r\n            color: ${({ theme }) => theme.text.primary};\r\n\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: space-between;\r\n        }\r\n\r\n        > h2 {\r\n            margin-top: 4px;\r\n            width: 100%;\r\n            text-align: left;\r\n            color: ${({ theme }) => theme.text.secondary};;\r\n            font-size: 80%;\r\n            @media(min-width: 512px) {\r\n                font-size: 100%;\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst PageTitle: React.FC<any> = ({ title, subtitle, action, children }) => {\r\n    return (\r\n        <>\r\n            <SEO title={subtitle ? `${title} - ${subtitle}` : title} />\r\n            <BreadcrumbList />\r\n            <StyledPageTitle>\r\n                <div className=\"header\">\r\n                    <h1>\r\n                        {title}\r\n                        {action && <div className='action'>{action}</div>}\r\n                    </h1>\r\n                    {subtitle && <h2>{subtitle}</h2>}\r\n\r\n                </div>\r\n                {children}\r\n            </StyledPageTitle>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledCard = styled.div`\r\n    background: ${props => props.theme.surface.card};\r\n    width: 100%;\r\n    border-radius: 16px;\r\n    padding: 16px;\r\n\r\n    .header {\r\n        margin-bottom: 16px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n    }\r\n`;\r\n\r\nexport const CardHeader = ({ title, action = null }) => (\r\n    <div className=\"header\">\r\n        <h2>{title}</h2>\r\n        {action}\r\n    </div>\r\n);\r\n\r\nconst Card: React.FC<any> = ({ title, action, children, ...rest }) => {\r\n    return (\r\n        <StyledCard {...rest}>\r\n            {title &&\r\n                <CardHeader title={title} action={action} />\r\n            }\r\n            {children}\r\n        </StyledCard >\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledInputRow = styled.div`\r\n    display: flex;\r\n    align-items: flex-start;\r\n    flex-direction: column;\r\n    width: 100%;\r\n\r\n    ${props => props.$y ? '' : `\r\n        @media(min-width: 512px) {\r\n            align-items: center;\r\n            flex-direction: row;\r\n            justify-content: space-between;\r\n            //margin-bottom: 8px;\r\n        }\r\n    `}\r\n\r\n    > label {\r\n        color: ${({ theme }) => theme.dark3};\r\n        font-weight: bold;\r\n        margin: 8px;\r\n        white-space: nowrap;\r\n    }\r\n`;\r\n\r\nconst InputRow = ({ label, children, y = false, ...rest }) => {\r\n    return (\r\n        <StyledInputRow $y={y} {...rest}>\r\n            <label>{label}</label>\r\n            <div>\r\n                {children}\r\n            </div>\r\n        </StyledInputRow>\r\n    );\r\n}\r\n\r\nexport default InputRow;\r\n","import React, { useState } from \"react\";\r\nimport styled from 'styled-components';\r\nimport Chord from \"../../../core/models/Chord\";\r\nimport { ChordId, NoteId } from \"../../../core/models/Model.constants\";\r\nimport { NOTE_PRESETS, NOTE_PRESET_MAP } from \"../../../core/models/Model.presets\";\r\nimport Note from \"../../../core/models/Note\";\r\nimport Fretboard from \"../../../viewers/fretboard/Fretboard\";\r\nimport { VoicingId, VOICING_PRESET_MAP } from \"../../../viewers/fretboard/Fretboard.voicing\";\r\nimport DropdownInput from \"../../inputs/DropdownInput\";\r\nimport { StyledPageBody } from \"../../layout/PageBody\";\r\nimport PageTitle from \"../../layout/PageTitle\";\r\nimport Card, { StyledCard } from \"../../ui/Card\";\r\nimport InputRow, { StyledInputRow } from \"../../ui/InputRow\";\r\n\r\nconst StyledVoicingsPage = styled(StyledPageBody)`\r\n    max-width: 1920px;\r\n\r\n    ${StyledCard}, ${StyledInputRow} {\r\n        margin-top: 16px;\r\n        table {\r\n            width: 100%;\r\n            td {\r\n                width: 25%;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst VOICINGS_E = [\r\n    VoicingId.Chord_Triad_EShape_1,\r\n    VoicingId.Chord_Seventh_EShape_1,\r\n    VoicingId.Chord_Shell_A_37,\r\n    VoicingId.Chord_Shell_A_73,\r\n];\r\n\r\nconst VOICINGS_A = [\r\n    VoicingId.Chord_Triad_AShape_1,\r\n    VoicingId.Chord_Seventh_AShape_1,\r\n    VoicingId.Chord_Shell_A_37,\r\n    VoicingId.Chord_Shell_A_73,\r\n];\r\n\r\nconst VOICINGS_D = [\r\n    VoicingId.Chord_Triad_DShape_1,\r\n    VoicingId.Chord_Seventh_DShape_1,\r\n    VoicingId.Chord_Shell_D_37,\r\n    VoicingId.Chord_Shell_D_73,\r\n];\r\n\r\nconst VoicingRow = ({ voicingIds, model, modelId, root }) => (\r\n    <tr>\r\n        {voicingIds.map(voicingId => {\r\n            const instance = new model(modelId, { root });\r\n            return (\r\n                <td key={modelId}>\r\n                    <h3>{modelId}</h3>\r\n                    <Fretboard\r\n                        model={instance}\r\n                        voicing={VOICING_PRESET_MAP.get(voicingId)}\r\n                        fretRange={[1, 14]}\r\n                    />\r\n                </td>\r\n            );\r\n        })}\r\n    </tr>\r\n);\r\n\r\nconst THEAD = (\r\n    <thead>\r\n        <tr>\r\n            <th>Triad</th>\r\n            <th>Seventh</th>\r\n            <th>Drop 3-7</th>\r\n            <th>Drop 7-3</th>\r\n        </tr>\r\n    </thead>\r\n);\r\n\r\nconst CHORDS = [\r\n    {\r\n        model: Chord,\r\n        modelId: ChordId.Maj7,\r\n    },\r\n    {\r\n        model: Chord,\r\n        modelId: ChordId.Min7,\r\n    },\r\n    {\r\n        model: Chord,\r\n        modelId: ChordId.Dom7,\r\n    },\r\n    {\r\n        model: Chord,\r\n        modelId: ChordId.HalfDim7,\r\n    }\r\n];\r\n\r\nconst VoicingsPage: React.FC = () => {\r\n    const [rootPreset, setRootPreset] = useState(NOTE_PRESET_MAP.get(NoteId.C));\r\n\r\n    const root = new Note(rootPreset.value);\r\n\r\n    return (\r\n        <StyledVoicingsPage>\r\n            <PageTitle title=\"Chord Voicings\" />\r\n            <InputRow label=\"Root\">\r\n                <DropdownInput options={NOTE_PRESETS} value={rootPreset} setValue={p => {\r\n                    setRootPreset(p);\r\n                }} />\r\n            </InputRow>\r\n            <Card title=\"E Root\" >\r\n                <table>\r\n                    {THEAD}\r\n                    <tbody>\r\n                        {CHORDS.map((chord, i) => {\r\n                            const { model, modelId } = chord;\r\n                            return (\r\n                                <VoicingRow key={i} model={model} modelId={modelId} root={root} voicingIds={VOICINGS_E} />\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </Card>\r\n            <Card title=\"A Root\" >\r\n                <table>\r\n                    {THEAD}\r\n                    <tbody>\r\n                        {CHORDS.map((chord, i) => {\r\n                            const { model, modelId } = chord;\r\n                            return (\r\n                                <VoicingRow key={i} model={model} modelId={modelId} root={root} voicingIds={VOICINGS_A} />\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </Card>\r\n            <Card title=\"D Root\" >\r\n                <table>\r\n                    {THEAD}\r\n                    <tbody>\r\n                        {CHORDS.map((chord, i) => {\r\n                            const { model, modelId } = chord;\r\n                            return (\r\n                                <VoicingRow key={i} model={model} modelId={modelId} root={root} voicingIds={VOICINGS_D} />\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </Card>\r\n        </StyledVoicingsPage>\r\n    );\r\n};\r\n\r\nexport default VoicingsPage;\r\n","import VoicingsPage from \"../../../components/pages/dev/VoicingsPage\";\r\n\r\nexport default VoicingsPage;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledFretboard = styled.div`\r\n    display: inline-grid;\r\n\twidth: 100%;\r\n\tbackground-image: radial-gradient(ellipse, #E8DBB8 0%, #D0B27C 100%);\r\n\tfont-size: 90%;\r\n\tmargin: 16px 0;\r\n\r\n    .fret {\r\n        display: inline-flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        position: relative;\r\n        border-right: 2px solid darkgrey;\r\n    }\r\n\r\n    .fret.open {\r\n        border-right: 3px solid grey;\r\n        background-color: #D0B27C;;\r\n    }\r\n\r\n    /* Used to maintain aspect ratio */\r\n\r\n    .fret::before {\r\n        content: \"\";\r\n        display: block;\r\n        height: 0;\r\n        width: 0;\r\n        margin-top: calc(1/2 * 100%);\r\n    }\r\n\r\n    /* Fret String */\r\n\r\n    .fret-string {\r\n        border-top: 1px solid grey;\r\n        width: 100%;\r\n    }\r\n\r\n    /* Fret Numbers */\r\n\r\n    .fret-number {\r\n        position: absolute;\r\n        bottom: 100%;\r\n    }\r\n\r\n    /* Fret Dots */\r\n\r\n    .fret-dots {\r\n        position: absolute;\r\n        top: 95%;\r\n        font-size: 16px;\r\n        white-space: nowrap;\r\n    }\r\n\r\n    .fret-number, .fret-dots {\r\n        color: #888;\r\n    }\r\n`;\r\n\r\nexport default StyledFretboard;\r\n","\r\nimport * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { IFretProps } from \"./Fretboard.utils\";\r\n\r\nconst StyledFretLabel = styled.div`\r\n\tposition: absolute;\r\n\theight: 60%;\r\n\taspect-ratio: 1;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tborder-radius: 100%;\r\n\tbackground-color: ${({ $bgColor }) => $bgColor ? $bgColor : 'transparent'};\r\n\tcolor: ${({ $fgColor }) => $fgColor ? $fgColor : ''};\r\n\r\n\t/*cursor: pointer;\r\n\t&:hover {\r\n\t\theight: 80%;\r\n\t}*/\r\n`;\r\n\r\n\r\nconst FretLabel: React.FC<IFretProps> = props => {\r\n\r\n\tconst bgColor = props.colorMapFn(props);\r\n\r\n\tlet fgColor = 'white';\r\n\r\n\treturn (\r\n\t\t<StyledFretLabel $bgColor={bgColor} $fgColor={fgColor} onClick={null} className=\"fret-label\">\r\n\t\t\t{null}\r\n\t\t</StyledFretLabel>\r\n\t);\r\n};\r\n\r\nexport default FretLabel;\r\n","import * as React from \"react\";\r\nimport StyledFretboard from \"./Fretboard.styles\";\r\nimport { DEFAULT_FRETBOARD_PROPS, getDotsForFret, getFretRatios, IFretboardProps, IFretProps } from \"./Fretboard.utils\";\r\nimport FretLabel from \"./FretLabel\";\r\n\r\nexport const Fret: React.FC<IFretProps> = props => {\r\n\r\n\tconst { tuning, stringIndex, fretIndex, showFretNumbers, showFretDots } = props;\r\n\r\n\tconst classes = ['fret'];\r\n\tif (fretIndex === 0)\r\n\t\tclasses.push('open');\r\n\r\n\tconst isLowString = stringIndex === tuning.length - 1;\r\n\tconst isHighString = stringIndex === 0;\r\n\r\n\treturn (\r\n\t\t<div className={classes.join(' ')}>\r\n\t\t\t<div className=\"fret-number\">\r\n\t\t\t\t{showFretNumbers && isHighString && fretIndex > 0 && fretIndex}\r\n\t\t\t</div>\r\n\t\t\t<div className='fret-string' />\r\n\t\t\t<FretLabel {...props} />\r\n\t\t\t<div className=\"fret-dots\">\r\n\t\t\t\t{showFretDots && isLowString && fretIndex > 0 && getDotsForFret(fretIndex)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst getFrets = (props: IFretboardProps) => {\r\n\tconst { fretRange, tuning } = props;\r\n\tconst [lo, hi] = fretRange;\r\n\r\n\tconst allFrets = [];\r\n\tfor (let s = 0; s < tuning.length; s++) {\r\n\t\tfor (let f = lo; f <= hi; f++) {\r\n\t\t\tallFrets.push(\r\n\t\t\t\t<Fret\r\n\t\t\t\t\tkey={`s${s}-f${f}`}\r\n\t\t\t\t\tstringIndex={s}\r\n\t\t\t\t\tfretIndex={f}\r\n\t\t\t\t\ttuning={tuning}\r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\treturn allFrets;\r\n};\r\n\r\nconst Fretboard: React.FC<IFretboardProps> = (userProps) => {\r\n\tconst props = { ...DEFAULT_FRETBOARD_PROPS, ...userProps };\r\n\r\n\tconst [lo, hi] = props.fretRange;\r\n\tconst numFrets = hi - lo + 1;\r\n\tconst numStrings = props.tuning.length;\r\n\tconst gridTemplateColumns = getFretRatios(numFrets).map(n => n + 'fr').join(' ');\r\n\tconst gridTemplateRows = `repeat(${numStrings}, 1fr)`;\r\n\tconst fretboardStyles = {\r\n\t\tgridTemplateColumns,\r\n\t\tgridTemplateRows\r\n\t};\r\n\r\n\treturn (\r\n\t\t<StyledFretboard className='fretboard' style={fretboardStyles}>\r\n\t\t\t{getFrets(props)}\r\n\t\t</StyledFretboard>\r\n\t);\r\n};\r\n\r\nexport default Fretboard;\r\n","import ArrayUtils from \"../../core/general/Array.utils\";\r\nimport Note from '../../core/models/Note';\r\nimport { NoteId } from './../../core/models/Model.constants';\r\n\r\nexport enum TuningId {\r\n    Standard = 'standard',\r\n    StandardSeven = 'standard-seven',\r\n    StandardBass = 'standard-bass',\r\n    Flat = 'flat',\r\n    DoubleFlat = 'double-flat',\r\n    DropD = 'drop-d',\r\n    DADGAD = 'dadgad',\r\n    Banjo = 'banjo',\r\n    Violin = 'violin',\r\n    OpenA = 'open-a',\r\n    OpenB = 'open-b',\r\n    OpenC = 'open-c',\r\n    OpenD = 'open-d',\r\n    OpenE = 'open-e',\r\n    OpenF = 'open-f',\r\n    OpenG = 'open-g',\r\n}\r\n\r\nexport interface ITuning {\r\n    id: TuningId;\r\n    name: string;\r\n    value: number[]\r\n}\r\n\r\nconst formatPreset = (id: TuningId, name: string, value: number[]): ITuning => ({\r\n    id,\r\n    name,\r\n    value\r\n});\r\n\r\nconst getPitch = (noteId: NoteId, octave: number): number => Note.getNote(noteId, octave).pod[0];\r\n\r\nexport const TUNING_PRESET_MAP = new Map<TuningId, ITuning>([\r\n    [TuningId.Standard, formatPreset(\r\n        TuningId.Standard,\r\n        'Standard',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.E, 3)\r\n        ]\r\n    )],\r\n    [TuningId.Flat, formatPreset(\r\n        TuningId.Flat,\r\n        'Flat',\r\n        [\r\n            getPitch(NoteId.Eb, 5),\r\n            getPitch(NoteId.Bb, 4),\r\n            getPitch(NoteId.Gb, 4),\r\n            getPitch(NoteId.Db, 4),\r\n            getPitch(NoteId.Ab, 3),\r\n            getPitch(NoteId.Eb, 3)\r\n        ]\r\n    )],\r\n    [TuningId.DoubleFlat, formatPreset(\r\n        TuningId.DoubleFlat,\r\n        'Double Flat',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.F, 4),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    [TuningId.StandardSeven, formatPreset(\r\n        TuningId.StandardSeven,\r\n        'Standard 7-String',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.E, 3),\r\n            getPitch(NoteId.B, 3)\r\n        ]\r\n    )],\r\n    [TuningId.StandardBass, formatPreset(\r\n        TuningId.StandardBass,\r\n        'Standard Bass',\r\n        [\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.D, 3),\r\n            getPitch(NoteId.A, 2),\r\n            getPitch(NoteId.E, 2)\r\n        ]\r\n    )],\r\n    [TuningId.DropD, formatPreset(\r\n        TuningId.DropD,\r\n        'Drop D',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    [TuningId.DADGAD, formatPreset(\r\n        TuningId.DADGAD,\r\n        'DADGAD',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    // Unconfirmed\r\n    [TuningId.Banjo, formatPreset(\r\n        TuningId.Banjo,\r\n        'Banjo',\r\n        [\r\n            getPitch(NoteId.G, 5),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    // Unconfirmed\r\n    [TuningId.Violin, formatPreset(\r\n        TuningId.Violin,\r\n        'Violin',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.G, 4)\r\n        ]\r\n    )],\r\n    [TuningId.OpenA, formatPreset(\r\n        TuningId.OpenA,\r\n        'Open A',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.E, 4),\r\n            getPitch(NoteId.Cs, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.E, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenB, formatPreset(\r\n        TuningId.OpenB,\r\n        'Open B',\r\n        [\r\n            getPitch(NoteId.Ds, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.Fs, 4),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.Fs, 3),\r\n            getPitch(NoteId.B, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenC, formatPreset(\r\n        TuningId.OpenC,\r\n        'Open C',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.C, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenD, formatPreset(\r\n        TuningId.OpenD,\r\n        'Open D',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.Fs, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenE, formatPreset(\r\n        TuningId.OpenE,\r\n        'Open E',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.Gs, 4),\r\n            getPitch(NoteId.E, 4),\r\n            getPitch(NoteId.B, 3),\r\n            getPitch(NoteId.E, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenF, formatPreset(\r\n        TuningId.OpenF,\r\n        'Open F',\r\n        [\r\n            getPitch(NoteId.F, 5),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.F, 4),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.F, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenG, formatPreset(\r\n        TuningId.OpenG,\r\n        'Open G',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )]\r\n]);\r\n\r\nexport const FRETBOARD_TUNING_VALUES = ArrayUtils.mapToArray(TUNING_PRESET_MAP);\r\n","import Chord from '../../core/models/Chord';\r\nimport IntervalSpan from '../../core/models/Interval';\r\nimport { IModelConfig } from '../../core/models/Model.constants';\r\nimport Note from '../../core/models/Note';\r\nimport Scale from '../../core/models/Scale';\r\nimport { ITuning, TuningId, TUNING_PRESET_MAP } from './Fretboard.tuning';\r\nimport { IVoicing } from './Fretboard.voicing';\r\n\r\nexport interface IFretLabelProps {\r\n\tnote?: Note;\r\n\tcolor?: string;\r\n\tfreq?: number;\r\n}\r\n\r\nexport interface IFretboardProps {\r\n\tfretRange?: [number, number];\r\n\tshowFretDots?: boolean;\r\n\tshowFretNumbers?: boolean;\r\n\tcolorMapFn?: (fretProps: IFretProps) => string | undefined;\r\n\tvoicing?: IVoicing,\r\n\ttuning?: number[]; // ITuning,\r\n\tmodel?: Chord | Scale;\r\n}\r\n\r\nexport interface IFretProps extends IFretboardProps {\r\n\tstringIndex: number;\r\n\tfretIndex: number;\r\n}\r\n\r\nexport const DOTTED_FRET_INDICES = [true, false, false, true, false, true, false, true, false, true, false, false];\r\n\r\nexport const FRET_SIZE_RATIO = Math.pow((1 / 2), (1 / 12));\r\n\r\nconst isIntervalInVoicing = (interval: IntervalSpan, voicing: IVoicing, stringIndex: number) => {\r\n\tif (!voicing || !voicing.value) return true;\r\n\tconst v = voicing.value[stringIndex];\r\n\tconst d = interval.getDegree();\r\n\tif (Array.isArray(v)) {\r\n\t\treturn v.some(n => doesVoicingValueMatch(d, n));\r\n\t}\r\n\telse if (typeof v === 'number') {\r\n\t\treturn doesVoicingValueMatch(d, v);\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nexport const getFretColor = (props: IFretProps): string | undefined => {\r\n\tconst { stringIndex, fretIndex, tuning, model, voicing } = props;\r\n\tconst noteIndex = tuning[stringIndex] + fretIndex;\r\n\tconst [interval, note] = model.tryGetPodPairAtPitch(noteIndex);\r\n\r\n\tif (!note) return;\r\n\r\n\tif (voicing && !isIntervalInVoicing(interval, voicing, stringIndex)) {\r\n\t\treturn `#00000033`\r\n\t}\r\n\r\n\treturn interval.getColor();\r\n}\r\n\r\nexport const DEFAULT_FRETBOARD_PROPS: IFretboardProps = {\r\n\tfretRange: [1, 12],\r\n\ttuning: TUNING_PRESET_MAP.get(TuningId.Standard).value,\r\n\tshowFretDots: true,\r\n\tshowFretNumbers: true,\r\n\tcolorMapFn: getFretColor\r\n};\r\n\r\nexport const getFretRatios = (numFrets: number): number[] => {\r\n\tconst ratios = [];\r\n\tfor (let i = 1; i <= numFrets; i++) {\r\n\t\tratios.push((i <= 1) ? 1 : ratios[i - 2] * FRET_SIZE_RATIO);\r\n\t}\r\n\treturn ratios;\r\n};\r\n\r\nexport const getDotsForFret = (fretNumber: number): string => {\r\n\tconst mod = fretNumber % 12;\r\n\tif (mod === 0)\r\n\t\treturn '• •';\r\n\telse if (DOTTED_FRET_INDICES[mod])\r\n\t\treturn '•';\r\n\treturn '';\r\n};\r\n\r\nconst doesVoicingValueMatch = (d: number, v: number) => {\r\n\treturn d + 1 === v;\r\n}\r\n","import ArrayUtils from \"../../core/general/Array.utils\";\r\n\r\nexport enum VoicingId {\r\n    None = 'None',\r\n    Chord_Triad_CShape_1 = 'Chord_Triad_CShape_1',\r\n    Chord_Triad_AShape_1 = 'Chord_Triad_AShape_1',\r\n    Chord_Triad_GShape_1 = 'Chord_Triad_GShape_1',\r\n    Chord_Triad_EShape_1 = 'Chord_Triad_EShape_1',\r\n    Chord_Triad_DShape_1 = 'Chord_Triad_DShape_1',\r\n    Chord_Sixth_CShape_1 = 'Chord_Sixth_CShape_1',\r\n    Chord_Sixth_AShape_1 = 'Chord_Sixth_AShape_1',\r\n    Chord_Sixth_GShape_1 = 'Chord_Sixth_GShape_1',\r\n    Chord_Sixth_EShape_1 = 'Chord_Sixth_EShape_1',\r\n    Chord_Sixth_DShape_1 = 'Chord_Sixth_DShape_1',\r\n    Chord_Seventh_CShape_1 = 'Chord_Seventh_CShape_1',\r\n    Chord_Seventh_AShape_1 = 'Chord_Seventh_AShape_1',\r\n    Chord_Seventh_GShape_1 = 'Chord_Seventh_GShape_1',\r\n    Chord_Seventh_EShape_1 = 'Chord_Seventh_EShape_1',\r\n    Chord_Seventh_DShape_1 = 'Chord_Seventh_DShape_1',\r\n    Chord_Shell_E_37 = 'Chord_Shell_E_37',\r\n    Chord_Shell_E_73 = 'Chord_Shell_E_73',\r\n    Chord_Shell_A_37 = 'Chord_Shell_A_37',\r\n    Chord_Shell_A_73 = 'Chord_Shell_A_73',\r\n    Chord_Shell_D_37 = 'Chord_Shell_D_37',\r\n    Chord_Shell_D_73 = 'Chord_Shell_D_73',\r\n    Scale_DoubleOctave_CShape_1 = 'Scale_DoubleOctave_CShape_1',\r\n    Scale_DoubleOctave_CShape_2 = 'Scale_DoubleOctave_CShape_2',\r\n    Scale_DoubleOctave_AShape_1 = 'Scale_DoubleOctave_AShape_1',\r\n    Scale_DoubleOctave_GShape_1 = 'Scale_DoubleOctave_GShape_1',\r\n    Scale_DoubleOctave_EShape_1 = 'Scale_DoubleOctave_EShape_1',\r\n    Scale_DoubleOctave_EShape_2 = 'Scale_DoubleOctave_EShape_2',\r\n    Scale_DoubleOctave_DShape_1 = 'Scale_DoubleOctave_DShape_1',\r\n}\r\n\r\nexport interface IVoicing {\r\n    id: VoicingId;\r\n    name: string;\r\n    value: (number | number[])[]\r\n}\r\n\r\nconst formatPreset = (id: VoicingId, name: string, value: (number | number[])[]): IVoicing => ({\r\n    id,\r\n    name,\r\n    value\r\n});\r\n\r\nexport const VOICING_PRESET_MAP = new Map<VoicingId, IVoicing>([\r\n    // Triads\r\n    [VoicingId.Chord_Triad_CShape_1, formatPreset(\r\n        VoicingId.Chord_Triad_CShape_1,\r\n        'C Shape Triad',\r\n        [3, 1, 5, 3, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Triad_AShape_1, formatPreset(\r\n        VoicingId.Chord_Triad_AShape_1,\r\n        'A Shape Triad',\r\n        [5, 3, 1, 5, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Triad_GShape_1, formatPreset(\r\n        VoicingId.Chord_Triad_GShape_1,\r\n        'G Shape Triad',\r\n        [1, 5, 1, 5, 3, 1]\r\n    )],\r\n    [VoicingId.Chord_Triad_EShape_1, formatPreset(\r\n        VoicingId.Chord_Triad_EShape_1,\r\n        'E Shape Triad',\r\n        [1, 5, 3, 1, 5, 1]\r\n    )],\r\n    [VoicingId.Chord_Triad_DShape_1, formatPreset(\r\n        VoicingId.Chord_Triad_DShape_1,\r\n        'D Shape Triad',\r\n        [3, 1, 5, 1, null, null]\r\n    )],\r\n    // Sixths\r\n    [VoicingId.Chord_Sixth_CShape_1, formatPreset(\r\n        VoicingId.Chord_Sixth_CShape_1,\r\n        'C Shape 6th Chord',\r\n        [3, 6, 5, 3, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Sixth_AShape_1, formatPreset(\r\n        VoicingId.Chord_Sixth_AShape_1,\r\n        'A Shape 6th Chord',\r\n        [5, 3, 6, 5, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Sixth_GShape_1, formatPreset(\r\n        VoicingId.Chord_Sixth_GShape_1,\r\n        'G Shape 6th Chord',\r\n        [6, 5, 1, 5, 3, 1]\r\n    )],\r\n    [VoicingId.Chord_Sixth_EShape_1, formatPreset(\r\n        VoicingId.Chord_Sixth_EShape_1,\r\n        'E Shape 6th Chord',\r\n        [1, 5, 3, 6, 5, 1]\r\n    )],\r\n    [VoicingId.Chord_Sixth_DShape_1, formatPreset(\r\n        VoicingId.Chord_Sixth_DShape_1,\r\n        'D Shape 6th Chord',\r\n        [3, 6, 5, 1, null, null]\r\n    )],\r\n    // Sevenths\r\n    [VoicingId.Chord_Seventh_CShape_1, formatPreset(\r\n        VoicingId.Chord_Seventh_CShape_1,\r\n        'C Shape 7th Chord',\r\n        [3, 7, 5, 3, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Seventh_AShape_1, formatPreset(\r\n        VoicingId.Chord_Seventh_AShape_1,\r\n        'A Shape 7th Chord',\r\n        [5, 3, 7, 5, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Seventh_GShape_1, formatPreset(\r\n        VoicingId.Chord_Seventh_GShape_1,\r\n        'G Shape 7th Chord',\r\n        [7, 5, 1, 5, 3, 1]\r\n    )],\r\n    [VoicingId.Chord_Seventh_EShape_1, formatPreset(\r\n        VoicingId.Chord_Seventh_EShape_1,\r\n        'E Shape 7th Chord',\r\n        [1, 5, 3, 7, 5, 1]\r\n    )],\r\n    [VoicingId.Chord_Seventh_DShape_1, formatPreset(\r\n        VoicingId.Chord_Seventh_DShape_1,\r\n        'D Shape 7th Chord',\r\n        [3, 7, 5, 1, null, null]\r\n    )],\r\n    // Shells\r\n    [VoicingId.Chord_Shell_E_37, formatPreset(\r\n        VoicingId.Chord_Shell_E_37,\r\n        'Shell E 3-7',\r\n        [null, null, null, 7, 3, 1]\r\n    )],\r\n    [VoicingId.Chord_Shell_E_73, formatPreset(\r\n        VoicingId.Chord_Shell_E_73,\r\n        'Shell E 7-3',\r\n        [null, null, 3, 7, null, 1]\r\n    )],\r\n    [VoicingId.Chord_Shell_A_37, formatPreset(\r\n        VoicingId.Chord_Shell_A_37,\r\n        'Shell A 3-7',\r\n        [null, null, 7, 3, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Shell_A_73, formatPreset(\r\n        VoicingId.Chord_Shell_A_73,\r\n        'Shell A 7-3',\r\n        [null, 3, 7, null, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Shell_D_37, formatPreset(\r\n        VoicingId.Chord_Shell_D_37,\r\n        'Shell D 3-7',\r\n        [null, 7, 3, 1, null, null]\r\n    )],\r\n    [VoicingId.Chord_Shell_D_73, formatPreset(\r\n        VoicingId.Chord_Shell_D_73,\r\n        'Shell D 7-3',\r\n        [3, 7, null, 1, null, null]\r\n    )],\r\n    // CAGED Scales\r\n    [VoicingId.Scale_DoubleOctave_EShape_1, formatPreset(\r\n        VoicingId.Scale_DoubleOctave_EShape_1,\r\n        'E Shape Scale (Locrian)',\r\n        [[1, 2, 3], [6, 7], [3, 4, 5], [7, 1, 2], [4, 5, 6], [1, 2, 3]]\r\n    )],\r\n    [VoicingId.Scale_DoubleOctave_EShape_2, formatPreset(\r\n        VoicingId.Scale_DoubleOctave_EShape_2,\r\n        'E Shape Scale (Ionian)',\r\n        [[7, 1, 2], [5, 6], [2, 3, 4], [6, 7, 1], [3, 4, 5], [1, 2]]\r\n    )],\r\n    [VoicingId.Scale_DoubleOctave_DShape_1, formatPreset(\r\n        VoicingId.Scale_DoubleOctave_DShape_1,\r\n        'D Shape Scale (Dorian)',\r\n        [[1, 2, 3], [5, 6, 7], [2, 3, 4], [6, 7, 1], [4, 5], [1, 2, 3]]\r\n    )],\r\n    [VoicingId.Scale_DoubleOctave_CShape_1, formatPreset(\r\n        VoicingId.Scale_DoubleOctave_CShape_1,\r\n        'C Shape Scale (Phrygian)',\r\n        [[1, 2, 3], [5, 6, 7], [3, 4], [7, 1, 2], [4, 5, 6], [1, 2, 3]]\r\n    )],\r\n    [VoicingId.Scale_DoubleOctave_CShape_2, formatPreset(\r\n        VoicingId.Scale_DoubleOctave_CShape_2,\r\n        'C Shape Scale (Lydian)',\r\n        [[7, 1, 2], [4, 5, 6], [2, 3], [6, 7, 1], [3, 4, 5], [1, 2]]\r\n    )],\r\n    [VoicingId.Scale_DoubleOctave_AShape_1, formatPreset(\r\n        VoicingId.Scale_DoubleOctave_AShape_1,\r\n        'A Shape Scale (Mixolydian)',\r\n        [[1, 2], [5, 6, 7], [2, 3, 4], [6, 7, 1], [3, 4, 5], [1, 2]]\r\n    )],\r\n    [VoicingId.Scale_DoubleOctave_GShape_1, formatPreset(\r\n        VoicingId.Scale_DoubleOctave_GShape_1,\r\n        'G Shape Scale (Aeolian)',\r\n        [[1, 2, 3], [5, 6, 7], [2, 3, 4], [7, 1], [4, 5, 6], [1, 2, 3]]\r\n    )]\r\n])\r\n\r\nexport const VOICING_PRESETS = ArrayUtils.mapToArray(VOICING_PRESET_MAP);\r\n"],"names":["StyledDropdownInput","styled","props","value","setValue","options","idProperty","displayProperty","React","className","onChange","e","target","selectedIndex","map","v","i","key","name","StyledPageBody","StyledBreadcrumbList","theme","text","secondary","pieces","usePageProps","path","split","paths","reduce","prev","cur","arr","replace","isLink","includes","replaceAll","Tag","Link","to","undefined","push","Icon","iconId","size","color","slice","length","StyledPageTitle","utils","border","primary","title","subtitle","action","children","SEO","BreadcrumbList","StyledCard","surface","card","CardHeader","rest","StyledInputRow","$y","dark3","label","y","StyledVoicingsPage","withConfig","VOICINGS_E","VoicingId","VOICINGS_A","VOICINGS_D","VoicingRow","voicingIds","model","modelId","root","voicingId","instance","Fretboard","voicing","VOICING_PRESET_MAP","fretRange","THEAD","CHORDS","Chord","ChordId","useState","NOTE_PRESET_MAP","NoteId","rootPreset","setRootPreset","Note","PageTitle","InputRow","DropdownInput","NOTE_PRESETS","p","Card","chord","StyledFretLabel","$bgColor","$fgColor","bgColor","colorMapFn","onClick","Fret","tuning","stringIndex","fretIndex","showFretNumbers","showFretDots","classes","isLowString","isHighString","join","FretLabel","getDotsForFret","userProps","DEFAULT_FRETBOARD_PROPS","lo","numFrets","numStrings","fretboardStyles","gridTemplateColumns","getFretRatios","n","gridTemplateRows","StyledFretboard","style","hi","allFrets","s","f","getFrets","TuningId","formatPreset","id","getPitch","noteId","octave","pod","TUNING_PRESET_MAP","Map","Standard","Flat","DoubleFlat","StandardSeven","StandardBass","DropD","DADGAD","Banjo","Violin","OpenA","OpenB","OpenC","OpenD","OpenE","OpenF","OpenG","FRETBOARD_TUNING_VALUES","ArrayUtils","DOTTED_FRET_INDICES","FRET_SIZE_RATIO","Math","pow","noteIndex","tryGetPodPairAtPitch","interval","d","getDegree","Array","isArray","some","doesVoicingValueMatch","isIntervalInVoicing","getColor","ratios","fretNumber","mod","Chord_Triad_CShape_1","Chord_Triad_AShape_1","Chord_Triad_GShape_1","Chord_Triad_EShape_1","Chord_Triad_DShape_1","Chord_Sixth_CShape_1","Chord_Sixth_AShape_1","Chord_Sixth_GShape_1","Chord_Sixth_EShape_1","Chord_Sixth_DShape_1","Chord_Seventh_CShape_1","Chord_Seventh_AShape_1","Chord_Seventh_GShape_1","Chord_Seventh_EShape_1","Chord_Seventh_DShape_1","Chord_Shell_E_37","Chord_Shell_E_73","Chord_Shell_A_37","Chord_Shell_A_73","Chord_Shell_D_37","Chord_Shell_D_73","Scale_DoubleOctave_EShape_1","Scale_DoubleOctave_EShape_2","Scale_DoubleOctave_DShape_1","Scale_DoubleOctave_CShape_1","Scale_DoubleOctave_CShape_2","Scale_DoubleOctave_AShape_1","Scale_DoubleOctave_GShape_1","VOICING_PRESETS"],"sourceRoot":""}