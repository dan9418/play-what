{"version":3,"file":"99bb607f70a06bdd496e47180b56a3f9e6855e38-5472bd91c0758720c32b.js","mappings":"kSAUA,MAAMA,EAAOC,EAAAA,EAAAA,OAAYC,EAAAA,GAAAA,GAGnBC,EADQ,IAAIC,EAAAA,EAAMC,EAAAA,GAAAA,OAAgB,CAAEC,KAAMN,IACtBO,MAEbC,EAAiB,CAC5B,CACEC,MAAOL,EAAAA,EACPM,QAASL,EAAAA,GAAAA,OACTM,OAAQR,EAAY,GAAGO,QACvBE,UAAWC,EAAAA,GAAAA,6BAEb,CACEJ,MAAOL,EAAAA,EACPM,QAASL,EAAAA,GAAAA,OACTM,OAAQR,EAAY,GAAGO,QACvBE,UAAWC,EAAAA,GAAAA,6BAEb,CACEJ,MAAOL,EAAAA,EACPM,QAASL,EAAAA,GAAAA,SACTM,OAAQR,EAAY,GAAGO,QACvBE,UAAWC,EAAAA,GAAAA,6BAEb,CACEJ,MAAOL,EAAAA,EACPM,QAASL,EAAAA,GAAAA,OACTM,OAAQR,EAAY,GAAGO,QACvBE,UAAWC,EAAAA,GAAAA,6BAEb,CACEJ,MAAOL,EAAAA,EACPM,QAASL,EAAAA,GAAAA,WACTM,OAAQR,EAAY,GAAGO,QACvBE,UAAWC,EAAAA,GAAAA,6BAEb,CACEJ,MAAOL,EAAAA,EACPM,QAASL,EAAAA,GAAAA,QACTM,OAAQR,EAAY,GAAGO,QACvBE,UAAWC,EAAAA,GAAAA,6BAEb,CACEJ,MAAOL,EAAAA,EACPM,QAASL,EAAAA,GAAAA,QACTM,OAAQR,EAAY,GAAGO,QACvBE,UAAWC,EAAAA,GAAAA,8BAIFC,EAAsB,CACjC,CACEL,MAAOM,EAAAA,EACPL,QAASM,EAAAA,EAAAA,KACTL,OAAQR,EAAY,GAAGO,QACvBE,UAAWC,EAAAA,GAAAA,6BAEb,CACEJ,MAAOM,EAAAA,EACPL,QAASM,EAAAA,EAAAA,KACTL,OAAQR,EAAY,GAAGO,QACvBE,UAAWC,EAAAA,GAAAA,6BAEb,CACEJ,MAAOM,EAAAA,EACPL,QAASM,EAAAA,EAAAA,KACTL,OAAQR,EAAY,GAAGO,QACvBE,UAAWC,EAAAA,GAAAA,6BAEb,CACEJ,MAAOM,EAAAA,EACPL,QAASM,EAAAA,EAAAA,KACTL,OAAQR,EAAY,GAAGO,QACvBE,UAAWC,EAAAA,GAAAA,6BAEb,CACEJ,MAAOM,EAAAA,EACPL,QAASM,EAAAA,EAAAA,KACTL,OAAQR,EAAY,GAAGO,QACvBE,UAAWC,EAAAA,GAAAA,6BAEb,CACEJ,MAAOM,EAAAA,EACPL,QAASM,EAAAA,EAAAA,KACTL,OAAQR,EAAY,GAAGO,QACvBE,UAAWC,EAAAA,GAAAA,6BAEb,CACEJ,MAAOM,EAAAA,EACPL,QAASM,EAAAA,EAAAA,SACTL,OAAQR,EAAY,GAAGO,QACvBE,UAAWC,EAAAA,GAAAA,8BAIFI,EAAmB,CAC9B,CACER,MAAOL,EAAAA,EACPM,QAASL,EAAAA,GAAAA,gBACTM,OAAQR,EAAY,GAAGO,QACvBE,UAAWC,EAAAA,GAAAA,6BAEb,CACEJ,MAAOL,EAAAA,EACPM,QAASL,EAAAA,GAAAA,SACTM,OAAQR,EAAY,GAAGO,QACvBE,UAAWC,EAAAA,GAAAA,6BAEb,CACEJ,MAAOL,EAAAA,EACPM,QAASL,EAAAA,GAAAA,QACTM,OAAQR,EAAY,GAAGO,QACvBE,UAAWC,EAAAA,GAAAA,6BAEb,CACEJ,MAAOL,EAAAA,EACPM,QAASL,EAAAA,GAAAA,QACTM,OAAQR,EAAY,GAAGO,QACvBE,UAAWC,EAAAA,GAAAA,6BAEb,CACEJ,MAAOL,EAAAA,EACPM,QAASL,EAAAA,GAAAA,gBACTM,OAAQR,EAAY,GAAGO,QACvBE,UAAWC,EAAAA,GAAAA,8BAIFK,EAAc,CACzB,CACET,MAAOM,EAAAA,EACPL,QAASM,EAAAA,EAAAA,SACTL,OAAQR,EAAY,GAAGO,QACvBE,UAAWC,EAAAA,GAAAA,6BAEb,CACEJ,MAAOM,EAAAA,EACPL,QAASM,EAAAA,EAAAA,SACTL,OAAQR,EAAY,GAAGO,QACvBE,UAAWC,EAAAA,GAAAA,6BAEb,CACEJ,MAAOM,EAAAA,EACPL,QAASM,EAAAA,EAAAA,SACTL,OAAQR,EAAY,GAAGO,QACvBE,UAAWC,EAAAA,GAAAA,6BAEb,CACEJ,MAAOM,EAAAA,EACPL,QAASM,EAAAA,EAAAA,SACTL,OAAQR,EAAY,GAAGO,QACvBE,UAAWC,EAAAA,GAAAA,6BAEb,CACEJ,MAAOM,EAAAA,EACPL,QAASM,EAAAA,EAAAA,SACTL,OAAQR,EAAY,GAAGO,QACvBE,UAAWC,EAAAA,GAAAA,6BAEb,CACEJ,MAAOM,EAAAA,EACPL,QAASM,EAAAA,EAAAA,SACTL,OAAQR,EAAY,GAAGO,QACvBE,UAAWC,EAAAA,GAAAA,6BAEb,CACEJ,MAAOM,EAAAA,EACPL,QAASM,EAAAA,EAAAA,SACTL,OAAQR,EAAY,GAAGO,QACvBE,UAAWC,EAAAA,GAAAA,8BAIFM,EAAc,CACzB,CACEV,MAAOM,EAAAA,EACPL,QAASM,EAAAA,EAAAA,SACTL,OAAQT,EAAAA,GAAAA,GAGV,CACEO,MAAOM,EAAAA,EACPL,QAASM,EAAAA,EAAAA,SACTL,OAAQT,EAAAA,GAAAA,GAGV,CACEO,MAAOM,EAAAA,EACPL,QAASM,EAAAA,EAAAA,SACTL,OAAQT,EAAAA,GAAAA,GAGV,CACEO,MAAOM,EAAAA,EACPL,QAASM,EAAAA,EAAAA,SACTL,OAAQT,EAAAA,GAAAA,GAGV,CACEO,MAAOM,EAAAA,EACPL,QAASM,EAAAA,EAAAA,SACTL,OAAQT,EAAAA,GAAAA,G,8FChNL,MAAMkB,E,QAAaC,QAAAA,IAAAA,WAAU,2DAAVA,CAAU,kKACnBC,GAAUA,EAAMC,MAAMC,QAAQC,OAclCC,EAA4BC,IAIlC,IAJmC,MACxCC,EAAK,MACLC,EAAQ,EAAC,OACTC,EAAS,MACV,EACC,MAAMC,EAAU,IAAOF,EACvB,OACEG,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,UACbD,EAAAA,cAACD,EAAK,KAAEH,GACPE,EACG,EA4BV,KAjBmCI,IAO5B,IAP6B,MAClCN,EAAK,SACLO,EAAQ,OACRL,EAAM,SACNM,EAAQ,MACRP,EAAQ,KACLQ,GACJ,EACC,OACEL,EAAAA,cAACZ,EAAeiB,EACbT,GAASI,EAAAA,cAACN,EAAU,CAACE,MAAOA,EAAOE,OAAQA,EAAQD,MAAOA,IAC1DM,GAAYH,EAAAA,cAACN,EAAU,CAACE,MAAOO,EAAUN,MAAOA,EAAQ,IACxDO,EACU,C,yDC/CV,MAAME,EAAsBjB,EAAAA,QAAAA,IAAAA,WAAU,6EAAVA,CAAU,4FA2B7C,IAZqDM,IAG9C,IAH+C,gBACpDY,EAAe,QACfC,GACD,EACC,OACER,EAAAA,cAACM,EAAmB,KAClBN,EAAAA,cAACS,EAAAA,EAAcF,GACdC,GAAWR,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,WAAWO,GAClB,C,mECvBnB,MAAME,EAAkBrB,EAAAA,QAAAA,IAAAA,WAAU,sEAAVA,CAAU,0IAErCD,EAAAA,IAoCJ,IAd6CO,IAAgB,IAAf,MAAEgB,GAAO,EACrD,OACEX,EAAAA,cAACU,EAAe,KACbC,EAAMC,KAAKnB,GAERO,EAAAA,cAACa,EAAAA,GAAI,CAACjB,MAAOH,EAAKG,OAChBI,EAAAA,cAACc,EAAAA,EAAUrB,EAAKsB,UAIN,C,yFCnCtB,MAAMC,EAAc3B,EAAAA,QAAAA,MAAAA,WAAY,8DAAZA,CAAY,MAAG,8HAInC,MAAM4B,EAAiBC,GACrBA,UAAgD,IAATA,EAkBnCC,EAA2BxB,IAO1B,IAP2B,MAChCyB,EAAK,SACLC,EAAQ,QACRC,EAAO,QACPC,EAAO,UACPtB,EAAS,KACTuB,GACD,EACC,MAAMC,EAASJ,EAAW,KAAO,KAC3BK,EAAaF,EAAOG,EAAAA,GAAOC,EAAAA,SAC3BC,EAAoBL,EAAO,CAAEM,GAAIN,GAAS,CAAC,EAEjD,OACExB,EAAAA,cAACyB,EAAM,CAACF,QAASA,EAAStB,UAAWA,GACnCD,EAAAA,cAAC0B,EAAeG,EAAeP,GAAW,IACnC,EAgBPS,EAA4B7B,IAK3B,IAL4B,KACjC8B,EAAI,SACJX,EAAQ,UACRpB,EAAS,kBACTgC,EAAoB,IACrB,EACC,OACEjC,EAAAA,cAAAA,KAAAA,CAAIC,UAAWA,GACZ+B,EAAKpB,KAAI,CAACsB,EAAUC,KACnB,GAAIlB,EAAciB,GAAM,OAAO,KAC/B,MAAME,EAbOF,IACJ,iBAARA,GAA4B,OAARA,GAAgBA,EAAIG,eAAe,WAYvCC,CAAYJ,GACvBK,EAAaH,EAA8BF,EAAnB,CAAEZ,QAASY,GACzC,OACElC,EAAAA,cAACmB,EAAG,eACFqB,IAAKL,EACLf,MAAOe,EACPd,SAAUA,GAAYY,EAAkBQ,SAASN,IAC7CI,GACJ,IAGH,EAYHG,EAA8CC,IAAAA,IAAC,IACnDC,EAAG,KACHC,EAAI,kBACJZ,GACD,SACCjC,EAAAA,cAAC4C,EAAG,KACDC,EAAKjC,KAAI,CAACkC,EAAKX,IACVlB,EAAc6B,GAAa,KAE7B9C,EAAAA,cAAC+B,EAAG,eACFS,IAAKL,EACLd,SAAkB,UAARuB,EACVX,kBAAmBA,GACfa,MAIN,EAqBKhC,EAAgCiC,IAStC,IATuC,MAC5CC,EAAK,MACLC,EAAK,MACLC,EAAK,OACLC,EAAM,UACNC,EAAS,QACT5C,EAAO,kBACPyB,EAAiB,UACjBhC,GACD,EACC,OACED,EAAAA,cAAAA,EAAAA,CAA0BC,UAAWA,EAAU,MAA7BkD,GACfC,GACCpD,EAAAA,cAAAA,WAAAA,KACGoD,EAAUxC,KAAI,CAACyC,EAAIlB,IAClBnC,EAAAA,cAAAA,MAAAA,OAAAA,OAAAA,CAAKwC,IAAKL,GAAOkB,OAItB7C,GAAWR,EAAAA,cAAAA,UAAAA,KAAUQ,GACrBwC,GACChD,EAAAA,cAAC0C,EAAY,CACXE,IAAI,QACJC,KAAMG,EACNf,kBAAmBA,IAGtBgB,GACCjD,EAAAA,cAAC0C,EAAY,CACXE,IAAI,QACJC,KAAMI,EACNhB,kBAAmBA,IAGtBiB,GACClD,EAAAA,cAAC0C,EAAY,CACXE,IAAI,QACJC,KAAMK,EACNjB,kBAAmBA,IAGX,C,yHCjKX,MAAMqB,EAAiBjE,EAAAA,QAAAA,IAAAA,WAAU,mEAAVA,CAAU,qFAMvBC,GAAUA,EAAMiE,QAAU,KAC7BjE,GAAUA,EAAMkE,UAAY,IAa1C,MAR2C7D,IAA+B,IAA9B,MAAE8D,EAAK,KAAEC,EAAI,QAAEC,GAAS,EAClE,OACE3D,EAAAA,cAACsD,EAAc,CAACC,OAAQE,EAAOD,SAAUG,GACtCD,EACc,ECfd,MAAME,EAAkBvE,EAAAA,QAAAA,IAAAA,WAAU,qEAAVA,CAAU,MAEnCwE,GAAcC,EAAAA,EAAAA,KAAG,qdAkGvB,MA1D8CC,IAC5C,MAAMzE,EAAQ,IAAK0E,EAAAA,MAA4BD,IAEzC,UAAEE,EAAS,aAAEC,EAAY,gBAAEC,EAAe,OAAEC,EAAM,WAAEC,GACxD/E,GACKgF,EAAIC,GAAMN,EAEXO,EAAWD,EAAKD,EAAK,EACrBG,EAAcL,EAAoBM,OAElCC,EAAqB,GAC3B,IAAK,IAAIxC,EAAI,EAAGA,EAAIqC,EAAUrC,IAC5BwC,EAASC,KAAKN,EAAKnC,GAGrB,MAAM0C,EAAqB,GAC3B,IAAK,IAAI1C,EAAI,EAAGA,EAAIqC,EAAUrC,IAC5B0C,EAASD,MAAKE,EAAAA,EAAAA,IAAeR,EAAKnC,IAGpC,MAAM4C,EAAwB,GAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAIP,EAAYO,IAAK,CACnC,MAAMC,EAAsB,GAC5B,IAAK,IAAIC,EAAIZ,EAAIY,GAAKX,EAAIW,IACxBD,EAAML,KAAK,CACTtD,QACEtB,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,gBACbD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,gBACfD,EAAAA,cAACmF,EAAQ,CACP1B,MAAQY,EAAmB,CACzBe,YAAaJ,EACbK,UAAWH,KACR5F,IAELoE,KAAK,GACLC,QAAS,OAMnBoB,EAAQH,KAAK,CACX5C,KAAMiD,GAEV,CAEA,OACEjF,EAAAA,cAAC4D,EAAe,KACd5D,EAAAA,cAACc,EAAAA,EAAK,CACJkC,MAAOmB,EAAkB,CAAC,CAAEnC,KAAM2C,SAAcW,EAChDrC,MAAOiB,EAAe,CAAC,CAAElC,KAAM6C,SAAcS,EAC7CpC,MAAO6B,EACP5B,OAAQU,IAEM,C,0ICtGf,IAAK0B,GAiBX,SAjBWA,GAAAA,EAAQ,oBAARA,EAAQ,+BAARA,EAAQ,6BAARA,EAAQ,YAARA,EAAQ,yBAARA,EAAQ,eAARA,EAAQ,gBAARA,EAAQ,cAARA,EAAQ,gBAARA,EAAQ,eAARA,EAAQ,eAARA,EAAQ,eAARA,EAAQ,eAARA,EAAQ,eAARA,EAAQ,eAARA,EAAQ,eAiBnB,CAjBWA,IAAAA,EAAQ,KAyBpB,MAAMC,EAAe,CAACC,EAAcC,EAAcC,KAAe,CAC7DF,KACAC,OACAC,UAGEC,EAAW,CAACC,EAAgBC,IAA2B7H,EAAAA,EAAAA,QAAa4H,EAAQC,GAAQC,IAAI,GAEjFC,EAAoB,IAAIC,IAAuB,CACxD,CAACV,EAASW,SAAUV,EAChBD,EAASW,SACT,kBACA,CACIN,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,MAG3B,CAACqH,EAASY,KAAMX,EACZD,EAASY,KACT,WACA,CACIP,EAAS1H,EAAAA,GAAAA,GAAW,GACpB0H,EAAS1H,EAAAA,GAAAA,GAAW,GACpB0H,EAAS1H,EAAAA,GAAAA,GAAW,GACpB0H,EAAS1H,EAAAA,GAAAA,GAAW,GACpB0H,EAAS1H,EAAAA,GAAAA,GAAW,GACpB0H,EAAS1H,EAAAA,GAAAA,GAAW,MAG5B,CAACqH,EAASa,WAAYZ,EAClBD,EAASa,WACT,kBACA,CACIR,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,MAG3B,CAACqH,EAASc,cAAeb,EACrBD,EAASc,cACT,wBACA,CACIT,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,MAG3B,CAACqH,EAASe,aAAcd,EACpBD,EAASe,aACT,gBACA,CACIV,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,MAG3B,CAACqH,EAASgB,MAAOf,EACbD,EAASgB,MACT,aACA,CACIX,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,MAG3B,CAACqH,EAASiB,OAAQhB,EACdD,EAASiB,OACT,SACA,CACIZ,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,MAgB3B,CAACqH,EAASkB,OAAQjB,EACdD,EAASkB,OACT,SACA,CACIb,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,MAG3B,CAACqH,EAASmB,MAAOlB,EACbD,EAASmB,MACT,SACA,CACId,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,GAAW,GACpB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,MAG3B,CAACqH,EAASoB,MAAOnB,EACbD,EAASoB,MACT,SACA,CACIf,EAAS1H,EAAAA,GAAAA,GAAW,GACpB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,GAAW,GACpB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,GAAW,GACpB0H,EAAS1H,EAAAA,GAAAA,EAAU,MAG3B,CAACqH,EAASqB,MAAOpB,EACbD,EAASqB,MACT,SACA,CACIhB,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,MAG3B,CAACqH,EAASsB,MAAOrB,EACbD,EAASsB,MACT,SACA,CACIjB,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,GAAW,GACpB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,MAG3B,CAACqH,EAASuB,MAAOtB,EACbD,EAASuB,MACT,SACA,CACIlB,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,GAAW,GACpB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,MAG3B,CAACqH,EAASwB,MAAOvB,EACbD,EAASwB,MACT,SACA,CACInB,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,MAG3B,CAACqH,EAASyB,MAAOxB,EACbD,EAASyB,MACT,SACA,CACIpB,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,GACnB0H,EAAS1H,EAAAA,GAAAA,EAAU,QAKlB+I,EAA0BC,EAAAA,EAAAA,WAAsBlB,E,qHCzMtD,MAAMmB,EAAsB,EACjC,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAKWC,GAFkBC,KAAKC,IAAI,GAAO,EAAI,IAEhB,CACjCC,EACAC,EACApC,KAEA,IAAKoC,IAAYA,EAAQ7B,MAAO,OAAO,EACvC,MAAM8B,EAAID,EAAQ7B,MAAMP,GAClBsC,EAAIH,EAASI,YACnB,OAAIC,MAAMC,QAAQJ,GACTA,EAAEK,MAAMC,GAAMC,EAAsBN,EAAGK,KACxB,iBAANN,GACTO,EAAsBN,EAAGD,EAEtB,GAiBDzD,EAA2C,CACtDC,UAAW,CAAC,EAAG,IACfG,OAAQ4B,EAAAA,GAAAA,IAAsBT,EAAAA,GAAAA,UAAmBI,MACjDzB,cAAc,EACdC,iBAAiB,EACjBE,WAnB2B/E,IAC3B,MAAM,YAAE8F,EAAW,UAAEC,EAAS,OAAEjB,EAAM,MAAE3F,EAAK,QAAE+I,GAAYlI,EACrD2I,EAAY7D,EAAOgB,GAAeC,GACjCkC,EAAUW,GAAQzJ,EAAM0J,qBAAqBF,GAEpD,GAAKC,EAEL,OAAIV,IAAYJ,EAAoBG,EAAUC,EAASpC,GAC/C,YAGDmC,EAASa,UAAU,GAmBftD,EAAkBuD,IAC7B,GAAmB,IAAfA,EAAkB,MAAO,GAC7B,MAAMC,EAAMD,EAAa,GACzB,OAAY,IAARC,EAAkB,MACbnB,EAAoBmB,GAAa,IACnC,EAAE,EAGLN,EAAwB,CAACN,EAAWD,IACjCC,EAAI,IAAMD,C,sHCnGZ,IAAK5I,GA8BX,SA9BWA,GAAAA,EAAS,YAATA,EAAS,4CAATA,EAAS,4CAATA,EAAS,4CAATA,EAAS,4CAATA,EAAS,4CAATA,EAAS,4CAATA,EAAS,4CAATA,EAAS,4CAATA,EAAS,4CAATA,EAAS,4CAATA,EAAS,gDAATA,EAAS,gDAATA,EAAS,gDAATA,EAAS,gDAATA,EAAS,gDAATA,EAAS,oCAATA,EAAS,oCAATA,EAAS,oCAATA,EAAS,oCAATA,EAAS,oCAATA,EAAS,oCAATA,EAAS,0DAATA,EAAS,0DAATA,EAAS,0DAATA,EAAS,0DAATA,EAAS,0DAATA,EAAS,0DAATA,EAAS,0DA8BpB,CA9BWA,IAAAA,EAAS,KAsCrB,MAAM2G,EAAe,CAACC,EAAeC,EAAcC,KAA4B,CAC3EF,KACAC,OACAC,UAGS4C,EAAqB,IAAItC,IAAyB,CAE3D,CAACpH,EAAU2J,qBAAsBhD,EAC7B3G,EAAU2J,qBACV,gBACA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,QAEpB,CAAC3J,EAAU4J,qBAAsBjD,EAC7B3G,EAAU4J,qBACV,gBACA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,QAEpB,CAAC5J,EAAU6J,qBAAsBlD,EAC7B3G,EAAU6J,qBACV,gBACA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,KAEpB,CAAC7J,EAAU8J,qBAAsBnD,EAC7B3G,EAAU8J,qBACV,gBACA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,KAEpB,CAAC9J,EAAU+J,qBAAsBpD,EAC7B3G,EAAU+J,qBACV,gBACA,CAAC,EAAG,EAAG,EAAG,EAAG,KAAM,QAGvB,CAAC/J,EAAUgK,qBAAsBrD,EAC7B3G,EAAUgK,qBACV,oBACA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,QAEpB,CAAChK,EAAUiK,qBAAsBtD,EAC7B3G,EAAUiK,qBACV,oBACA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,QAEpB,CAACjK,EAAUkK,qBAAsBvD,EAC7B3G,EAAUkK,qBACV,oBACA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,KAEpB,CAAClK,EAAUmK,qBAAsBxD,EAC7B3G,EAAUmK,qBACV,oBACA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,KAEpB,CAACnK,EAAUoK,qBAAsBzD,EAC7B3G,EAAUoK,qBACV,oBACA,CAAC,EAAG,EAAG,EAAG,EAAG,KAAM,QAGvB,CAACpK,EAAUqK,uBAAwB1D,EAC/B3G,EAAUqK,uBACV,oBACA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,QAEpB,CAACrK,EAAUsK,uBAAwB3D,EAC/B3G,EAAUsK,uBACV,oBACA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,QAEpB,CAACtK,EAAUuK,uBAAwB5D,EAC/B3G,EAAUuK,uBACV,oBACA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,KAEpB,CAACvK,EAAUwK,uBAAwB7D,EAC/B3G,EAAUwK,uBACV,oBACA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,KAEpB,CAACxK,EAAUyK,uBAAwB9D,EAC/B3G,EAAUyK,uBACV,oBACA,CAAC,EAAG,EAAG,EAAG,EAAG,KAAM,QAGvB,CAACzK,EAAU0K,iBAAkB/D,EACzB3G,EAAU0K,iBACV,cACA,CAAC,KAAM,KAAM,KAAM,EAAG,EAAG,KAE7B,CAAC1K,EAAU2K,iBAAkBhE,EACzB3G,EAAU2K,iBACV,cACA,CAAC,KAAM,KAAM,EAAG,EAAG,KAAM,KAE7B,CAAC3K,EAAU4K,iBAAkBjE,EACzB3G,EAAU4K,iBACV,cACA,CAAC,KAAM,KAAM,EAAG,EAAG,EAAG,QAE1B,CAAC5K,EAAU6K,iBAAkBlE,EACzB3G,EAAU6K,iBACV,cACA,CAAC,KAAM,EAAG,EAAG,KAAM,EAAG,QAE1B,CAAC7K,EAAU8K,iBAAkBnE,EACzB3G,EAAU8K,iBACV,cACA,CAAC,KAAM,EAAG,EAAG,EAAG,KAAM,QAE1B,CAAC9K,EAAU+K,iBAAkBpE,EACzB3G,EAAU+K,iBACV,cACA,CAAC,EAAG,EAAG,KAAM,EAAG,KAAM,QAG1B,CAAC/K,EAAUgL,4BAA6BrE,EACpC3G,EAAUgL,4BACV,0BACA,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,MAEhE,CAAChL,EAAUiL,4BAA6BtE,EACpC3G,EAAUiL,4BACV,yBACA,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,MAE7D,CAACjL,EAAUkL,4BAA6BvE,EACpC3G,EAAUkL,4BACV,yBACA,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,EAAG,MAEhE,CAAClL,EAAUmL,4BAA6BxE,EACpC3G,EAAUmL,4BACV,2BACA,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,MAEhE,CAACnL,EAAUoL,4BAA6BzE,EACpC3G,EAAUoL,4BACV,yBACA,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,MAE7D,CAACpL,EAAUqL,4BAA6B1E,EACpC3G,EAAUqL,4BACV,6BACA,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,MAE7D,CAACrL,EAAUsL,4BAA6B3E,EACpC3G,EAAUsL,4BACV,0BACA,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,QAIvDC,EAAkBlD,EAAAA,EAAAA,WAAsBqB,E","sources":["webpack://play-what/./src/components/pages/dev/notebook/shapes/caged.shared.ts","webpack://play-what/./src/components/ui/Card.tsx","webpack://play-what/./src/components/ui/FretboardCell.tsx","webpack://play-what/./src/components/ui/SmartCard.tsx","webpack://play-what/./src/components/ui/Table.tsx","webpack://play-what/./src/viewers/fret-table/FretFlag.tsx","webpack://play-what/./src/viewers/fret-table/FretTable.tsx","webpack://play-what/./src/viewers/fretboard/Fretboard.tuning.ts","webpack://play-what/./src/viewers/fretboard/Fretboard.utils.ts","webpack://play-what/./src/viewers/fretboard/Fretboard.voicing.ts"],"sourcesContent":["import Chord from \"../../../../../core/models/Chord\";\r\nimport {\r\n  ChordId,\r\n  NoteId,\r\n  ScaleId,\r\n} from \"../../../../../core/models/Model.constants\";\r\nimport Note from \"../../../../../core/models/Note\";\r\nimport Scale from \"../../../../../core/models/Scale\";\r\nimport { VoicingId } from \"../../../../../viewers/fretboard/Fretboard.voicing\";\r\n\r\nconst ROOT = Note.fromId(NoteId.C);\r\n\r\nconst SCALE = new Scale(ScaleId.Ionian, { root: ROOT });\r\nconst SCALE_NOTES = SCALE.notes as Note[];\r\n\r\nexport const DIATONIC_ITEMS = [\r\n  {\r\n    model: Scale,\r\n    modelId: ScaleId.Ionian,\r\n    rootId: SCALE_NOTES[0].modelId,\r\n    voicingId: VoicingId.Scale_DoubleOctave_EShape_2,\r\n  },\r\n  {\r\n    model: Scale,\r\n    modelId: ScaleId.Dorian,\r\n    rootId: SCALE_NOTES[1].modelId,\r\n    voicingId: VoicingId.Scale_DoubleOctave_DShape_1,\r\n  },\r\n  {\r\n    model: Scale,\r\n    modelId: ScaleId.Phrygian,\r\n    rootId: SCALE_NOTES[2].modelId,\r\n    voicingId: VoicingId.Scale_DoubleOctave_CShape_1,\r\n  },\r\n  {\r\n    model: Scale,\r\n    modelId: ScaleId.Lydian,\r\n    rootId: SCALE_NOTES[3].modelId,\r\n    voicingId: VoicingId.Scale_DoubleOctave_CShape_2,\r\n  },\r\n  {\r\n    model: Scale,\r\n    modelId: ScaleId.Mixolydian,\r\n    rootId: SCALE_NOTES[4].modelId,\r\n    voicingId: VoicingId.Scale_DoubleOctave_AShape_1,\r\n  },\r\n  {\r\n    model: Scale,\r\n    modelId: ScaleId.Aeolian,\r\n    rootId: SCALE_NOTES[5].modelId,\r\n    voicingId: VoicingId.Scale_DoubleOctave_GShape_1,\r\n  },\r\n  {\r\n    model: Scale,\r\n    modelId: ScaleId.Locrian,\r\n    rootId: SCALE_NOTES[6].modelId,\r\n    voicingId: VoicingId.Scale_DoubleOctave_EShape_1,\r\n  },\r\n];\r\n\r\nexport const ROMAN_NUMERAL_ITEMS = [\r\n  {\r\n    model: Chord,\r\n    modelId: ChordId.Maj7,\r\n    rootId: SCALE_NOTES[0].modelId,\r\n    voicingId: VoicingId.Scale_DoubleOctave_EShape_2,\r\n  },\r\n  {\r\n    model: Chord,\r\n    modelId: ChordId.Min7,\r\n    rootId: SCALE_NOTES[1].modelId,\r\n    voicingId: VoicingId.Scale_DoubleOctave_DShape_1,\r\n  },\r\n  {\r\n    model: Chord,\r\n    modelId: ChordId.Min7,\r\n    rootId: SCALE_NOTES[2].modelId,\r\n    voicingId: VoicingId.Scale_DoubleOctave_CShape_1,\r\n  },\r\n  {\r\n    model: Chord,\r\n    modelId: ChordId.Maj7,\r\n    rootId: SCALE_NOTES[3].modelId,\r\n    voicingId: VoicingId.Scale_DoubleOctave_CShape_2,\r\n  },\r\n  {\r\n    model: Chord,\r\n    modelId: ChordId.Dom7,\r\n    rootId: SCALE_NOTES[4].modelId,\r\n    voicingId: VoicingId.Scale_DoubleOctave_AShape_1,\r\n  },\r\n  {\r\n    model: Chord,\r\n    modelId: ChordId.Min7,\r\n    rootId: SCALE_NOTES[5].modelId,\r\n    voicingId: VoicingId.Scale_DoubleOctave_GShape_1,\r\n  },\r\n  {\r\n    model: Chord,\r\n    modelId: ChordId.HalfDim7,\r\n    rootId: SCALE_NOTES[6].modelId,\r\n    voicingId: VoicingId.Scale_DoubleOctave_EShape_1,\r\n  },\r\n];\r\n\r\nexport const PENTATONIC_ITEMS = [\r\n  {\r\n    model: Scale,\r\n    modelId: ScaleId.MajorPentatonic,\r\n    rootId: SCALE_NOTES[0].modelId,\r\n    voicingId: VoicingId.Scale_DoubleOctave_EShape_2,\r\n  },\r\n  {\r\n    model: Scale,\r\n    modelId: ScaleId.Egyptian,\r\n    rootId: SCALE_NOTES[1].modelId,\r\n    voicingId: VoicingId.Scale_DoubleOctave_DShape_1,\r\n  },\r\n  {\r\n    model: Scale,\r\n    modelId: ScaleId.ManGong,\r\n    rootId: SCALE_NOTES[2].modelId,\r\n    voicingId: VoicingId.Scale_DoubleOctave_CShape_1,\r\n  },\r\n  {\r\n    model: Scale,\r\n    modelId: ScaleId.Ritusen,\r\n    rootId: SCALE_NOTES[4].modelId,\r\n    voicingId: VoicingId.Scale_DoubleOctave_AShape_1,\r\n  },\r\n  {\r\n    model: Scale,\r\n    modelId: ScaleId.MinorPentatonic,\r\n    rootId: SCALE_NOTES[5].modelId,\r\n    voicingId: VoicingId.Scale_DoubleOctave_CShape_1,\r\n  },\r\n];\r\n\r\nexport const TRIAD_ITEMS = [\r\n  {\r\n    model: Chord,\r\n    modelId: ChordId.MajTriad,\r\n    rootId: SCALE_NOTES[0].modelId,\r\n    voicingId: VoicingId.Scale_DoubleOctave_EShape_2,\r\n  },\r\n  {\r\n    model: Chord,\r\n    modelId: ChordId.MinTriad,\r\n    rootId: SCALE_NOTES[1].modelId,\r\n    voicingId: VoicingId.Scale_DoubleOctave_DShape_1,\r\n  },\r\n  {\r\n    model: Chord,\r\n    modelId: ChordId.MinTriad,\r\n    rootId: SCALE_NOTES[2].modelId,\r\n    voicingId: VoicingId.Scale_DoubleOctave_CShape_1,\r\n  },\r\n  {\r\n    model: Chord,\r\n    modelId: ChordId.MajTriad,\r\n    rootId: SCALE_NOTES[3].modelId,\r\n    voicingId: VoicingId.Scale_DoubleOctave_CShape_2,\r\n  },\r\n  {\r\n    model: Chord,\r\n    modelId: ChordId.MajTriad,\r\n    rootId: SCALE_NOTES[4].modelId,\r\n    voicingId: VoicingId.Scale_DoubleOctave_AShape_1,\r\n  },\r\n  {\r\n    model: Chord,\r\n    modelId: ChordId.MinTriad,\r\n    rootId: SCALE_NOTES[5].modelId,\r\n    voicingId: VoicingId.Scale_DoubleOctave_GShape_1,\r\n  },\r\n  {\r\n    model: Chord,\r\n    modelId: ChordId.DimTriad,\r\n    rootId: SCALE_NOTES[6].modelId,\r\n    voicingId: VoicingId.Scale_DoubleOctave_EShape_1,\r\n  },\r\n];\r\n\r\nexport const SHAPE_ITEMS = [\r\n  {\r\n    model: Chord,\r\n    modelId: ChordId.MajTriad,\r\n    rootId: NoteId.C,\r\n    //voicingId: VoicingId.Scale_DoubleOctave_EShape_2,\r\n  },\r\n  {\r\n    model: Chord,\r\n    modelId: ChordId.MajTriad,\r\n    rootId: NoteId.C,\r\n    //voicingId: VoicingId.Scale_DoubleOctave_DShape_1,\r\n  },\r\n  {\r\n    model: Chord,\r\n    modelId: ChordId.MajTriad,\r\n    rootId: NoteId.C,\r\n    //voicingId: VoicingId.Scale_DoubleOctave_CShape_1,\r\n  },\r\n  {\r\n    model: Chord,\r\n    modelId: ChordId.MajTriad,\r\n    rootId: NoteId.C,\r\n    //voicingId: VoicingId.Scale_DoubleOctave_CShape_2,\r\n  },\r\n  {\r\n    model: Chord,\r\n    modelId: ChordId.MajTriad,\r\n    rootId: NoteId.C,\r\n    //voicingId: VoicingId.Scale_DoubleOctave_AShape_1,\r\n  },\r\n];\r\n","import React, { PropsWithChildren } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const StyledCard = styled.div`\r\n  background: ${(props) => props.theme.surface.card};\r\n  width: 100%;\r\n  border-radius: 16px;\r\n  padding: 16px;\r\n\r\n  .header {\r\n    margin-bottom: 16px;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nexport const CardHeader: React.FC<any> = ({\r\n  title,\r\n  level = 2,\r\n  action = null,\r\n}) => {\r\n  const AsTag: any = `h${level}`;\r\n  return (\r\n    <div className=\"header\">\r\n      <AsTag>{title}</AsTag>\r\n      {action}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport interface ICardProps extends PropsWithChildren<any> {\r\n  title?: string;\r\n  subtitle?: string;\r\n  action?: any;\r\n  level?: number;\r\n}\r\n\r\nconst Card: React.FC<ICardProps> = ({\r\n  title,\r\n  subtitle,\r\n  action,\r\n  children,\r\n  level = 1,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <StyledCard {...rest}>\r\n      {title && <CardHeader title={title} action={action} level={level} />}\r\n      {subtitle && <CardHeader title={subtitle} level={level + 1} />}\r\n      {children}\r\n    </StyledCard>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport FretTable from \"../../viewers/fret-table/FretTable\";\r\nimport { IFretboardProps } from \"../../viewers/fretboard/Fretboard.utils\";\r\n\r\nexport const StyledFretboardCell = styled.div`\r\n  padding: 8px;\r\n  .caption {\r\n    font-weight: bold;\r\n    font-size: 90%;\r\n    text-align: center;\r\n    margin-top: 8px;\r\n  }\r\n`;\r\n\r\ninterface IFretboardCellProps {\r\n  fretboardConfig: IFretboardProps;\r\n  caption?: string;\r\n}\r\n\r\nconst FretboardCell: React.FC<IFretboardCellProps> = ({\r\n  fretboardConfig,\r\n  caption,\r\n}) => {\r\n  return (\r\n    <StyledFretboardCell>\r\n      <FretTable {...fretboardConfig} />\r\n      {caption && <div className=\"caption\">{caption}</div>}\r\n    </StyledFretboardCell>\r\n  );\r\n};\r\n\r\nexport default FretboardCell;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Card, { StyledCard } from \"./Card\";\r\nimport { ITableConfig, Table } from \"./Table\";\r\n\r\nexport const StyledSmartCard = styled.div`\r\n  overflow-x: scroll;\r\n  ${StyledCard} {\r\n    min-width: 1024px;\r\n    margin-top: 16px;\r\n    > table {\r\n      table-layout: fixed;\r\n      width: 100%;\r\n      > tbody > tr > td {\r\n        vertical-align: top;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface ICardConfig {\r\n  title: string;\r\n  table: ITableConfig;\r\n}\r\n\r\ninterface ISmartCardProps {\r\n  cards: ICardConfig[];\r\n}\r\n\r\nconst SmartCard: React.FC<ISmartCardProps> = ({ cards }) => {\r\n  return (\r\n    <StyledSmartCard>\r\n      {cards.map((card) => {\r\n        return (\r\n          <Card title={card.title}>\r\n            <Table {...card.table} />\r\n          </Card>\r\n        );\r\n      })}\r\n    </StyledSmartCard>\r\n  );\r\n};\r\n\r\nexport default SmartCard;\r\n","import { Link } from \"gatsby\";\r\nimport React, { Fragment, ReactNode } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledTable = styled.table``;\r\n\r\ntype TOmit = undefined | null | false;\r\n\r\nconst getIsTypeOmit = (data: any): data is TOmit =>\r\n  data === undefined || data === null || data === false;\r\n\r\n// Col\r\n\r\nexport interface IColConfig {\r\n  isHeader?: boolean;\r\n  content: any;\r\n  colSpan?: number;\r\n  className?: string;\r\n  link?: string;\r\n}\r\n\r\ninterface IColProps extends IColConfig {\r\n  index: number;\r\n}\r\n\r\ntype TCol = string | number | IColConfig | ReactNode;\r\n\r\nconst Col: React.FC<IColProps> = ({\r\n  index,\r\n  isHeader,\r\n  content,\r\n  colSpan,\r\n  className,\r\n  link,\r\n}) => {\r\n  const ColTag = isHeader ? \"th\" : \"td\";\r\n  const WrapperTag = link ? Link : Fragment;\r\n  const wrapperProps: any = link ? { to: link } : {};\r\n\r\n  return (\r\n    <ColTag colSpan={colSpan} className={className}>\r\n      <WrapperTag {...wrapperProps}>{content || \"\"}</WrapperTag>\r\n    </ColTag>\r\n  );\r\n};\r\n\r\n// Row\r\n\r\nexport interface IRowConfig {\r\n  cols: (TCol | TOmit)[];\r\n  className?: string;\r\n  isHeader?: boolean;\r\n  headerColIndicies?: number[];\r\n}\r\n\r\nconst getIsConfig = (col: TCol): col is IColConfig =>\r\n  typeof col === \"object\" && col !== null && col.hasOwnProperty(\"content\");\r\n\r\nconst Row: React.FC<IRowConfig> = ({\r\n  cols,\r\n  isHeader,\r\n  className,\r\n  headerColIndicies = [],\r\n}) => {\r\n  return (\r\n    <tr className={className}>\r\n      {cols.map((col: any, i) => {\r\n        if (getIsTypeOmit(col)) return null;\r\n        const isConfig = getIsConfig(col);\r\n        const colConfig = !isConfig ? { content: col } : col;\r\n        return (\r\n          <Col\r\n            key={i}\r\n            index={i}\r\n            isHeader={isHeader || headerColIndicies.includes(i)}\r\n            {...colConfig}\r\n          />\r\n        );\r\n      })}\r\n    </tr>\r\n  );\r\n};\r\n\r\n// Table Section\r\n\r\ninterface ITableSectionConfig {\r\n  Tag: \"thead\" | \"tfoot\" | \"tbody\";\r\n  rows: (IRowConfig | TOmit)[];\r\n  headerColIndicies?: number[];\r\n}\r\n\r\nconst TableSection: React.FC<ITableSectionConfig> = ({\r\n  Tag,\r\n  rows,\r\n  headerColIndicies,\r\n}) => (\r\n  <Tag>\r\n    {rows.map((row, i) => {\r\n      if (getIsTypeOmit(row)) return null;\r\n      return (\r\n        <Row\r\n          key={i}\r\n          isHeader={Tag !== \"tbody\"}\r\n          headerColIndicies={headerColIndicies}\r\n          {...row}\r\n        />\r\n      );\r\n    })}\r\n  </Tag>\r\n);\r\n\r\n// Table\r\n\r\ninterface IColGroup {\r\n  span?: number;\r\n  className?: string;\r\n}\r\n\r\nexport interface ITableConfig {\r\n  thead?: (IRowConfig | TOmit)[];\r\n  tfoot?: (IRowConfig | TOmit)[];\r\n  tbody: (IRowConfig | TOmit)[];\r\n  styles?: any;\r\n  caption?: string;\r\n  colGroups?: IColGroup[];\r\n  className?: string;\r\n  headerColIndicies?: number[];\r\n}\r\n\r\nexport const Table: React.FC<ITableConfig> = ({\r\n  thead,\r\n  tfoot,\r\n  tbody,\r\n  styles,\r\n  colGroups,\r\n  caption,\r\n  headerColIndicies,\r\n  className,\r\n}) => {\r\n  return (\r\n    <StyledTable css={styles} className={className}>\r\n      {colGroups && (\r\n        <colgroup>\r\n          {colGroups.map((cg, i) => (\r\n            <col key={i} {...cg} />\r\n          ))}\r\n        </colgroup>\r\n      )}\r\n      {caption && <caption>{caption}</caption>}\r\n      {thead && (\r\n        <TableSection\r\n          Tag=\"thead\"\r\n          rows={thead}\r\n          headerColIndicies={headerColIndicies}\r\n        />\r\n      )}\r\n      {tfoot && (\r\n        <TableSection\r\n          Tag=\"tfoot\"\r\n          rows={tfoot}\r\n          headerColIndicies={headerColIndicies}\r\n        />\r\n      )}\r\n      {tbody && (\r\n        <TableSection\r\n          Tag=\"tbody\"\r\n          rows={tbody}\r\n          headerColIndicies={headerColIndicies}\r\n        />\r\n      )}\r\n    </StyledTable>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IFretFlagProps {\r\n  color?: string;\r\n  text?: string | number;\r\n  opacity?: number;\r\n}\r\n\r\nexport const StyledFretFlag = styled.div<{\r\n  $color?: string;\r\n  $opacity?: number;\r\n}>`\r\n  height: 16px;\r\n  width: 16px;\r\n  background: ${(props) => props.$color || \"\"};\r\n  opacity: ${(props) => props.$opacity || 1};\r\n  border-radius: 100%;\r\n  z-index: 1;\r\n`;\r\n\r\nconst FretFlag: React.FC<IFretFlagProps> = ({ color, text, opacity }) => {\r\n  return (\r\n    <StyledFretFlag $color={color} $opacity={opacity}>\r\n      {text}\r\n    </StyledFretFlag>\r\n  );\r\n};\r\n\r\nexport default FretFlag;\r\n","import * as React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { IColConfig, IRowConfig, Table } from \"../../components/ui/Table\";\r\nimport {\r\n  DEFAULT_FRETBOARD_PROPS,\r\n  getDotsForFret,\r\n  IFretboardProps,\r\n} from \"../fretboard/Fretboard.utils\";\r\nimport FretFlag from \"./FretFlag\";\r\n\r\nexport const StyledFretTable = styled.div``;\r\n\r\nconst tableStyles = css`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  td,\r\n  th {\r\n    min-width: 18px;\r\n    text-align: center;\r\n  }\r\n  tbody td {\r\n    background-color: #e8dbb8;\r\n\r\n    border-right: 1px solid grey;\r\n    &:first-child {\r\n      border-left: 1px solid grey;\r\n    }\r\n    .fret-content {\r\n      min-height: 32px;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      position: relative;\r\n    }\r\n    .fret-string {\r\n      height: 1px;\r\n      background: #bbb;\r\n      width: 100%;\r\n      position: absolute;\r\n      margin: auto 0;\r\n    }\r\n  }\r\n  tbody tr {\r\n    &:first-child {\r\n      border-top: 1px solid grey;\r\n    }\r\n    &:last-child {\r\n      border-bottom: 1px solid grey;\r\n    }\r\n  }\r\n`;\r\n\r\nconst FretTable: React.FC<IFretboardProps> = (userProps) => {\r\n  const props = { ...DEFAULT_FRETBOARD_PROPS, ...userProps };\r\n\r\n  const { fretRange, showFretDots, showFretNumbers, tuning, colorMapFn } =\r\n    props;\r\n  const [lo, hi] = fretRange as [number, number];\r\n\r\n  const numFrets = hi - lo + 1;\r\n  const numStrings = (tuning as number[]).length;\r\n\r\n  const fretNums: number[] = [];\r\n  for (let i = 0; i < numFrets; i++) {\r\n    fretNums.push(lo + i);\r\n  }\r\n\r\n  const fretDots: string[] = [];\r\n  for (let i = 0; i < numFrets; i++) {\r\n    fretDots.push(getDotsForFret(lo + i));\r\n  }\r\n\r\n  const strings: IRowConfig[] = [];\r\n  for (let s = 0; s < numStrings; s++) {\r\n    const frets: IColConfig[] = [];\r\n    for (let f = lo; f <= hi; f++) {\r\n      frets.push({\r\n        content: (\r\n          <div className=\"fret-content\">\r\n            <div className=\"fret-string\" />\r\n            <FretFlag\r\n              color={(colorMapFn as any)({\r\n                stringIndex: s,\r\n                fretIndex: f,\r\n                ...props,\r\n              })}\r\n              text=\"\"\r\n              opacity={1}\r\n            />\r\n          </div>\r\n        ),\r\n      });\r\n    }\r\n    strings.push({\r\n      cols: frets,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <StyledFretTable>\r\n      <Table\r\n        thead={showFretNumbers ? [{ cols: fretNums }] : undefined}\r\n        tfoot={showFretDots ? [{ cols: fretDots }] : undefined}\r\n        tbody={strings}\r\n        styles={tableStyles}\r\n      />\r\n    </StyledFretTable>\r\n  );\r\n};\r\n\r\nexport default FretTable;\r\n","import ArrayUtils from \"../../core/general/Array.utils\";\r\nimport Note from '../../core/models/Note';\r\nimport { NoteId } from './../../core/models/Model.constants';\r\n\r\nexport enum TuningId {\r\n    Standard = 'standard',\r\n    StandardSeven = 'standard-seven',\r\n    StandardBass = 'standard-bass',\r\n    Flat = 'flat',\r\n    DoubleFlat = 'double-flat',\r\n    DropD = 'drop-d',\r\n    DADGAD = 'dadgad',\r\n    Banjo = 'banjo',\r\n    Violin = 'violin',\r\n    OpenA = 'open-a',\r\n    OpenB = 'open-b',\r\n    OpenC = 'open-c',\r\n    OpenD = 'open-d',\r\n    OpenE = 'open-e',\r\n    OpenF = 'open-f',\r\n    OpenG = 'open-g',\r\n}\r\n\r\nexport interface ITuning {\r\n    id: TuningId;\r\n    name: string;\r\n    value: number[]\r\n}\r\n\r\nconst formatPreset = (id: TuningId, name: string, value: number[]): ITuning => ({\r\n    id,\r\n    name,\r\n    value\r\n});\r\n\r\nconst getPitch = (noteId: NoteId, octave: number): number => Note.getNote(noteId, octave).pod[0];\r\n\r\nexport const TUNING_PRESET_MAP = new Map<TuningId, ITuning>([\r\n    [TuningId.Standard, formatPreset(\r\n        TuningId.Standard,\r\n        'Standard Guitar',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.E, 3)\r\n        ]\r\n    )],\r\n    [TuningId.Flat, formatPreset(\r\n        TuningId.Flat,\r\n        'Flat Gtr',\r\n        [\r\n            getPitch(NoteId.Eb, 5),\r\n            getPitch(NoteId.Bb, 4),\r\n            getPitch(NoteId.Gb, 4),\r\n            getPitch(NoteId.Db, 4),\r\n            getPitch(NoteId.Ab, 3),\r\n            getPitch(NoteId.Eb, 3)\r\n        ]\r\n    )],\r\n    [TuningId.DoubleFlat, formatPreset(\r\n        TuningId.DoubleFlat,\r\n        'Double Flat Gtr',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.F, 4),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    [TuningId.StandardSeven, formatPreset(\r\n        TuningId.StandardSeven,\r\n        'Standard 7-String Gtr',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.E, 3),\r\n            getPitch(NoteId.B, 3)\r\n        ]\r\n    )],\r\n    [TuningId.StandardBass, formatPreset(\r\n        TuningId.StandardBass,\r\n        'Standard Bass',\r\n        [\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.D, 3),\r\n            getPitch(NoteId.A, 2),\r\n            getPitch(NoteId.E, 2)\r\n        ]\r\n    )],\r\n    [TuningId.DropD, formatPreset(\r\n        TuningId.DropD,\r\n        'Drop D Gtr',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    [TuningId.DADGAD, formatPreset(\r\n        TuningId.DADGAD,\r\n        'DADGAD',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    // Unconfirmed\r\n    /*[TuningId.Banjo, formatPreset(\r\n        TuningId.Banjo,\r\n        'Banjo',\r\n        [\r\n            getPitch(NoteId.G, 5),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],*/\r\n    // Unconfirmed\r\n    [TuningId.Violin, formatPreset(\r\n        TuningId.Violin,\r\n        'Violin',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.G, 4)\r\n        ]\r\n    )],\r\n    [TuningId.OpenA, formatPreset(\r\n        TuningId.OpenA,\r\n        'Open A',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.E, 4),\r\n            getPitch(NoteId.Cs, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.E, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenB, formatPreset(\r\n        TuningId.OpenB,\r\n        'Open B',\r\n        [\r\n            getPitch(NoteId.Ds, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.Fs, 4),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.Fs, 3),\r\n            getPitch(NoteId.B, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenC, formatPreset(\r\n        TuningId.OpenC,\r\n        'Open C',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.C, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenD, formatPreset(\r\n        TuningId.OpenD,\r\n        'Open D',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.Fs, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenE, formatPreset(\r\n        TuningId.OpenE,\r\n        'Open E',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.Gs, 4),\r\n            getPitch(NoteId.E, 4),\r\n            getPitch(NoteId.B, 3),\r\n            getPitch(NoteId.E, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenF, formatPreset(\r\n        TuningId.OpenF,\r\n        'Open F',\r\n        [\r\n            getPitch(NoteId.F, 5),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.F, 4),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.F, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenG, formatPreset(\r\n        TuningId.OpenG,\r\n        'Open G',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )]\r\n]);\r\n\r\nexport const FRETBOARD_TUNING_VALUES = ArrayUtils.mapToArray(TUNING_PRESET_MAP);\r\n","import Chord from \"../../core/models/Chord\";\r\nimport IntervalSpan from \"../../core/models/Interval\";\r\nimport { IModelConfig } from \"../../core/models/Model.constants\";\r\nimport Note from \"../../core/models/Note\";\r\nimport Scale from \"../../core/models/Scale\";\r\nimport { ITuning, TuningId, TUNING_PRESET_MAP } from \"./Fretboard.tuning\";\r\nimport { IVoicing } from \"./Fretboard.voicing\";\r\n\r\nexport interface IFretLabelProps {\r\n  note?: Note;\r\n  color?: string;\r\n  freq?: number;\r\n}\r\n\r\nexport interface IFretboardProps {\r\n  fretRange?: [number, number];\r\n  showFretDots?: boolean;\r\n  showFretNumbers?: boolean;\r\n  colorMapFn?: (fretProps: IFretProps) => string | undefined;\r\n  voicing?: IVoicing;\r\n  tuning?: number[]; // ITuning,\r\n  model?: Chord | Scale;\r\n}\r\n\r\nexport interface IFretProps extends IFretboardProps {\r\n  stringIndex: number;\r\n  fretIndex: number;\r\n}\r\n\r\nexport const DOTTED_FRET_INDICES = [\r\n  true,\r\n  false,\r\n  false,\r\n  true,\r\n  false,\r\n  true,\r\n  false,\r\n  true,\r\n  false,\r\n  true,\r\n  false,\r\n  false,\r\n];\r\n\r\nexport const FRET_SIZE_RATIO = Math.pow(1 / 2, 1 / 12);\r\n\r\nexport const isIntervalInVoicing = (\r\n  interval: IntervalSpan,\r\n  voicing: IVoicing,\r\n  stringIndex: number\r\n) => {\r\n  if (!voicing || !voicing.value) return true;\r\n  const v = voicing.value[stringIndex];\r\n  const d = interval.getDegree();\r\n  if (Array.isArray(v)) {\r\n    return v.some((n) => doesVoicingValueMatch(d, n));\r\n  } else if (typeof v === \"number\") {\r\n    return doesVoicingValueMatch(d, v);\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const getFretColor = (props: IFretProps): string | undefined => {\r\n  const { stringIndex, fretIndex, tuning, model, voicing } = props;\r\n  const noteIndex = tuning[stringIndex] + fretIndex;\r\n  const [interval, note] = model.tryGetPodPairAtPitch(noteIndex);\r\n\r\n  if (!note) return;\r\n\r\n  if (voicing && !isIntervalInVoicing(interval, voicing, stringIndex)) {\r\n    return `#00000011`;\r\n  }\r\n\r\n  return interval.getColor();\r\n};\r\n\r\nexport const DEFAULT_FRETBOARD_PROPS: IFretboardProps = {\r\n  fretRange: [1, 12],\r\n  tuning: TUNING_PRESET_MAP.get(TuningId.Standard).value,\r\n  showFretDots: true,\r\n  showFretNumbers: true,\r\n  colorMapFn: getFretColor,\r\n};\r\n\r\nexport const getFretRatios = (numFrets: number): number[] => {\r\n  const ratios = [];\r\n  for (let i = 1; i <= numFrets; i++) {\r\n    ratios.push(i <= 1 ? 1 : ratios[i - 2] * FRET_SIZE_RATIO);\r\n  }\r\n  return ratios;\r\n};\r\n\r\nexport const getDotsForFret = (fretNumber: number): string => {\r\n  if (fretNumber === 0) return \"\";\r\n  const mod = fretNumber % 12;\r\n  if (mod === 0) return \"• •\";\r\n  else if (DOTTED_FRET_INDICES[mod]) return \"•\";\r\n  return \"\";\r\n};\r\n\r\nconst doesVoicingValueMatch = (d: number, v: number) => {\r\n  return d + 1 === v;\r\n};\r\n","import ArrayUtils from \"../../core/general/Array.utils\";\r\n\r\nexport enum VoicingId {\r\n    None = 'None',\r\n    Chord_Triad_CShape_1 = 'Chord_Triad_CShape_1',\r\n    Chord_Triad_AShape_1 = 'Chord_Triad_AShape_1',\r\n    Chord_Triad_GShape_1 = 'Chord_Triad_GShape_1',\r\n    Chord_Triad_EShape_1 = 'Chord_Triad_EShape_1',\r\n    Chord_Triad_DShape_1 = 'Chord_Triad_DShape_1',\r\n    Chord_Sixth_CShape_1 = 'Chord_Sixth_CShape_1',\r\n    Chord_Sixth_AShape_1 = 'Chord_Sixth_AShape_1',\r\n    Chord_Sixth_GShape_1 = 'Chord_Sixth_GShape_1',\r\n    Chord_Sixth_EShape_1 = 'Chord_Sixth_EShape_1',\r\n    Chord_Sixth_DShape_1 = 'Chord_Sixth_DShape_1',\r\n    Chord_Seventh_CShape_1 = 'Chord_Seventh_CShape_1',\r\n    Chord_Seventh_AShape_1 = 'Chord_Seventh_AShape_1',\r\n    Chord_Seventh_GShape_1 = 'Chord_Seventh_GShape_1',\r\n    Chord_Seventh_EShape_1 = 'Chord_Seventh_EShape_1',\r\n    Chord_Seventh_DShape_1 = 'Chord_Seventh_DShape_1',\r\n    Chord_Shell_E_37 = 'Chord_Shell_E_37',\r\n    Chord_Shell_E_73 = 'Chord_Shell_E_73',\r\n    Chord_Shell_A_37 = 'Chord_Shell_A_37',\r\n    Chord_Shell_A_73 = 'Chord_Shell_A_73',\r\n    Chord_Shell_D_37 = 'Chord_Shell_D_37',\r\n    Chord_Shell_D_73 = 'Chord_Shell_D_73',\r\n    Scale_DoubleOctave_CShape_1 = 'Scale_DoubleOctave_CShape_1',\r\n    Scale_DoubleOctave_CShape_2 = 'Scale_DoubleOctave_CShape_2',\r\n    Scale_DoubleOctave_AShape_1 = 'Scale_DoubleOctave_AShape_1',\r\n    Scale_DoubleOctave_GShape_1 = 'Scale_DoubleOctave_GShape_1',\r\n    Scale_DoubleOctave_EShape_1 = 'Scale_DoubleOctave_EShape_1',\r\n    Scale_DoubleOctave_EShape_2 = 'Scale_DoubleOctave_EShape_2',\r\n    Scale_DoubleOctave_DShape_1 = 'Scale_DoubleOctave_DShape_1',\r\n}\r\n\r\nexport interface IVoicing {\r\n    id: VoicingId;\r\n    name: string;\r\n    value: (number | number[])[]\r\n}\r\n\r\nconst formatPreset = (id: VoicingId, name: string, value: (number | number[])[]): IVoicing => ({\r\n    id,\r\n    name,\r\n    value\r\n});\r\n\r\nexport const VOICING_PRESET_MAP = new Map<VoicingId, IVoicing>([\r\n    // Triads\r\n    [VoicingId.Chord_Triad_CShape_1, formatPreset(\r\n        VoicingId.Chord_Triad_CShape_1,\r\n        'C Shape Triad',\r\n        [3, 1, 5, 3, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Triad_AShape_1, formatPreset(\r\n        VoicingId.Chord_Triad_AShape_1,\r\n        'A Shape Triad',\r\n        [5, 3, 1, 5, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Triad_GShape_1, formatPreset(\r\n        VoicingId.Chord_Triad_GShape_1,\r\n        'G Shape Triad',\r\n        [1, 5, 1, 5, 3, 1]\r\n    )],\r\n    [VoicingId.Chord_Triad_EShape_1, formatPreset(\r\n        VoicingId.Chord_Triad_EShape_1,\r\n        'E Shape Triad',\r\n        [1, 5, 3, 1, 5, 1]\r\n    )],\r\n    [VoicingId.Chord_Triad_DShape_1, formatPreset(\r\n        VoicingId.Chord_Triad_DShape_1,\r\n        'D Shape Triad',\r\n        [3, 1, 5, 1, null, null]\r\n    )],\r\n    // Sixths\r\n    [VoicingId.Chord_Sixth_CShape_1, formatPreset(\r\n        VoicingId.Chord_Sixth_CShape_1,\r\n        'C Shape 6th Chord',\r\n        [3, 6, 5, 3, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Sixth_AShape_1, formatPreset(\r\n        VoicingId.Chord_Sixth_AShape_1,\r\n        'A Shape 6th Chord',\r\n        [5, 3, 6, 5, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Sixth_GShape_1, formatPreset(\r\n        VoicingId.Chord_Sixth_GShape_1,\r\n        'G Shape 6th Chord',\r\n        [6, 5, 1, 5, 3, 1]\r\n    )],\r\n    [VoicingId.Chord_Sixth_EShape_1, formatPreset(\r\n        VoicingId.Chord_Sixth_EShape_1,\r\n        'E Shape 6th Chord',\r\n        [1, 5, 3, 6, 5, 1]\r\n    )],\r\n    [VoicingId.Chord_Sixth_DShape_1, formatPreset(\r\n        VoicingId.Chord_Sixth_DShape_1,\r\n        'D Shape 6th Chord',\r\n        [3, 6, 5, 1, null, null]\r\n    )],\r\n    // Sevenths\r\n    [VoicingId.Chord_Seventh_CShape_1, formatPreset(\r\n        VoicingId.Chord_Seventh_CShape_1,\r\n        'C Shape 7th Chord',\r\n        [3, 7, 5, 3, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Seventh_AShape_1, formatPreset(\r\n        VoicingId.Chord_Seventh_AShape_1,\r\n        'A Shape 7th Chord',\r\n        [5, 3, 7, 5, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Seventh_GShape_1, formatPreset(\r\n        VoicingId.Chord_Seventh_GShape_1,\r\n        'G Shape 7th Chord',\r\n        [7, 5, 1, 5, 3, 1]\r\n    )],\r\n    [VoicingId.Chord_Seventh_EShape_1, formatPreset(\r\n        VoicingId.Chord_Seventh_EShape_1,\r\n        'E Shape 7th Chord',\r\n        [1, 5, 3, 7, 5, 1]\r\n    )],\r\n    [VoicingId.Chord_Seventh_DShape_1, formatPreset(\r\n        VoicingId.Chord_Seventh_DShape_1,\r\n        'D Shape 7th Chord',\r\n        [3, 7, 5, 1, null, null]\r\n    )],\r\n    // Shells\r\n    [VoicingId.Chord_Shell_E_37, formatPreset(\r\n        VoicingId.Chord_Shell_E_37,\r\n        'Shell E 3-7',\r\n        [null, null, null, 7, 3, 1]\r\n    )],\r\n    [VoicingId.Chord_Shell_E_73, formatPreset(\r\n        VoicingId.Chord_Shell_E_73,\r\n        'Shell E 7-3',\r\n        [null, null, 3, 7, null, 1]\r\n    )],\r\n    [VoicingId.Chord_Shell_A_37, formatPreset(\r\n        VoicingId.Chord_Shell_A_37,\r\n        'Shell A 3-7',\r\n        [null, null, 7, 3, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Shell_A_73, formatPreset(\r\n        VoicingId.Chord_Shell_A_73,\r\n        'Shell A 7-3',\r\n        [null, 3, 7, null, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Shell_D_37, formatPreset(\r\n        VoicingId.Chord_Shell_D_37,\r\n        'Shell D 3-7',\r\n        [null, 7, 3, 1, null, null]\r\n    )],\r\n    [VoicingId.Chord_Shell_D_73, formatPreset(\r\n        VoicingId.Chord_Shell_D_73,\r\n        'Shell D 7-3',\r\n        [3, 7, null, 1, null, null]\r\n    )],\r\n    // CAGED Scales\r\n    [VoicingId.Scale_DoubleOctave_EShape_1, formatPreset(\r\n        VoicingId.Scale_DoubleOctave_EShape_1,\r\n        'E Shape Scale (Locrian)',\r\n        [[1, 2, 3], [6, 7], [3, 4, 5], [7, 1, 2], [4, 5, 6], [1, 2, 3]]\r\n    )],\r\n    [VoicingId.Scale_DoubleOctave_EShape_2, formatPreset(\r\n        VoicingId.Scale_DoubleOctave_EShape_2,\r\n        'E Shape Scale (Ionian)',\r\n        [[7, 1, 2], [5, 6], [2, 3, 4], [6, 7, 1], [3, 4, 5], [1, 2]]\r\n    )],\r\n    [VoicingId.Scale_DoubleOctave_DShape_1, formatPreset(\r\n        VoicingId.Scale_DoubleOctave_DShape_1,\r\n        'D Shape Scale (Dorian)',\r\n        [[1, 2, 3], [5, 6, 7], [2, 3, 4], [6, 7, 1], [4, 5], [1, 2, 3]]\r\n    )],\r\n    [VoicingId.Scale_DoubleOctave_CShape_1, formatPreset(\r\n        VoicingId.Scale_DoubleOctave_CShape_1,\r\n        'C Shape Scale (Phrygian)',\r\n        [[1, 2, 3], [5, 6, 7], [3, 4], [7, 1, 2], [4, 5, 6], [1, 2, 3]]\r\n    )],\r\n    [VoicingId.Scale_DoubleOctave_CShape_2, formatPreset(\r\n        VoicingId.Scale_DoubleOctave_CShape_2,\r\n        'C Shape Scale (Lydian)',\r\n        [[7, 1, 2], [4, 5, 6], [2, 3], [6, 7, 1], [3, 4, 5], [1, 2]]\r\n    )],\r\n    [VoicingId.Scale_DoubleOctave_AShape_1, formatPreset(\r\n        VoicingId.Scale_DoubleOctave_AShape_1,\r\n        'A Shape Scale (Mixolydian)',\r\n        [[1, 2], [5, 6, 7], [2, 3, 4], [6, 7, 1], [3, 4, 5], [1, 2]]\r\n    )],\r\n    [VoicingId.Scale_DoubleOctave_GShape_1, formatPreset(\r\n        VoicingId.Scale_DoubleOctave_GShape_1,\r\n        'G Shape Scale (Aeolian)',\r\n        [[1, 2, 3], [5, 6, 7], [2, 3, 4], [7, 1], [4, 5, 6], [1, 2, 3]]\r\n    )]\r\n])\r\n\r\nexport const VOICING_PRESETS = ArrayUtils.mapToArray(VOICING_PRESET_MAP);\r\n"],"names":["ROOT","Note","NoteId","SCALE_NOTES","Scale","ScaleId","root","notes","DIATONIC_ITEMS","model","modelId","rootId","voicingId","VoicingId","ROMAN_NUMERAL_ITEMS","Chord","ChordId","PENTATONIC_ITEMS","TRIAD_ITEMS","SHAPE_ITEMS","StyledCard","styled","props","theme","surface","card","CardHeader","_ref","title","level","action","AsTag","React","className","_ref2","subtitle","children","rest","StyledFretboardCell","fretboardConfig","caption","FretTable","StyledSmartCard","cards","map","Card","Table","table","StyledTable","getIsTypeOmit","data","Col","index","isHeader","content","colSpan","link","ColTag","WrapperTag","Link","Fragment","wrapperProps","to","Row","cols","headerColIndicies","col","i","isConfig","hasOwnProperty","getIsConfig","colConfig","key","includes","TableSection","_ref3","Tag","rows","row","_ref4","thead","tfoot","tbody","styles","colGroups","cg","StyledFretFlag","$color","$opacity","color","text","opacity","StyledFretTable","tableStyles","css","userProps","DEFAULT_FRETBOARD_PROPS","fretRange","showFretDots","showFretNumbers","tuning","colorMapFn","lo","hi","numFrets","numStrings","length","fretNums","push","fretDots","getDotsForFret","strings","s","frets","f","FretFlag","stringIndex","fretIndex","undefined","TuningId","formatPreset","id","name","value","getPitch","noteId","octave","pod","TUNING_PRESET_MAP","Map","Standard","Flat","DoubleFlat","StandardSeven","StandardBass","DropD","DADGAD","Violin","OpenA","OpenB","OpenC","OpenD","OpenE","OpenF","OpenG","FRETBOARD_TUNING_VALUES","ArrayUtils","DOTTED_FRET_INDICES","isIntervalInVoicing","Math","pow","interval","voicing","v","d","getDegree","Array","isArray","some","n","doesVoicingValueMatch","noteIndex","note","tryGetPodPairAtPitch","getColor","fretNumber","mod","VOICING_PRESET_MAP","Chord_Triad_CShape_1","Chord_Triad_AShape_1","Chord_Triad_GShape_1","Chord_Triad_EShape_1","Chord_Triad_DShape_1","Chord_Sixth_CShape_1","Chord_Sixth_AShape_1","Chord_Sixth_GShape_1","Chord_Sixth_EShape_1","Chord_Sixth_DShape_1","Chord_Seventh_CShape_1","Chord_Seventh_AShape_1","Chord_Seventh_GShape_1","Chord_Seventh_EShape_1","Chord_Seventh_DShape_1","Chord_Shell_E_37","Chord_Shell_E_73","Chord_Shell_A_37","Chord_Shell_A_73","Chord_Shell_D_37","Chord_Shell_D_73","Scale_DoubleOctave_EShape_1","Scale_DoubleOctave_EShape_2","Scale_DoubleOctave_DShape_1","Scale_DoubleOctave_CShape_1","Scale_DoubleOctave_CShape_2","Scale_DoubleOctave_AShape_1","Scale_DoubleOctave_GShape_1","VOICING_PRESETS"],"sourceRoot":""}