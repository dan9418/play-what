{"version":3,"file":"component---src-components-scales-scale-page-tsx-f510040e3f1a94fedf69.js","mappings":"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","sources":["webpack://play-what/./src/components/_shared/breadcrumb-list/BreadcrumbList.tsx","webpack://play-what/./src/components/_shared/cards/RootCard.tsx","webpack://play-what/./src/components/_shared/cards/DetailsCard.tsx","webpack://play-what/./src/components/_shared/cards/GuitarCard.tsx","webpack://play-what/./src/components/_shared/cards/RelatedCard.tsx","webpack://play-what/./src/components/_shared/cards/SoundCard.tsx","webpack://play-what/./src/components/_shared/layout/Pane.tsx","webpack://play-what/./src/components/_shared/cards/ModeCard.tsx","webpack://play-what/./src/components/_shared/cards/RomanNumeralsCard.tsx","webpack://play-what/./src/components/scales/ScalePage.tsx","webpack://play-what/./src/core/models/Scale.ts"],"sourcesContent":["import { Link } from \"gatsby\";\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport Icon from \"../ui/Icon\";\r\n\r\nconst StyledBreadcrumbList = styled.ul`\r\n    font-size: 110%;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    gap: 8px;\r\n    padding: 0 0 16px 0;\r\n    white-space: nowrap;\r\n    text-transform: capitalize;\r\n    svg {\r\n        margin-right: 8px;\r\n    }\r\n`\r\n\r\nconst BreadcrumbList = ({ path }) => {\r\n    let pieces = path.split('/');\r\n    pieces = pieces.slice(0, pieces.length - 1).filter(p => !['root'].includes(p));\r\n    const paths = [];\r\n    pieces.reduce((prev, cur, i, arr) => {\r\n        const path = `${prev}/${cur}`.replace('//', '/');\r\n        paths.push(\r\n            <li key={i}>\r\n                {i > 0 && <Icon iconId=\"next\" size={10} color=\"grey\" />}\r\n                <Link to={path || '/'}>{i === 0 ? 'Home' : cur.replaceAll('-', ' ')}</Link>\r\n            </li>\r\n        );\r\n        return path;\r\n    }, '/');\r\n    return <StyledBreadcrumbList>{paths}</StyledBreadcrumbList>;\r\n}\r\n\r\nexport default BreadcrumbList;\r\n","import { navigate } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport styled from 'styled-components';\r\nimport { usePageProps, useRoot } from \"../../../contexts/PagePropsContext\";\r\nimport { NOTE_PRESETS } from \"../../../core/models/Model.presets\";\r\nimport { octaveState } from \"../../../state/state\";\r\nimport InputRow from \"../../_shared/ui/InputRow\";\r\nimport DropdownInput from \"../inputs/DropdownInput\";\r\n\r\nconst StyledRoot = styled.div`\r\n    margin-top: 16px;\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    gap: 16px;\r\n    @media(min-width: 512px) {\r\n        grid-template-columns: 1fr 1fr;\r\n    }\r\n`;\r\n\r\nconst NOTE_OPTIONS = [\r\n    {\r\n        id: 'unselected',\r\n        name: '---'\r\n    },\r\n    ...NOTE_PRESETS\r\n];\r\n\r\nconst OCTAVE_OPTIONS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map((x, i) => ({ id: i + 1, name: i + 1 }))\r\n\r\nconst RootCard: React.FC<any> = () => {\r\n    const root = useRoot();\r\n    const pageProps = usePageProps();\r\n    const [octave, setOctave] = useRecoilState(octaveState);\r\n\r\n    const selectedRoot = root ? root : { id: 'unselected' };\r\n\r\n    const onChangeRoot = note => {\r\n        console.log(pageProps);\r\n\r\n        const rootIndex = pageProps.path.lastIndexOf('root');\r\n        const sanitized = rootIndex === -1 ?\r\n            pageProps.path :\r\n            pageProps.path.slice(0, rootIndex);\r\n\r\n        if (note.id === 'unselected') {\r\n            navigate(sanitized);\r\n        }\r\n        else {\r\n            navigate(`${sanitized}root/${note.id}`);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <StyledRoot>\r\n            <InputRow label=\"Root\">\r\n                <DropdownInput options={NOTE_OPTIONS} value={selectedRoot} setValue={onChangeRoot} />\r\n            </InputRow>\r\n            <InputRow label=\"Octave\">\r\n                <DropdownInput options={OCTAVE_OPTIONS} value={{ id: octave }} setValue={o => setOctave(o.id)} />\r\n            </InputRow>\r\n        </StyledRoot>\r\n    );\r\n};\r\n\r\nexport default RootCard;\r\n","import React from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport styled from 'styled-components';\r\nimport NumberUtils from \"../../../core/general/Number.utils\";\r\nimport Note from \"../../../core/models/Note\";\r\nimport { octaveState } from \"../../../state/state\";\r\nimport { StyledCard } from \"../ui/Card\";\r\nimport RootCard from \"./RootCard\";\r\n\r\nconst StyledDetailsCard = styled(StyledCard)`\r\n    ul {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n\r\n        flex-direction: column;\r\n        @media(min-width: 512px) {\r\n            flex-direction: row;\r\n        }\r\n\r\n        .box {\r\n            padding: 8px 16px;\r\n            text-align: center;\r\n            font-size: 140%;\r\n            .featured {\r\n                font-weight: bold;\r\n                @media(min-width: 512px) {\r\n                    font-size: 200%;\r\n                }\r\n            }\r\n            .frequency, .ratio {\r\n                color: ${({ theme }) => theme.text.secondary};\r\n                font-size: 80%;\r\n                padding: 4px;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst DetailsCard: React.FC<any> = ({ model }) => {\r\n    const intervals = model.intervals;\r\n    const notes = model.notes;\r\n    const octave = useRecoilValue(octaveState);\r\n\r\n    if (!intervals && !notes) return null;\r\n\r\n    return (\r\n        <StyledDetailsCard>\r\n            <ul>\r\n                {intervals.map((ivl, i) => {\r\n                    const octaveCorrectNote = notes && new Note([\r\n                        (octave - 4) * 12 + NumberUtils.modulo(notes[i].pod[0], 12),\r\n                        notes[i].pod[1]\r\n                    ]);\r\n                    return (\r\n                        <li key={ivl.id} className={`box`}>\r\n                            {notes && <div className={`note featured`}>{notes[i].name}<sub>{notes[i].getOctave()}</sub></div>}\r\n                            <div className={`interval ${notes ? '' : 'featured'}`}>{ivl.getName()}</div>\r\n                            {notes && <div className={`frequency`}>{octaveCorrectNote.getFrequency(true)}</div>}\r\n                            <div className={`ratio`}>{ivl.getRatio()}</div>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n            <RootCard />\r\n        </StyledDetailsCard>\r\n    );\r\n};\r\n\r\nexport default DetailsCard;\r\n","import React, { useState } from \"react\";\r\nimport styled from 'styled-components';\r\nimport Fretboard from \"../../../viewers/fretboard/Fretboard\";\r\nimport { FRETBOARD_TUNING_VALUES, TuningId } from \"../../../viewers/fretboard/Fretboard.tuning\";\r\nimport { getFretboardProps } from \"../../../viewers/fretboard/Fretboard.utils\";\r\nimport { VoicingId, VOICING_PRESETS } from \"../../../viewers/fretboard/Fretboard.voicing\";\r\nimport DropdownInput from \"../../_shared/inputs/DropdownInput\";\r\nimport Card from \"../../_shared/ui/Card\";\r\nimport InputRow from \"../../_shared/ui/InputRow\";\r\n\r\nconst StyledGuitarCard = styled.div`\r\n    \r\n`;\r\n\r\nconst VOICING_OPTIONS = [\r\n    {\r\n        id: VoicingId.None,\r\n        name: '---',\r\n        value: undefined\r\n    },\r\n    ...VOICING_PRESETS\r\n]\r\n\r\nconst GuitarCard: React.FC<any> = ({ model }) => {\r\n\r\n    if (!model.root || !model.intervals) return null;\r\n\r\n    const [voicing, setVoicing] = useState(VOICING_OPTIONS[0]);\r\n    const [tuning, setTuning] = useState(FRETBOARD_TUNING_VALUES[0]);\r\n\r\n    const fretboardProps = getFretboardProps(\r\n        model,\r\n        voicing.id === VoicingId.None ? undefined : voicing,\r\n        tuning\r\n    );\r\n\r\n    return (\r\n        <Card title=\"Guitar\">\r\n            <StyledGuitarCard>\r\n                <Fretboard {...fretboardProps} />\r\n                <InputRow label=\"Tuning\">\r\n                    <DropdownInput value={tuning} setValue={setTuning} options={FRETBOARD_TUNING_VALUES} />\r\n                </InputRow>\r\n                {tuning.id === TuningId.Standard &&\r\n                    <InputRow label=\"Voicing\">\r\n                        <DropdownInput value={voicing} setValue={setVoicing} options={VOICING_OPTIONS} />\r\n                    </InputRow>\r\n                }\r\n            </StyledGuitarCard>\r\n        </Card >\r\n    );\r\n};\r\n\r\nexport default GuitarCard;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { useRootSuffix } from \"../../../contexts/PagePropsContext\";\r\nimport { NOTE_PRESETS } from \"../../../core/models/Model.presets\";\r\nimport Card from \"../../_shared/ui/Card\";\r\n\r\nconst StyledRelated = styled.div`\r\n    ul {\r\n        display: flex;\r\n        gap: 4px;\r\n        flex-wrap: wrap;\r\n        a {\r\n            padding: 4px;\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nconst RelatedCard: React.FC<any> = ({ model }) => {\r\n\r\n    const rootSuffix = useRootSuffix();\r\n\r\n    const subchords = model.getSubchords();\r\n    const subscales = model.getSubscales();\r\n    const superchords = model.getSuperchords();\r\n    const superscales = model.getSuperscales();\r\n\r\n    return (\r\n        <>\r\n            {false && <Card title=\"Other Roots\">\r\n                <StyledRelated>\r\n                    <ul>\r\n                        {NOTE_PRESETS.map(s => (\r\n                            <li key={s.id}><Link to={`/browse/chords/${model.id}/${s.id}/${rootSuffix}`}>{s.name} {/*model.name*/}</Link></li>\r\n                        ))}\r\n                    </ul>\r\n                </StyledRelated>\r\n            </Card>}\r\n            {subchords.length > 0 &&\r\n                <Card title=\"Child Chords\">\r\n                    <StyledRelated>\r\n                        <ul>\r\n                            {subchords.map(s => (\r\n                                <li key={s.id}><Link to={`/browse/chords/${s.id}/${rootSuffix}`}>{s.name}</Link></li>\r\n                            ))}\r\n                        </ul>\r\n                    </StyledRelated>\r\n                </Card>\r\n            }\r\n            {superchords.length > 0 &&\r\n                <Card title=\"Parent Chords\">\r\n                    <StyledRelated>\r\n                        <ul>\r\n                            {superchords.map(s => (\r\n                                <li key={s.id}><Link to={`/browse/chords/${s.id}/${rootSuffix}`}>{s.name}</Link></li>\r\n                            ))}\r\n                        </ul>\r\n                    </StyledRelated>\r\n                </Card>\r\n            }\r\n            {subscales.length > 0 &&\r\n                <Card title=\"Child Scales\">\r\n                    <StyledRelated>\r\n                        <ul>\r\n                            {subscales.map(s => (\r\n                                <li key={s.id}><Link to={`/browse/scales/${s.id}/${rootSuffix}`}>{s.name}</Link></li>\r\n                            ))}\r\n                        </ul>\r\n                    </StyledRelated>\r\n                </Card>\r\n            }\r\n            {superscales.length > 0 &&\r\n                <Card title=\"Parent Scales\">\r\n                    <StyledRelated>\r\n                        <ul>\r\n                            {superscales.map(s => (\r\n                                <li key={s.id}><Link to={`/browse/scales/${s.id}/${rootSuffix}`}>{s.name}</Link></li>\r\n                            ))}\r\n                        </ul>\r\n                    </StyledRelated>\r\n                </Card>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RelatedCard;\r\n","import Model from \"@pw-core/models/Model\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport ButtonInput from \"../../_shared/inputs/ButtonInput\";\r\nimport Card from \"../../_shared/ui/Card\";\r\nimport Icon from \"../../_shared/ui/Icon\";\r\n\r\nconst StyledSoundCard = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    button {\r\n        padding: 8px 32px;\r\n    }\r\n`;\r\n\r\n\r\nconst SoundCard: React.FC<any> = () => {\r\n    return null;\r\n\r\n    const intervals = null;\r\n\r\n    return (\r\n        <Card title=\"Sound\">\r\n            <StyledSoundCard>\r\n                <ButtonInput onClick={() => Model.playSoundList(intervals.value)}><Icon iconId=\"speaker\" size={32} color=\"white\" /></ButtonInput >\r\n            </StyledSoundCard>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default SoundCard;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledDoublePane = styled.div`\r\n\tdisplay: grid;\r\n\tgap: 16px;\r\n\tgrid-template-columns: 1fr;\r\n\t@media(min-width: 512px) {\r\n\t\tgrid-template-columns: 3fr 2fr;\r\n\t}\r\n`\r\n\r\nexport const StyledPane = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: 16px;\r\n\tmargin: 16px 0;\r\n`\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { useRootSuffix } from \"../../../contexts/PagePropsContext\";\r\nimport { ScaleTag } from \"../../../core/models/Model.constants\";\r\nimport { SCALE_PRESETS } from \"../../../core/models/Model.presets\";\r\nimport Card from \"../../_shared/ui/Card\";\r\n\r\nconst StyledModeCard = styled.div`\r\n    ul {\r\n        display: flex;\r\n        justify-content: space-around;\r\n        gap: 4px;\r\n        flex-wrap: wrap;\r\n        a {\r\n            padding: 4px;\r\n            &.active {\r\n                font-weight: bold;\r\n                text-decoration: underline;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst ModeCard: React.FC<any> = ({ model }) => {\r\n\r\n    const rootSuffix = useRootSuffix();\r\n\r\n    const type = model.tags.find(t =>\r\n        t === ScaleTag.Diatonic ||\r\n        t === ScaleTag.Pentatonic ||\r\n        t === ScaleTag.MelodicMode ||\r\n        t === ScaleTag.HarmonicMode\r\n    );\r\n\r\n    if (!type) return null;\r\n\r\n    let modeType = '';\r\n    switch (type) {\r\n        case ScaleTag.Diatonic:\r\n            modeType = 'Diatonic';\r\n            break;\r\n        case ScaleTag.Pentatonic:\r\n            modeType = 'Pentatonic';\r\n            break;\r\n        case ScaleTag.MelodicMode:\r\n            modeType = 'Melodic Minor';\r\n            break;\r\n        case ScaleTag.HarmonicMode:\r\n            modeType = 'Harmonic Minor';\r\n            break;\r\n    }\r\n\r\n    const modes = SCALE_PRESETS.filter(p => p.tags.includes(type));\r\n\r\n    return (\r\n        <Card\r\n            title={`${modeType} Modes`}\r\n        >\r\n            <StyledModeCard>\r\n                <ul>\r\n                    {modes.map(n => (\r\n                        <li key={n.id}>\r\n                            <Link to={`/browse/${n.modelId}/${n.id}/${rootSuffix}`} className={model.id === n.id ? 'active' : ''}>{n.name}</Link>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </StyledModeCard>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ModeCard;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport Card from \"../../_shared/ui/Card\";\r\n\r\nconst StyledRomanNumeralsCard = styled.div`\r\n    table {\r\n        border-collapse: collapse;\r\n        width: 100%;\r\n\r\n        th {\r\n            //color: ${props => props.theme.brand.accent};\r\n            &:first-child {\r\n                text-align: right;\r\n            }\r\n            padding: 4px;\r\n        }\r\n        \r\n        td {\r\n            padding: 4px;\r\n            text-align: center;\r\n        }\r\n\r\n        .numeral td {\r\n            font-size: 160%;\r\n            font-family: serif;\r\n        }\r\n    }\r\n`;\r\n\r\nconst RomanNumeralsCard: React.FC<any> = ({ model }) => {\r\n\r\n    const numerals = model.getAllNumerals();\r\n\r\n    if (!numerals.length) return null;\r\n\r\n    return (\r\n        <Card\r\n            title=\"Roman Numerals\"\r\n        >\r\n            <StyledRomanNumeralsCard>\r\n                <table>\r\n                    <tbody>\r\n                        <tr className=\"numeral\">\r\n                            <th>Numeral</th>\r\n                            {numerals.map((n, i) => (\r\n                                <td key={i}>\r\n                                    {n.getNumeral(i + 1)}\r\n                                </td>\r\n                            ))}\r\n                        </tr>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            {numerals.map((n, i) => (\r\n                                <td key={i}>\r\n                                    <Link to={`/browse/${n.modelId}/${n.id}/${n.root.id}`}>{n.getShortName()}</Link>\r\n                                </td>\r\n                            ))}\r\n                        </tr>\r\n                    </tbody>\r\n                    <tfoot>\r\n                        <tr>\r\n                            <th >Degree</th>\r\n                            {numerals.map((n, i) => (\r\n                                <th key={i}>\r\n                                    {i + 1}\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n            </StyledRomanNumeralsCard>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default RomanNumeralsCard;\r\n","import Scale from \"@pw-core/models/Scale\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { useRoot } from \"../../contexts/PagePropsContext\";\r\nimport Note from \"../../core/models/Note\";\r\nimport BreadcrumbList from \"../_shared/breadcrumb-list/BreadcrumbList\";\r\nimport DetailsCard from \"../_shared/cards/DetailsCard\";\r\nimport GuitarCard from \"../_shared/cards/GuitarCard\";\r\nimport ModeCard from \"../_shared/cards/ModeCard\";\r\nimport RelatedCard from \"../_shared/cards/RelatedCard\";\r\nimport RomanNumeralsCard from \"../_shared/cards/RomanNumeralsCard\";\r\nimport SoundCard from \"../_shared/cards/SoundCard\";\r\nimport { StyledPageBody } from \"../_shared/layout/PageBody\";\r\nimport PageTitle from \"../_shared/layout/PageTitle\";\r\nimport { StyledPane } from \"../_shared/layout/Pane\";\r\n\r\nconst StyledScalePage = styled(StyledPageBody)`\r\n   \r\n`;\r\n\r\n\r\nconst ScalePage: React.FC<any> = props => {\r\n\r\n    const root = useRoot();\r\n    const scale = new Scale(props.pageContext.modelId, { root });\r\n\r\n    return (\r\n        <StyledScalePage>\r\n            <BreadcrumbList id={scale.id} name={scale.name} path={props.path} />\r\n            <PageTitle title={scale.name} subtitle=\"Scale\" />\r\n            <StyledPane>\r\n                <DetailsCard model={scale} />\r\n                <RomanNumeralsCard model={scale} />\r\n                <ModeCard model={scale} />\r\n                <GuitarCard model={scale} />\r\n                <RelatedCard model={scale} />\r\n                <SoundCard model={scale} />\r\n            </StyledPane>\r\n        </StyledScalePage >\r\n    );\r\n};\r\n\r\nexport default ScalePage;\r\n","import IntervalSpan from '@pw-core/models/Interval';\r\nimport ArrayUtils from '../general/Array.utils';\r\nimport NumberUtils from '../general/Number.utils';\r\nimport Chord from './Chord';\r\nimport Model from './Model';\r\nimport { IntervalId, IPod, ScaleId, ScaleTag } from './Model.constants';\r\nimport { SCALE_PRESETS, SCALE_PRESET_MAP } from './Model.presets';\r\nimport { arePodListsEqual, reducePodList, subtractPods } from './Pod.static';\r\nimport PodList from './PodList';\r\n\r\nexport default class Scale extends PodList {\r\n\r\n    constructor(id: ScaleId, options = undefined) {\r\n        super(SCALE_PRESET_MAP, id, options);\r\n    }\r\n\r\n    static fromValue = (value: IPod[]) => Model.fromValue(SCALE_PRESETS, Scale, value, arePodListsEqual, reducePodList);\r\n\r\n    getMode(d) {\r\n        let rotated = [...this.podList];\r\n        rotated = ArrayUtils.rotate(rotated, d);\r\n        for (let i = (this.podList.length - d); i < rotated.length; i++) {\r\n            const curPod = rotated[i];\r\n            rotated[i] = [curPod[0] + 12, curPod[1] + 7];\r\n        }\r\n        // Get difference between each interval\r\n        const newPods: IPod[] = [[0, 0]];\r\n        const newIntervals = [new IntervalSpan(IntervalId.P1)];\r\n        for (let i = 0; i < rotated.length - 1; i++) {\r\n            const newPod = subtractPods(rotated[i + 1], rotated[0])\r\n            newPods.push(newPod);\r\n            const newIvl = IntervalSpan.fromValue(newPod);\r\n            newIntervals.push(newIvl);\r\n        }\r\n        const mode = Scale.fromValue(newPods);\r\n\r\n        /*if (this.root) {\r\n            numeral.applyRoot(this.notes[d]);\r\n            console.log('dpb num root', numeral);\r\n        }*/\r\n        return mode;\r\n    };\r\n\r\n    getAllModes() {\r\n        const modes = [];\r\n        if (this.tags.includes(ScaleTag.Diatonic) ||\r\n            this.tags.includes(ScaleTag.Pentatonic) ||\r\n            this.tags.includes(ScaleTag.MelodicMode) ||\r\n            this.tags.includes(ScaleTag.HarmonicMode)\r\n        ) {\r\n            for (let i = 0; i < this.podList.length; i++) {\r\n                modes.push(this.getMode(i));\r\n            }\r\n        }\r\n        return modes;\r\n    };\r\n\r\n    getNumeral(d) {\r\n        // Get every other interval\r\n        const curIntervals = [];\r\n        for (let i = 0; i < this.podList.length; i = i + 2) {\r\n            const curD = NumberUtils.moduloSum(d, i, this.podList.length);\r\n            const curIvl = this.intervals[curD];\r\n            curIntervals.push(curIvl);\r\n        }\r\n        // Get difference between each interval\r\n        const newPods: IPod[] = [[0, 0]];\r\n        //const newIntervals = [new IntervalSpan(IntervalId.P1)];\r\n        for (let i = 0; i < curIntervals.length - 1; i++) {\r\n            const newPod = subtractPods(curIntervals[i + 1].pod, curIntervals[0].pod)\r\n            newPods.push(newPod);\r\n            //const newIvl = IntervalSpan.fromValue(newPod);\r\n            //newIntervals.push(newIvl);\r\n        }\r\n        const numeral = Chord.fromValue(newPods);\r\n        if (this.root) {\r\n            numeral.applyRoot(this.notes[d]);\r\n        }\r\n        return numeral;\r\n    };\r\n\r\n    getAllNumerals() {\r\n        const numerals = [];\r\n        if (this.tags.includes(ScaleTag.Diatonic)) {\r\n            for (let i = 0; i < this.podList.length; i++) {\r\n                numerals.push(this.getNumeral(i));\r\n            }\r\n        }\r\n        return numerals;\r\n    };\r\n}\r\n"],"names":["StyledBreadcrumbList","styled","pieces","path","split","slice","length","filter","p","includes","paths","reduce","prev","cur","i","arr","replace","push","key","iconId","size","color","to","replaceAll","StyledRoot","NOTE_OPTIONS","id","name","NOTE_PRESETS","OCTAVE_OPTIONS","map","x","root","useRoot","pageProps","usePageProps","useRecoilState","octaveState","octave","setOctave","selectedRoot","InputRow","label","DropdownInput","options","value","setValue","note","console","log","rootIndex","lastIndexOf","sanitized","navigate","o","StyledDetailsCard","StyledCard","theme","text","secondary","model","intervals","notes","useRecoilValue","ivl","octaveCorrectNote","Note","NumberUtils","pod","className","getOctave","getName","getFrequency","getRatio","StyledGuitarCard","VOICING_OPTIONS","VoicingId","undefined","VOICING_PRESETS","useState","voicing","setVoicing","FRETBOARD_TUNING_VALUES","tuning","setTuning","fretboardProps","getFretboardProps","title","TuningId","StyledRelated","rootSuffix","useRootSuffix","subchords","getSubchords","subscales","getSubscales","superchords","getSuperchords","superscales","getSuperscales","s","StyledDoublePane","StyledPane","StyledModeCard","type","tags","find","t","ScaleTag","modeType","modes","SCALE_PRESETS","Card","n","modelId","StyledRomanNumeralsCard","numerals","getAllNumerals","getNumeral","getShortName","StyledScalePage","StyledPageBody","props","scale","Scale","pageContext","BreadcrumbList","PageTitle","subtitle","DetailsCard","GuitarCard","RelatedCard","SoundCard","SCALE_PRESET_MAP","getMode","d","rotated","this","podList","ArrayUtils","curPod","newPods","newIntervals","IntervalSpan","IntervalId","newPod","subtractPods","newIvl","fromValue","getAllModes","curIntervals","curD","curIvl","numeral","Chord","applyRoot","PodList","Model","arePodListsEqual","reducePodList"],"sourceRoot":""}