{"version":3,"file":"component---src-pages-search-tsx-83e09d97c2dca15e0b8f.js","mappings":"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","sources":["webpack://play-what/./src/components/_shared/layout/PageBody.tsx","webpack://play-what/./src/components/_shared/ui/Card.tsx","webpack://play-what/./src/components/search/SearchBar.tsx","webpack://play-what/./src/components/search/SearchResults.ts","webpack://play-what/./src/components/_shared/inputs/FilterList.tsx","webpack://play-what/./src/components/search/SearchResultsCard.tsx","webpack://play-what/./src/components/search/SearchPage.tsx","webpack://play-what/./src/pages/search.tsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const StyledPageBody = styled.div`\r\n\twidth: 100%;\r\n\t//max-width: 1920px;\r\n\tmax-width: 1024px;\r\n\tmin-height: calc(100vh - 96px);\r\n    \r\n\tmargin: auto;\r\n\tpadding: 16px;\r\n`\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledCard = styled.div`\r\n    background: ${props => props.theme.surface.card};\r\n    width: 100%;\r\n    border-radius: 16px;\r\n    padding: 16px;\r\n\r\n    .header {\r\n        margin-bottom: 16px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n    }\r\n`;\r\n\r\nconst Card: React.FC<any> = ({ title, action, children, ...rest }) => {\r\n    return (\r\n        <StyledCard {...rest}>\r\n            {title &&\r\n                <div className=\"header\">\r\n                    <h2>{title}</h2>\r\n                    {action}\r\n                </div>\r\n            }\r\n            {children}\r\n        </StyledCard >\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import { navigate } from \"gatsby\";\r\nimport React, { useState } from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nconst StyledSearchBar = styled.form`\r\n    width: 100%;\r\n    .search-bar {\r\n        width: 100%;\r\n        max-width: 512px;\r\n        display: grid;\r\n        grid-template-columns: 1fr auto;\r\n\r\n        input, button {\r\n            padding: 8px 8px;\r\n            border-radius: 8px;\r\n            border: 1px solid ${props => props.theme.utils.border};\r\n        }\r\n\r\n        input {\r\n            border-radius: 8px 0 0 8px;\r\n            border-right: none;\r\n        }\r\n\r\n        button {\r\n            border-radius: 0 8px 8px 0;\r\n            cursor: pointer;\r\n            color: white;\r\n            font-weight: bold;\r\n            background-color: ${props => props.theme.action.interactive};\r\n            border-left: none;\r\n            padding: 8px 16px;\r\n\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n        }\r\n    }\r\n`;\r\n\r\nconst SearchBar: React.FC<any> = ({ searchRef, query: externalQuery, setQuery: externalSetQuery, placeholder }) => {\r\n    const [_query, _setQuery] = useState('');\r\n    const query = typeof externalQuery === 'undefined' ? _query : externalQuery;\r\n    const setQuery = typeof externalSetQuery === 'undefined' ? _setQuery : externalSetQuery;\r\n\r\n    const onChange = e => {\r\n        setQuery(e.target.value);\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        const value = e.target.elements.query.value;\r\n        console.log('dpb', e, value);\r\n        const query = new URLSearchParams({ query: value });\r\n        const path = `/search/?${query.toString()}`;\r\n        navigate(path);\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <StyledSearchBar role=\"search\" onSubmit={onSubmit}>\r\n            <div className=\"search-bar\">\r\n                <input\r\n                    type=\"search\"\r\n                    id=\"site-search\"\r\n                    name=\"query\"\r\n                    ref={searchRef}\r\n                    onChange={onChange}\r\n                    value={query as string}\r\n                    placeholder={placeholder || \"Search the site...\"}\r\n                />\r\n                <button type=\"submit\" >Search</button>\r\n            </div>\r\n        </StyledSearchBar>\r\n    );\r\n};\r\n\r\nexport default SearchBar;\r\n","import { ModelId, ScaleTag } from \"../../core/models/Model.constants\";\r\nimport { ALL_PRESETS, NOTE_PRESETS } from \"../../core/models/Model.presets\";\r\n\r\ninterface IResult {\r\n    text: string;\r\n    to: string;\r\n    tags: string[];\r\n    isCommon?: boolean;\r\n}\r\n\r\nconst getName = (modelType: ModelId, name: string, root?: string): string => {\r\n    switch (modelType) {\r\n        case ModelId.Chord:\r\n            return `${root ? root : ''} ${name} Chord`\r\n        case ModelId.Scale:\r\n            return `${root ? root : ''} ${name} Scale`\r\n        default:\r\n            return `${root ? root : ''} ${name}`;\r\n    }\r\n}\r\n\r\nconst getLink = (modelType: ModelId, id: string, root?: string): string => {\r\n    return `/browse/${modelType}/${id}${root ? `/root/${root}` : ''}`;\r\n}\r\n\r\nexport const ALL_RESULTS: IResult[] = [];\r\nALL_PRESETS.forEach(p => {\r\n    ALL_RESULTS.push({\r\n        text: getName(p.modelId, p.name),\r\n        to: getLink(p.modelId, p.id),\r\n        tags: p.tags,\r\n        isCommon: !p.tags.includes(ScaleTag.Exotic)\r\n    });\r\n    NOTE_PRESETS.forEach(n => {\r\n        ALL_RESULTS.push({\r\n            text: getName(p.modelId, p.name, n.name),\r\n            to: getLink(p.modelId, p.id, n.id),\r\n            tags: p.tags\r\n        });\r\n    })\r\n});\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport ButtonInput from \"./ButtonInput\";\r\n\r\nconst StyledFilterList = styled.div`\r\n\r\n    border: 1px solid ${props => props.theme.action.interactive};\r\n    border-radius: 8px;\r\n    padding: 8px;\r\n    margin-bottom: 16px;\r\n\r\n    .top {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n    }\r\n    \r\n    ul {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        align-items: center;\r\n        justify-content: center;\r\n        gap: 8px;\r\n\r\n        > li {\r\n            margin: 0  !important;\r\n            list-style-type: none !important;\r\n        }\r\n\r\n        button {\r\n            background-color: ${({ theme }) => theme.utils.transparent};;\r\n            border: 1px solid ${props => props.theme.action.interactive};;\r\n            color: ${props => props.theme.action.interactive};\r\n            padding: 4px 8px;\r\n            font-size: 80%;\r\n            :hover {\r\n                background-color: ${({ theme }) => theme.utils.hoverDark};\r\n            }\r\n\r\n            &.active {\r\n                color: ${({ theme }) => theme.text.inverted};;\r\n                background-color: ${props => props.theme.action.interactive};\r\n            }\r\n\r\n            :disabled {\r\n                color: ${({ theme }) => theme.text.inverted};\r\n                background-color: ${props => props.theme.text.secondary};\r\n                cursor: not-allowed;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nconst FilterList: React.FC<any> = ({ tags, availableTags, selectedTags, setSelectedTags }) => {\r\n\r\n    const toggle = t => {\r\n        if (selectedTags.includes(t)) {\r\n            setSelectedTags(selectedTags.filter(x => x !== t));\r\n        }\r\n        else {\r\n            setSelectedTags([...selectedTags, t]);\r\n        }\r\n    };\r\n    return (\r\n        <StyledFilterList>\r\n            {false && <div className=\"top\">\r\n                {selectedTags.length > 0 &&\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={() => setSelectedTags([])}\r\n                        className=\"clear\"\r\n                    >Clear</button>\r\n                }\r\n            </div>}\r\n            <ul>\r\n                {tags.map(t => (\r\n                    <li key={t}>\r\n                        <ButtonInput\r\n                            onClick={() => toggle(t)}\r\n                            className={selectedTags.includes(t) ? 'active' : ''}\r\n                            disabled={!availableTags.includes(t)}\r\n                        >\r\n                            {t}\r\n                        </ButtonInput>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </StyledFilterList>\r\n    );\r\n};\r\n\r\nexport default FilterList;\r\n","import { Link, navigate } from \"gatsby\";\r\nimport React, { useState } from \"react\";\r\nimport styled, { css } from 'styled-components';\r\nimport ArrayUtils from \"../../core/general/Array.utils\";\r\nimport ButtonInput from \"../_shared/inputs/ButtonInput\";\r\nimport FilterList from \"../_shared/inputs/FilterList\";\r\nimport Card from \"../_shared/ui/Card\";\r\nimport { ALL_RESULTS } from \"./SearchResults\";\r\n\r\nconst StyledSearchResultsList = styled.ul` \r\n    font-size: 110%;\r\n    li a {\r\n        padding: 4px 0;\r\n        display: block;\r\n\r\n        &:focus, &:hover {\r\n            padding: 8px;\r\n            background-color: ${props => props.theme.action.interactive};\r\n            color: white;\r\n            border-radius: 8px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst doTagsMatch = (selectedTags, r) => {\r\n    if (!selectedTags.length) return true;\r\n\r\n    return !selectedTags.some(t => {\r\n        return !r.tags.includes(t);\r\n    });\r\n}\r\n\r\nconst doesQueryMatch = (query = '', r) => {\r\n    return r.text.match(new RegExp(query, 'gi'));\r\n    const pieces = query.split(' ');\r\n    return pieces.some(p => r.text.match(new RegExp(p, 'gi')));\r\n}\r\n\r\nconst SearchResultsCard: React.FC<any> = ({ resultsRef, query }) => {\r\n\r\n    const [isFiltering, setIsFiltering] = useState(false);\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n\r\n    const action = <ButtonInput\r\n        className={`filter ${isFiltering ? 'active' : ''}`}\r\n        onClick={() => setIsFiltering(!isFiltering)}\r\n        css={css`\r\n            color: ${props => props.theme.action.interactive};\r\n            background-color: transparent;\r\n            text-decoration: underline;\r\n            &.active {\r\n                color: white;\r\n                background-color: ${props => props.theme.action.interactive};\r\n            }\r\n        `}\r\n    >\r\n        Filter\r\n    </ButtonInput>;\r\n\r\n    let filteredResults = query ?\r\n        ALL_RESULTS.filter(r => {\r\n            return doesQueryMatch(query, r) && doTagsMatch(selectedTags, r);\r\n        })\r\n        :\r\n        ALL_RESULTS.filter(r => {\r\n            return r.isCommon && doTagsMatch(selectedTags, r);\r\n        });\r\n\r\n    const tagSet = new Set();\r\n    ALL_RESULTS.forEach(r => {\r\n        if (r.to.includes('root')) return;\r\n        r.tags.forEach(t => tagSet.add(t));\r\n    });\r\n    const tags = ArrayUtils.setToArray(tagSet) || [];\r\n\r\n    const tagSet2 = new Set();\r\n    filteredResults.forEach(r => {\r\n        if (r.to.includes('root')) return;\r\n        r.tags.forEach(t => tagSet2.add(t));\r\n    });\r\n    const availableTags = ArrayUtils.setToArray(tagSet2) || [];\r\n\r\n    return (\r\n        <Card title={!query ? 'Popular Pages' : 'Results'} action={action}>\r\n            {isFiltering && <FilterList\r\n                tags={tags}\r\n                availableTags={availableTags}\r\n                selectedTags={selectedTags}\r\n                setSelectedTags={setSelectedTags}\r\n            />}\r\n            <StyledSearchResultsList>\r\n                {filteredResults.map((r, i) => <li key={r.to}>\r\n                    <Link\r\n                        id={`search-result=${i}`}\r\n                        to={r.to}\r\n                        ref={i === 0 ? resultsRef : undefined}\r\n                        onKeyDown={(e) => {\r\n                            e.preventDefault();\r\n                            if (e.key === 'Enter') {\r\n                                navigate(r.to);\r\n                            }\r\n                            if (e.key === 'ArrowDown') {\r\n                                const next = document.getElementById(`search-result=${i + 1}`);\r\n                                if (next) next.focus();\r\n                            }\r\n                            if (e.key === 'ArrowUp') {\r\n                                const prev = document.getElementById(`search-result=${i - 1}`);\r\n                                if (prev) prev.focus();\r\n                            }\r\n                        }}\r\n                    >\r\n                        {r.text}\r\n                    </Link>\r\n                </li>)}\r\n            </StyledSearchResultsList>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default SearchResultsCard;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport styled from 'styled-components';\r\nimport { useQueryParam } from \"use-query-params\";\r\nimport { StyledPageBody } from \"../_shared/layout/PageBody\";\r\nimport { StyledCard } from \"../_shared/ui/Card\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport SearchResultsCard from \"./SearchResultsCard\";\r\n\r\nconst StyledSearchPage = styled(StyledPageBody)`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\t//justify-content: center;\r\n\r\n    ${StyledCard} {\r\n        max-width: 768px;\r\n    }\r\n\r\n    .search-bar {\r\n        margin: 32px auto;\r\n    }\r\n`;\r\n\r\nconst SearchPage: React.FC<any> = () => {\r\n\r\n    const [qp] = useQueryParam('query');\r\n\r\n    const [query, setQuery] = useState(qp || '');\r\n    const searchRef = useRef();\r\n    const resultsRef = useRef();\r\n\r\n    useEffect(() => {\r\n        const ref = qp ? resultsRef : searchRef;\r\n        const cur = ref.current as any;\r\n        cur && cur.focus();\r\n    }, []);\r\n\r\n    return (\r\n        <StyledSearchPage>\r\n            <SearchBar searchRef={searchRef} query={query} setQuery={setQuery} />\r\n            <SearchResultsCard resultsRef={resultsRef} query={query} />\r\n        </StyledSearchPage>\r\n    );\r\n};\r\n\r\nexport default SearchPage;\r\n","import SearchPage from \"../components/search/SearchPage\";\r\n\r\nexport default SearchPage;\r\n"],"names":["StyledPageBody","styled","StyledCard","props","theme","surface","card","title","action","children","rest","className","StyledSearchBar","utils","border","interactive","searchRef","externalQuery","query","externalSetQuery","setQuery","placeholder","useState","_query","_setQuery","role","onSubmit","e","preventDefault","value","target","elements","console","log","path","URLSearchParams","toString","navigate","type","id","name","ref","onChange","getName","modelType","root","ModelId","getLink","ALL_RESULTS","ALL_PRESETS","p","push","text","modelId","to","tags","isCommon","includes","ScaleTag","NOTE_PRESETS","n","StyledFilterList","transparent","hoverDark","inverted","secondary","availableTags","selectedTags","setSelectedTags","map","t","key","ButtonInput","onClick","filter","x","toggle","disabled","StyledSearchResultsList","doTagsMatch","r","length","some","resultsRef","isFiltering","setIsFiltering","filteredResults","match","RegExp","doesQueryMatch","tagSet","Set","forEach","add","ArrayUtils","tagSet2","Card","i","undefined","onKeyDown","next","document","getElementById","focus","prev","StyledSearchPage","qp","useQueryParam","useRef","useEffect","cur","current","SearchBar"],"sourceRoot":""}