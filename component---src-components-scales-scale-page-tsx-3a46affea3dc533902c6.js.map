{"version":3,"file":"component---src-components-scales-scale-page-tsx-3a46affea3dc533902c6.js","mappings":"0PAQMA,EAAiBC,EAAAA,QAAAA,IAAAA,WAAH,mEAAGA,CAAH,+IAgEpB,EAhDgC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEzBC,GAAaC,EAAAA,EAAAA,MAEbC,EAAOH,EAAMI,KAAKC,MAAK,SAAAC,GAAC,OAC1BA,IAAMC,EAAAA,GAAAA,UACND,IAAMC,EAAAA,GAAAA,YACND,IAAMC,EAAAA,GAAAA,aACND,IAAMC,EAAAA,GAAAA,gBAGV,IAAKJ,EAAM,OAAO,KAElB,IAAIK,EAAW,GACf,OAAQL,GACJ,KAAKI,EAAAA,GAAAA,SACDC,EAAW,WACX,MACJ,KAAKD,EAAAA,GAAAA,WACDC,EAAW,aACX,MACJ,KAAKD,EAAAA,GAAAA,YACDC,EAAW,gBACX,MACJ,KAAKD,EAAAA,GAAAA,aACDC,EAAW,iBAInB,IAAMC,EAAQC,EAAAA,GAAAA,QAAqB,SAAAC,GAAC,OAAIA,EAAEP,KAAKQ,SAAST,MAExD,OACI,gBAACU,EAAA,GAAD,CACIC,MAAUN,EAAL,UAEL,gBAACV,EAAD,KACI,0BACKW,EAAMM,KAAI,SAAAC,GAAC,OACR,sBAAIC,IAAKD,EAAEE,IACP,gBAAC,KAAD,CAAMC,GAAE,WAAaH,EAAEI,QAAf,IAA0BJ,EAAEE,GAA5B,IAAkCjB,EAAcoB,UAAWrB,EAAMkB,KAAOF,EAAEE,GAAK,SAAW,IAAKF,EAAEM,c,UC1D/HC,EAA0BxB,EAAAA,QAAAA,IAAAA,WAAH,qFAAGA,CAAH,iLAuE7B,EA9CyC,SAAC,GAAe,IAE/CyB,EAF8C,EAAZxB,MAEjByB,iBAEvB,OAAKD,EAASE,OAGV,gBAACb,EAAA,GAAD,CACIC,MAAM,kBAEN,gBAACS,EAAD,KACI,6BACI,6BACI,sBAAIF,UAAU,WACV,qCACCG,EAAST,KAAI,SAACC,EAAGW,GAAJ,OACV,sBAAIV,IAAKU,GACJX,EAAEY,WAAWD,EAAI,QAI9B,0BACI,kCACCH,EAAST,KAAI,SAACC,EAAGW,GAAJ,OACV,sBAAIV,IAAKU,GACL,gBAAC,KAAD,CAAMR,GAAE,WAAaH,EAAEI,QAAf,IAA0BJ,EAAEE,GAA5B,KAAkCF,EAAEa,KAAF,QAAiBb,EAAEa,KAAKX,GAAO,KAAOF,EAAEc,sBAKlG,6BACI,0BACI,oCACCN,EAAST,KAAI,SAACC,EAAGW,GAAJ,OACV,sBAAIV,IAAKU,GACJA,EAAI,WA/BR,M,kDCnB3BI,GAAkBhC,EAAAA,EAAAA,SAAOiC,EAAAA,GAAV,iFAAGjC,CAAH,MA4BrB,EAvBiC,SAAAkC,GAE7B,IAAMJ,GAAOK,EAAAA,EAAAA,MACPC,EAAQ,IAAIC,EAAAA,EAAMH,EAAMI,YAAYjB,QAAS,CAAES,KAAAA,IAE/CS,EAAWH,EAAMI,QAAQb,OAAd,qBAA4CS,EAAMI,QAAQC,KAAK,KAA/D,SAA8E,QAE/F,OACI,gBAACT,EAAD,KACI,gBAACU,EAAA,EAAD,CAAW3B,MAAOqB,EAAMb,KAAMgB,SAAUA,IACxC,gBAAC,IAAD,KACI,gBAACI,EAAA,EAAD,CAAa1C,MAAOmC,IACpB,gBAACQ,EAAA,EAAD,MACA,gBAAC,EAAD,CAAmB3C,MAAOmC,IAC1B,gBAAC,EAAD,CAAUnC,MAAOmC,IACjB,gBAACS,EAAA,EAAD,CAAY5C,MAAOmC,IACnB,gBAACU,EAAA,EAAD,CAAa7C,MAAOmC,IACpB,gBAACW,EAAA,EAAD,CAAW9C,MAAOmC","sources":["webpack://play-what/./src/components/_shared/cards/ModeCard.tsx","webpack://play-what/./src/components/_shared/cards/RomanNumeralsCard.tsx","webpack://play-what/./src/components/scales/ScalePage.tsx"],"sourcesContent":["import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { useRootSuffix } from \"../../../contexts/PagePropsContext\";\r\nimport { Tag } from \"../../../core/models/Model.constants\";\r\nimport { SCALE_PRESETS } from \"../../../core/models/Model.presets\";\r\nimport Card from \"../../_shared/ui/Card\";\r\n\r\nconst StyledModeCard = styled.div`\r\n    ul {\r\n        display: flex;\r\n        justify-content: space-around;\r\n        gap: 4px;\r\n        flex-wrap: wrap;\r\n        a {\r\n            padding: 4px;\r\n            &.active {\r\n                font-weight: bold;\r\n                text-decoration: underline;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst ModeCard: React.FC<any> = ({ model }) => {\r\n\r\n    const rootSuffix = useRootSuffix();\r\n\r\n    const type = model.tags.find(t =>\r\n        t === Tag.Diatonic ||\r\n        t === Tag.Pentatonic ||\r\n        t === Tag.MelodicMode ||\r\n        t === Tag.HarmonicMode\r\n    );\r\n\r\n    if (!type) return null;\r\n\r\n    let modeType = '';\r\n    switch (type) {\r\n        case Tag.Diatonic:\r\n            modeType = 'Diatonic';\r\n            break;\r\n        case Tag.Pentatonic:\r\n            modeType = 'Pentatonic';\r\n            break;\r\n        case Tag.MelodicMode:\r\n            modeType = 'Melodic Minor';\r\n            break;\r\n        case Tag.HarmonicMode:\r\n            modeType = 'Harmonic Minor';\r\n            break;\r\n    }\r\n\r\n    const modes = SCALE_PRESETS.filter(p => p.tags.includes(type));\r\n\r\n    return (\r\n        <Card\r\n            title={`${modeType} Modes`}\r\n        >\r\n            <StyledModeCard>\r\n                <ul>\r\n                    {modes.map(n => (\r\n                        <li key={n.id}>\r\n                            <Link to={`/browse/${n.modelId}/${n.id}/${rootSuffix}`} className={model.id === n.id ? 'active' : ''}>{n.name}</Link>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </StyledModeCard>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ModeCard;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport Card from \"../../_shared/ui/Card\";\r\n\r\nconst StyledRomanNumeralsCard = styled.div`\r\n    table {\r\n        border-collapse: collapse;\r\n        width: 100%;\r\n\r\n        th {\r\n            //color: ${props => props.theme.brand.accent};\r\n            &:first-child {\r\n                text-align: right;\r\n            }\r\n            padding: 4px;\r\n        }\r\n        \r\n        td {\r\n            padding: 4px;\r\n            text-align: center;\r\n        }\r\n\r\n        .numeral td {\r\n            font-size: 160%;\r\n            font-family: serif;\r\n        }\r\n    }\r\n`;\r\n\r\nconst RomanNumeralsCard: React.FC<any> = ({ model }) => {\r\n\r\n    const numerals = model.getAllNumerals();\r\n\r\n    if (!numerals.length) return null;\r\n\r\n    return (\r\n        <Card\r\n            title=\"Roman Numerals\"\r\n        >\r\n            <StyledRomanNumeralsCard>\r\n                <table>\r\n                    <tbody>\r\n                        <tr className=\"numeral\">\r\n                            <th>Numeral</th>\r\n                            {numerals.map((n, i) => (\r\n                                <td key={i}>\r\n                                    {n.getNumeral(i + 1)}\r\n                                </td>\r\n                            ))}\r\n                        </tr>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            {numerals.map((n, i) => (\r\n                                <td key={i}>\r\n                                    <Link to={`/browse/${n.modelId}/${n.id}/${n.root ? `root/${n.root.id}` : ''}`}>{n.getShortName()}</Link>\r\n                                </td>\r\n                            ))}\r\n                        </tr>\r\n                    </tbody>\r\n                    <tfoot>\r\n                        <tr>\r\n                            <th >Degree</th>\r\n                            {numerals.map((n, i) => (\r\n                                <th key={i}>\r\n                                    {i + 1}\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n            </StyledRomanNumeralsCard>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default RomanNumeralsCard;\r\n","import Scale from \"@pw-core/models/Scale\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { useRoot } from \"../../contexts/PagePropsContext\";\r\nimport DetailsCard from \"../_shared/cards/DetailsCard\";\r\nimport GuitarCard from \"../_shared/cards/GuitarCard\";\r\nimport ModeCard from \"../_shared/cards/ModeCard\";\r\nimport RelatedCard from \"../_shared/cards/RelatedCard\";\r\nimport RomanNumeralsCard from \"../_shared/cards/RomanNumeralsCard\";\r\nimport RootCard from \"../_shared/cards/RootCard\";\r\nimport SoundCard from \"../_shared/cards/SoundCard\";\r\nimport { StyledPageBody } from \"../_shared/layout/PageBody\";\r\nimport PageTitle from \"../_shared/layout/PageTitle\";\r\nimport { StyledPane } from \"../_shared/layout/Pane\";\r\n\r\nconst StyledScalePage = styled(StyledPageBody)`\r\n   \r\n`;\r\n\r\n\r\nconst ScalePage: React.FC<any> = props => {\r\n\r\n    const root = useRoot();\r\n    const scale = new Scale(props.pageContext.modelId, { root });\r\n\r\n    const subtitle = scale.aliases.length ? `Also known as the ${scale.aliases.join('/')} Scale` : 'Scale';\r\n\r\n    return (\r\n        <StyledScalePage>\r\n            <PageTitle title={scale.name} subtitle={subtitle} />\r\n            <StyledPane>\r\n                <DetailsCard model={scale} />\r\n                <RootCard />\r\n                <RomanNumeralsCard model={scale} />\r\n                <ModeCard model={scale} />\r\n                <GuitarCard model={scale} />\r\n                <RelatedCard model={scale} />\r\n                <SoundCard model={scale} />\r\n            </StyledPane>\r\n        </StyledScalePage >\r\n    );\r\n};\r\n\r\nexport default ScalePage;\r\n"],"names":["StyledModeCard","styled","model","rootSuffix","useRootSuffix","type","tags","find","t","Tag","modeType","modes","SCALE_PRESETS","p","includes","Card","title","map","n","key","id","to","modelId","className","name","StyledRomanNumeralsCard","numerals","getAllNumerals","length","i","getNumeral","root","getShortName","StyledScalePage","StyledPageBody","props","useRoot","scale","Scale","pageContext","subtitle","aliases","join","PageTitle","DetailsCard","RootCard","GuitarCard","RelatedCard","SoundCard"],"sourceRoot":""}