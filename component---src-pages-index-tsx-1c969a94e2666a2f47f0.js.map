{"version":3,"file":"component---src-pages-index-tsx-1c969a94e2666a2f47f0.js","mappings":"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","sources":["webpack://play-what/./src/components/layout/PageBody.tsx","webpack://play-what/./src/components/search/SearchBar.tsx","webpack://play-what/./src/components/ui/Card.tsx","webpack://play-what/./static/logo.png","webpack://play-what/./static/note-logo.png","webpack://play-what/./src/components/cards/PreviewCard.tsx","webpack://play-what/./src/components/pages/view/view.defaults.ts","webpack://play-what/./src/components/pages/IndexPage.tsx","webpack://play-what/./src/pages/index.tsx","webpack://play-what/./src/viewers/fretboard/Fretboard.styles.tsx","webpack://play-what/./src/viewers/fretboard/FretLabel.tsx","webpack://play-what/./src/viewers/fretboard/Fretboard.tsx","webpack://play-what/./src/viewers/fretboard/Fretboard.tuning.ts","webpack://play-what/./src/viewers/fretboard/Fretboard.utils.ts"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const StyledPageBody = styled.div`\r\n\twidth: 100%;\r\n\t//max-width: 1920px;\r\n\tmax-width: 1024px;\r\n\tmin-height: calc(100vh - 96px);\r\n    \r\n\tmargin: auto;\r\n\tpadding: 16px;\r\n`\r\n","import { navigate } from \"gatsby\";\r\nimport React, { useState } from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nconst StyledSearchBar = styled.form`\r\n    width: 100%;\r\n    .search-bar {\r\n        width: 100%;\r\n        max-width: 512px;\r\n        display: grid;\r\n        grid-template-columns: 1fr auto;\r\n\r\n        input, button {\r\n            padding: 8px 8px;\r\n            border-radius: 8px;\r\n            border: 1px solid ${props => props.theme.utils.border};\r\n        }\r\n\r\n        input {\r\n            border-radius: 8px 0 0 8px;\r\n            border-right: none;\r\n        }\r\n\r\n        button {\r\n            border-radius: 0 8px 8px 0;\r\n            cursor: pointer;\r\n            color: white;\r\n            font-weight: bold;\r\n            background-color: ${props => props.theme.action.interactive};\r\n            border-left: none;\r\n            padding: 8px 16px;\r\n\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n        }\r\n    }\r\n`;\r\n\r\nconst SearchBar: React.FC<any> = ({ searchRef, query: externalQuery, setQuery: externalSetQuery, placeholder }) => {\r\n    const [_query, _setQuery] = useState('');\r\n    const query = typeof externalQuery === 'undefined' ? _query : externalQuery;\r\n    const setQuery = typeof externalSetQuery === 'undefined' ? _setQuery : externalSetQuery;\r\n\r\n    const onChange = e => {\r\n        setQuery(e.target.value);\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        const value = e.target.elements.query.value;\r\n        const query = new URLSearchParams({ query: value });\r\n        const qs = query ? `?${query.toString()}` : '';\r\n        const path = `/search/${qs}`;\r\n        navigate(path);\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <StyledSearchBar role=\"search\" onSubmit={onSubmit}>\r\n            <div className=\"search-bar\">\r\n                <input\r\n                    type=\"search\"\r\n                    id=\"site-search\"\r\n                    name=\"query\"\r\n                    ref={searchRef}\r\n                    onChange={onChange}\r\n                    value={query as string}\r\n                    placeholder={placeholder || \"Search the site...\"}\r\n                />\r\n                <button type=\"submit\" >Search</button>\r\n            </div>\r\n        </StyledSearchBar>\r\n    );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledCard = styled.div`\r\n    background: ${props => props.theme.surface.card};\r\n    width: 100%;\r\n    border-radius: 16px;\r\n    padding: 16px;\r\n\r\n    .header {\r\n        margin-bottom: 16px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n    }\r\n`;\r\n\r\nexport const CardHeader = ({ title, action = null }) => (\r\n    <div className=\"header\">\r\n        <h2>{title}</h2>\r\n        {action}\r\n    </div>\r\n);\r\n\r\nconst Card: React.FC<any> = ({ title, action, children, ...rest }) => {\r\n    return (\r\n        <StyledCard {...rest}>\r\n            {title &&\r\n                <CardHeader title={title} action={action} />\r\n            }\r\n            {children}\r\n        </StyledCard >\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","export default __webpack_public_path__ + \"static/logo-d3957ffe370a23c288d3dadc5c305ef6.png\";","export default __webpack_public_path__ + \"static/note-logo-cb5461ffd02ca1a1d24052d2c99b9492.png\";","import React from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport NumberUtils from \"../../core/general/Number.utils\";\r\nimport Note from \"../../core/models/Note\";\r\nimport { octaveState } from \"../../state/state\";\r\nimport { CardHeader, StyledCard } from \"../ui/Card\";\r\n\r\nconst StyledPreviewCard = styled(StyledCard)`\r\n    h2 {\r\n        font-size: 100%;\r\n        padding-bottom: 8px;\r\n    }\r\n    .header {\r\n        display: none;\r\n        @media(min-width: 512px) {\r\n            display: unset;\r\n        }\r\n    }\r\n    table {\r\n        margin: auto;\r\n        border-collapse: collapse;\r\n\r\n        &.desktop {\r\n            display: none;\r\n            @media(min-width: 512px) {\r\n                display: table;\r\n            }\r\n            th {\r\n                display: none;\r\n            }\r\n        }\r\n\r\n        td, th {\r\n            padding: 4px;\r\n            @media(min-width: 512px) {\r\n                padding: 4px 8px;\r\n            }\r\n            text-align: center;\r\n        }\r\n\r\n        th {\r\n            text-transform: uppercase;\r\n            font-size: 80%;\r\n        }\r\n\r\n        .featured {\r\n            font-weight: bold;\r\n            font-size: 120%;\r\n        }\r\n\r\n        .root {\r\n            color: red;\r\n        }\r\n    }\r\n`;\r\n\r\nconst NoteCell = ({ note, i }) => {\r\n    if (!note) return null;\r\n    return (\r\n        <td className={`note featured ${i === 0 ? 'root' : ''}`}>{note.name}</td>\r\n    );\r\n};\r\n\r\nconst IntervalCell = ({ interval, isFeatured }) => {\r\n    return (\r\n        <td className={`interval ${isFeatured ? 'featured' : ''}`}>{interval.getName()}</td>\r\n    );\r\n};\r\n\r\nconst PreviewCard: React.FC<any> = ({ model }) => {\r\n    const intervals = model.intervals;\r\n    const octave = useRecoilValue(octaveState);\r\n    const notes = model.notes && model.notes.map(n => new Note([\r\n        (octave - 4) * 12 + NumberUtils.modulo(n.pod[0], 12),\r\n        n.pod[1]\r\n    ]));\r\n\r\n    if (!intervals && !notes) return null;\r\n\r\n    return (\r\n        <StyledPreviewCard $n={intervals.length}>\r\n            <CardHeader title={model.name} />\r\n            <table className=\"desktop\">\r\n                <tbody>\r\n                    {notes && <tr>\r\n                        <th>Note</th>\r\n                        {notes.map((note, i) => <NoteCell note={note} key={i} i={i} />)}\r\n                    </tr>}\r\n                    <tr>\r\n                        <th>Interval</th>\r\n                        {intervals.map((ivl, i) => <IntervalCell interval={ivl} key={i} isFeatured={!notes} />)}\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </StyledPreviewCard >\r\n    );\r\n};\r\n\r\nexport default PreviewCard;\r\n","import Chord from \"../../../core/models/Chord\";\r\nimport { ChordId, NoteId } from \"../../../core/models/Model.constants\";\r\nimport Note from \"../../../core/models/Note\";\r\n\r\nexport const DEFAULT_MODEL = new Chord(ChordId.Maj7, { root: Note.fromId(NoteId.C) })\r\n","import { Link } from \"gatsby\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styled from 'styled-components';\r\nimport logoSrc from '../../../static/logo.png';\r\nimport placeholderSrc from '../../../static/note-logo.png';\r\nimport { getModelIdClass, getModelIdText } from \"../../core/models/Model.constants\";\r\nimport { ALL_PRESETS, NOTE_PRESETS } from \"../../core/models/Model.presets\";\r\nimport Note from \"../../core/models/Note\";\r\nimport Fretboard from \"../../viewers/fretboard/Fretboard\";\r\nimport PreviewCard from \"../cards/PreviewCard\";\r\nimport { StyledPageBody } from \"../layout/PageBody\";\r\nimport SearchBar from \"../search/SearchBar\";\r\nimport SEO from \"../utils/SEO\";\r\nimport { DEFAULT_MODEL } from \"./view/view.defaults\";\r\n\r\n\r\nconst StyledHomePage = styled(StyledPageBody)`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\t//justify-content: center;\r\n\r\n\t.logo {\r\n\t\twidth: 256px;\r\n\t\tmargin: 16px 0 32px;\r\n\t\t@media(min-width: 512px) {\r\n\t\t\twidth: 512px;\r\n\t\t\tmargin: 32px 0 64px;\r\n\t\t}\r\n\t\t@media(min-width: 1024px) {\r\n\t\t\twidth: 768px;\r\n\t\t\tmargin: 48px 0 96px;\r\n\t\t}\r\n\t}\r\n\r\n\t.placeholder {\r\n\t\twidth: 128px;\r\n\t}\r\n\r\n\t.intro {\r\n\t\tmax-width: 768px;\r\n\t\tcolor: ${({ theme }) => theme.text.primary};\r\n\t\ttext-align: center;\r\n\t\tline-height: 120%;\r\n\t\tfont-size: 120%;\r\n\t\t@media(min-width: 512px) {\r\n\t\t\tfont-size: 140%;\r\n\t\t}\r\n\t\t@media(min-width: 1024px) {\r\n\t\t\tfont-size: 160%;\r\n\t\t}\r\n\t}\r\n\r\n\t.disclaimer {\r\n\t\tfont-style: italic;\r\n\t\tcolor: ${({ theme }) => theme.text.secondary};\r\n\t\ttext-align: center;\r\n\t\tmargin: 8px 0;\r\n\t\tfont-size: 80%;\r\n\t\t@media(min-width: 512px) {\r\n\t\t\tmargin: 16px 0;\r\n\t\t\tfont-size: 100%;\r\n\t\t}\r\n\t\t@media(min-width: 1024px) {\r\n\t\t\tmargin: 32px 0;\r\n\t\t\tfont-size: 120%;\r\n\t\t}\r\n\t}\r\n\r\n\tsection {\r\n\t\tborder-top: 1px solid ${({ theme }) => theme.utils.border};\r\n\t\twidth: 100%;\r\n    \tmargin-top: 32px;\r\n\r\n\t\t& > div {\r\n\t\t\tdisplay: grid;\r\n\t\t\tgrid-template-columns: 1fr;\r\n\t\t\tgap: 32px;\r\n\t\t\t@media(min-width: 512px) {\r\n\t\t\t\tgrid-template-columns: 1fr 1fr;\r\n\t\t\t}\r\n\r\n\t\t\t& > div.txt {\r\n\t\t\t\ta {\r\n\t\t\t\t\tdisplay: block;\r\n\t\t\t\t\tmargin-top: 16px;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t& > div.action {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tjustify-content: center;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t&:last-child {\r\n\t\t\tmargin-bottom: 256px;\r\n\t\t}\r\n\t}\r\n\r\n\th3 {\r\n\t\tmargin: 32px 0 16px;\r\n\t\tcolor: ${({ theme }) => theme.surface.nav};\r\n\t}\r\n\r\n\t> a {\r\n\t\tborder-radius: 8px;\r\n\t\tcursor: pointer;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\tbackground-color: ${props => props.theme.action.interactive};\r\n\t\tpadding: 8px 16px;\r\n\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\r\n\t\twidth: 100%;\r\n\t\tmax-width: 512px;\r\n\r\n\t\t&:hover {\r\n\t\t\tcolor: white;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst IndexPage: React.FC<any> = () => {\r\n\tconst [placeholder, setPlaceholder] = useState('Search the site');\r\n\tconst [model, setModel] = useState(DEFAULT_MODEL);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst id = setInterval(() => {\r\n\t\t\tconst root = NOTE_PRESETS[Math.floor(Math.random() * NOTE_PRESETS.length)];\r\n\t\t\tconst structure = ALL_PRESETS[Math.floor(Math.random() * ALL_PRESETS.length)];\r\n\t\t\tconst text = `${root.name} ${structure.name} ${getModelIdText(structure.modelType)}`;\r\n\t\t\tconst cl = getModelIdClass(structure.modelType);\r\n\t\t\tconst m = new cl(structure.modelId, { root: Note.fromId(root.modelId) })\r\n\r\n\t\t\tsetPlaceholder(text);\r\n\t\t\tsetModel(m);\r\n\t\t}, 2000);\r\n\t\treturn () => clearInterval(id);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<StyledHomePage>\r\n\t\t\t<SEO />\r\n\t\t\t<img src={logoSrc} className=\"logo\" />\r\n\t\t\t<p className=\"intro\">\r\n\t\t\t\tA toolkit for exploring and visualizing musical concepts\r\n\t\t\t</p>\r\n\t\t\t<p className=\"disclaimer\">\r\n\t\t\t\tThis site is under active development and is currently unstable.<br />A formal Beta release is planned for 8/5/22.\r\n\t\t\t</p>\r\n\t\t\t<section>\r\n\t\t\t\t<h3>Explore music theory</h3>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className=\"txt\">\r\n\t\t\t\t\t\t<p>Browse an extensive library of chords, scales, and modes in every key. Easily identify relationships between them and jump between pages.</p>\r\n\t\t\t\t\t\t<Link to=\"/browse\">Browse Chords & Scales</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"action\">\r\n\t\t\t\t\t\t<PreviewCard model={model} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t\t<section>\r\n\t\t\t\t<h3>Visualize notes on instruments</h3>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className=\"txt\">\r\n\t\t\t\t\t\t<p>Project notes on a variety of instruments and customize how they're displayed. Play What supports different tunings, voicings, labels, and colors.</p>\r\n\t\t\t\t\t\t<Link to=\"/view\">See Instruments</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Link to=\"/view/fretboard\" >\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Fretboard\r\n\t\t\t\t\t\t\t\tmodel={model}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t\t<section>\r\n\t\t\t\t<h3>Search for chords and scales</h3>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className=\"txt\">\r\n\t\t\t\t\t\t<p>Search for any chord, scale, or mode in any key. Bookmark any page.</p>\r\n\t\t\t\t\t\t<Link to=\"/search\">Go To Search Page</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"action\">\r\n\t\t\t\t\t\t<SearchBar placeholder={placeholder} query={placeholder} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t\t<section>\r\n\t\t\t\t<h3>Build your own practice materials</h3>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className=\"txt\">\r\n\t\t\t\t\t\t<p>Customize your own cheat sheets, flash cards, chord charts, and tabs.</p>\r\n\t\t\t\t\t\t<Link to=\"/coming-soon\">Coming Soon!</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"action\">\r\n\t\t\t\t\t\t<img src={placeholderSrc} className=\"placeholder\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t</StyledHomePage>\r\n\t);\r\n};\r\n\r\nexport default IndexPage;\r\n","import IndexPage from \"../components/pages/IndexPage\";\r\n\r\nexport default IndexPage;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledFretboard = styled.div`\r\n    display: inline-grid;\r\n\twidth: 100%;\r\n\tbackground-image: radial-gradient(ellipse, #E8DBB8 0%, #D0B27C 100%);\r\n\tfont-size: 90%;\r\n\tmargin: 16px 0;\r\n\r\n    .fret {\r\n        display: inline-flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        position: relative;\r\n        border-right: 2px solid darkgrey;\r\n    }\r\n\r\n    .fret.open {\r\n        border-right: 3px solid grey;\r\n        background-color: #D0B27C;;\r\n    }\r\n\r\n    /* Used to maintain aspect ratio */\r\n\r\n    .fret::before {\r\n        content: \"\";\r\n        display: block;\r\n        height: 0;\r\n        width: 0;\r\n        margin-top: calc(1/2 * 100%);\r\n    }\r\n\r\n    /* Fret String */\r\n\r\n    .fret-string {\r\n        border-top: 1px solid grey;\r\n        width: 100%;\r\n    }\r\n\r\n    /* Fret Numbers */\r\n\r\n    .fret-number {\r\n        position: absolute;\r\n        bottom: 100%;\r\n    }\r\n\r\n    /* Fret Dots */\r\n\r\n    .fret-dots {\r\n        position: absolute;\r\n        top: 95%;\r\n        font-size: 16px;\r\n        white-space: nowrap;\r\n    }\r\n\r\n    .fret-number, .fret-dots {\r\n        color: #888;\r\n    }\r\n`;\r\n\r\nexport default StyledFretboard;\r\n","\r\nimport * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { IFretProps } from \"./Fretboard.utils\";\r\n\r\nconst StyledFretLabel = styled.div`\r\n\tposition: absolute;\r\n\theight: 60%;\r\n\taspect-ratio: 1;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tborder-radius: 100%;\r\n\tbackground-color: ${({ $bgColor }) => $bgColor ? $bgColor : 'transparent'};\r\n\tcolor: ${({ $fgColor }) => $fgColor ? $fgColor : ''};\r\n\r\n\t/*cursor: pointer;\r\n\t&:hover {\r\n\t\theight: 80%;\r\n\t}*/\r\n`;\r\n\r\n\r\nconst FretLabel: React.FC<IFretProps> = props => {\r\n\r\n\tconst bgColor = props.colorMapFn(props);\r\n\r\n\tlet fgColor = 'white';\r\n\r\n\treturn (\r\n\t\t<StyledFretLabel $bgColor={bgColor} $fgColor={fgColor} onClick={null} className=\"fret-label\">\r\n\t\t\t{null}\r\n\t\t</StyledFretLabel>\r\n\t);\r\n};\r\n\r\nexport default FretLabel;\r\n","import * as React from \"react\";\r\nimport StyledFretboard from \"./Fretboard.styles\";\r\nimport { DEFAULT_FRETBOARD_PROPS, getDotsForFret, getFretRatios, IFretboardProps, IFretProps } from \"./Fretboard.utils\";\r\nimport FretLabel from \"./FretLabel\";\r\n\r\nexport const Fret: React.FC<IFretProps> = props => {\r\n\r\n\tconst { tuning, stringIndex, fretIndex, showFretNumbers, showFretDots } = props;\r\n\r\n\tconst classes = ['fret'];\r\n\tif (fretIndex === 0)\r\n\t\tclasses.push('open');\r\n\r\n\tconst isLowString = stringIndex === tuning.length - 1;\r\n\tconst isHighString = stringIndex === 0;\r\n\r\n\treturn (\r\n\t\t<div className={classes.join(' ')}>\r\n\t\t\t<div className=\"fret-number\">\r\n\t\t\t\t{showFretNumbers && isHighString && fretIndex > 0 && fretIndex}\r\n\t\t\t</div>\r\n\t\t\t<div className='fret-string' />\r\n\t\t\t<FretLabel {...props} />\r\n\t\t\t<div className=\"fret-dots\">\r\n\t\t\t\t{showFretDots && isLowString && fretIndex > 0 && getDotsForFret(fretIndex)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst getFrets = (props: IFretboardProps) => {\r\n\tconst { fretRange, tuning } = props;\r\n\tconst [lo, hi] = fretRange;\r\n\r\n\tconst allFrets = [];\r\n\tfor (let s = 0; s < tuning.length; s++) {\r\n\t\tfor (let f = lo; f <= hi; f++) {\r\n\t\t\tallFrets.push(\r\n\t\t\t\t<Fret\r\n\t\t\t\t\tkey={`s${s}-f${f}`}\r\n\t\t\t\t\tstringIndex={s}\r\n\t\t\t\t\tfretIndex={f}\r\n\t\t\t\t\ttuning={tuning}\r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\treturn allFrets;\r\n};\r\n\r\nconst Fretboard: React.FC<IFretboardProps> = (userProps) => {\r\n\tconst props = { ...DEFAULT_FRETBOARD_PROPS, ...userProps };\r\n\r\n\tconst [lo, hi] = props.fretRange;\r\n\tconst numFrets = hi - lo + 1;\r\n\tconst numStrings = props.tuning.length;\r\n\tconst gridTemplateColumns = getFretRatios(numFrets).map(n => n + 'fr').join(' ');\r\n\tconst gridTemplateRows = `repeat(${numStrings}, 1fr)`;\r\n\tconst fretboardStyles = {\r\n\t\tgridTemplateColumns,\r\n\t\tgridTemplateRows\r\n\t};\r\n\r\n\treturn (\r\n\t\t<StyledFretboard className='fretboard' style={fretboardStyles}>\r\n\t\t\t{getFrets(props)}\r\n\t\t</StyledFretboard>\r\n\t);\r\n};\r\n\r\nexport default Fretboard;\r\n","import ArrayUtils from \"../../core/general/Array.utils\";\r\nimport Note from '../../core/models/Note';\r\nimport { NoteId } from './../../core/models/Model.constants';\r\n\r\nexport enum TuningId {\r\n    Standard = 'standard',\r\n    StandardSeven = 'standard-seven',\r\n    StandardBass = 'standard-bass',\r\n    Flat = 'flat',\r\n    DoubleFlat = 'double-flat',\r\n    DropD = 'drop-d',\r\n    DADGAD = 'dadgad',\r\n    Banjo = 'banjo',\r\n    Violin = 'violin',\r\n    OpenA = 'open-a',\r\n    OpenB = 'open-b',\r\n    OpenC = 'open-c',\r\n    OpenD = 'open-d',\r\n    OpenE = 'open-e',\r\n    OpenF = 'open-f',\r\n    OpenG = 'open-g',\r\n}\r\n\r\nexport interface ITuning {\r\n    id: TuningId;\r\n    name: string;\r\n    value: number[]\r\n}\r\n\r\nconst formatPreset = (id: TuningId, name: string, value: number[]): ITuning => ({\r\n    id,\r\n    name,\r\n    value\r\n});\r\n\r\nconst getPitch = (noteId: NoteId, octave: number): number => Note.getNote(noteId, octave).pod[0];\r\n\r\nexport const TUNING_PRESET_MAP = new Map<TuningId, ITuning>([\r\n    [TuningId.Standard, formatPreset(\r\n        TuningId.Standard,\r\n        'Standard',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.E, 3)\r\n        ]\r\n    )],\r\n    [TuningId.Flat, formatPreset(\r\n        TuningId.Flat,\r\n        'Flat',\r\n        [\r\n            getPitch(NoteId.Eb, 5),\r\n            getPitch(NoteId.Bb, 4),\r\n            getPitch(NoteId.Gb, 4),\r\n            getPitch(NoteId.Db, 4),\r\n            getPitch(NoteId.Ab, 3),\r\n            getPitch(NoteId.Eb, 3)\r\n        ]\r\n    )],\r\n    [TuningId.DoubleFlat, formatPreset(\r\n        TuningId.DoubleFlat,\r\n        'Double Flat',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.F, 4),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    [TuningId.StandardSeven, formatPreset(\r\n        TuningId.StandardSeven,\r\n        'Standard 7-String',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.E, 3),\r\n            getPitch(NoteId.B, 3)\r\n        ]\r\n    )],\r\n    [TuningId.StandardBass, formatPreset(\r\n        TuningId.StandardBass,\r\n        'Standard Bass',\r\n        [\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.D, 3),\r\n            getPitch(NoteId.A, 2),\r\n            getPitch(NoteId.E, 2)\r\n        ]\r\n    )],\r\n    [TuningId.DropD, formatPreset(\r\n        TuningId.DropD,\r\n        'Drop D',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    [TuningId.DADGAD, formatPreset(\r\n        TuningId.DADGAD,\r\n        'DADGAD',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    // Unconfirmed\r\n    [TuningId.Banjo, formatPreset(\r\n        TuningId.Banjo,\r\n        'Banjo',\r\n        [\r\n            getPitch(NoteId.G, 5),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    // Unconfirmed\r\n    [TuningId.Violin, formatPreset(\r\n        TuningId.Violin,\r\n        'Violin',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.G, 4)\r\n        ]\r\n    )],\r\n    [TuningId.OpenA, formatPreset(\r\n        TuningId.OpenA,\r\n        'Open A',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.E, 4),\r\n            getPitch(NoteId.Cs, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.E, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenB, formatPreset(\r\n        TuningId.OpenB,\r\n        'Open B',\r\n        [\r\n            getPitch(NoteId.Ds, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.Fs, 4),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.Fs, 3),\r\n            getPitch(NoteId.B, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenC, formatPreset(\r\n        TuningId.OpenC,\r\n        'Open C',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.C, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenD, formatPreset(\r\n        TuningId.OpenD,\r\n        'Open D',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.Fs, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenE, formatPreset(\r\n        TuningId.OpenE,\r\n        'Open E',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.Gs, 4),\r\n            getPitch(NoteId.E, 4),\r\n            getPitch(NoteId.B, 3),\r\n            getPitch(NoteId.E, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenF, formatPreset(\r\n        TuningId.OpenF,\r\n        'Open F',\r\n        [\r\n            getPitch(NoteId.F, 5),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.F, 4),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.F, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenG, formatPreset(\r\n        TuningId.OpenG,\r\n        'Open G',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )]\r\n]);\r\n\r\nexport const FRETBOARD_TUNING_VALUES = ArrayUtils.mapToArray(TUNING_PRESET_MAP);\r\n","import Chord from '../../core/models/Chord';\r\nimport IntervalSpan from '../../core/models/Interval';\r\nimport { IModelConfig } from '../../core/models/Model.constants';\r\nimport Note from '../../core/models/Note';\r\nimport Scale from '../../core/models/Scale';\r\nimport { ITuning, TuningId, TUNING_PRESET_MAP } from './Fretboard.tuning';\r\nimport { IVoicing } from './Fretboard.voicing';\r\n\r\nexport interface IFretLabelProps {\r\n\tnote?: Note;\r\n\tcolor?: string;\r\n\tfreq?: number;\r\n}\r\n\r\nexport interface IFretboardProps {\r\n\tfretRange?: [number, number];\r\n\tshowFretDots?: boolean;\r\n\tshowFretNumbers?: boolean;\r\n\tcolorMapFn?: (fretProps: IFretProps) => string | undefined;\r\n\tvoicing?: IVoicing,\r\n\ttuning?: number[]; // ITuning,\r\n\tmodel?: Chord | Scale;\r\n}\r\n\r\nexport interface IFretProps extends IFretboardProps {\r\n\tstringIndex: number;\r\n\tfretIndex: number;\r\n}\r\n\r\nexport const DOTTED_FRET_INDICES = [true, false, false, true, false, true, false, true, false, true, false, false];\r\n\r\nexport const FRET_SIZE_RATIO = Math.pow((1 / 2), (1 / 12));\r\n\r\nconst isIntervalInVoicing = (interval: IntervalSpan, voicing: IVoicing, stringIndex: number) => {\r\n\tif (!voicing || !voicing.value) return true;\r\n\tconst v = voicing.value[stringIndex];\r\n\tconst d = interval.getDegree();\r\n\tif (Array.isArray(v)) {\r\n\t\treturn v.some(n => doesVoicingValueMatch(d, n));\r\n\t}\r\n\telse if (typeof v === 'number') {\r\n\t\treturn doesVoicingValueMatch(d, v);\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nexport const getFretColor = (props: IFretProps): string | undefined => {\r\n\tconst { stringIndex, fretIndex, tuning, model, voicing } = props;\r\n\tconst noteIndex = tuning[stringIndex] + fretIndex;\r\n\tconst [interval, note] = model.tryGetPodPairAtPitch(noteIndex);\r\n\r\n\tif (!note) return;\r\n\r\n\tif (voicing && !isIntervalInVoicing(interval, voicing, stringIndex)) {\r\n\t\treturn `#00000033`\r\n\t}\r\n\r\n\treturn interval.getColor();\r\n}\r\n\r\nexport const DEFAULT_FRETBOARD_PROPS: IFretboardProps = {\r\n\tfretRange: [1, 12],\r\n\ttuning: TUNING_PRESET_MAP.get(TuningId.Standard).value,\r\n\tshowFretDots: true,\r\n\tshowFretNumbers: true,\r\n\tcolorMapFn: getFretColor\r\n};\r\n\r\nexport const getFretRatios = (numFrets: number): number[] => {\r\n\tconst ratios = [];\r\n\tfor (let i = 1; i <= numFrets; i++) {\r\n\t\tratios.push((i <= 1) ? 1 : ratios[i - 2] * FRET_SIZE_RATIO);\r\n\t}\r\n\treturn ratios;\r\n};\r\n\r\nexport const getDotsForFret = (fretNumber: number): string => {\r\n\tconst mod = fretNumber % 12;\r\n\tif (mod === 0)\r\n\t\treturn '• •';\r\n\telse if (DOTTED_FRET_INDICES[mod])\r\n\t\treturn '•';\r\n\treturn '';\r\n};\r\n\r\nconst doesVoicingValueMatch = (d: number, v: number) => {\r\n\treturn d + 1 === v;\r\n}\r\n"],"names":["StyledPageBody","styled","StyledSearchBar","props","theme","utils","border","action","interactive","searchRef","externalQuery","query","externalSetQuery","setQuery","placeholder","useState","_query","_setQuery","React","role","onSubmit","e","preventDefault","value","target","elements","URLSearchParams","path","toString","navigate","className","type","id","name","ref","onChange","StyledCard","surface","card","CardHeader","title","children","rest","StyledPreviewCard","withConfig","NoteCell","note","i","IntervalCell","interval","isFeatured","getName","model","intervals","octave","useRecoilValue","octaveState","notes","map","n","Note","NumberUtils","pod","$n","length","key","ivl","DEFAULT_MODEL","Chord","ChordId","root","NoteId","StyledHomePage","text","primary","secondary","nav","setPlaceholder","setModel","useEffect","setInterval","NOTE_PRESETS","Math","floor","random","structure","ALL_PRESETS","getModelIdText","modelType","m","getModelIdClass","modelId","clearInterval","SEO","src","logoSrc","Link","to","PreviewCard","Fretboard","SearchBar","placeholderSrc","StyledFretLabel","$bgColor","$fgColor","bgColor","colorMapFn","onClick","Fret","tuning","stringIndex","fretIndex","showFretNumbers","showFretDots","classes","push","isLowString","isHighString","join","FretLabel","getDotsForFret","userProps","DEFAULT_FRETBOARD_PROPS","fretRange","lo","numFrets","numStrings","fretboardStyles","gridTemplateColumns","getFretRatios","gridTemplateRows","StyledFretboard","style","hi","allFrets","s","f","getFrets","TuningId","formatPreset","getPitch","noteId","TUNING_PRESET_MAP","Map","Standard","Flat","DoubleFlat","StandardSeven","StandardBass","DropD","DADGAD","Banjo","Violin","OpenA","OpenB","OpenC","OpenD","OpenE","OpenF","OpenG","FRETBOARD_TUNING_VALUES","ArrayUtils","DOTTED_FRET_INDICES","FRET_SIZE_RATIO","pow","voicing","noteIndex","tryGetPodPairAtPitch","v","d","getDegree","Array","isArray","some","doesVoicingValueMatch","isIntervalInVoicing","getColor","ratios","fretNumber","mod"],"sourceRoot":""}