{"version":3,"file":"component---src-pages-test-tsx-db1401a48d19bc40a8fe.js","mappings":"wJAmJA,ICjJA,EDiJA,WAAe,OAAM","sources":["webpack://play-what/./src/components/test/TestPage.tsx","webpack://play-what/./src/pages/test.tsx"],"sourcesContent":["// import React from \"react\";\r\n// import styled from 'styled-components';\r\n// import Model from \"../../core/models/Model\";\r\n// import { ACCIDENTAL_VALUES, IPod } from \"../../core/models/Model.constants\";\r\n// import { INTERVAL_PRESETS } from \"../../core/models/Model.presets\";\r\n// import Note from \"../../core/models/Note\";\r\n// import { DEGREE_PRESETS } from \"../../core/theory/Degree.constants\";\r\n// import { DIATONIC_VALUES } from \"../../core/theory/Diatonic.constants\";\r\n// import { StyledPageBody } from \"../_shared/layout/PageBody\";\r\n\r\n// const FIRST_OCTAVE_INTERVALS = INTERVAL_PRESETS.filter(ivl => ivl.value[0] < 12);\r\n\r\n// const StyledTestPage = styled(StyledPageBody)`\r\n//     max-width: unset;\r\n\r\n//     display: flex;\r\n//     align-items: center;\r\n//     justify-content: center;\r\n\r\n//     .container {\r\n//         height: 100%;\r\n//         width: 100%;\r\n//         overflow: auto; \r\n//     }\r\n        \r\n//     table {\r\n//         border-collapse: collapse;\r\n\r\n//         td, th {\r\n//             padding: 4px;\r\n//         }\r\n//         th {\r\n//             text-align: left;\r\n//         }\r\n\r\n//         thead th {\r\n//             background-color: ${({ theme }) => theme.utils.hoverDark};\r\n//         }\r\n\r\n//         tbody td:nth-child(2), tbody th:nth-child(2) {\r\n//             border-right: 1px solid ${props => props.theme.utils.border};\r\n//         }\r\n//         tr:nth-child(2n+1) {\r\n//             background-color: ${({ theme }) => theme.utils.hoverDark};\r\n//         }\r\n\r\n//         .pod {\r\n//             color: ${props => props.theme.text.secondary};\r\n//             font-size: 80%;\r\n//         }\r\n\r\n//         .invalid {\r\n//             color: ${({ theme }) => theme.status.error};\r\n//             font-weight: bold;\r\n//         }\r\n//     }\r\n// `;\r\n\r\n\r\n// const getRoots = () => {\r\n//     const roots = [];\r\n//     DEGREE_PRESETS.forEach((degree) => {\r\n//         const spelling = degree.id;\r\n//         const d = degree.value;\r\n\r\n//         const diatonicPitch = DIATONIC_VALUES[d].value[0];\r\n//         ACCIDENTAL_VALUES.forEach((accidental) => {\r\n//             const a = accidental.symbol;\r\n//             const offset = accidental.value;\r\n\r\n//             const invalidSymbol = offset > 0 ? 'b' : offset < 0 ? '#' : null;\r\n\r\n//             const rootName = `${spelling}${a}`;\r\n//             const rootPod: IPod = [diatonicPitch + offset, d];\r\n\r\n//             const intervals = FIRST_OCTAVE_INTERVALS.map(ivl => {\r\n//                 const ivlPod = Model.addPods(rootPod, ivl.value);\r\n//                 const ivlName = Note.getName(ivlPod);\r\n\r\n//                 //const isInvalid = ivlName.includes(invalidSymbol);\r\n//                 const isInvalid = ivlName.length > 5;\r\n\r\n//                 return {\r\n//                     name: ivlName,\r\n//                     pod: ivlPod,\r\n//                     isInvalid\r\n//                 }\r\n//             })\r\n\r\n//             roots.push({\r\n//                 name: rootName,\r\n//                 pod: rootPod,\r\n//                 intervals\r\n//             });\r\n//         });\r\n//     });\r\n//     return roots;\r\n// }\r\n\r\n// const TestPage: React.FC<any> = () => {\r\n//     const roots = getRoots();\r\n//     return (\r\n//         <StyledTestPage>\r\n//             <div className=\"container\">\r\n//                 <table>\r\n//                     <thead>\r\n//                         <tr>\r\n//                             <th colSpan={2}>Root</th>\r\n//                             {\r\n//                                 FIRST_OCTAVE_INTERVALS.map(ivl => {\r\n//                                     return <th colSpan={2} key={ivl.id}>{ivl.id}</th>\r\n//                                 })\r\n//                             }\r\n//                         </tr>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                         {\r\n//                             roots.map(r => {\r\n//                                 return (\r\n//                                     <tr key={r.name}>\r\n//                                         <th>{r.name}</th>\r\n//                                         <th>{JSON.stringify(r.pod)}</th>\r\n//                                         {\r\n//                                             r.intervals.map(ivl => {\r\n//                                                 return <>\r\n//                                                     <td key={ivl.id + 'n'} className={ivl.isInvalid ? 'invalid' : ''}>\r\n//                                                         {ivl.name}\r\n//                                                     </td>\r\n//                                                     <td key={ivl.id + 'p'} className=\"pod\">\r\n//                                                         {JSON.stringify(ivl.pod)}\r\n//                                                     </td>\r\n//                                                 </>\r\n//                                             })\r\n//                                         }\r\n//                                     </tr>\r\n//                                 );\r\n//                             })\r\n//                         }\r\n//                     </tbody>\r\n//                 </table>\r\n//             </div>\r\n//         </StyledTestPage>\r\n//     );\r\n// };\r\n\r\n// export default TestPage;\r\n\r\nexport default () => null;\r\n","import TestPage from \"../components/test/TestPage\";\r\n\r\nexport default TestPage;\r\n"],"names":[],"sourceRoot":""}