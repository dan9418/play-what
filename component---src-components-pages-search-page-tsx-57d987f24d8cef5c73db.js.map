{"version":3,"file":"component---src-components-pages-search-page-tsx-57d987f24d8cef5c73db.js","mappings":"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","sources":["webpack://play-what/./src/core/general/Nav.utils.ts","webpack://play-what/./src/components/inputs/FilterList.tsx","webpack://play-what/./src/components/search/SearchResultsCard.tsx","webpack://play-what/./src/components/pages/search.page.tsx","webpack://play-what/./src/components/search/SearchBar.tsx","webpack://play-what/./src/components/ui/Card.tsx","webpack://play-what/./src/core/routing/Routing.utils.ts"],"sourcesContent":["import {\r\n  IModelConfig,\r\n  ModelId,\r\n  ModelType,\r\n  NoteId,\r\n  Tag\r\n} from \"../models/Model.constants\";\r\nimport { getModelRoute } from \"../routing/Routing.utils\";\r\nimport { ALL_PRESETS, NOTE_PRESET_MAP } from \"./../models/Model.presets\";\r\nimport { replaceAll } from \"./String.utils\";\r\n\r\ninterface ISearchResult {\r\n  to: string;\r\n  text: string;\r\n  modelType?: ModelType;\r\n  aliases?: string[];\r\n}\r\n\r\ninterface ISearchCandidate {\r\n  text: string;\r\n  to: string;\r\n  keywords: string[];\r\n}\r\n\r\nconst doesQueryMatch = (query = \"\", keywords: (string | RegExp)[]) => {\r\n  return keywords.some((kw) => query.match(new RegExp(kw, \"gi\")));\r\n};\r\n\r\nconst getName = (modelType: ModelType, name: string, root?: string): string => {\r\n  switch (modelType) {\r\n    case ModelType.Chord:\r\n      return `${root ? root : \"\"} ${name} Chord`;\r\n    case ModelType.Scale:\r\n      return `${root ? root : \"\"} ${name} Scale`;\r\n    default:\r\n      return `${root ? root : \"\"} ${name}`;\r\n  }\r\n};\r\n\r\nconst BASIC_PAGES: ISearchCandidate[] = [\r\n  {\r\n    text: \"Browse\",\r\n    to: \"/browse\",\r\n    keywords: [\"all\", \"chord\", \"scale\", \"browse\"],\r\n  },\r\n  {\r\n    text: \"All Chords\",\r\n    to: getModelRoute(ModelType.Chord),\r\n    keywords: [\"all\", \"chord\"],\r\n  },\r\n  {\r\n    text: \"All Scales\",\r\n    to: getModelRoute(ModelType.Scale),\r\n    keywords: [\"all\", \"scale\", \"mode\"],\r\n  },\r\n];\r\n\r\nconst REGEX_NOTE_NAME = /\\b[A-G](b|\\sflat|\\ssharp)*\\b/gi; // accidental symbols should be sanitized\r\nconst REGEX_FLAT = /\\b[A-G]b\\b/gi;\r\n\r\nconst getNoteIdFromQuery = (query: string): string | undefined => {\r\n  const noteMatches = query.match(REGEX_NOTE_NAME);\r\n\r\n  if (!noteMatches || !noteMatches.length) return;\r\n\r\n  const match = noteMatches[0];\r\n  const noteId = replaceAll(match, \" \", \"-\");\r\n\r\n  return noteId;\r\n};\r\n\r\nconst getModelTypeFromQuery = (query: string): ModelType | undefined => {\r\n  if (query.match(\"chord\")) return ModelType.Chord;\r\n  if (query.match(\"scale\")) return ModelType.Scale;\r\n};\r\n\r\ninterface IModelPresetResult extends IModelConfig {\r\n  score: number;\r\n}\r\n\r\nconst getTags = (query: string): Tag[] => {\r\n  const items: Tag[] = [];\r\n  if (query.match(/maj|major/)) items.push(Tag.Major);\r\n  if (query.match(/min|minor/)) items.push(Tag.Minor);\r\n  if (query.match(/triad|chord/)) items.push(Tag.Triad);\r\n  if (query.match(/aug|augmented/)) items.push(Tag.Augmented);\r\n  if (query.match(/dim|diminished/)) items.push(Tag.Diminished);\r\n  if (query.match(/sus|suspended/)) items.push(Tag.Suspended);\r\n  if (query.match(/dom|dominant/)) items.push(Tag.Dominant);\r\n  if (query.match(/pent|pentatonic/)) items.push(Tag.Pentatonic);\r\n  if (query.match(/hex|hexatonic/)) items.push(Tag.Hexatonic);\r\n  if (query.match(/oct|octatonic/)) items.push(Tag.Octatonic);\r\n  if (query.match(/dia|diatonic/)) items.push(Tag.Diatonic);\r\n  if (query.match(/2|2nd|two|second/)) items.push(Tag.Second);\r\n  if (query.match(/3|3rd|three|third/)) items.push(Tag.Third);\r\n  if (query.match(/4|4th|four|fourth/)) items.push(Tag.Fourth);\r\n  if (query.match(/5|5th|five|fifth/)) items.push(Tag.Fifth);\r\n  if (query.match(/6|6th|six|sixth/)) items.push(Tag.Sixth);\r\n  if (query.match(/7|7th|seven|seventh/)) items.push(Tag.Seventh);\r\n  if (query.match(/beb|bebop/)) items.push(Tag.Bebop);\r\n  if (query.match(/blu|blues/)) items.push(Tag.Blues);\r\n  if (query.match(/mel|melodic|minor/)) items.push(Tag.MelodicMode);\r\n  if (query.match(/harm|harmonic|minor/)) items.push(Tag.HarmonicMode);\r\n  return items;\r\n};\r\n\r\nconst extendPreset = (\r\n  preset: IModelConfig,\r\n  query: string,\r\n  allTags: Tag[]\r\n): IModelPresetResult => {\r\n  let score = 0;\r\n\r\n  if (query.match(preset.name.toLowerCase())) {\r\n    score = 100;\r\n  }\r\n\r\n  if (\r\n    preset.name\r\n      .toLowerCase()\r\n      .match(new RegExp(query.split(\" \").join(\"|\"), \"gi\"))\r\n  ) {\r\n    score = score + 50;\r\n  }\r\n\r\n  score =\r\n    score +\r\n    allTags.filter((queryTag) =>\r\n      preset.tags.some((presetTag) => presetTag === queryTag)\r\n    ).length;\r\n\r\n  return {\r\n    ...preset,\r\n    score,\r\n  };\r\n};\r\n\r\nconst getPresetsFromQuery = (\r\n  query: string,\r\n  modelType?: ModelType\r\n): IModelPresetResult[] => {\r\n  const allTags = getTags(query);\r\n  return ALL_PRESETS.filter(\r\n    (p) => !(modelType && p.modelType !== modelType)\r\n  ).map((p) => {\r\n    return extendPreset(p, query, allTags);\r\n    //return query.split(' ').some(query => query.match(query));\r\n  });\r\n};\r\n\r\nconst rankResults = (\r\n  results: IModelPresetResult[],\r\n  rootId\r\n): IModelPresetResult[] => {\r\n  return results\r\n    .filter((r) => rootId || r.score)\r\n    .sort((a, b) => b.score - a.score);\r\n};\r\n\r\nconst formatPresets = (\r\n  presets: IModelConfig[],\r\n  rootId?: string\r\n): ISearchResult[] => {\r\n  return presets.map((p) => {\r\n    const root = rootId\r\n      ? (NOTE_PRESET_MAP.get(rootId as NoteId) as IModelConfig).name\r\n      : undefined;\r\n    return {\r\n      text: getName(p.modelType, p.name, root),\r\n      to: getModelRoute(p.modelType, p.modelId as ModelId, rootId as NoteId),\r\n      aliases: p.aliases,\r\n      modelType: p.modelType,\r\n    };\r\n  });\r\n};\r\n\r\nconst sanitizeQuery = (query) =>\r\n  query\r\n    .trim()\r\n    .toLowerCase()\r\n    .replaceAll(\"#\", \"-sharp\")\r\n    .replaceAll(REGEX_FLAT, (m) => `${m.charAt(0)}-flat`)\r\n    .replaceAll(/[^A-Z1-9]/gi, \" \");\r\n\r\nconst getAliases = (presets: ISearchResult[]): ISearchResult[] => {\r\n  const ret: any[] = [];\r\n  for (let i = 0; i < presets.length; i++) {\r\n    const p = presets[i];\r\n    ret.push(p);\r\n    if (p.aliases) {\r\n      p.aliases.forEach((a) =>\r\n        ret.push({\r\n          to: p.to,\r\n          text: `${a} ${p.modelType === ModelType.Chord ? \" Chord\" : \" Scale\"}`,\r\n        })\r\n      );\r\n    }\r\n  }\r\n  return ret;\r\n};\r\n\r\nexport const getSearchResults = (query: string): ISearchResult[] => {\r\n  if (!query) return BASIC_PAGES;\r\n\r\n  const sanitized = sanitizeQuery(query);\r\n\r\n  const rootId = getNoteIdFromQuery(sanitized);\r\n  const modelType = getModelTypeFromQuery(sanitized);\r\n\r\n  const presets = getPresetsFromQuery(sanitized, modelType);\r\n\r\n  const ranked = rankResults(presets, rootId);\r\n\r\n  const results = formatPresets(ranked, rootId);\r\n\r\n  const resultsWithAliases = getAliases(results);\r\n\r\n  const basics = BASIC_PAGES.filter((p) =>\r\n    doesQueryMatch(sanitized, p.keywords)\r\n  );\r\n\r\n  return [...resultsWithAliases, ...basics];\r\n};\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport ButtonInput from \"./ButtonInput\";\r\n\r\nconst StyledFilterList = styled.div`\r\n\r\n    border: 1px solid ${props => props.theme.action.interactive};\r\n    border-radius: 8px;\r\n    padding: 8px;\r\n    margin-bottom: 16px;\r\n\r\n    .top {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n    }\r\n    \r\n    ul {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        align-items: center;\r\n        justify-content: center;\r\n        gap: 8px;\r\n\r\n        > li {\r\n            margin: 0  !important;\r\n            list-style-type: none !important;\r\n        }\r\n\r\n        button {\r\n            background-color: ${({ theme }) => theme.utils.transparent};;\r\n            border: 1px solid ${props => props.theme.action.interactive};;\r\n            color: ${props => props.theme.action.interactive};\r\n            padding: 4px 8px;\r\n            font-size: 80%;\r\n            :hover {\r\n                background-color: ${({ theme }) => theme.utils.hoverDark};\r\n            }\r\n\r\n            &.active {\r\n                color: ${({ theme }) => theme.text.inverted};;\r\n                background-color: ${props => props.theme.action.interactive};\r\n            }\r\n\r\n            :disabled {\r\n                color: ${({ theme }) => theme.text.inverted};\r\n                background-color: ${props => props.theme.text.secondary};\r\n                cursor: not-allowed;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nconst FilterList: React.FC<any> = ({ tags, availableTags, selectedTags, setSelectedTags }) => {\r\n\r\n    const toggle = t => {\r\n        if (selectedTags.includes(t)) {\r\n            setSelectedTags(selectedTags.filter(x => x !== t));\r\n        }\r\n        else {\r\n            setSelectedTags([...selectedTags, t]);\r\n        }\r\n    };\r\n    return (\r\n        <StyledFilterList>\r\n            {false && <div className=\"top\">\r\n                {selectedTags.length > 0 &&\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={() => setSelectedTags([])}\r\n                        className=\"clear\"\r\n                    >Clear</button>\r\n                }\r\n            </div>}\r\n            <ul>\r\n                {tags.map(t => (\r\n                    <li key={t}>\r\n                        <ButtonInput\r\n                            onClick={() => toggle(t)}\r\n                            className={selectedTags.includes(t) ? 'active' : ''}\r\n                            disabled={!availableTags.includes(t)}\r\n                        >\r\n                            {t}\r\n                        </ButtonInput>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </StyledFilterList>\r\n    );\r\n};\r\n\r\nexport default FilterList;\r\n","import { Link, navigate } from \"gatsby\";\r\nimport React, { useState } from \"react\";\r\nimport styled, { css } from 'styled-components';\r\nimport ArrayUtils from \"../../core/general/Array.utils\";\r\nimport { getSearchResults } from \"../../core/general/Nav.utils\";\r\nimport ButtonInput from \"../inputs/ButtonInput\";\r\nimport FilterList from \"../inputs/FilterList\";\r\nimport Card from \"../ui/Card\";\r\n\r\nconst StyledSearchResultsList = styled.ul` \r\n    font-size: 110%;\r\n    li a {\r\n        padding: 4px 0;\r\n        display: block;\r\n\r\n        &:focus, &:hover {\r\n            padding: 8px;\r\n            background-color: ${props => props.theme.action.interactive};\r\n            color: white;\r\n            border-radius: 8px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst ALL_RESULTS = [];\r\n\r\nconst SearchResultsCard: React.FC<any> = ({ resultsRef, query }) => {\r\n\r\n    const [isFiltering, setIsFiltering] = useState(false);\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n\r\n    const action = <ButtonInput\r\n        className={`filter ${isFiltering ? 'active' : ''}`}\r\n        onClick={() => setIsFiltering(!isFiltering)}\r\n        css={css`\r\n            color: ${props => props.theme.action.interactive};\r\n            background-color: transparent;\r\n            text-decoration: underline;\r\n            &.active {\r\n                color: white;\r\n                background-color: ${props => props.theme.action.interactive};\r\n            }\r\n        `}\r\n    >\r\n        Filter\r\n    </ButtonInput>;\r\n\r\n    let filteredResults = getSearchResults(query);\r\n\r\n    const tagSet = new Set();\r\n    ALL_RESULTS.forEach(r => {\r\n        if (r.to.includes('root')) return;\r\n        r.tags.forEach(t => tagSet.add(t));\r\n    });\r\n    const tags = ArrayUtils.setToArray(tagSet) || [];\r\n\r\n\r\n    return (\r\n        <Card title={!query ? 'Popular Pages' : 'Results'} action={null}>\r\n            {isFiltering && <FilterList\r\n                tags={tags}\r\n                availableTags={[]}\r\n                selectedTags={selectedTags}\r\n                setSelectedTags={setSelectedTags}\r\n            />}\r\n            <StyledSearchResultsList>\r\n                {filteredResults.map((r, i) => <li key={r.text}>\r\n                    <Link\r\n                        id={`search-result=${i}`}\r\n                        to={r.to}\r\n                        ref={i === 0 ? resultsRef : undefined}\r\n                        onKeyDown={(e) => {\r\n                            e.preventDefault();\r\n                            if (e.key === 'Enter') {\r\n                                navigate(r.to);\r\n                            }\r\n                            if (e.key === 'ArrowDown') {\r\n                                const next = document.getElementById(`search-result=${i + 1}`);\r\n                                if (next) next.focus();\r\n                            }\r\n                            if (e.key === 'ArrowUp') {\r\n                                const prev = document.getElementById(`search-result=${i - 1}`);\r\n                                if (prev) prev.focus();\r\n                            }\r\n                        }}\r\n                    >\r\n                        {r.text}\r\n                    </Link>\r\n                </li>)}\r\n            </StyledSearchResultsList>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default SearchResultsCard;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport styled from 'styled-components';\r\nimport { useQueryParam } from \"use-query-params\";\r\nimport PageLayout from \"../layout/PageLayout\";\r\nimport SearchBar from \"../search/SearchBar\";\r\nimport SearchResultsCard from \"../search/SearchResultsCard\";\r\n\r\nconst StyledSearchPage = styled(PageLayout)`\r\n    .search-bar {\r\n        margin: 32px auto;\r\n    }\r\n`;\r\n\r\nconst Page: React.FC<any> = () => {\r\n\r\n    const [qp] = useQueryParam('query');\r\n\r\n    const [query, setQuery] = useState(qp || '');\r\n    const searchRef = useRef();\r\n    const resultsRef = useRef();\r\n\r\n    useEffect(() => {\r\n        const ref = qp ? resultsRef : searchRef;\r\n        const cur = ref.current as any;\r\n        cur && cur.focus();\r\n    }, []);\r\n\r\n    return (\r\n        <StyledSearchPage title=\"Search\" >\r\n            <SearchBar searchRef={searchRef} query={query} setQuery={setQuery} />\r\n            <SearchResultsCard resultsRef={resultsRef} query={query} />\r\n        </StyledSearchPage>\r\n    );\r\n};\r\n\r\nexport default Page;\r\n","import { navigate } from \"gatsby\";\r\nimport React, { useState } from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledSearchBar = styled.form`\r\n    width: 100%;\r\n    .search-bar {\r\n        width: 100%;\r\n        max-width: 512px;\r\n        display: grid;\r\n        grid-template-columns: 1fr auto;\r\n\r\n        input, button {\r\n            padding: 8px 8px;\r\n            border-radius: 8px;\r\n            border: 1px solid ${props => props.theme.utils.border};\r\n        }\r\n\r\n        input {\r\n            border-radius: 8px 0 0 8px;\r\n            border-right: none;\r\n        }\r\n\r\n        button {\r\n            border-radius: 0 8px 8px 0;\r\n            cursor: pointer;\r\n            color: white;\r\n            font-weight: bold;\r\n            background-color: ${props => props.theme.action.interactive};\r\n            &:hover { background-color: ${props => props.theme.action.active}; }\r\n            border-left: none;\r\n            padding: 8px 16px;\r\n\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n        }\r\n    }\r\n`;\r\n\r\nconst SearchBar: React.FC<any> = ({ searchRef, query: externalQuery, setQuery: externalSetQuery, placeholder }) => {\r\n    const [_query, _setQuery] = useState('');\r\n    const query = typeof externalQuery === 'undefined' ? _query : externalQuery;\r\n    const setQuery = typeof externalSetQuery === 'undefined' ? _setQuery : externalSetQuery;\r\n\r\n    const onChange = e => {\r\n        setQuery(e.target.value);\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        const value = e.target.elements.query.value;\r\n        const query = new URLSearchParams({ query: value });\r\n        const qs = query ? `?${query.toString()}` : '';\r\n        const path = `/search/${qs}`;\r\n        navigate(path);\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <StyledSearchBar role=\"search\" onSubmit={onSubmit}>\r\n            <div className=\"search-bar\">\r\n                <input\r\n                    type=\"search\"\r\n                    id=\"site-search\"\r\n                    name=\"query\"\r\n                    ref={searchRef}\r\n                    onChange={onChange}\r\n                    value={query as string}\r\n                    placeholder={placeholder || \"Search the site...\"}\r\n                />\r\n                <button type=\"submit\" >Search</button>\r\n            </div>\r\n        </StyledSearchBar>\r\n    );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { PropsWithChildren } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const StyledCard = styled.div`\r\n  background: ${(props) => props.theme.surface.card};\r\n  width: 100%;\r\n  border-radius: 16px;\r\n  padding: 16px;\r\n\r\n  .header {\r\n    margin-bottom: 16px;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nexport const CardHeader: React.FC<any> = ({\r\n  title,\r\n  level = 2,\r\n  action = null,\r\n}) => {\r\n  const AsTag: any = `h${level}`;\r\n  return (\r\n    <div className=\"header\">\r\n      <AsTag>{title}</AsTag>\r\n      {action}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport interface ICardProps extends PropsWithChildren<any> {\r\n  title?: string;\r\n  subtitle?: string;\r\n  action?: any;\r\n  level?: number;\r\n}\r\n\r\nconst Card: React.FC<ICardProps> = ({\r\n  title,\r\n  subtitle,\r\n  action,\r\n  children,\r\n  level = 1,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <StyledCard {...rest}>\r\n      {title && <CardHeader title={title} action={action} level={level} />}\r\n      {subtitle && <CardHeader title={subtitle} level={level + 1} />}\r\n      {children}\r\n    </StyledCard>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { ModelId, ModelType, NoteId } from \"../models/Model.constants\";\r\n\r\nexport const getModelRoute = (\r\n  modelType: ModelType,\r\n  modelId?: ModelId,\r\n  rootId?: NoteId\r\n) => {\r\n  const modelSuffix = modelId ? `/${modelId}` : \"\";\r\n  const rootSuffix = rootId ? `/root/${rootId}` : \"\";\r\n\r\n  return `/browse/${modelType}${modelSuffix}${rootSuffix}/`;\r\n};\r\n"],"names":["getName","modelType","name","root","ModelType","BASIC_PAGES","text","to","keywords","getModelRoute","REGEX_NOTE_NAME","REGEX_FLAT","getPresetsFromQuery","query","allTags","items","match","push","Tag","getTags","ALL_PRESETS","p","map","preset","score","toLowerCase","RegExp","split","join","filter","queryTag","tags","some","presetTag","length","extendPreset","getSearchResults","sanitized","trim","replaceAll","m","charAt","sanitizeQuery","rootId","noteMatches","getNoteIdFromQuery","getModelTypeFromQuery","ranked","results","r","sort","a","b","rankResults","presets","NOTE_PRESET_MAP","undefined","modelId","aliases","formatPresets","resultsWithAliases","ret","i","forEach","getAliases","basics","kw","doesQueryMatch","StyledFilterList","styled","props","theme","action","interactive","_ref","utils","transparent","_ref2","hoverDark","_ref3","inverted","_ref4","secondary","_ref5","availableTags","selectedTags","setSelectedTags","React","t","key","ButtonInput","onClick","includes","x","toggle","className","disabled","StyledSearchResultsList","ALL_RESULTS","resultsRef","isFiltering","setIsFiltering","useState","filteredResults","tagSet","Set","add","ArrayUtils","Card","title","FilterList","Link","id","ref","onKeyDown","e","preventDefault","navigate","next","document","getElementById","focus","prev","StyledSearchPage","PageLayout","displayName","componentId","qp","useQueryParam","setQuery","searchRef","useRef","useEffect","cur","current","SearchBar","SearchResultsCard","StyledSearchBar","border","active","externalQuery","externalSetQuery","placeholder","_query","_setQuery","role","onSubmit","value","target","elements","URLSearchParams","path","toString","type","onChange","StyledCard","surface","card","CardHeader","level","AsTag","subtitle","children","rest"],"sourceRoot":""}