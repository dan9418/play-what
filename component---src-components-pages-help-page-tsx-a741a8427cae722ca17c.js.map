{"version":3,"file":"component---src-components-pages-help-page-tsx-a741a8427cae722ca17c.js","mappings":"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","sources":["webpack://play-what/./src/components/column-manager/ColumnManager.tsx","webpack://play-what/./src/components/pages/help.page.tsx","webpack://play-what/./src/components/ui/Card.tsx","webpack://play-what/./src/components/ui/List.styles.tsx","webpack://play-what/./src/components/ui/List.tsx","webpack://play-what/./src/core/routing/Routing.utils.ts"],"sourcesContent":["import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledColumnManager = styled.div`\r\n    display: grid;\r\n    gap: 16px;\r\n    grid-template-columns: 1fr;\r\n\r\n    ${({ $tablet }) => $tablet ? `\r\n        @media(min-width: 512px) {\r\n            grid-template-columns: ${$tablet.join(' ')}\r\n        }\r\n    ` : ''}\r\n\r\n    ${({ $desktop }) => $desktop ? `\r\n        @media(min-width: 1024px) {\r\n            grid-template-columns: ${$desktop.join(' ')}\r\n        }\r\n    ` : ``}\r\n   \r\n`;\r\n\r\nexport interface IColumnManagerProps {\r\n    tablet?: string[];\r\n    desktop?: string[];\r\n}\r\n\r\nconst ColumnManager: React.FC<any> = ({ children, tablet, desktop }) => {\r\n    return (\r\n        <StyledColumnManager $tablet={tablet} $desktop={desktop}>\r\n            {children}\r\n        </StyledColumnManager >\r\n    );\r\n};\r\n\r\nexport default ColumnManager;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FEEDBACK_LINK } from \"../../config/constants\";\r\nimport { ModelType } from \"../../core/models/Model.constants\";\r\nimport { getModelRoute } from \"../../core/routing/Routing.utils\";\r\nimport ColumnManager from \"../column-manager/ColumnManager\";\r\nimport PageLayout from \"../layout/PageLayout\";\r\nimport Card, { CardHeader } from \"../ui/Card\";\r\nimport { SimpleList } from \"../ui/List\";\r\n\r\nconst StyledHelpPage = styled(PageLayout)`\r\n  .q {\r\n    margin-top: 4px;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .ans {\r\n    margin-top: 2px;\r\n    font-style: italic;\r\n    color: ${(props) => props.theme.text.secondary};\r\n  }\r\n\r\n  h3 {\r\n    width: 100%;\r\n    margin-top: 64px;\r\n    padding-bottom: 8px;\r\n    border-bottom: 1px solid ${(props) => props.theme.utils.border};\r\n  }\r\n\r\n  h4 {\r\n    margin-top: 16px;\r\n    text-transform: uppercase;\r\n    color: ${(props) => props.theme.text.secondary};\r\n  }\r\n`;\r\n\r\nconst Page: React.FC<any> = (props) => {\r\n  return (\r\n    <StyledHelpPage title=\"Help\">\r\n      <ColumnManager>\r\n        <Card title=\"Website Sections\">\r\n          <p>Play What is currently comprised of 3 different domains: </p>\r\n          <CardHeader level={3} title=\"Browse\" />\r\n          <p>\r\n            The <Link to=\"/browse\">browse</Link> section is an extensive\r\n            directory of many{\" \"}\r\n            <Link to={getModelRoute(ModelType.Chord)}>chords</Link> and{\" \"}\r\n            <Link to={getModelRoute(ModelType.Scale)}>scales</Link>.\r\n            <CardHeader level={4} title=\"Landing Pages\" />\r\n            There is a landing page for each of the \"model types\"\r\n            <SimpleList\r\n              items={[\r\n                [\"Chords\", getModelRoute(ModelType.Chord)],\r\n                [\"Scales\", getModelRoute(ModelType.Scale)],\r\n              ]}\r\n            />\r\n            <p>\r\n              Each landing page contains a brief description of the musical\r\n              concept and a few subcategories. There is also a table comparing\r\n              the intervals used to define each chord or scale.\r\n            </p>\r\n            <CardHeader level={4} title=\"Template Model Pages\" />\r\n            There is a \"template model page\" for each individual chord and scale\r\n            shape. It contains information on the intervals used to define each\r\n            shape. Template pages do not have a root (key center), so they\r\n            cannot contain any information on specific notes.\r\n            <CardHeader level={4} title=\"Rooted Model Pages\" />A \"rooted model\r\n            page\" is simply a template page with a root. Since a key center is\r\n            available, rooted pages include notes, frequencies, and instrument\r\n            previews.\r\n          </p>\r\n          <CardHeader level={3} title=\"View\" />\r\n          <p>\r\n            The <Link to=\"/view/fretboard\">Fretboard page</Link> provide an\r\n            interface to view any chord or scale on an instrument.\r\n          </p>\r\n          <p>There are 3 tabs for viewing/editing the viewer</p>\r\n          <CardHeader level={4} title=\"Summary\" />\r\n          <p>\r\n            The summary tab provides a quick preview of the instrument, tuning,\r\n            notes, and intervals. It contains a link to the rooted model page.\r\n          </p>\r\n          <CardHeader level={4} title=\"Notes\" />\r\n          <p>\r\n            The notes tabs contains inputs for chaning the key center,\r\n            intervals, and display colors.\r\n          </p>\r\n          <CardHeader level={4} title=\"Instrument\" />\r\n          <p>\r\n            The instrument tab contains inputs for configuring the instrument,\r\n            like tuning and range.\r\n          </p>\r\n\r\n          <CardHeader level={3} title=\"Search\" />\r\n          <p>\r\n            The <Link to=\"/search\">search page</Link> provides an interface for\r\n            finding specific chords and scales by name. This page is still\r\n            experimental and unoptimized.\r\n          </p>\r\n          <p>\r\n            The search query can include the name and/or key center for any\r\n            chord or scale in the Play What library. It also understands some\r\n            other common keywords:\r\n            <SimpleList\r\n              items={[\r\n                \"Major\",\r\n                \"Minor\",\r\n                \"Triad\",\r\n                \"Suspended\",\r\n                \"Dominant\",\r\n                \"Diatonic\",\r\n                \"Diminished\",\r\n                \"Augmented\",\r\n                \"Perfect\",\r\n                \"Pentatonic\",\r\n                \"Hexatonic\",\r\n                \"Heptatonic\",\r\n                \"Octatonic\",\r\n              ]}\r\n            />\r\n          </p>\r\n        </Card>\r\n        <Card title=\"FAQ\">\r\n          <ul>\r\n            <li>\r\n              <div className=\"q\">When will the site be finished?</div>\r\n              <div className=\"ans\">\r\n                The first public beta will open on 8/5/22. The official launch\r\n                will be sometime in 2023. More information is available on the{\" \"}\r\n                <Link to=\"/coming-soon\">Coming Soon Page</Link>\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div className=\"q\">\r\n                Where can I submit feedback? Report bugs? Request features?\r\n              </div>\r\n              <div className=\"ans\">\r\n                <a target=\"_blank\" href={FEEDBACK_LINK}>\r\n                  Use this form\r\n                </a>\r\n                .\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div className=\"q\">\r\n                Where can I find more information about Play What and the\r\n                author?\r\n              </div>\r\n              <div className=\"ans\">\r\n                A good place to start might be the{\" \"}\r\n                <Link to=\"/about\">About Page</Link>.\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div className=\"q\">Is the software open source?</div>\r\n              <div className=\"ans\">\r\n                No, but it will be once all logistics and documentation concerns\r\n                have been addressed.\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div className=\"q\">Can I customize the theme?</div>\r\n              <div className=\"ans\">\r\n                <Link to=\"/dev/experimental/theme\">You can try</Link>, but it's\r\n                not officially supported.\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </Card>\r\n      </ColumnManager>\r\n    </StyledHelpPage>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledCard = styled.div`\r\n    background: ${props => props.theme.surface.card};\r\n    width: 100%;\r\n    border-radius: 16px;\r\n    padding: 16px;\r\n\r\n    .header {\r\n        margin-bottom: 16px;\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 8px;\r\n        justify-content: space-between;\r\n    }\r\n`;\r\n\r\nexport const CardHeader: React.FC<any> = ({ title, level = 2, action = null }) => {\r\n    const AsTag: any = `h${level}`;\r\n    return (\r\n        <div className=\"header\">\r\n            <AsTag>{title}</AsTag>\r\n            {action}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Card: React.FC<any> = ({ title, subtitle, action, children, level, ...rest }) => {\r\n    return (\r\n        <StyledCard {...rest}>\r\n            {title &&\r\n                <CardHeader title={title} action={action} level={level} />\r\n            }\r\n            {subtitle &&\r\n                <CardHeader title={subtitle} level={level + 1} />\r\n            }\r\n            {children}\r\n        </StyledCard >\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import { css } from 'styled-components';\r\n\r\nexport const LIST_STYLES_1 = css`\r\n    li {\r\n        margin-left: 8px;\r\n        &:not(:first-child) {\r\n            margin-top: 4px;\r\n        }\r\n    }\r\n    h1, h2, h3, h4, h5, h6, h7 {\r\n        font-weight: bold;\r\n    }\r\n    section {\r\n        margin-left: 8px;\r\n        &:not(:first-child) {\r\n            margin-top: 24px;\r\n        }\r\n    }\r\n    ul {\r\n        &:not(:first-child) {\r\n            margin-top: 8px;\r\n            margin-left: 8px;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const LIST_STYLES_2 = css`\r\n    li {\r\n        list-style-type: disc;\r\n        margin: 8px 0 8px 16px;\r\n    }\r\n`;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { LIST_STYLES_2 } from \"./List.styles\";\r\n\r\nexport interface IListItem {\r\n    text: string;\r\n    link?: string;\r\n}\r\n\r\nexport interface IList {\r\n    title?: string;\r\n    subtitle?: string;\r\n    lists?: IList[];\r\n    items?: | IListItem[];\r\n}\r\n\r\nexport interface IListProps extends IList {\r\n    level?: number;\r\n    prefix?: string;\r\n    styles?: any;\r\n}\r\n\r\nconst Heading: React.FC<any> = ({ title, subtitle, level }) => {\r\n    const Title = `h${level}` as any;\r\n    const Subtitle = `h${level + 1}` as any;\r\n    return (\r\n        <>\r\n            {title && <Title>{title}</Title>}\r\n            {subtitle && <Subtitle>{subtitle}</Subtitle>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport const List: React.FC<IListProps> = ({ title, subtitle, items, lists, level = 1, prefix = '', styles }) => {\r\n    return (\r\n        // @ts-ignore\r\n        <section css={styles}>\r\n            <Heading title={title} subtitle={subtitle} level={level} />\r\n            <ul>\r\n                {items && items.length > 0 && (\r\n                    items.map(({ text, link }) => (\r\n                        <li key={text}>{\r\n                            link ? <Link to={`${prefix}${link}`}>{text}</Link> : text\r\n                        }</li>\r\n                    ))\r\n                )}\r\n                {lists && (\r\n                    <li>\r\n                        {lists.map(l => <List {...l} key={l.title} level={level + 1} prefix={prefix} />)}\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport const SimpleList: React.FC<{ items: (string | [string, string])[] }> = ({ items }) => {\r\n    const formattedItems: IListItem[] = items.map(item => {\r\n        if (Array.isArray(item)) {\r\n            const [text, link] = item;\r\n            return {\r\n                text,\r\n                link\r\n            }\r\n        }\r\n        return {\r\n            text: item\r\n        }\r\n    })\r\n    return (\r\n        <List items={formattedItems} styles={LIST_STYLES_2} />\r\n    );\r\n}\r\n","import { ModelId, ModelType, NoteId } from \"../models/Model.constants\";\r\n\r\nexport const getModelRoute = (\r\n  modelType: ModelType,\r\n  modelId?: ModelId,\r\n  rootId?: NoteId\r\n) => {\r\n  const modelSuffix = modelId ? `/${modelId}` : \"\";\r\n  const rootSuffix = rootId ? `/root/${rootId}` : \"\";\r\n\r\n  return `/browse/${modelType}${modelSuffix}${rootSuffix}/`;\r\n};\r\n"],"names":["StyledColumnManager","styled","$tablet","join","$desktop","children","tablet","desktop","React","StyledHelpPage","PageLayout","displayName","componentId","props","theme","text","secondary","utils","border","title","ColumnManager","Card","CardHeader","level","Link","to","getModelRoute","ModelType","SimpleList","items","className","target","href","FEEDBACK_LINK","StyledCard","surface","card","action","AsTag","subtitle","rest","LIST_STYLES_1","css","LIST_STYLES_2","Heading","Title","Subtitle","List","lists","prefix","styles","length","map","link","key","l","formattedItems","item","Array","isArray","modelType","modelId","rootId"],"sourceRoot":""}