{"version":3,"file":"component---src-components-pages-browse-pod-list-page-tsx-db169205cad5d38dd00b.js","mappings":"sMAcMA,GAAcC,EAAAA,EAAAA,KAAH,+iBAqCS,SAACC,GAAD,OAAWA,EAAMC,MAAMC,QAAQC,MAY/B,SAACH,GAAD,OAAWA,EAAMC,MAAMC,QAAQE,OAC1C,qBAAGH,MAAkBI,KAAKC,YAqBnCC,EAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IAmEtD,IA5CyD,SAAC,GAGnD,IAFLC,EAEI,EAFJA,KAEI,IADJC,UAAAA,OACI,MADQ,GACR,EACEC,GAASC,EAAAA,EAAAA,MACTC,GAAOC,EAAAA,EAAAA,MACb,OACEC,EAAAA,cAACC,EAAAA,EAAD,CACEC,OAAQlB,EACRmB,MAAO,CACL,CACEC,KAAM,CACJ,OACA,CACEC,QAAS,GACTC,QAASR,EAAO,QAAU,gBAKlCS,MAAOb,EAAKc,KAAI,SAACC,EAAGC,GAClB,IAEMC,EAAQ,IAFHF,EAAEG,YAAcC,EAAAA,GAAAA,MAAkBC,EAAAA,EAAQC,EAAAA,GAEhCN,EAAEO,QAAS,CAAElB,KAAAA,IAClC,MAAO,CACLM,KAAK,CACH,CACEa,MAAMC,EAAAA,EAAAA,GACJP,EAAMC,UACND,EAAMK,QACNpB,GAEFU,QAASK,EAAMQ,YAPf,eASC1B,EAAUe,KAAI,SAACY,EAAGV,GAAJ,OAvDN,SACrBC,EACAS,EACAzB,EACAG,GAEA,IAAMuB,EAAQV,EAAMW,UAAUC,WAAU,SAACC,GAAD,OAASA,EAAIC,IAAI,GAAK,IAAML,KAC9DM,EAAY/B,EAAUgC,SAASP,GAAK,cAAWQ,EACrD,OAAIP,EAAQ,EACH,CACLK,UAAAA,EACApB,QAAS,IAIN,CACLoB,UAAAA,EACApB,SAHUR,EAAQa,EAAMkB,MAAiBR,GAASV,EAAMW,UAAUD,IAGrDF,WAuCHW,CAAenB,EAAOS,EAAGzB,EAAWG,gB,uHCIlD,GAnCyBiC,EAAAA,QAAAA,IAAAA,WAAH,wEAAGA,CAAH,8LAqBH,SAAC,GAAc,EAAZpB,MAClB,OAAO,O,4DC7HLqB,GAAoBD,EAAAA,EAAAA,SAAOE,EAAAA,IAAVC,WAAA,0EAAGH,CAAH,+mBAwDF,SAAA7C,GAAK,OAAIA,EAAMC,MAAMI,KAAK4C,aAazCC,EAAc,SAACC,EAAM3B,GACvB,MACI,CACIgB,UAAU,kBAAwB,IAANhB,EAAU,OAAS,IAC/CJ,QACIN,EAAAA,cAAAA,EAAAA,SAAAA,KACKqC,EAAKC,KACNtC,EAAAA,cAAAA,MAAAA,KAAMqC,EAAKE,gBAOzBC,EAAkB,SAACC,EAAUC,GAC/B,OACI1C,EAAAA,cAAAA,KAAAA,CAAI0B,UAAS,aAAcgB,EAAa,WAAa,KAAOD,EAAStB,YAIvEwB,EAAe,SAACN,GAClB,OACIrC,EAAAA,cAAAA,KAAAA,CAAI0B,UAAS,aAAgBW,EAAKO,cAAa,KAIjDC,EAAe,SAACJ,GAClB,OACIzC,EAAAA,cAAAA,KAAAA,CAAI0B,UAAS,SAAYe,EAASK,aA4E1C,EAxEmC,SAAC,GAAe,IAAbnC,EAAY,EAAZA,MAC5BW,EAAYX,EAAMW,UAClByB,GAASC,EAAAA,EAAAA,IAAeC,EAAAA,IACxBC,IAAavC,EAAMkB,MACnBA,EAAQqB,GAAYvC,EAAMkB,MAAMrB,KAAI,SAAA2C,GAAC,OAAI,IAAIC,EAAAA,EAAK,CACrC,IAAdL,EAAS,GAAUM,EAAAA,EAAAA,OAAmBF,EAAE1B,IAAI,GAAI,IACjD0B,EAAE1B,IAAI,QAGV,OAAKH,GAAcO,EAGf7B,EAAAA,cAACgC,EAAD,CAAmBsB,GAAIhC,EAAUiC,QAC7BvD,EAAAA,cAACwD,EAAAA,GAAD,CAAYC,MAAOP,EAAW,QAAU,cACxClD,EAAAA,cAACC,EAAAA,EAAD,CACIyB,UAAU,SACVvB,MAAO,CAAC,CACJC,KAAM,CACF8C,EAAW,YAAStB,EACpB,WACAsB,EAAW,aAAUtB,EACrB,WAGRrB,MAAOe,EAAUd,KAAI,SAACgB,EAAKd,GACvB,IAAM2B,EAAOa,GAAYrB,EAAMnB,GAC/B,MACI,CACIN,KAAM,CACF8C,EAAWd,EAAYC,EAAM3B,QAAKkB,EAClCY,EAAgBhB,GAAMa,GACtBa,EAAWP,EAAaN,QAAQT,EAChCiB,EAAarB,UAMjCxB,EAAAA,cAACC,EAAAA,EAAD,CACIyB,UAAU,UACVgC,kBAAmB,CAAC,GACpBnD,MAAO,CACH2C,EAAW,CACP9C,KAAK,CACD,QADA,eAEGyB,EAAMrB,KAAI,SAAC6B,EAAM3B,GAAP,OAAa0B,EAAYC,EAAM3B,cAEhDkB,EACJ,CACIxB,KAAK,CACD,YADA,eAEGkB,EAAUd,KAAI,SAACgB,EAAKd,GAAN,OAAY8B,EAAgBhB,GAAMK,SAG3DqB,EAAW,CACP9C,KAAK,CACD,SADA,eAEGyB,EAAMrB,KAAI,SAAC6B,EAAM3B,GAAP,OAAaiC,EAAaN,cAE3CT,EACJ,CACIxB,KAAK,CACD,SADA,eAEGkB,EAAUd,KAAI,SAACgB,EAAKd,GAAN,OAAYmC,EAAarB,aAtDjC,M,8BChH/BmC,EAAmB5B,EAAAA,QAAAA,IAAAA,WAAH,uEAAGA,CAAH,kDA6BtB,EArBkC,SAAC,GAAe,IAAbpB,EAAY,EAAZA,MAEjC,IAAKA,EAAMb,OAASa,EAAMW,UAAW,OAAO,KAE5C,IAAMsC,EAAK,IAAIC,gBAAgB,CAC3B7C,QAASL,EAAMK,QACfJ,UAAWD,EAAMC,UACjBhB,OAAQe,EAAMb,KAAKkB,UAGvB,OACIhB,EAAAA,cAAC8D,EAAAA,GAAD,CAAML,MAAM,YAAYM,OAAQ/D,EAAAA,cAACgE,EAAAA,GAAD,CAAMtC,UAAU,YAAYuC,GAAE,mBAAqBL,EAAGM,YAAtD,aAA8ElE,EAAAA,cAACmE,EAAAA,GAAD,CAAMC,OAAO,OAAOC,KAAM,MACpIrE,EAAAA,cAAC2D,EAAD,KACI3D,EAAAA,cAACsE,EAAAA,EAAD,CACI3D,MAAOA,O,oBCpBrB4D,EAAiBxC,EAAAA,QAAAA,IAAAA,WAAH,mEAAGA,CAAH,+IAmEpB,EAnDgC,SAAC,GAAe,IAAbpB,EAAY,EAAZA,MAC3Bf,GAASC,EAAAA,EAAAA,MAET2E,EAAO7D,EAAM8D,KAAKC,MACtB,SAACC,GAAD,OACEA,IAAMC,EAAAA,GAAAA,UACND,IAAMC,EAAAA,GAAAA,YACND,IAAMC,EAAAA,GAAAA,aACND,IAAMC,EAAAA,GAAAA,gBAGV,IAAKJ,EAAM,OAAO,KAElB,IAAIK,EAAW,GACf,OAAQL,GACN,KAAKI,EAAAA,GAAAA,SACHC,EAAW,WACX,MACF,KAAKD,EAAAA,GAAAA,WACHC,EAAW,aACX,MACF,KAAKD,EAAAA,GAAAA,YACHC,EAAW,gBACX,MACF,KAAKD,EAAAA,GAAAA,aACHC,EAAW,iBAIf,IAAMC,EAAQC,EAAAA,GAAAA,QAAqB,SAACC,GAAD,OAAOA,EAAEP,KAAK9C,SAAS6C,MAE1D,OACExE,EAAAA,cAAC8D,EAAAA,GAAD,CAAML,MAAUoB,EAAL,UACT7E,EAAAA,cAACuE,EAAD,KACEvE,EAAAA,cAAAA,KAAAA,KACG8E,EAAMtE,KAAI,SAAC2C,GAAD,OACTnD,EAAAA,cAAAA,KAAAA,CAAIiF,IAAK9B,EAAEnC,SACThB,EAAAA,cAACgE,EAAAA,GAAD,CACEC,IAAI/C,EAAAA,EAAAA,GAAciC,EAAEvC,UAAWuC,EAAEnC,QAASpB,GAC1C8B,UAAWf,EAAMK,UAAYmC,EAAEnC,QAAU,SAAW,IAEnDmC,EAAEb,c,oBC1Db4C,EAAkBnD,EAAAA,QAAAA,IAAAA,WAAH,sEAAGA,CAAH,kDA8BrB,EAtBiC,SAAC,GAAe,IAAbpB,EAAY,EAAZA,MAEhC,IAAKA,EAAMb,OAASa,EAAMW,UAAW,OAAO,KAE5C,IAAMsC,EAAK,IAAIC,gBAAgB,CAC3B7C,QAASL,EAAMK,QACfJ,UAAWD,EAAMC,UACjBhB,OAAQe,EAAMb,KAAKkB,UAGvB,OACIhB,EAAAA,cAAC8D,EAAAA,GAAD,CAAML,MAAM,WAAWM,OAAQ/D,EAAAA,cAACgE,EAAAA,GAAD,CAAMC,GAAE,kBAAoBL,EAAGM,YAA/B,aAAuDlE,EAAAA,cAACmE,EAAAA,GAAD,CAAMC,OAAO,OAAOC,KAAM,MAC5GrE,EAAAA,cAACkF,EAAD,KACIlF,EAAAA,cAACmF,EAAAA,EAAD,CACIC,SAAUC,EAAAA,GAAAA,SACV1E,MAAOA,O,kBCtBrB2E,EAAuBvD,EAAAA,QAAAA,GAAAA,WAAH,gFAAGA,CAAH,iHAYT,SAAC7C,GAAD,OAAWA,EAAMC,MAAMI,KAAK4C,aAgC7C,EAtBuD,SAAC,GAAc,IAAZzC,EAAW,EAAXA,KAClDE,GAASC,EAAAA,EAAAA,MACTC,GAAOC,EAAAA,EAAAA,MACb,OACEC,EAAAA,cAACsF,EAAD,KACG5F,EAAKc,KAAI,SAACC,GACT,IAEME,EAAQ,IAFHF,EAAEG,YAAcC,EAAAA,GAAAA,MAAkBC,EAAAA,EAAQC,EAAAA,GAEhCN,EAAEO,QAAS,CAAElB,KAAAA,IAElC,OACEE,EAAAA,cAAAA,KAAAA,CAAIiF,IAAKxE,EAAEO,SACThB,EAAAA,cAACgE,EAAAA,GAAD,CAAMC,IAAI/C,EAAAA,EAAAA,GAAcT,EAAEG,UAAWH,EAAEO,QAASpB,IAC7Ce,EAAM2B,Y,SCarB,EA5CmC,SAAC,GAAe,IAAb3B,EAAY,EAAZA,MAC9B4E,EAAY5E,EAAM6E,eAClBC,EAAY9E,EAAM+E,eAClBC,EAAchF,EAAMiF,iBACpBC,EAAclF,EAAMmF,iBAEpBnG,EAAYgB,EAAMW,UAAUd,KAAI,SAACgB,GAAD,OAASA,EAAIC,IAAI,GAAK,KAE5D,OACEzB,EAAAA,cAAAA,EAAAA,SAAAA,KACGuF,EAAUhC,OAAS,GAClBvD,EAAAA,cAAC8D,EAAAA,GAAD,CAAML,MAAM,gBACVzD,EAAAA,cAAC+F,EAAAA,EAAD,CAAiBrG,KAAM6F,EAAW5F,UAAWA,KAGhDgG,EAAYpC,OAAS,GACpBvD,EAAAA,cAAC8D,EAAAA,GAAD,CAAML,MAAM,iBACVzD,EAAAA,cAAC+F,EAAAA,EAAD,CAAiBrG,KAAMiG,EAAahG,UAAWA,KAGlD8F,EAAUlC,OAAS,GAClBvD,EAAAA,cAAC8D,EAAAA,GAAD,CAAML,MAAM,gBACVzD,EAAAA,cAAC+F,EAAAA,EAAD,CAAiBrG,KAAM+F,EAAW9F,UAAWA,KAGhDkG,EAAYtC,OAAS,GACpBvD,EAAAA,cAAC8D,EAAAA,GAAD,CAAML,MAAM,iBACVzD,EAAAA,cAAC+F,EAAAA,EAAD,CAAiBrG,KAAMmG,EAAalG,UAAWA,KAGlDgB,EAAMC,YAAcC,EAAAA,GAAAA,OACnBb,EAAAA,cAAC8D,EAAAA,GAAD,CAAML,MAAM,gBACVzD,EAAAA,cAACgG,EAAD,CAAgBtG,KAAMuG,EAAAA,MAGzBtF,EAAMC,YAAcC,EAAAA,GAAAA,OACnBb,EAAAA,cAAC8D,EAAAA,GAAD,CAAML,MAAM,gBACVzD,EAAAA,cAACgG,EAAD,CAAgBtG,KAAMqF,EAAAA,QC3C1B/F,GAAcC,EAAAA,EAAAA,KAAH,6LAwEjB,EA9CyC,SAAC,GAAe,IACjDiH,EADgD,EAAZvF,MACnBwF,iBAEvB,OAAKD,EAAS3C,OAGZvD,EAAAA,cAAC8D,EAAAA,GAAD,CAAML,MAAM,kBACVzD,EAAAA,cAACC,EAAAA,EAAD,CACEC,OAAQlB,EACR0E,kBAAmB,CAAC,GACpBnD,MAAO,CACL,CACEmB,UAAW,UACXtB,KAAK,CACH,WADE,eAEC8F,EAAS1F,KAAI,SAAC2C,EAAGzC,GAClB,MAA0ByC,EAAEiD,gBAAgB1F,EAAI,GAAzC2F,EAAP,KAAgBC,EAAhB,KACA,MAAO,CACLhG,QACEN,EAAAA,cAAAA,EAAAA,SAAAA,KACGqG,EACDrG,EAAAA,cAAAA,MAAAA,CAAK0B,UAAU,UAAU4E,WAOrC,CACElG,KAAK,CAAE,UAAH,eAAgB8F,EAAS1F,KAAI,SAAC2C,EAAGzC,GAAJ,OAAUA,EAAI,QAEjD,CACEN,KAAK,CACH,QADE,eAEC8F,EAAS1F,KAAI,SAAC2C,EAAGzC,GAAJ,MAAW,CACzBO,MAAMC,EAAAA,EAAAA,GAAciC,EAAEvC,UAAWuC,EAAEnC,QAASmC,EAAErD,MAC9CQ,QAAS6C,EAAEoD,0BAjCI,M,wCCzBzBC,EAAkBzE,EAAAA,QAAAA,IAAAA,WAAH,qEAAGA,CAAH,4WA8BW,SAAA7C,GAAK,OAAIA,EAAMC,MAAM4E,OAAO0C,UAMtDC,EAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGlG,KAAI,SAACmG,EAAGjG,GAAJ,MAAW,CAAEkG,GAAIlG,EAAI,EAAG4B,KAAM5B,EAAI,MAgD5F,EA9CiC,WAC7B,IAAMZ,GAAOC,EAAAA,EAAAA,MACP8G,GAAYC,EAAAA,EAAAA,MACVC,EAASF,EAATE,KAEFC,EAAYH,EAAUE,KAAKE,YAAY,QACvCC,EAAWpH,EACbiH,EAAKI,MAAM,EAAGH,GACdD,EACEK,EAAUtH,EACZiH,EAAKI,MAAMH,EAAY,EAAGA,EAAY,GACtCD,EAEJ,GAA4BM,EAAAA,EAAAA,IAAepE,EAAAA,IAApCF,EAAP,KAAeuE,EAAf,KAEA,OACItH,EAAAA,cAACwG,EAAD,KACIxG,EAAAA,cAACuH,EAAAA,EAAD,CAAUC,MAAO1H,EAAO,gBAAa8B,EAAW6F,GAAC,GAC7CzH,EAAAA,cAAAA,MAAAA,CAAK0B,UAAU,YACX1B,EAAAA,cAACgE,EAAAA,GAAD,CAAM0D,gBAAgB,SAASzD,GAAOiD,EAAL,QAAqBS,EAAAA,GAAAA,GAAcC,EAAAA,GAAAA,IAAoBD,EAAAA,GAAAA,GAAUrF,MAClGtC,EAAAA,cAACgE,EAAAA,GAAD,CAAM0D,gBAAgB,SAASzD,GAAOiD,EAAL,QAAqBS,EAAAA,GAAAA,GAAcC,EAAAA,GAAAA,IAAoBD,EAAAA,GAAAA,GAAUrF,MAClGtC,EAAAA,cAACgE,EAAAA,GAAD,CAAM0D,gBAAgB,SAASzD,GAAOiD,EAAL,QAAqBS,EAAAA,GAAAA,GAAcC,EAAAA,GAAAA,IAAoBD,EAAAA,GAAAA,GAAUrF,MAClGtC,EAAAA,cAACgE,EAAAA,GAAD,CAAM0D,gBAAgB,SAASzD,GAAOiD,EAAL,QAAqBS,EAAAA,GAAAA,GAAcC,EAAAA,GAAAA,IAAoBD,EAAAA,GAAAA,GAAUrF,MAClGtC,EAAAA,cAACgE,EAAAA,GAAD,CAAM0D,gBAAgB,SAASzD,GAAOiD,EAAL,QAAqBS,EAAAA,GAAAA,GAAcC,EAAAA,GAAAA,IAAoBD,EAAAA,GAAAA,GAAUrF,MAClGtC,EAAAA,cAACgE,EAAAA,GAAD,CAAM0D,gBAAgB,SAASzD,GAAOiD,EAAL,QAAqBS,EAAAA,GAAAA,GAAcC,EAAAA,GAAAA,IAAoBD,EAAAA,GAAAA,GAAUrF,MAClGtC,EAAAA,cAACgE,EAAAA,GAAD,CAAM0D,gBAAgB,SAASzD,GAAOiD,EAAL,QAAqBS,EAAAA,GAAAA,GAAcC,EAAAA,GAAAA,IAAoBD,EAAAA,GAAAA,GAAUrF,QAGzGxC,GACGE,EAAAA,cAAAA,EAAAA,SAAAA,KACIA,EAAAA,cAACuH,EAAAA,EAAD,CAAUC,MAAM,aAAaC,GAAC,GAC1BzH,EAAAA,cAAAA,MAAAA,CAAK0B,UAAU,cACX1B,EAAAA,cAACgE,EAAAA,GAAD,CAAM0D,gBAAgB,SAASzD,GAAOiD,EAAL,QAAqBE,EAArB,SAAjC,KACApH,EAAAA,cAACgE,EAAAA,GAAD,CAAM0D,gBAAgB,SAASzD,GAAOiD,EAAL,QAAqBE,GAAtD,QACApH,EAAAA,cAACgE,EAAAA,GAAD,CAAM0D,gBAAgB,SAASzD,GAAOiD,EAAL,QAAqBE,EAArB,UAAjC,OAGRpH,EAAAA,cAACuH,EAAAA,EAAD,CAAUC,MAAM,SAASC,GAAC,GACtBzH,EAAAA,cAAC6H,EAAAA,EAAD,CAAeC,QAASpB,EAAgBqB,MAAO,CAAEnB,GAAI7D,GAAUiF,SAAU,SAAAC,GAAC,OAAIX,EAAUW,EAAErB,WC5E5GsB,EAAanG,EAAAA,QAAAA,IAAAA,WAAH,gEAAGA,CAAH,kNA2EhB,EAvDgC,WAC5B,IAAMjC,GAAOC,EAAAA,EAAAA,MACP8G,GAAYC,EAAAA,EAAAA,MAClB,GAA4BO,EAAAA,EAAAA,IAAepE,EAAAA,IAApCF,EAAP,KACA,GADA,MACkCsE,EAAAA,EAAAA,IAAec,EAAAA,KAA1CC,EAAP,KAAkBC,EAAlB,KAEMzH,EAAYiG,EAAUE,KAAKpF,SAAS,SAAW,QAAU,QAUzD2G,EACFtI,EAAAA,cAACuI,EAAAA,EAAD,CAAaC,QAAM,EAACC,QAAS,kBAAMJ,GAAcD,KAC5CA,EAAY,OAAS,QAIxBM,EAAS5I,EACXE,EAAAA,cAACuI,EAAAA,EAAD,CAAaC,QAAM,EAACC,QAfR,WACZ,IAAMzB,EAAYH,EAAUE,KAAKE,YAAY,QACvC0B,GAA2B,IAAf3B,EACdH,EAAUE,KACVF,EAAUE,KAAKI,MAAM,EAAGH,IAC5B4B,EAAAA,EAAAA,IAASD,IAU6BjH,UAAU,UAAhD,eAGA,KAEJ,OACI1B,EAAAA,cAAAA,EAAAA,CAAMyD,MAAM,OAAOM,OAAQjE,GAAQwI,EAAnC,MAAgDxI,EAAI,UAAa+I,EAAAA,EAAAA,KAAAA,QAAb,yBAA0DA,EAAAA,EAAAA,OAAAA,UAA1D,uBAAuGA,EAAAA,EAAAA,OAAAA,QAAvG,YAAuIA,EAAAA,EAAAA,KAAAA,QAAvI,KAChD7I,EAAAA,cAACkI,EAAD,CAAYY,aAAchJ,IACpBA,GACEE,EAAAA,cAAAA,MAAAA,CAAK0B,UAAU,YACX1B,EAAAA,cAAAA,IAAAA,KAAAA,QAASY,EAAT,0BACAZ,EAAAA,cAAAA,KAAAA,MAFJ,2CAMFoI,IAActI,IACZE,EAAAA,cAAC+I,EAAD,MAGHX,GAAaM,GAEXN,GAAatI,GACZE,EAAAA,cAAAA,MAAAA,CAAK0B,UAAU,WACX1B,EAAAA,cAAAA,IAAAA,KAAIF,EAAKwC,MACTtC,EAAAA,cAAAA,MAAAA,KAAM+C,OAQ9B,0I,oBCvEMiG,IAAoBjH,EAAAA,EAAAA,SAAOkH,EAAAA,GAAV/G,WAAA,2EAAGH,CAAH,MA0CvB,GAlCiD,SAAA7C,GAE7C,MAA+BA,EAAMgK,YAA7BtI,EAAR,EAAQA,UAAWI,EAAnB,EAAmBA,QACblB,GAAOC,EAAAA,EAAAA,MAEPoJ,GAAKC,EAAAA,EAAAA,IAAgBxI,GACrByI,GAASC,EAAAA,EAAAA,IAAe1I,GAExB2I,EAAU,IAAIJ,EAAGnI,EAAS,CAAElB,KAAAA,IAC5B2D,EAAW8F,EAAQjH,KAAd,IAAsB+G,EAIjC,OACIrJ,EAAAA,cAACgJ,GAAD,CAAmBvF,MAAOA,GACtBzD,EAAAA,cAACwJ,EAAAA,EAAD,KACIxJ,EAAAA,cAACwJ,EAAAA,EAAD,CAAeC,OAAQ,CAAC,QAAS,SAC7BzJ,EAAAA,cAAC0J,EAAD,MACA1J,EAAAA,cAAC2J,EAAD,CAAahJ,MAAO4I,KAGvB3I,IAAcC,EAAAA,GAAAA,OAAmBb,EAAAA,cAAC4J,EAAD,CAAmBjJ,MAAO4I,IAC3D3I,IAAcC,EAAAA,GAAAA,OAAmBb,EAAAA,cAAC6J,EAAD,CAAUlJ,MAAO4I,IACnDvJ,EAAAA,cAAC8J,EAAD,CAAYnJ,MAAO4I,IACnBvJ,EAAAA,cAACwJ,EAAAA,EAAD,CAAeC,OAAQ,CAAC,MAAO,QAC3BzJ,EAAAA,cAAC+J,EAAD,CAAYpJ,MAAO4I,IACnBvJ,EAAAA,cAACgK,EAAD,CAAWrJ,MAAO4I,KAEtBvJ,EAAAA,cAACiK,EAAD,CAAatJ,MAAO4I,Q,uFC9C9BW,EAAcnI,EAAAA,QAAAA,MAAAA,WAAH,8DAAGA,CAAH,MAAjB,2IAMMoI,EAAgB,SAACzK,GAAD,OAA8BA,MAAAA,IAAgD,IAATA,GAkBrF0K,EAA2B,SAAC,GAA2D,EAAzD/I,MAA0D,IAAnDgJ,EAAkD,EAAlDA,SAAU/J,EAAwC,EAAxCA,QAASD,EAA+B,EAA/BA,QAASqB,EAAsB,EAAtBA,UAAWT,EAAW,EAAXA,KACxEqJ,EAASD,EAAW,KAAO,KAC3BE,EAAatJ,EAAO+C,EAAAA,GAAOwG,EAAAA,SAC3BC,EAAoBxJ,EAAO,CAAEgD,GAAIhD,GAAS,GAEhD,OACIjB,EAAAA,cAACsK,EAAD,CAAQjK,QAASA,EAASqB,UAAWA,GACjC1B,EAAAA,cAACuK,EAAeE,EACXnK,GAAW,MAiBtBoK,EAA4B,SAAC,GAA2D,IAAzDtK,EAAwD,EAAxDA,KAAMiK,EAAkD,EAAlDA,SAAU3I,EAAwC,EAAxCA,UAAwC,IAA7BgC,kBAAAA,OAA6B,MAAT,GAAS,EACzF,OACI1D,EAAAA,cAAAA,KAAAA,CAAI0B,UAAWA,GACVtB,EAAKI,KAAI,SAACmK,EAAUjK,GACjB,GAAIyJ,EAAcQ,GAAM,OAAO,KAC/B,IAAMC,EAPF,SAACD,GAAD,MAAiD,iBAARA,GAA4B,OAARA,GAAgBA,EAAIE,eAAe,WAOnFC,CAAYH,GACvBI,EAAaH,EAA8BD,EAAnB,CAAErK,QAASqK,GACzC,OAAO3K,EAAAA,cAACoK,EAAD,eAAKnF,IAAKvE,EAAGW,MAAOX,EAAG2J,SAAUA,GAAY3G,EAAkB/B,SAASjB,IAAQqK,SAcjGC,EAA8C,SAAC,GAAD,IAAGpG,EAAH,EAAGA,IAAKqG,EAAR,EAAQA,KAAMvH,EAAd,EAAcA,kBAAd,OAChD1D,EAAAA,cAAC4E,EAAD,KACKqG,EAAKzK,KAAI,SAAC0K,EAAKxK,GACZ,OAAIyJ,EAAce,GAAa,KAE3BlL,EAAAA,cAAC0K,EAAD,eACIzF,IAAKvE,EACL2J,SAAkB,UAARzF,EACVlB,kBAAmBA,GACfwH,SAwBXjL,EAAgC,SAAC,GAAuF,IAArFE,EAAoF,EAApFA,MAAOgL,EAA6E,EAA7EA,MAAO5K,EAAsE,EAAtEA,MAAOL,EAA+D,EAA/DA,OAAQkL,EAAuD,EAAvDA,UAAWC,EAA4C,EAA5CA,QAAS3H,EAAmC,EAAnCA,kBAAmBhC,EAAgB,EAAhBA,UAChH,OACI1B,EAAAA,cAAAA,EAAAA,CAA0B0B,UAAWA,EAArC,MAAkBxB,GACbkL,GAAapL,EAAAA,cAAAA,WAAAA,KAAWoL,EAAU5K,KAAI,SAAC8K,EAAI5K,GAAL,OAAWV,EAAAA,cAAAA,MAAAA,OAAAA,OAAAA,CAAKiF,IAAKvE,GAAO4K,QAClED,GAAWrL,EAAAA,cAAAA,UAAAA,KAAUqL,GACrBlL,GAASH,EAAAA,cAACgL,EAAD,CAAcpG,IAAI,QAAQqG,KAAM9K,EAAOuD,kBAAmBA,IACnEyH,GAASnL,EAAAA,cAACgL,EAAD,CAAcpG,IAAI,QAAQqG,KAAME,EAAOzH,kBAAmBA,IACnEnD,GAASP,EAAAA,cAACgL,EAAD,CAAcpG,IAAI,QAAQqG,KAAM1K,EAAOmD,kBAAmBA,O,qDCjHzE,IAAMxC,EAAgB,SAC3BN,EACAI,EACApB,GAKA,MAAM,WAAYgB,GAHEI,EAAO,IAAOA,EAAY,KAC3BpB,EAAM,SAAYA,EAAW,IAEhD,M,6ECkDF,EA1DwBmC,EAAAA,QAAAA,IAAAA,WAAH,2EAAGA,CAAH,4lB,UCGfwJ,EAAkBxJ,EAAAA,QAAAA,IAAAA,WAAH,qEAAGA,CAAH,2JAQA,gBAAGyJ,EAAH,EAAGA,SAAH,OAAkBA,GAAsB,iBACnD,gBAAGC,EAAH,EAAGA,SAAH,OAAkBA,GAAsB,MAsBlD,EAbwC,SAAAvM,GAEvC,IAAMwM,EAAUxM,EAAMyM,WAAWzM,GAIjC,OACCc,EAAAA,cAACuL,EAAD,CAAiBC,SAAUE,EAASD,SAHvB,QAG0ChD,QAAS,KAAM/G,UAAU,cAC9E,OC1BSkK,EAA6B,SAAA1M,GAEzC,IAAQ2M,EAAkE3M,EAAlE2M,OAAQC,EAA0D5M,EAA1D4M,YAAaC,EAA6C7M,EAA7C6M,UAAWC,EAAkC9M,EAAlC8M,gBAAiBC,EAAiB/M,EAAjB+M,aAEnDC,EAAU,CAAC,QACC,IAAdH,GACHG,EAAQC,KAAK,QAEd,IAAMC,EAAcN,IAAgBD,EAAOtI,OAAS,EAC9C8I,EAA+B,IAAhBP,EAErB,OACC9L,EAAAA,cAAAA,MAAAA,CAAK0B,UAAWwK,EAAQI,KAAK,MAC5BtM,EAAAA,cAAAA,MAAAA,CAAK0B,UAAU,eACbsK,GAAmBK,GAAgBN,EAAY,GAAKA,GAEtD/L,EAAAA,cAAAA,MAAAA,CAAK0B,UAAU,gBACf1B,EAAAA,cAACuM,EAAcrN,GACfc,EAAAA,cAAAA,MAAAA,CAAK0B,UAAU,aACbuK,GAAgBG,GAAeL,EAAY,IAAKS,EAAAA,EAAAA,IAAeT,MA+CpE,EApB6C,SAACU,GAC7C,IAAMvN,EAAK,iBAAQwN,EAAAA,GAA4BD,GAE/C,EAAiBvN,EAAMyN,UAAhBC,EAAP,KACMC,EADN,KACsBD,EAAK,EACrBE,EAAa5N,EAAM2M,OAAOtI,OAG1BwJ,EAAkB,CACvBC,qBAH2BC,EAAAA,EAAAA,IAAcJ,GAAUrM,KAAI,SAAA2C,GAAC,OAAIA,EAAI,QAAMmJ,KAAK,KAI3EY,iBAHqB,UAAaJ,EAAb,UAMtB,OACC9M,EAAAA,cAACmN,EAAD,CAAiBzL,UAAU,YAAY0L,MAAOL,GAnC/B,SAAC7N,GAKjB,IAJA,IAAQyN,EAAsBzN,EAAtByN,UAAWd,EAAW3M,EAAX2M,OACZe,EAAUD,EAAjB,GAAWU,EAAMV,EAAjB,GAEMW,EAAW,GACRC,EAAI,EAAGA,EAAI1B,EAAOtI,OAAQgK,IAClC,IAAK,IAAIC,EAAIZ,EAAIY,GAAKH,EAAIG,IACzBF,EAASnB,KACRnM,EAAAA,cAAC4L,EAAD,eACC3G,IAAG,IAAMsI,EAAN,KAAYC,EACf1B,YAAayB,EACbxB,UAAWyB,EACX3B,OAAQA,GACJ3M,KAKR,OAAOoO,EAkBJG,CAASvO,M,0GC9DDwO,E,+BAAZ,SAAYA,GAAAA,EAAAA,SAAAA,WAAAA,EAAAA,cAAAA,iBAAAA,EAAAA,aAAAA,gBAAAA,EAAAA,KAAAA,OAAAA,EAAAA,WAAAA,cAAAA,EAAAA,MAAAA,SAAAA,EAAAA,OAAAA,SAAAA,EAAAA,MAAAA,QAAAA,EAAAA,OAAAA,SAAAA,EAAAA,MAAAA,SAAAA,EAAAA,MAAAA,SAAAA,EAAAA,MAAAA,SAAAA,EAAAA,MAAAA,SAAAA,EAAAA,MAAAA,SAAAA,EAAAA,MAAAA,SAAAA,EAAAA,MAAAA,SAAZ,CAAYA,IAAAA,EAAAA,KAyBZ,IAAMC,EAAe,SAAC/G,EAActE,EAAcyF,GAA7B,MAA2D,CAC5EnB,GAAAA,EACAtE,KAAAA,EACAyF,MAAAA,IAGE6F,EAAW,SAACC,EAAgB9K,GAAjB,OAA4CK,EAAAA,EAAAA,QAAayK,EAAQ9K,GAAQtB,IAAI,IAEjFqM,EAAoB,IAAIC,IAAuB,CACxD,CAACL,EAASM,SAAUL,EAChBD,EAASM,SACT,kBACA,CACIJ,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,MAG3B,CAAC+F,EAASO,KAAMN,EACZD,EAASO,KACT,WACA,CACIL,EAASjG,EAAAA,GAAAA,GAAW,GACpBiG,EAASjG,EAAAA,GAAAA,GAAW,GACpBiG,EAASjG,EAAAA,GAAAA,GAAW,GACpBiG,EAASjG,EAAAA,GAAAA,GAAW,GACpBiG,EAASjG,EAAAA,GAAAA,GAAW,GACpBiG,EAASjG,EAAAA,GAAAA,GAAW,MAG5B,CAAC+F,EAASQ,WAAYP,EAClBD,EAASQ,WACT,kBACA,CACIN,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,MAG3B,CAAC+F,EAASS,cAAeR,EACrBD,EAASS,cACT,wBACA,CACIP,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,MAG3B,CAAC+F,EAASU,aAAcT,EACpBD,EAASU,aACT,gBACA,CACIR,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,MAG3B,CAAC+F,EAASW,MAAOV,EACbD,EAASW,MACT,aACA,CACIT,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,MAG3B,CAAC+F,EAASY,OAAQX,EACdD,EAASY,OACT,SACA,CACIV,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,MAgB3B,CAAC+F,EAASa,OAAQZ,EACdD,EAASa,OACT,SACA,CACIX,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,MAG3B,CAAC+F,EAASc,MAAOb,EACbD,EAASc,MACT,SACA,CACIZ,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,GAAW,GACpBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,MAG3B,CAAC+F,EAASe,MAAOd,EACbD,EAASe,MACT,SACA,CACIb,EAASjG,EAAAA,GAAAA,GAAW,GACpBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,GAAW,GACpBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,GAAW,GACpBiG,EAASjG,EAAAA,GAAAA,EAAU,MAG3B,CAAC+F,EAASgB,MAAOf,EACbD,EAASgB,MACT,SACA,CACId,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,MAG3B,CAAC+F,EAASiB,MAAOhB,EACbD,EAASiB,MACT,SACA,CACIf,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,GAAW,GACpBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,MAG3B,CAAC+F,EAASkB,MAAOjB,EACbD,EAASkB,MACT,SACA,CACIhB,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,GAAW,GACpBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,MAG3B,CAAC+F,EAASmB,MAAOlB,EACbD,EAASmB,MACT,SACA,CACIjB,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,MAG3B,CAAC+F,EAASoB,MAAOnB,EACbD,EAASoB,MACT,SACA,CACIlB,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,GACnBiG,EAASjG,EAAAA,GAAAA,EAAU,QAKlBoH,EAA0BC,EAAAA,EAAAA,WAAsBlB,I,4ICzMhDmB,EAAsB,EAAC,GAAM,GAAO,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAE/FC,EAAkBC,KAAKC,IAAK,GAAS,EAAI,IAEzCC,EAAsB,SAAC5M,EAAwB6M,EAAmBxD,GAC9E,IAAKwD,IAAYA,EAAQvH,MAAO,OAAO,EACvC,IAAMwH,EAAID,EAAQvH,MAAM+D,GAClBrL,EAAIgC,EAAS+M,YACnB,OAAIC,MAAMC,QAAQH,GACVA,EAAEI,MAAK,SAAAxM,GAAC,OAAIyM,EAAsBnP,EAAG0C,MAEvB,iBAANoM,GACRK,EAAsBnP,EAAG8O,IAmBrB7C,EAA2C,CACvDC,UAAW,CAAC,EAAG,IACfd,OAAQiC,EAAAA,GAAAA,IAAsBJ,EAAAA,GAAAA,UAAmB3F,MACjDkE,cAAc,EACdD,iBAAiB,EACjBL,WAnB2B,SAACzM,GAC5B,IAAQ4M,EAAmD5M,EAAnD4M,YAAaC,EAAsC7M,EAAtC6M,UAAWF,EAA2B3M,EAA3B2M,OAAQlL,EAAmBzB,EAAnByB,MAAO2O,EAAYpQ,EAAZoQ,QACzCO,EAAYhE,EAAOC,GAAeC,EACxC,EAAyBpL,EAAMmP,qBAAqBD,GAA7CpN,EAAP,KAEA,GAFA,KAIA,OAAI6M,IAAYD,EAAoB5M,EAAU6M,EAASxD,GAChD,YAGArJ,EAASsN,aAWJ9C,EAAgB,SAACJ,GAE7B,IADA,IAAMmD,EAAS,GACNtP,EAAI,EAAGA,GAAKmM,EAAUnM,IAC9BsP,EAAO7D,KAAMzL,GAAK,EAAK,EAAIsP,EAAOtP,EAAI,GAAKwO,GAE5C,OAAOc,GAGKxD,EAAiB,SAACyD,GAC9B,IAAMC,EAAMD,EAAa,GACzB,OAAY,IAARC,EACI,MACCjB,EAAoBiB,GACrB,IACD,IAGFN,EAAwB,SAACnP,EAAW8O,GACzC,OAAO9O,EAAI,IAAM8O,I,qBCnFX,IAAKY,E,yDAAZ,SAAYA,GAAAA,EAAAA,MAAAA,QAAAA,EAAAA,MAAAA,QAAZ,CAAYA,IAAAA,EAAAA,KAkBL,IAAMC,EAAoB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAY9C/K,EAAyB,CAC9BD,SAAU,EAAE,GAAI,IAChBuG,WAZ0B,SAACzM,GAC3B,IAAQ2Q,EAAqB3Q,EAArB2Q,UAER,EAF6B3Q,EAAVyB,MAEYmP,qBAAqBD,GAA7CpN,EAAP,KAEA,GAFA,KAIA,OAAOA,EAASsN,aAQjB,Q,iGCyDA,EA7FuBhO,EAAAA,QAAAA,IAAAA,WAAH,yEAAGA,CAAH,81B,UCIdsO,EACI,OADJA,EAEI,KAFJA,EAGI,OAwBJC,EAAYvO,EAAAA,QAAAA,IAAAA,WAAH,iEAAGA,CAAH,qCACM,gBAAGwO,EAAH,EAAGA,OAAH,OAAgBA,GAAkB,iBAC7C,gBAAGA,EAAH,EAAGA,OAAH,OAAgBC,EAAAA,GAAAA,WAAsBD,MAG1CE,EAAiB1O,EAAAA,QAAAA,IAAAA,WAAH,sEAAGA,CAAH,gBACV,gBAAGwO,EAAH,EAAGA,OAAH,OAAgBC,EAAAA,GAAAA,WAAsBD,MA8BhD,EA3BiD,SAAArR,GAEhD,IAAQwR,EAA4DxR,EAA5DwR,QAAoBC,GAAwCzR,EAAnD2Q,UAAmD3Q,EAAxCyR,OAEtBjF,GAF8DxM,EAAjC0R,UAAiC1R,EAAtByB,OAE9BgL,EAFoDzM,EAAfyM,YAE1BzM,IAErB2R,EApCgB,SAACH,EAASC,GAChC,OAAQD,GACP,KAAKP,EAAAA,GAAAA,MACJ,MAAO,CACNW,MAAOH,EAAQ,KACfI,OAAQV,EAAoBM,EAAQ,MAEtC,KAAKR,EAAAA,GAAAA,MACJ,MAAO,CACNW,MAAOT,EAAoBM,EAAQ,KACnCI,OAAQV,EAAoBM,EAAQ,KACpCK,MAAO,GAAKX,EAAoBM,EAAQ,MAE1C,QACC,MAAO,CACNG,MAAO,MACPC,OAAQ,QAoBSE,CAAeP,EAASC,GACtCzE,EAAU,CAAC,eAAmBwE,EAApB,OAAmCA,GAE7CQ,EAAc,CACnBC,gBAAiBzF,GAAoB,IAGhC0F,EAAYV,IAAYP,EAAAA,GAAAA,MAAgBU,EAA5BH,OAAAA,OAAAA,GAA+CG,EAAgBK,GAC3EG,EAAcX,IAAYP,EAAAA,GAAAA,MAAgBe,EAAc,GAE9D,OACClR,EAAAA,cAACsQ,EAAD,CAAW5O,UAAcgP,EAAL,kBACnB1Q,EAAAA,cAAAA,MAAAA,CAAK0B,UAAWwK,EAAQI,KAAK,KAAMc,MAAOgE,GACzCpR,EAAAA,cAACyQ,EAAD,CAAgB/O,UAAU,qBAAqB0L,MAAOiE,EAAad,OAAQ7E,GACzE,SCLN,EAvB2C,SAACe,GAE3C,IAAMvN,EAAK,iBAAQoS,EAAAA,GAAkB7E,GAErC,GAAwB8E,EAAAA,EAAAA,UAAS,CAAC,IAAK,MAAhCC,EAAP,KAAaC,EAAb,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACT,IAAMC,EAAkB,SAACC,GACxB,IAAMC,EAAKC,SAASC,eAAe,YACnCN,EAAQ,CAACI,EAAGG,YAAaH,EAAGI,gBAI7B,OAFAN,IACAO,OAAOC,iBAAiB,SAAUR,GAC3B,kBAAMO,OAAOE,oBAAoB,SAAUT,MAChD,IAGF3R,EAAAA,cAACqS,EAAD,CAAgB3Q,UAAU,WAAWkF,GAAG,YA7ClB,SAAC1H,EAAuBoT,GAO/C,IANA,IAAQlN,EAAalG,EAAbkG,SACDwH,EAAUxH,EAAjB,GAAWiI,EAAMjI,EAAjB,GACMmN,EAAO,GAGTC,EAAe,EACV9R,EAAIkM,EAAIlM,GAAK2M,EAAI3M,KACT0P,EAAAA,GAAAA,SAA2B/M,EAAAA,EAAAA,OAAmB3C,EAAG,KAAOyP,EAAAA,GAAAA,MAAgBA,EAAAA,GAAAA,SACxEA,EAAAA,GAAAA,OAAyCqC,IAG1D,IAAK,IAAI9R,EAAIkM,EAAIlM,GAAK2M,EAAI3M,IAAK,CAC9B,IAAMgQ,EAAUN,EAAAA,GAAAA,SAA2B/M,EAAAA,EAAAA,OAAmB3C,EAAG,KAAOyP,EAAAA,GAAAA,MAAgBA,EAAAA,GAAAA,MAExFoC,EAAKpG,KACJnM,EAAAA,cAACyS,EAAD,eACC/B,QAASA,EACTzL,IAAKvE,EACLmP,UAAWnP,EACXiQ,MAAO2B,EAAcE,GACjBtT,KAIP,OAAOqT,EAqBJG,CAAgBxT,EAAOsS,EAAK","sources":["webpack://play-what/./src/components/collection/CollectionTable.tsx","webpack://play-what/./src/viewers/grand-staff/GrandStaff.tsx","webpack://play-what/./src/components/cards/DetailsCard.tsx","webpack://play-what/./src/components/cards/GuitarCard.tsx","webpack://play-what/./src/components/cards/ModeCard.tsx","webpack://play-what/./src/components/cards/PianoCard.tsx","webpack://play-what/./src/components/collection/CollectionList.tsx","webpack://play-what/./src/components/cards/RelatedCard.tsx","webpack://play-what/./src/components/cards/RomanNumeralsCard.tsx","webpack://play-what/./src/components/inputs/RootInput.tsx","webpack://play-what/./src/components/cards/RootCard.tsx","webpack://play-what/./src/components/pages/browse/pod-list.page.tsx","webpack://play-what/./src/components/ui/Table.tsx","webpack://play-what/./src/core/routing/Routing.utils.ts","webpack://play-what/./src/viewers/fretboard/Fretboard.styles.tsx","webpack://play-what/./src/viewers/fretboard/FretLabel.tsx","webpack://play-what/./src/viewers/fretboard/Fretboard.tsx","webpack://play-what/./src/viewers/fretboard/Fretboard.tuning.ts","webpack://play-what/./src/viewers/fretboard/Fretboard.utils.ts","webpack://play-what/./src/viewers/keyboard/Keyboard.defaults.ts","webpack://play-what/./src/viewers/keyboard/Keyboard.styles.tsx","webpack://play-what/./src/viewers/keyboard/KeyboardKey.tsx","webpack://play-what/./src/viewers/keyboard/Keyboard.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { css } from \"styled-components\";\r\nimport { useRoot, useRootId } from \"../../contexts/PagePropsContext\";\r\nimport Chord from \"../../core/models/Chord\";\r\nimport {\r\n  IModelConfig,\r\n  ModelType,\r\n  NoteId,\r\n} from \"../../core/models/Model.constants\";\r\nimport Note from \"../../core/models/Note\";\r\nimport Scale from \"../../core/models/Scale\";\r\nimport { getModelRoute } from \"../../core/routing/Routing.utils\";\r\nimport { Table } from \"../ui/Table\";\r\n\r\nconst tableStyles = css`\r\n  width: 100%;\r\n  margin: auto;\r\n  border-collapse: collapse;\r\n  white-space: nowrap;\r\n\r\n  td {\r\n    &:not(:first-child) {\r\n      font-size: 80%;\r\n    }\r\n  }\r\n\r\n  td,\r\n  th {\r\n    line-height: 32px;\r\n    text-align: center;\r\n\r\n    &:not(:first-child) {\r\n      width: 32px;\r\n      height: 32px;\r\n\r\n      display: none;\r\n      @media (min-width: 512px) {\r\n        display: table-cell;\r\n      }\r\n    }\r\n\r\n    &:first-child {\r\n      text-align: left;\r\n      padding: 0 8px;\r\n    }\r\n  }\r\n\r\n  td {\r\n    //border-right: 1px solid ${(props) => props.theme.utils.border};\r\n    //border-bottom: 1px solid ${(props) => props.theme.utils.border};\r\n    &.active {\r\n      background-color: ${(props) => props.theme.surface.bg};\r\n    }\r\n  }\r\n\r\n  thead {\r\n    text-transform: uppercase;\r\n    font-size: 80%;\r\n\r\n    @media (max-width: 511px) {\r\n      display: none;\r\n    }\r\n    tr th {\r\n      background-color: ${(props) => props.theme.surface.nav};\r\n      color: ${({ theme }) => theme.text.inverted};\r\n    }\r\n\r\n    th:first-child {\r\n      border-radius: 8px 0 0 8px;\r\n    }\r\n    th:last-child {\r\n      border-radius: 0 8px 8px 0;\r\n    }\r\n  }\r\n\r\n  a {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nexport interface ICollectionTableProps {\r\n  data: IModelConfig[];\r\n  semitones?: number[];\r\n}\r\n\r\nconst SEMITONES = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\r\n\r\nconst getSemitoneCol = (\r\n  model: Chord | Scale,\r\n  h: number,\r\n  semitones: number[],\r\n  root?: Note\r\n) => {\r\n  const index = model.intervals.findIndex((ivl) => ivl.pod[0] + 1 === h);\r\n  const className = semitones.includes(h) ? \"active\" : undefined;\r\n  if (index < 0) {\r\n    return {\r\n      className,\r\n      content: \"\",\r\n    };\r\n  }\r\n  const mod = root ? (model.notes as Note[])[index] : model.intervals[index];\r\n  return {\r\n    className,\r\n    content: mod.getName(),\r\n  };\r\n};\r\n\r\nconst CollectionTable: React.FC<ICollectionTableProps> = ({\r\n  data,\r\n  semitones = [],\r\n}) => {\r\n  const rootId = useRootId();\r\n  const root = useRoot();\r\n  return (\r\n    <Table\r\n      styles={tableStyles}\r\n      thead={[\r\n        {\r\n          cols: [\r\n            \"Name\",\r\n            {\r\n              colSpan: 12,\r\n              content: root ? \"Notes\" : \"Intervals\",\r\n            },\r\n          ],\r\n        },\r\n      ]}\r\n      tbody={data.map((d, i) => {\r\n        const cl = d.modelType === ModelType.Chord ? Chord : Scale;\r\n        // @ts-ignore\r\n        const model = new cl(d.modelId, { root });\r\n        return {\r\n          cols: [\r\n            {\r\n              link: getModelRoute(\r\n                model.modelType,\r\n                model.modelId,\r\n                rootId as NoteId\r\n              ),\r\n              content: model.getName(),\r\n            },\r\n            ...SEMITONES.map((h, i) =>\r\n              getSemitoneCol(model, h, semitones, root)\r\n            ),\r\n          ],\r\n        };\r\n      })}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CollectionTable;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Card, { CardHeader } from '../../components/ui/Card';\r\n\r\nconst NOTES = [\r\n    {\r\n        note: 'F5',\r\n        staff: 'treble',\r\n        line: true\r\n    },\r\n    {\r\n        note: 'E5',\r\n        staff: 'treble',\r\n        line: false\r\n    },\r\n    {\r\n        note: 'D5',\r\n        staff: 'treble',\r\n        line: true\r\n    },\r\n    {\r\n        note: 'C5',\r\n        staff: 'treble',\r\n        line: false\r\n    },\r\n    {\r\n        note: 'B5',\r\n        staff: 'treble',\r\n        line: true\r\n    },\r\n    {\r\n        note: 'A5',\r\n        staff: 'treble',\r\n        line: false\r\n    },\r\n    {\r\n        note: 'G4',\r\n        staff: 'treble',\r\n        line: true\r\n    },\r\n    {\r\n        note: 'F4',\r\n        staff: 'treble',\r\n        line: false\r\n    },\r\n    {\r\n        note: 'E4',\r\n        staff: 'treble',\r\n        line: true\r\n    },\r\n    {\r\n        note: 'D4',\r\n        staff: 'treble',\r\n        line: false\r\n    },\r\n    {\r\n        note: 'C4',\r\n        staff: null,\r\n        line: true\r\n    },\r\n    {\r\n        note: 'B4',\r\n        staff: 'bass',\r\n        line: false\r\n    },\r\n    {\r\n        note: 'A4',\r\n        staff: 'bass',\r\n        line: true\r\n    },\r\n    {\r\n        note: 'G3',\r\n        staff: 'bass',\r\n        line: false\r\n    },\r\n    {\r\n        note: 'F3',\r\n        staff: 'bass',\r\n        line: true\r\n    },\r\n    {\r\n        note: 'E3',\r\n        staff: 'bass',\r\n        line: false\r\n    },\r\n    {\r\n        note: 'D3',\r\n        staff: 'bass',\r\n        line: true\r\n    },\r\n    {\r\n        note: 'C3',\r\n        staff: 'bass',\r\n        line: false\r\n    },\r\n    {\r\n        note: 'B3',\r\n        staff: 'bass',\r\n        line: true\r\n    },\r\n    {\r\n        note: 'A3',\r\n        staff: 'bass',\r\n        line: false\r\n    },\r\n    {\r\n        note: 'G2',\r\n        staff: 'bass',\r\n        line: true\r\n    },\r\n];\r\n\r\nconst StyledGrandStaff = styled.div`\r\n    .staff {\r\n        border-right: 4px solid black;\r\n        border-left: 4px solid black;\r\n    }\r\n\r\n    .note {\r\n        margin: auto;\r\n        width: 32px;\r\n        &.treble, &.bass {\r\n            width: 100%;\r\n        }\r\n        &.line {\r\n            border-top: 1px solid black;\r\n        }\r\n        &:not(.line) {\r\n            height: 12px;\r\n        }\r\n    }\r\n`\r\n\r\nconst GrandStaff = ({ model }) => {\r\n    return null;\r\n    return (\r\n        <StyledGrandStaff>\r\n            <Card >\r\n                <CardHeader title=\"Grand Staff\" />\r\n                <div className='staff'>\r\n                    {NOTES.map(n => <div className={`note ${n.note} ${n.line ? 'line' : ''} ${n.staff || ''}`} />)}\r\n                </div>\r\n            </Card>\r\n        </StyledGrandStaff>\r\n    );\r\n}\r\n\r\nexport default GrandStaff;\r\n","import React from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport NumberUtils from \"../../core/general/Number.utils\";\r\nimport Note from \"../../core/models/Note\";\r\nimport { octaveState } from \"../../state/state\";\r\nimport { CardHeader, StyledCard } from \"../ui/Card\";\r\nimport { Table } from \"../ui/Table\";\r\n\r\nconst StyledDetailsCard = styled(StyledCard)`\r\n    .header {\r\n        display: none;\r\n        @media(min-width: 512px) {\r\n            display: unset;\r\n        }\r\n    }\r\n    table {\r\n        margin: auto;\r\n        border-collapse: collapse;\r\n\r\n        &.mobile {\r\n            display: table;\r\n            @media(min-width: 512px) {\r\n                display: none;\r\n            }\r\n        }\r\n        &.desktop {\r\n            display: none;\r\n            @media(min-width: 512px) {\r\n                display: table;\r\n            }\r\n            th {\r\n                display: none;\r\n            }\r\n        }\r\n\r\n        td, th {\r\n            padding: 4px;\r\n            @media(min-width: 512px) {\r\n                padding: 4px 8px;\r\n            }\r\n            text-align: center;\r\n        }\r\n\r\n        th {\r\n            text-transform: uppercase;\r\n            font-size: 80%;\r\n        }\r\n\r\n        .featured {\r\n            font-weight: bold;\r\n            font-size: 150%;\r\n            @media(min-width: 512px) {\r\n                font-size: 200%;\r\n            }\r\n        }\r\n\r\n        .interval {\r\n            font-size: 120%;\r\n            @media(min-width: 512px) {\r\n                font-size: 150%;\r\n            }\r\n        }\r\n\r\n        .ratio, .frequency {\r\n            color: ${props => props.theme.text.secondary};\r\n            font-size: 80%;\r\n            @media(min-width: 512px) {\r\n                font-size: 100%;\r\n            }\r\n        }\r\n\r\n        .root {\r\n            color: red;\r\n        }\r\n    }\r\n`;\r\n\r\nconst getNoteCell = (note, i) => {\r\n    return (\r\n        {\r\n            className: `note featured ${i === 0 ? 'root' : ''}`,\r\n            content: (\r\n                <>\r\n                    {note.name}\r\n                    <sub>{note.getOctave()}</sub>\r\n                </>\r\n            )\r\n        }\r\n    );\r\n};\r\n\r\nconst getIntervalCell = (interval, isFeatured) => {\r\n    return (\r\n        <td className={`interval ${isFeatured ? 'featured' : ''}`}>{interval.getName()}</td>\r\n    );\r\n};\r\n\r\nconst getPitchCell = (note) => {\r\n    return (\r\n        <td className={`frequency`}>{note.getFrequency(true)}</td>\r\n    );\r\n};\r\n\r\nconst getRatioCell = (interval) => {\r\n    return (\r\n        <td className={`ratio`}>{interval.getRatio()}</td>\r\n    );\r\n};\r\n\r\nconst DetailsCard: React.FC<any> = ({ model }) => {\r\n    const intervals = model.intervals;\r\n    const octave = useRecoilValue(octaveState);\r\n    const hasNotes = !!model.notes;\r\n    const notes = hasNotes && model.notes.map(n => new Note([\r\n        (octave - 4) * 12 + NumberUtils.modulo(n.pod[0], 12),\r\n        n.pod[1]\r\n    ]));\r\n\r\n    if (!intervals && !notes) return null;\r\n\r\n    return (\r\n        <StyledDetailsCard $n={intervals.length}>\r\n            <CardHeader title={hasNotes ? 'Notes' : 'Intervals'} />\r\n            <Table\r\n                className=\"mobile\"\r\n                thead={[{\r\n                    cols: [\r\n                        hasNotes ? 'Note' : undefined,\r\n                        'Interval',\r\n                        hasNotes ? 'Pitch' : undefined,\r\n                        'Ratio'\r\n                    ]\r\n                }]}\r\n                tbody={intervals.map((ivl, i) => {\r\n                    const note = hasNotes && notes[i];\r\n                    return (\r\n                        {\r\n                            cols: [\r\n                                hasNotes ? getNoteCell(note, i) : undefined,\r\n                                getIntervalCell(ivl, !note),\r\n                                hasNotes ? getPitchCell(note) : undefined,\r\n                                getRatioCell(ivl)\r\n                            ]\r\n                        }\r\n                    );\r\n                })}\r\n            />\r\n            <Table\r\n                className=\"desktop\"\r\n                headerColIndicies={[0]}\r\n                tbody={[\r\n                    hasNotes ? {\r\n                        cols: [\r\n                            'Note',\r\n                            ...notes.map((note, i) => getNoteCell(note, i))\r\n                        ]\r\n                    } : undefined,\r\n                    {\r\n                        cols: [\r\n                            'Interval',\r\n                            ...intervals.map((ivl, i) => getIntervalCell(ivl, !notes))\r\n                        ]\r\n                    },\r\n                    hasNotes ? {\r\n                        cols: [\r\n                            'Pitch',\r\n                            ...notes.map((note, i) => getPitchCell(note))\r\n                        ]\r\n                    } : undefined,\r\n                    {\r\n                        cols: [\r\n                            'Ratio',\r\n                            ...intervals.map((ivl, i) => getRatioCell(ivl))\r\n                        ]\r\n                    },\r\n                ]}\r\n            />\r\n        </StyledDetailsCard >\r\n    );\r\n};\r\n\r\nexport default DetailsCard;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport Fretboard from \"../../viewers/fretboard/Fretboard\";\r\nimport Card from \"../ui/Card\";\r\nimport Icon from \"../ui/Icon\";\r\n\r\nconst StyledGuitarCard = styled.div`\r\n    .customize {\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n`;\r\n\r\n\r\nconst GuitarCard: React.FC<any> = ({ model }) => {\r\n\r\n    if (!model.root || !model.intervals) return null;\r\n\r\n    const qp = new URLSearchParams({\r\n        modelId: model.modelId,\r\n        modelType: model.modelType,\r\n        rootId: model.root.modelId,\r\n    });\r\n\r\n    return (\r\n        <Card title=\"Fretboard\" action={<Link className=\"customize\" to={`/view/fretboard?${qp.toString()}`}>Customize <Icon iconId=\"next\" size={8} /></Link>}>\r\n            <StyledGuitarCard>\r\n                <Fretboard\r\n                    model={model}\r\n                />\r\n            </StyledGuitarCard>\r\n        </Card >\r\n    );\r\n};\r\n\r\nexport default GuitarCard;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useRootId } from \"../../contexts/PagePropsContext\";\r\nimport { NoteId, Tag } from \"../../core/models/Model.constants\";\r\nimport { SCALE_PRESETS } from \"../../core/models/Model.presets\";\r\nimport { getModelRoute } from \"../../core/routing/Routing.utils\";\r\nimport Card from \"../ui/Card\";\r\n\r\nconst StyledModeCard = styled.div`\r\n  ul {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    gap: 4px;\r\n    flex-wrap: wrap;\r\n    a {\r\n      padding: 4px;\r\n      &.active {\r\n        font-weight: bold;\r\n        text-decoration: underline;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ModeCard: React.FC<any> = ({ model }) => {\r\n  const rootId = useRootId();\r\n\r\n  const type = model.tags.find(\r\n    (t) =>\r\n      t === Tag.Diatonic ||\r\n      t === Tag.Pentatonic ||\r\n      t === Tag.MelodicMode ||\r\n      t === Tag.HarmonicMode\r\n  );\r\n\r\n  if (!type) return null;\r\n\r\n  let modeType = \"\";\r\n  switch (type) {\r\n    case Tag.Diatonic:\r\n      modeType = \"Diatonic\";\r\n      break;\r\n    case Tag.Pentatonic:\r\n      modeType = \"Pentatonic\";\r\n      break;\r\n    case Tag.MelodicMode:\r\n      modeType = \"Melodic Minor\";\r\n      break;\r\n    case Tag.HarmonicMode:\r\n      modeType = \"Harmonic Minor\";\r\n      break;\r\n  }\r\n\r\n  const modes = SCALE_PRESETS.filter((p) => p.tags.includes(type));\r\n\r\n  return (\r\n    <Card title={`${modeType} Modes`}>\r\n      <StyledModeCard>\r\n        <ul>\r\n          {modes.map((n) => (\r\n            <li key={n.modelId}>\r\n              <Link\r\n                to={getModelRoute(n.modelType, n.modelId, rootId)}\r\n                className={model.modelId === n.modelId ? \"active\" : \"\"}\r\n              >\r\n                {n.name}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </StyledModeCard>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ModeCard;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport Keyboard from \"../../viewers/keyboard/Keyboard\";\r\nimport DEFAULT_KEYBOARD_PROPS from \"../../viewers/keyboard/Keyboard.defaults\";\r\nimport Card from \"../ui/Card\";\r\nimport Icon from \"../ui/Icon\";\r\n\r\nconst StyledPianoCard = styled.div`\r\n    .customize {\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n`;\r\n\r\n\r\nconst PianoCard: React.FC<any> = ({ model }) => {\r\n\r\n    if (!model.root || !model.intervals) return null;\r\n\r\n    const qp = new URLSearchParams({\r\n        modelId: model.modelId,\r\n        modelType: model.modelType,\r\n        rootId: model.root.modelId,\r\n    });\r\n\r\n    return (\r\n        <Card title=\"Keyboard\" action={<Link to={`/view/keyboard?${qp.toString()}`}>Customize <Icon iconId=\"next\" size={8} /></Link>}>\r\n            <StyledPianoCard>\r\n                <Keyboard\r\n                    keyRange={DEFAULT_KEYBOARD_PROPS.keyRange as [number, number]}\r\n                    model={model}\r\n                />\r\n            </StyledPianoCard>\r\n        </Card >\r\n    );\r\n};\r\n\r\nexport default PianoCard;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useRoot, useRootId } from \"../../contexts/PagePropsContext\";\r\nimport Chord from \"../../core/models/Chord\";\r\nimport { ModelType, NoteId } from \"../../core/models/Model.constants\";\r\nimport Scale from \"../../core/models/Scale\";\r\nimport { getModelRoute } from \"../../core/routing/Routing.utils\";\r\n\r\nconst StyledCollectionList = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 8px;\r\n\r\n  a {\r\n    padding: 2px;\r\n  }\r\n  li {\r\n    &:not(:last-child) {\r\n      ::after {\r\n        content: \", \";\r\n        color: ${(props) => props.theme.text.secondary};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\ninterface ICollectionListProps {\r\n  data: any[];\r\n}\r\n\r\nconst CollectionList: React.FC<ICollectionListProps> = ({ data }) => {\r\n  const rootId = useRootId();\r\n  const root = useRoot();\r\n  return (\r\n    <StyledCollectionList>\r\n      {data.map((d) => {\r\n        const cl = d.modelType === ModelType.Chord ? Chord : Scale;\r\n        // @ts-ignore\r\n        const model = new cl(d.modelId, { root });\r\n\r\n        return (\r\n          <li key={d.modelId}>\r\n            <Link to={getModelRoute(d.modelType, d.modelId, rootId)}>\r\n              {model.name}\r\n            </Link>\r\n          </li>\r\n        );\r\n      })}\r\n    </StyledCollectionList>\r\n  );\r\n};\r\n\r\nexport default CollectionList;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { useRootSuffix } from \"../../contexts/PagePropsContext\";\r\nimport { ModelType } from \"../../core/models/Model.constants\";\r\nimport {\r\n  CHORD_PRESETS,\r\n  NOTE_PRESETS,\r\n  SCALE_PRESETS,\r\n} from \"../../core/models/Model.presets\";\r\nimport CollectionList from \"../collection/CollectionList\";\r\nimport CollectionTable from \"../collection/CollectionTable\";\r\nimport Card from \"../ui/Card\";\r\n\r\nconst RelatedCard: React.FC<any> = ({ model }) => {\r\n  const subchords = model.getSubchords();\r\n  const subscales = model.getSubscales();\r\n  const superchords = model.getSuperchords();\r\n  const superscales = model.getSuperscales();\r\n\r\n  const semitones = model.intervals.map((ivl) => ivl.pod[0] + 1);\r\n\r\n  return (\r\n    <>\r\n      {subchords.length > 0 && (\r\n        <Card title=\"Child Chords\">\r\n          <CollectionTable data={subchords} semitones={semitones} />\r\n        </Card>\r\n      )}\r\n      {superchords.length > 0 && (\r\n        <Card title=\"Parent Chords\">\r\n          <CollectionTable data={superchords} semitones={semitones} />\r\n        </Card>\r\n      )}\r\n      {subscales.length > 0 && (\r\n        <Card title=\"Child Scales\">\r\n          <CollectionTable data={subscales} semitones={semitones} />\r\n        </Card>\r\n      )}\r\n      {superscales.length > 0 && (\r\n        <Card title=\"Parent Scales\">\r\n          <CollectionTable data={superscales} semitones={semitones} />\r\n        </Card>\r\n      )}\r\n      {model.modelType === ModelType.Chord && (\r\n        <Card title=\"Other Chords\">\r\n          <CollectionList data={CHORD_PRESETS} />\r\n        </Card>\r\n      )}\r\n      {model.modelType === ModelType.Scale && (\r\n        <Card title=\"Other Scales\">\r\n          <CollectionList data={SCALE_PRESETS} />\r\n        </Card>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RelatedCard;\r\n","import React from \"react\";\r\nimport { css } from \"styled-components\";\r\nimport { NoteId } from \"../../core/models/Model.constants\";\r\nimport { getModelRoute } from \"../../core/routing/Routing.utils\";\r\nimport Card from \"../ui/Card\";\r\nimport { Table } from \"../ui/Table\";\r\n\r\nconst tableStyles = css`\r\n  border-collapse: collapse;\r\n  width: 100%;\r\n\r\n  th {\r\n    //color: ${(props) => props.theme.brand.accent};\r\n    &:first-child {\r\n      text-align: right;\r\n    }\r\n    padding: 4px;\r\n  }\r\n\r\n  td {\r\n    padding: 4px;\r\n    text-align: center;\r\n    sup {\r\n      font-size: 80%;\r\n    }\r\n  }\r\n\r\n  .numeral td {\r\n    font-size: 160%;\r\n    font-family: serif;\r\n  }\r\n`;\r\n\r\nconst RomanNumeralsCard: React.FC<any> = ({ model }) => {\r\n  const numerals = model.getAllNumerals();\r\n\r\n  if (!numerals.length) return null;\r\n\r\n  return (\r\n    <Card title=\"Roman Numerals\">\r\n      <Table\r\n        styles={tableStyles}\r\n        headerColIndicies={[0]}\r\n        tbody={[\r\n          {\r\n            className: \"numeral\",\r\n            cols: [\r\n              \"Numeral\",\r\n              ...numerals.map((n, i) => {\r\n                const [numeral, symbol] = n.getNumeralParts(i + 1);\r\n                return {\r\n                  content: (\r\n                    <>\r\n                      {numeral}\r\n                      <sup className=\"symbol\">{symbol}</sup>\r\n                    </>\r\n                  ),\r\n                };\r\n              }),\r\n            ],\r\n          },\r\n          {\r\n            cols: [\"Degree\", ...numerals.map((n, i) => i + 1)],\r\n          },\r\n          {\r\n            cols: [\r\n              \"Name\",\r\n              ...numerals.map((n, i) => ({\r\n                link: getModelRoute(n.modelType, n.modelId, n.root as NoteId),\r\n                content: n.getShortName(),\r\n              })),\r\n            ],\r\n          },\r\n        ]}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default RomanNumeralsCard;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport styled from 'styled-components';\r\nimport { usePageProps, useRoot } from \"../../contexts/PagePropsContext\";\r\nimport { NoteId } from \"../../core/models/Model.constants\";\r\nimport { NOTE_PRESET_MAP } from \"../../core/models/Model.presets\";\r\nimport { octaveState } from \"../../state/state\";\r\nimport InputRow from \"../ui/InputRow\";\r\nimport DropdownInput from \"./DropdownInput\";\r\n\r\nconst StyledRootInput = styled.div`\r\n    display: grid;\r\n    grid-template-rows: repeat(3, 1fr);\r\n    width: 100%;\r\n\r\n    @media(min-width: 512px) {\r\n\r\n    }\r\n\r\n    .spelling, .accidental {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        gap: 4px;\r\n    }\r\n\r\n    .accidental > a:nth-child(2) {\r\n        width: 64px\r\n    }\r\n\r\n    a {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n\r\n        height: 32px;\r\n        width: 32px;\r\n        border-radius: 4px;\r\n\r\n        &:hover, &.active {\r\n            background-color: ${props => props.theme.action.active};\r\n            color: white;\r\n        }\r\n    }\r\n`;\r\n\r\nconst OCTAVE_OPTIONS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map((x, i) => ({ id: i + 1, name: i + 1 }))\r\n\r\nconst RootInput: React.FC<any> = () => {\r\n    const root = useRoot();\r\n    const pageProps = usePageProps();\r\n    const { path } = pageProps;\r\n\r\n    const rootIndex = pageProps.path.lastIndexOf('root');\r\n    const basePath = root ?\r\n        path.slice(0, rootIndex) :\r\n        path;\r\n    const rootKey = root ?\r\n        path.slice(rootIndex + 5, rootIndex + 6) :\r\n        path;\r\n\r\n    const [octave, setOctave] = useRecoilState(octaveState);\r\n\r\n    return (\r\n        <StyledRootInput>\r\n            <InputRow label={root ? \"Spelling\" : undefined} y>\r\n                <div className=\"spelling\">\r\n                    <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.C}`} >{NOTE_PRESET_MAP.get(NoteId.C).name}</Link>\r\n                    <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.D}`} >{NOTE_PRESET_MAP.get(NoteId.D).name}</Link>\r\n                    <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.E}`} >{NOTE_PRESET_MAP.get(NoteId.E).name}</Link>\r\n                    <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.F}`} >{NOTE_PRESET_MAP.get(NoteId.F).name}</Link>\r\n                    <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.G}`} >{NOTE_PRESET_MAP.get(NoteId.G).name}</Link>\r\n                    <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.A}`} >{NOTE_PRESET_MAP.get(NoteId.A).name}</Link>\r\n                    <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.B}`} >{NOTE_PRESET_MAP.get(NoteId.B).name}</Link>\r\n                </div>\r\n            </InputRow>\r\n            {root && (\r\n                <>\r\n                    <InputRow label=\"Accidental\" y>\r\n                        <div className=\"accidental\">\r\n                            <Link activeClassName=\"active\" to={`${basePath}root/${rootKey}-flat`} >b</Link>\r\n                            <Link activeClassName=\"active\" to={`${basePath}root/${rootKey}`} >none</Link>\r\n                            <Link activeClassName=\"active\" to={`${basePath}root/${rootKey}-sharp`} >#</Link>\r\n                        </div>\r\n                    </InputRow>\r\n                    <InputRow label=\"Octave\" y>\r\n                        <DropdownInput options={OCTAVE_OPTIONS} value={{ id: octave }} setValue={o => setOctave(o.id)} />\r\n                    </InputRow>\r\n                </>\r\n            )}\r\n        </StyledRootInput>\r\n    );\r\n};\r\n\r\nexport default RootInput;\r\n","import { navigate } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport styled from 'styled-components';\r\nimport { usePageProps, useRoot } from \"../../contexts/PagePropsContext\";\r\nimport { isEditingKeyState, octaveState } from \"../../state/state\";\r\nimport THEME from \"../../styles/theme\";\r\nimport ButtonInput from \"../inputs/ButtonInput\";\r\nimport RootInput from \"../inputs/RootInput\";\r\nimport Card from \"../ui/Card\";\r\n\r\nconst StyledRoot = styled.div`\r\n    margin-top: 8px;\r\n    .preview {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        font-size: 300%;\r\n    }\r\n    .rootless {\r\n        margin: 8px 0 16px;\r\n    }\r\n    .remove {\r\n        margin-top: 24px;\r\n        margin-left: auto;\r\n        display: block;\r\n        font-size: 80%;\r\n        color: red; //${THEME.status.negative};\r\n    }\r\n`;\r\n\r\nconst RootCard: React.FC<any> = () => {\r\n    const root = useRoot();\r\n    const pageProps = usePageProps();\r\n    const [octave, setOctave] = useRecoilState(octaveState);\r\n    const [isEditing, setIsEditing] = useRecoilState(isEditingKeyState);\r\n\r\n    const modelType = pageProps.path.includes('chord') ? 'chord' : 'scale';\r\n\r\n    const onClear = () => {\r\n        const rootIndex = pageProps.path.lastIndexOf('root');\r\n        const sanitized = rootIndex === -1 ?\r\n            pageProps.path :\r\n            pageProps.path.slice(0, rootIndex);\r\n        navigate(sanitized);\r\n    }\r\n\r\n    const toggle = (\r\n        <ButtonInput isLink onClick={() => setIsEditing(!isEditing)}>\r\n            {isEditing ? 'Done' : 'Edit'}\r\n        </ButtonInput>\r\n    );\r\n\r\n    const remove = root ? (\r\n        <ButtonInput isLink onClick={onClear} className=\"remove\">\r\n            Remove Root\r\n        </ButtonInput>\r\n    ) : null;\r\n\r\n    return (\r\n        <Card title=\"Root\" action={root && toggle} css={root ? `color: ${THEME.text.primary};` : `background-color: ${THEME.status.highlight}; border: 1px solid ${THEME.status.warning}; color: ${THEME.text.primary};`}>\r\n            <StyledRoot $isRootless={!root}>\r\n                {!root && (\r\n                    <div className=\"rootless\">\r\n                        <b>This {modelType} does not have a root.</b>\r\n                        <br />\r\n                        Please select a root to see the notes.\r\n                    </div>\r\n                )}\r\n                {(isEditing || !root) && (\r\n                    <RootInput />\r\n                )}\r\n\r\n                {isEditing && remove}\r\n\r\n                {(!isEditing && root) && (\r\n                    <div className=\"preview\">\r\n                        <b>{root.name}</b>\r\n                        <sub>{octave}</sub>\r\n                    </div>\r\n                )}\r\n            </StyledRoot>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default RootCard;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { useRoot } from \"../../../contexts/PagePropsContext\";\r\nimport { getModelIdClass, getModelIdText, ModelType } from \"../../../core/models/Model.constants\";\r\nimport GrandStaff from \"../../../viewers/grand-staff/GrandStaff\";\r\nimport DetailsCard from \"../../cards/DetailsCard\";\r\nimport GuitarCard from \"../../cards/GuitarCard\";\r\nimport ModeCard from \"../../cards/ModeCard\";\r\nimport PianoCard from \"../../cards/PianoCard\";\r\nimport RelatedCard from \"../../cards/RelatedCard\";\r\nimport RomanNumeralsCard from \"../../cards/RomanNumeralsCard\";\r\nimport RootCard from \"../../cards/RootCard\";\r\nimport ColumnManager from \"../../column-manager/ColumnManager\";\r\nimport PageLayout from \"../../layout/PageLayout\";\r\n\r\nconst StyledPodlistPage = styled(PageLayout)`\r\n\r\n`;\r\n\r\ninterface IPodListPageProps {\r\n    pageContext: any;\r\n}\r\n\r\nconst PodListPage: React.FC<IPodListPageProps> = props => {\r\n\r\n    const { modelType, modelId } = props.pageContext;\r\n    const root = useRoot();\r\n\r\n    const cl = getModelIdClass(modelType);\r\n    const clText = getModelIdText(modelType);\r\n\r\n    const podList = new cl(modelId, { root });\r\n    const title = `${podList.name} ${clText}`;\r\n\r\n    //const subtitle = podList.aliases.length ? `Also known as ${podList.aliases.join(', ')}` : 'Podlist';\r\n\r\n    return (\r\n        <StyledPodlistPage title={title}>\r\n            <ColumnManager>\r\n                <ColumnManager tablet={['300px', 'auto']}>\r\n                    <RootCard />\r\n                    <DetailsCard model={podList} />\r\n                </ColumnManager>\r\n\r\n                {modelType === ModelType.Scale && <RomanNumeralsCard model={podList} />}\r\n                {modelType === ModelType.Scale && <ModeCard model={podList} />}\r\n                <GrandStaff model={podList} />\r\n                <ColumnManager tablet={['1fr', '1fr']}>\r\n                    <GuitarCard model={podList} />\r\n                    <PianoCard model={podList} />\r\n                </ColumnManager>\r\n                <RelatedCard model={podList} />\r\n            </ColumnManager>\r\n        </StyledPodlistPage >\r\n    );\r\n};\r\n\r\nexport default PodListPage;\r\n","\r\nimport { Link } from 'gatsby';\r\nimport React, { Fragment, ReactNode } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledTable = styled.table`\r\n   \r\n`;\r\n\r\ntype TOmit = undefined | null | false;\r\n\r\nconst getIsTypeOmit = (data: any): data is TOmit => data === undefined || data === null || data === false;\r\n\r\n// Col\r\n\r\ninterface IColConfig {\r\n    isHeader?: boolean;\r\n    content: any;\r\n    colSpan?: number;\r\n    className?: string;\r\n    link?: string;\r\n}\r\n\r\ninterface IColProps extends IColConfig {\r\n    index: number;\r\n}\r\n\r\ntype TCol = string | number | IColConfig | ReactNode;\r\n\r\nconst Col: React.FC<IColProps> = ({ index, isHeader, content, colSpan, className, link }) => {\r\n    const ColTag = isHeader ? 'th' : 'td';\r\n    const WrapperTag = link ? Link : Fragment;\r\n    const wrapperProps: any = link ? { to: link } : {};\r\n\r\n    return (\r\n        <ColTag colSpan={colSpan} className={className}>\r\n            <WrapperTag {...wrapperProps}>\r\n                {content || ''}\r\n            </WrapperTag>\r\n        </ColTag>\r\n    );\r\n}\r\n\r\n// Row\r\n\r\ninterface IRowConfig {\r\n    cols: (TCol | TOmit)[];\r\n    className?: string;\r\n    isHeader?: boolean;\r\n    headerColIndicies?: number[];\r\n}\r\n\r\nconst getIsConfig = (col: TCol): col is IColConfig => typeof col === 'object' && col !== null && col.hasOwnProperty('content');\r\n\r\nconst Row: React.FC<IRowConfig> = ({ cols, isHeader, className, headerColIndicies = [] }) => {\r\n    return (\r\n        <tr className={className}>\r\n            {cols.map((col: any, i) => {\r\n                if (getIsTypeOmit(col)) return null;\r\n                const isConfig = getIsConfig(col);\r\n                const colConfig = !isConfig ? { content: col } : col\r\n                return <Col key={i} index={i} isHeader={isHeader || headerColIndicies.includes(i)} {...colConfig} />\r\n            })}\r\n        </tr>\r\n    );\r\n}\r\n\r\n// Table Section\r\n\r\ninterface ITableSectionConfig {\r\n    Tag: 'thead' | 'tfoot' | 'tbody';\r\n    rows: (IRowConfig | TOmit)[];\r\n    headerColIndicies?: number[];\r\n}\r\n\r\nconst TableSection: React.FC<ITableSectionConfig> = ({ Tag, rows, headerColIndicies }) => (\r\n    <Tag>\r\n        {rows.map((row, i) => {\r\n            if (getIsTypeOmit(row)) return null;\r\n            return (\r\n                <Row\r\n                    key={i}\r\n                    isHeader={Tag !== 'tbody'}\r\n                    headerColIndicies={headerColIndicies}\r\n                    {...row} />\r\n            );\r\n        })}\r\n    </Tag>\r\n)\r\n\r\n// Table\r\n\r\ninterface IColGroup {\r\n    span?: number;\r\n    className?: string;\r\n}\r\n\r\ninterface ITableConfig {\r\n    thead?: (IRowConfig | TOmit)[];\r\n    tfoot?: (IRowConfig | TOmit)[];\r\n    tbody: (IRowConfig | TOmit)[];\r\n    styles?: any;\r\n    caption?: string;\r\n    colGroups?: IColGroup[];\r\n    className?: string;\r\n    headerColIndicies?: number[];\r\n}\r\n\r\nexport const Table: React.FC<ITableConfig> = ({ thead, tfoot, tbody, styles, colGroups, caption, headerColIndicies, className }) => {\r\n    return (\r\n        <StyledTable css={styles} className={className}>\r\n            {colGroups && <colgroup>{colGroups.map((cg, i) => <col key={i} {...cg} />)}</colgroup>}\r\n            {caption && <caption>{caption}</caption>}\r\n            {thead && <TableSection Tag=\"thead\" rows={thead} headerColIndicies={headerColIndicies} />}\r\n            {tfoot && <TableSection Tag=\"tfoot\" rows={tfoot} headerColIndicies={headerColIndicies} />}\r\n            {tbody && <TableSection Tag=\"tbody\" rows={tbody} headerColIndicies={headerColIndicies} />}\r\n        </StyledTable>\r\n    );\r\n}\r\n","import { ModelId, ModelType, NoteId } from \"../models/Model.constants\";\r\n\r\nexport const getModelRoute = (\r\n  modelType: ModelType,\r\n  modelId?: ModelId,\r\n  rootId?: NoteId\r\n) => {\r\n  const modelSuffix = modelId ? `/${modelId}` : \"\";\r\n  const rootSuffix = rootId ? `/root/${rootId}` : \"\";\r\n\r\n  return `/browse/${modelType}${modelSuffix}${rootSuffix}/`;\r\n};\r\n","import styled from 'styled-components';\r\n\r\nconst StyledFretboard = styled.div`\r\n    display: inline-grid;\r\n\twidth: 100%;\r\n\tbackground-image: radial-gradient(ellipse, #E8DBB8 0%, #D0B27C 100%);\r\n\tfont-size: 90%;\r\n\tmargin: 16px 0;\r\n\r\n    .fret {\r\n        display: inline-flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        position: relative;\r\n        border-right: 2px solid darkgrey;\r\n    }\r\n\r\n    .fret.open {\r\n        border-right: 3px solid grey;\r\n        background-color: #D0B27C;;\r\n    }\r\n\r\n    /* Used to maintain aspect ratio */\r\n\r\n    .fret::before {\r\n        content: \"\";\r\n        display: block;\r\n        height: 0;\r\n        width: 0;\r\n        margin-top: calc(1/2 * 100%);\r\n    }\r\n\r\n    /* Fret String */\r\n\r\n    .fret-string {\r\n        border-top: 1px solid grey;\r\n        width: 100%;\r\n    }\r\n\r\n    /* Fret Numbers */\r\n\r\n    .fret-number {\r\n        position: absolute;\r\n        bottom: 100%;\r\n    }\r\n\r\n    /* Fret Dots */\r\n\r\n    .fret-dots {\r\n        position: absolute;\r\n        top: 95%;\r\n        font-size: 16px;\r\n        white-space: nowrap;\r\n    }\r\n\r\n    .fret-number, .fret-dots {\r\n        color: #888;\r\n    }\r\n`;\r\n\r\nexport default StyledFretboard;\r\n","\r\nimport * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { IFretProps } from \"./Fretboard.utils\";\r\n\r\nconst StyledFretLabel = styled.div`\r\n\tposition: absolute;\r\n\theight: 60%;\r\n\taspect-ratio: 1;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tborder-radius: 100%;\r\n\tbackground-color: ${({ $bgColor }) => $bgColor ? $bgColor : 'transparent'};\r\n\tcolor: ${({ $fgColor }) => $fgColor ? $fgColor : ''};\r\n\r\n\t/*cursor: pointer;\r\n\t&:hover {\r\n\t\theight: 80%;\r\n\t}*/\r\n`;\r\n\r\n\r\nconst FretLabel: React.FC<IFretProps> = props => {\r\n\r\n\tconst bgColor = props.colorMapFn(props);\r\n\r\n\tlet fgColor = 'white';\r\n\r\n\treturn (\r\n\t\t<StyledFretLabel $bgColor={bgColor} $fgColor={fgColor} onClick={null} className=\"fret-label\">\r\n\t\t\t{null}\r\n\t\t</StyledFretLabel>\r\n\t);\r\n};\r\n\r\nexport default FretLabel;\r\n","import * as React from \"react\";\r\nimport StyledFretboard from \"./Fretboard.styles\";\r\nimport { DEFAULT_FRETBOARD_PROPS, getDotsForFret, getFretRatios, IFretboardProps, IFretProps } from \"./Fretboard.utils\";\r\nimport FretLabel from \"./FretLabel\";\r\n\r\nexport const Fret: React.FC<IFretProps> = props => {\r\n\r\n\tconst { tuning, stringIndex, fretIndex, showFretNumbers, showFretDots } = props;\r\n\r\n\tconst classes = ['fret'];\r\n\tif (fretIndex === 0)\r\n\t\tclasses.push('open');\r\n\r\n\tconst isLowString = stringIndex === tuning.length - 1;\r\n\tconst isHighString = stringIndex === 0;\r\n\r\n\treturn (\r\n\t\t<div className={classes.join(' ')}>\r\n\t\t\t<div className=\"fret-number\">\r\n\t\t\t\t{showFretNumbers && isHighString && fretIndex > 0 && fretIndex}\r\n\t\t\t</div>\r\n\t\t\t<div className='fret-string' />\r\n\t\t\t<FretLabel {...props} />\r\n\t\t\t<div className=\"fret-dots\">\r\n\t\t\t\t{showFretDots && isLowString && fretIndex > 0 && getDotsForFret(fretIndex)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst getFrets = (props: IFretboardProps) => {\r\n\tconst { fretRange, tuning } = props;\r\n\tconst [lo, hi] = fretRange;\r\n\r\n\tconst allFrets = [];\r\n\tfor (let s = 0; s < tuning.length; s++) {\r\n\t\tfor (let f = lo; f <= hi; f++) {\r\n\t\t\tallFrets.push(\r\n\t\t\t\t<Fret\r\n\t\t\t\t\tkey={`s${s}-f${f}`}\r\n\t\t\t\t\tstringIndex={s}\r\n\t\t\t\t\tfretIndex={f}\r\n\t\t\t\t\ttuning={tuning}\r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\treturn allFrets;\r\n};\r\n\r\nconst Fretboard: React.FC<IFretboardProps> = (userProps) => {\r\n\tconst props = { ...DEFAULT_FRETBOARD_PROPS, ...userProps };\r\n\r\n\tconst [lo, hi] = props.fretRange;\r\n\tconst numFrets = hi - lo + 1;\r\n\tconst numStrings = props.tuning.length;\r\n\tconst gridTemplateColumns = getFretRatios(numFrets).map(n => n + 'fr').join(' ');\r\n\tconst gridTemplateRows = `repeat(${numStrings}, 1fr)`;\r\n\tconst fretboardStyles = {\r\n\t\tgridTemplateColumns,\r\n\t\tgridTemplateRows\r\n\t};\r\n\r\n\treturn (\r\n\t\t<StyledFretboard className='fretboard' style={fretboardStyles}>\r\n\t\t\t{getFrets(props)}\r\n\t\t</StyledFretboard>\r\n\t);\r\n};\r\n\r\nexport default Fretboard;\r\n","import ArrayUtils from \"../../core/general/Array.utils\";\r\nimport Note from '../../core/models/Note';\r\nimport { NoteId } from './../../core/models/Model.constants';\r\n\r\nexport enum TuningId {\r\n    Standard = 'standard',\r\n    StandardSeven = 'standard-seven',\r\n    StandardBass = 'standard-bass',\r\n    Flat = 'flat',\r\n    DoubleFlat = 'double-flat',\r\n    DropD = 'drop-d',\r\n    DADGAD = 'dadgad',\r\n    Banjo = 'banjo',\r\n    Violin = 'violin',\r\n    OpenA = 'open-a',\r\n    OpenB = 'open-b',\r\n    OpenC = 'open-c',\r\n    OpenD = 'open-d',\r\n    OpenE = 'open-e',\r\n    OpenF = 'open-f',\r\n    OpenG = 'open-g',\r\n}\r\n\r\nexport interface ITuning {\r\n    id: TuningId;\r\n    name: string;\r\n    value: number[]\r\n}\r\n\r\nconst formatPreset = (id: TuningId, name: string, value: number[]): ITuning => ({\r\n    id,\r\n    name,\r\n    value\r\n});\r\n\r\nconst getPitch = (noteId: NoteId, octave: number): number => Note.getNote(noteId, octave).pod[0];\r\n\r\nexport const TUNING_PRESET_MAP = new Map<TuningId, ITuning>([\r\n    [TuningId.Standard, formatPreset(\r\n        TuningId.Standard,\r\n        'Standard Guitar',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.E, 3)\r\n        ]\r\n    )],\r\n    [TuningId.Flat, formatPreset(\r\n        TuningId.Flat,\r\n        'Flat Gtr',\r\n        [\r\n            getPitch(NoteId.Eb, 5),\r\n            getPitch(NoteId.Bb, 4),\r\n            getPitch(NoteId.Gb, 4),\r\n            getPitch(NoteId.Db, 4),\r\n            getPitch(NoteId.Ab, 3),\r\n            getPitch(NoteId.Eb, 3)\r\n        ]\r\n    )],\r\n    [TuningId.DoubleFlat, formatPreset(\r\n        TuningId.DoubleFlat,\r\n        'Double Flat Gtr',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.F, 4),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    [TuningId.StandardSeven, formatPreset(\r\n        TuningId.StandardSeven,\r\n        'Standard 7-String Gtr',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.E, 3),\r\n            getPitch(NoteId.B, 3)\r\n        ]\r\n    )],\r\n    [TuningId.StandardBass, formatPreset(\r\n        TuningId.StandardBass,\r\n        'Standard Bass',\r\n        [\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.D, 3),\r\n            getPitch(NoteId.A, 2),\r\n            getPitch(NoteId.E, 2)\r\n        ]\r\n    )],\r\n    [TuningId.DropD, formatPreset(\r\n        TuningId.DropD,\r\n        'Drop D Gtr',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    [TuningId.DADGAD, formatPreset(\r\n        TuningId.DADGAD,\r\n        'DADGAD',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    // Unconfirmed\r\n    /*[TuningId.Banjo, formatPreset(\r\n        TuningId.Banjo,\r\n        'Banjo',\r\n        [\r\n            getPitch(NoteId.G, 5),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],*/\r\n    // Unconfirmed\r\n    [TuningId.Violin, formatPreset(\r\n        TuningId.Violin,\r\n        'Violin',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.G, 4)\r\n        ]\r\n    )],\r\n    [TuningId.OpenA, formatPreset(\r\n        TuningId.OpenA,\r\n        'Open A',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.E, 4),\r\n            getPitch(NoteId.Cs, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.E, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenB, formatPreset(\r\n        TuningId.OpenB,\r\n        'Open B',\r\n        [\r\n            getPitch(NoteId.Ds, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.Fs, 4),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.Fs, 3),\r\n            getPitch(NoteId.B, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenC, formatPreset(\r\n        TuningId.OpenC,\r\n        'Open C',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.C, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenD, formatPreset(\r\n        TuningId.OpenD,\r\n        'Open D',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.Fs, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenE, formatPreset(\r\n        TuningId.OpenE,\r\n        'Open E',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.Gs, 4),\r\n            getPitch(NoteId.E, 4),\r\n            getPitch(NoteId.B, 3),\r\n            getPitch(NoteId.E, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenF, formatPreset(\r\n        TuningId.OpenF,\r\n        'Open F',\r\n        [\r\n            getPitch(NoteId.F, 5),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.F, 4),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.F, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenG, formatPreset(\r\n        TuningId.OpenG,\r\n        'Open G',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )]\r\n]);\r\n\r\nexport const FRETBOARD_TUNING_VALUES = ArrayUtils.mapToArray(TUNING_PRESET_MAP);\r\n","import Chord from '../../core/models/Chord';\r\nimport IntervalSpan from '../../core/models/Interval';\r\nimport { IModelConfig } from '../../core/models/Model.constants';\r\nimport Note from '../../core/models/Note';\r\nimport Scale from '../../core/models/Scale';\r\nimport { ITuning, TuningId, TUNING_PRESET_MAP } from './Fretboard.tuning';\r\nimport { IVoicing } from './Fretboard.voicing';\r\n\r\nexport interface IFretLabelProps {\r\n\tnote?: Note;\r\n\tcolor?: string;\r\n\tfreq?: number;\r\n}\r\n\r\nexport interface IFretboardProps {\r\n\tfretRange?: [number, number];\r\n\tshowFretDots?: boolean;\r\n\tshowFretNumbers?: boolean;\r\n\tcolorMapFn?: (fretProps: IFretProps) => string | undefined;\r\n\tvoicing?: IVoicing,\r\n\ttuning?: number[]; // ITuning,\r\n\tmodel?: Chord | Scale;\r\n}\r\n\r\nexport interface IFretProps extends IFretboardProps {\r\n\tstringIndex: number;\r\n\tfretIndex: number;\r\n}\r\n\r\nexport const DOTTED_FRET_INDICES = [true, false, false, true, false, true, false, true, false, true, false, false];\r\n\r\nexport const FRET_SIZE_RATIO = Math.pow((1 / 2), (1 / 12));\r\n\r\nexport const isIntervalInVoicing = (interval: IntervalSpan, voicing: IVoicing, stringIndex: number) => {\r\n\tif (!voicing || !voicing.value) return true;\r\n\tconst v = voicing.value[stringIndex];\r\n\tconst d = interval.getDegree();\r\n\tif (Array.isArray(v)) {\r\n\t\treturn v.some(n => doesVoicingValueMatch(d, n));\r\n\t}\r\n\telse if (typeof v === 'number') {\r\n\t\treturn doesVoicingValueMatch(d, v);\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nexport const getFretColor = (props: IFretProps): string | undefined => {\r\n\tconst { stringIndex, fretIndex, tuning, model, voicing } = props;\r\n\tconst noteIndex = tuning[stringIndex] + fretIndex;\r\n\tconst [interval, note] = model.tryGetPodPairAtPitch(noteIndex);\r\n\r\n\tif (!note) return;\r\n\r\n\tif (voicing && !isIntervalInVoicing(interval, voicing, stringIndex)) {\r\n\t\treturn `#00000033`\r\n\t}\r\n\r\n\treturn interval.getColor();\r\n}\r\n\r\nexport const DEFAULT_FRETBOARD_PROPS: IFretboardProps = {\r\n\tfretRange: [1, 12],\r\n\ttuning: TUNING_PRESET_MAP.get(TuningId.Standard).value,\r\n\tshowFretDots: true,\r\n\tshowFretNumbers: true,\r\n\tcolorMapFn: getFretColor\r\n};\r\n\r\nexport const getFretRatios = (numFrets: number): number[] => {\r\n\tconst ratios = [];\r\n\tfor (let i = 1; i <= numFrets; i++) {\r\n\t\tratios.push((i <= 1) ? 1 : ratios[i - 2] * FRET_SIZE_RATIO);\r\n\t}\r\n\treturn ratios;\r\n};\r\n\r\nexport const getDotsForFret = (fretNumber: number): string => {\r\n\tconst mod = fretNumber % 12;\r\n\tif (mod === 0)\r\n\t\treturn '• •';\r\n\telse if (DOTTED_FRET_INDICES[mod])\r\n\t\treturn '•';\r\n\treturn '';\r\n};\r\n\r\nconst doesVoicingValueMatch = (d: number, v: number) => {\r\n\treturn d + 1 === v;\r\n}\r\n","import Chord from \"../../core/models/Chord\";\r\nimport Scale from \"../../core/models/Scale\";\r\n\r\nexport enum KeyType {\r\n\tBlack = 'black',\r\n\tWhite = 'white'\r\n}\r\n\r\nexport interface IKeyboardProps {\r\n\tkeyRange: [number, number];\r\n\thideLabel?: boolean;\r\n\tmodel?: Chord | Scale;\r\n\tcolorMapFn?: (fretProps: IKeyboardKeyProps) => string | undefined;\r\n}\r\n\r\nexport interface IKeyboardKeyProps extends IKeyboardProps {\r\n\tnoteIndex: number;\r\n\tscale: number;\r\n\tkeyType: KeyType;\r\n}\r\n\r\nexport const BLACK_KEY_INDICES = [0, 2, 4, 5, 7, 9, 11];\r\n\r\nexport const getKeyColor = (props: IKeyboardKeyProps): string | undefined => {\r\n\tconst { noteIndex, model } = props;\r\n\r\n\tconst [interval, note] = model.tryGetPodPairAtPitch(noteIndex);\r\n\r\n\tif (!note) return;\r\n\r\n\treturn interval.getColor();\r\n}\r\n\r\nconst DEFAULT_KEYBOARD_PROPS = {\r\n\tkeyRange: [-12, 12],\r\n\tcolorMapFn: getKeyColor\r\n};\r\n\r\nexport default DEFAULT_KEYBOARD_PROPS;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledKeyboard = styled.div`\r\n    display: inline-flex;\r\n\twidth: 100%;\r\n\t//min-width: 100px;\r\n    font-size: 12px;\r\n\ttext-align: center;\r\n\tfont-family: sans-serif;\r\n\tmargin: 16px 0;\r\n\r\n    .center {\r\n        text-align: center;\r\n    }\r\n\r\n    /* Key Container */\r\n\r\n    .white-key-container {\r\n        display: inline-block;\r\n    }\r\n\r\n    .black-key-container {\r\n        display: inline-block;\r\n        width: 0px;\r\n    }\r\n\r\n    /* Key */\r\n\r\n    .keyboard-key {\r\n        vertical-align: top;\r\n        position: relative;\r\n        display: inline-flex;\r\n        justify-content: center;\r\n        cursor: pointer;\r\n    }\r\n\r\n    .white-key {\r\n        box-shadow: 0 0 1px 1px black inset;\r\n        border-radius: 0 0 5% 5%;\r\n    }\r\n\r\n    /*.white-key:hover {\r\n        box-shadow: 0 0 1px 2px black inset;\r\n    }*/\r\n\r\n    .black-key {\r\n        box-shadow: 0 0 1px 2px #333 inset;\r\n        z-index: 10;\r\n        border-radius: 0 0 10% 10%;\r\n    }\r\n\r\n    /*.black-key:hover {\r\n        background-color: #333;\r\n        box-shadow: 0 0 1px 2px black inset;\r\n    }*/\r\n\r\n    /* Colors (applied only in absence of degree class) */\r\n\r\n    .white {\r\n        background-color: white;\r\n        color: black;\r\n    }\r\n\r\n    .black {\r\n        background-color: black;\r\n        color: white;\r\n    }\r\n\r\n\r\n    /* Label */\r\n\r\n    .white-key .keyboard-key-label {\r\n        position: absolute;\r\n        height: 100%;\r\n        width: 100%;\r\n        border-radius: 0 0 5% 5%;\r\n        box-shadow: 0 0 1px 1px black inset;\r\n\r\n        padding-bottom: 4px;\r\n        display: flex;\r\n        align-items: flex-end;\r\n        justify-content: center;\r\n    }\r\n\r\n    /*.white-key .keyboard-key-label:hover {\r\n        box-shadow: 0 0 1px 2px black inset;\r\n    }*/\r\n\r\n    .black-key .keyboard-key-label {\r\n        bottom: 105%;\r\n        position: absolute;\r\n        color: black;\r\n    }\r\n`;\r\n\r\nexport default StyledKeyboard;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport ColorUtils from \"../../core/color/Color.utils\";\r\nimport { IKeyboardKeyProps, KeyType } from './Keyboard.defaults';\r\n\r\n// Key dimensions relative to white key width\r\nconst KEY__DIMS = {\r\n\tWhW_WhH: 4.6875, // White key width to white key height\r\n\tWhW_BlW: 0.6250, // White key width to black key width\r\n\tWhW_BlH: 2.9688 // White key width to black hey height\r\n}\r\n\r\nconst getScaleStyles = (keyType, scale) => {\r\n\tswitch (keyType) {\r\n\t\tcase KeyType.White:\r\n\t\t\treturn {\r\n\t\t\t\twidth: scale + 'px',\r\n\t\t\t\theight: KEY__DIMS.WhW_WhH * scale + 'px'\r\n\t\t\t};\r\n\t\tcase KeyType.Black:\r\n\t\t\treturn {\r\n\t\t\t\twidth: KEY__DIMS.WhW_BlW * scale + 'px',\r\n\t\t\t\theight: KEY__DIMS.WhW_BlH * scale + 'px',\r\n\t\t\t\tright: .5 * KEY__DIMS.WhW_BlW * scale + 'px'\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn {\r\n\t\t\t\twidth: '0px',\r\n\t\t\t\theight: '0px'\r\n\t\t\t};\r\n\t}\r\n}\r\n\r\nconst StyledKey = styled.div`\r\n\tbackground-color: ${({ $color }) => $color ? $color : 'transparent'};\r\n\tcolor: ${({ $color }) => ColorUtils.getFgColor($color)};\r\n`;\r\n\r\nconst StyledKeyLabel = styled.div`\r\n\tcolor: ${({ $color }) => ColorUtils.getFgColor($color)};\r\n`;\r\n\r\nconst KeyboardKey: React.FC<IKeyboardKeyProps> = props => {\r\n\r\n\tconst { keyType, noteIndex, scale, hideLabel, model, colorMapFn } = props;\r\n\r\n\tconst bgColor = colorMapFn(props);\r\n\r\n\tconst scaleStyles = getScaleStyles(keyType, scale);\r\n\tconst classes = ['keyboard-key', `${keyType}-key`, keyType];\r\n\r\n\tconst colorStyles = {\r\n\t\tbackgroundColor: bgColor ? bgColor : ''\r\n\t}\r\n\r\n\tconst keyStyles = keyType === KeyType.White ? scaleStyles : { ...scaleStyles, ...colorStyles };\r\n\tconst labelStyles = keyType === KeyType.White ? colorStyles : {};\r\n\r\n\treturn (\r\n\t\t<StyledKey className={`${keyType}-key-container`}>\r\n\t\t\t<div className={classes.join(' ')} style={keyStyles} >\r\n\t\t\t\t<StyledKeyLabel className='keyboard-key-label' style={labelStyles} $color={bgColor}>\r\n\t\t\t\t\t{null}\r\n\t\t\t\t</StyledKeyLabel>\r\n\t\t\t</div>\r\n\t\t</StyledKey>\r\n\t);\r\n}\r\n\r\nexport default KeyboardKey;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport NumberUtils from \"../../core/general/Number.utils\";\r\nimport DEFAULT_PROPS, { BLACK_KEY_INDICES, IKeyboardProps, KeyType } from \"./Keyboard.defaults\";\r\nimport StyledKeyboard from \"./Keyboard.styles\";\r\nimport KeyboardKey from \"./KeyboardKey\";\r\n\r\nconst getKeyboardKeys = (props: IKeyboardProps, viewerWidth: number) => {\r\n\tconst { keyRange } = props;\r\n\tconst [lo, hi] = keyRange;\r\n\tconst keys = [];\r\n\r\n\tlet numBlackKeys = 0;\r\n\tlet numWhiteKeys = 0;\r\n\tfor (let i = lo; i <= hi; i++) {\r\n\t\tconst keyType = BLACK_KEY_INDICES.includes(NumberUtils.modulo(i, 12)) ? KeyType.White : KeyType.Black;\r\n\t\tif (keyType === KeyType.Black) { numBlackKeys++ } else { numWhiteKeys++; }\r\n\t}\r\n\r\n\tfor (let i = lo; i <= hi; i++) {\r\n\t\tconst keyType = BLACK_KEY_INDICES.includes(NumberUtils.modulo(i, 12)) ? KeyType.White : KeyType.Black;\r\n\r\n\t\tkeys.push(\r\n\t\t\t<KeyboardKey\r\n\t\t\t\tkeyType={keyType}\r\n\t\t\t\tkey={i}\r\n\t\t\t\tnoteIndex={i}\r\n\t\t\t\tscale={viewerWidth / numWhiteKeys}\r\n\t\t\t\t{...props}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n\treturn keys;\r\n}\r\n\r\nconst Keyboard: React.FC<IKeyboardProps> = (userProps) => {\r\n\r\n\tconst props = { ...DEFAULT_PROPS, ...userProps };\r\n\r\n\tconst [dims, setDims] = useState([128, 128]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst resetDimensions = (e) => {\r\n\t\t\tconst el = document.getElementById('keyboard');\r\n\t\t\tsetDims([el.clientWidth, el.clientHeight])\r\n\t\t}\r\n\t\tresetDimensions(null);\r\n\t\twindow.addEventListener('resize', resetDimensions);\r\n\t\treturn () => window.removeEventListener('resize', resetDimensions);\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<StyledKeyboard className='keyboard' id='keyboard'>\r\n\t\t\t{getKeyboardKeys(props, dims[0])}\r\n\t\t</StyledKeyboard>\r\n\t);\r\n}\r\n\r\nexport default Keyboard;\r\n"],"names":["tableStyles","css","props","theme","surface","bg","nav","text","inverted","SEMITONES","data","semitones","rootId","useRootId","root","useRoot","React","Table","styles","thead","cols","colSpan","content","tbody","map","d","i","model","modelType","ModelType","Chord","Scale","modelId","link","getModelRoute","getName","h","index","intervals","findIndex","ivl","pod","className","includes","undefined","notes","getSemitoneCol","styled","StyledDetailsCard","StyledCard","withConfig","secondary","getNoteCell","note","name","getOctave","getIntervalCell","interval","isFeatured","getPitchCell","getFrequency","getRatioCell","getRatio","octave","useRecoilValue","octaveState","hasNotes","n","Note","NumberUtils","$n","length","CardHeader","title","headerColIndicies","StyledGuitarCard","qp","URLSearchParams","Card","action","Link","to","toString","Icon","iconId","size","Fretboard","StyledModeCard","type","tags","find","t","Tag","modeType","modes","SCALE_PRESETS","p","key","StyledPianoCard","Keyboard","keyRange","DEFAULT_KEYBOARD_PROPS","StyledCollectionList","subchords","getSubchords","subscales","getSubscales","superchords","getSuperchords","superscales","getSuperscales","CollectionTable","CollectionList","CHORD_PRESETS","numerals","getAllNumerals","getNumeralParts","numeral","symbol","getShortName","StyledRootInput","active","OCTAVE_OPTIONS","x","id","pageProps","usePageProps","path","rootIndex","lastIndexOf","basePath","slice","rootKey","useRecoilState","setOctave","InputRow","label","y","activeClassName","NoteId","NOTE_PRESET_MAP","DropdownInput","options","value","setValue","o","StyledRoot","isEditingKeyState","isEditing","setIsEditing","toggle","ButtonInput","isLink","onClick","remove","sanitized","navigate","THEME","$isRootless","RootInput","StyledPodlistPage","PageLayout","pageContext","cl","getModelIdClass","clText","getModelIdText","podList","ColumnManager","tablet","RootCard","DetailsCard","RomanNumeralsCard","ModeCard","GrandStaff","GuitarCard","PianoCard","RelatedCard","StyledTable","getIsTypeOmit","Col","isHeader","ColTag","WrapperTag","Fragment","wrapperProps","Row","col","isConfig","hasOwnProperty","getIsConfig","colConfig","TableSection","rows","row","tfoot","colGroups","caption","cg","StyledFretLabel","$bgColor","$fgColor","bgColor","colorMapFn","Fret","tuning","stringIndex","fretIndex","showFretNumbers","showFretDots","classes","push","isLowString","isHighString","join","FretLabel","getDotsForFret","userProps","DEFAULT_FRETBOARD_PROPS","fretRange","lo","numFrets","numStrings","fretboardStyles","gridTemplateColumns","getFretRatios","gridTemplateRows","StyledFretboard","style","hi","allFrets","s","f","getFrets","TuningId","formatPreset","getPitch","noteId","TUNING_PRESET_MAP","Map","Standard","Flat","DoubleFlat","StandardSeven","StandardBass","DropD","DADGAD","Violin","OpenA","OpenB","OpenC","OpenD","OpenE","OpenF","OpenG","FRETBOARD_TUNING_VALUES","ArrayUtils","DOTTED_FRET_INDICES","FRET_SIZE_RATIO","Math","pow","isIntervalInVoicing","voicing","v","getDegree","Array","isArray","some","doesVoicingValueMatch","noteIndex","tryGetPodPairAtPitch","getColor","ratios","fretNumber","mod","KeyType","BLACK_KEY_INDICES","KEY__DIMS","StyledKey","$color","ColorUtils","StyledKeyLabel","keyType","scale","hideLabel","scaleStyles","width","height","right","getScaleStyles","colorStyles","backgroundColor","keyStyles","labelStyles","DEFAULT_PROPS","useState","dims","setDims","useEffect","resetDimensions","e","el","document","getElementById","clientWidth","clientHeight","window","addEventListener","removeEventListener","StyledKeyboard","viewerWidth","keys","numWhiteKeys","KeyboardKey","getKeyboardKeys"],"sourceRoot":""}