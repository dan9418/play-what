{"version":3,"file":"component---src-components-pages-pod-list-page-tsx-787fced2a50679c92088.js","mappings":"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","sources":["webpack://play-what/./src/components/collection/CollectionTable.tsx","webpack://play-what/./src/components/column-manager/ColumnManager.tsx","webpack://play-what/./src/components/breadcrumb-list/BreadcrumbList.tsx","webpack://play-what/./src/components/layout/PageTitle.tsx","webpack://play-what/./src/components/layout/Pane.tsx","webpack://play-what/./src/viewers/grand-staff/GrandStaff.tsx","webpack://play-what/./src/components/cards/DetailsCard.tsx","webpack://play-what/./src/components/cards/GuitarCard.tsx","webpack://play-what/./src/components/cards/ModeCard.tsx","webpack://play-what/./src/components/cards/PianoCard.tsx","webpack://play-what/./src/components/collection/CollectionList.tsx","webpack://play-what/./src/components/cards/RelatedCard.tsx","webpack://play-what/./src/components/cards/RomanNumeralsCard.tsx","webpack://play-what/./src/components/inputs/RootInput.tsx","webpack://play-what/./src/components/cards/RootCard.tsx","webpack://play-what/./src/components/pages/PodListPage.tsx","webpack://play-what/./src/viewers/fretboard/Fretboard.styles.tsx","webpack://play-what/./src/viewers/fretboard/FretLabel.tsx","webpack://play-what/./src/viewers/fretboard/Fretboard.tsx","webpack://play-what/./src/viewers/fretboard/Fretboard.tuning.ts","webpack://play-what/./src/viewers/fretboard/Fretboard.utils.ts"],"sourcesContent":["import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { useRoot, useRootSuffix } from \"../../contexts/PagePropsContext\";\r\nimport Chord from \"../../core/models/Chord\";\r\nimport { IModelConfig, ModelType } from \"../../core/models/Model.constants\";\r\nimport Scale from \"../../core/models/Scale\";\r\n\r\nconst StyledCollectionTable = styled.table`\r\n    width: 100%;\r\n    margin: auto;\r\n    border-collapse: collapse;\r\n    white-space: nowrap;\r\n\r\n    td {  \r\n        &:not(:first-child) {\r\n            font-size: 80%;\r\n        }\r\n    }\r\n\r\n    td, th {\r\n        line-height: 32px;\r\n        text-align: center;\r\n        \r\n        &:not(:first-child) {\r\n            width: 32px;\r\n            height: 32px;\r\n\r\n            display: none;\r\n            @media(min-width: 512px) {\r\n                display: table-cell;\r\n            }\r\n        }\r\n\r\n        &:first-child {\r\n            text-align: left;\r\n            padding: 0 8px;\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    td {\r\n        //border-right: 1px solid ${props => props.theme.utils.border};\r\n        //border-bottom: 1px solid ${props => props.theme.utils.border};\r\n        &.active {\r\n            background-color: ${props => props.theme.surface.bg};\r\n        }\r\n    }\r\n\r\n    thead {\r\n        text-transform: uppercase;\r\n        font-size: 80%;\r\n        \r\n        @media(max-width: 511px) {\r\n            display: none;\r\n        }\r\n        tr th {\r\n            background-color: ${props => props.theme.surface.nav};\r\n            color: ${({ theme }) => theme.text.inverted};\r\n        }\r\n        \r\n        th:first-child {\r\n            border-radius: 8px 0 0 8px;\r\n        }\r\n        th:last-child {\r\n            border-radius: 0 8px 8px 0;\r\n        }\r\n    }\r\n\r\n    a {\r\n        display: block;\r\n    }\r\n`;\r\n\r\nexport interface ICollectionTableProps {\r\n    data: IModelConfig[];\r\n    semitones?: number[];\r\n}\r\n\r\nconst SEMITONES = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\r\n\r\nconst CollectionTable: React.FC<ICollectionTableProps> = ({ data, semitones = [] }) => {\r\n    const rootSuffix = useRootSuffix();\r\n    const root = useRoot();\r\n    return (\r\n        <StyledCollectionTable>\r\n            <thead>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th colSpan={12}>{root ? 'Notes' : 'Intervals'}</th>\r\n                    {/*SEMITONES.map((h, i) => <th key={i}>{h}</th>)*/}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    data.map((d, i) => {\r\n                        const cl = d.modelType === ModelType.Chord ? Chord : Scale;\r\n                        const model = new cl(d.modelId, { root });\r\n\r\n                        return (\r\n                            <tr key={i}>\r\n                                <td>\r\n                                    <Link to={`/browse/${model.modelType}/${model.modelId}/${rootSuffix}`}>\r\n                                        {model.getShortName()}\r\n                                    </Link>\r\n                                </td>\r\n                                {SEMITONES.map((h, i) => {\r\n                                    const index = model.intervals.findIndex(ivl => ivl.pod[0] + 1 === h);\r\n                                    const className = semitones.includes(h) ? 'active' : '';\r\n                                    if (index < 0) return <td key={i} className={className} />;\r\n                                    const mod = root ? model.notes[index] : model.intervals[index];\r\n                                    return (\r\n                                        <td key={i} className={className}>\r\n                                            {mod.getName()}\r\n                                        </td>\r\n                                    );\r\n                                })}\r\n                            </tr>\r\n                        );\r\n                    })\r\n                }\r\n            </tbody>\r\n        </StyledCollectionTable>\r\n    );\r\n};\r\n\r\nexport default CollectionTable;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledColumnManager = styled.div`\r\n    display: grid;\r\n    gap: 16px;\r\n    grid-template-columns: 1fr;\r\n\r\n    ${({ $tablet }) => $tablet ? `\r\n        @media(min-width: 512px) {\r\n            grid-template-columns: ${$tablet.join(' ')}\r\n        }\r\n    ` : ''}\r\n\r\n    ${({ $desktop }) => $desktop ? `\r\n        @media(min-width: 1024px) {\r\n            grid-template-columns: ${$desktop.join(' ')}\r\n        }\r\n    ` : ``}\r\n   \r\n`;\r\n\r\nconst ColumnManager: React.FC<any> = ({ children, tablet, desktop }) => {\r\n    return (\r\n        <StyledColumnManager $tablet={tablet} $desktop={desktop}>\r\n            {children}\r\n        </StyledColumnManager >\r\n    );\r\n};\r\n\r\nexport default ColumnManager;\r\n","import { Link } from \"gatsby\";\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { usePageProps } from \"../../contexts/PagePropsContext\";\r\nimport Icon from \"../ui/Icon\";\r\n\r\nconst StyledBreadcrumbList = styled.ul`\r\n    font-size: 80%;\r\n    padding: 0 0 8px 0;\r\n    @media(min-width: 512px) {\r\n        font-size: 110%;\r\n        padding: 0 0 16px 0;\r\n    }\r\n\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    gap: 8px;\r\n    white-space: nowrap;\r\n    text-transform: capitalize;\r\n    svg {\r\n        margin-right: 8px;\r\n    }\r\n\r\n    span {\r\n        color: ${props => props.theme.text.secondary};\r\n    }\r\n`\r\n\r\nconst BreadcrumbList = () => {\r\n    const { path } = usePageProps();\r\n    let pieces = path.split('/');\r\n    const paths = [];\r\n    pieces.reduce((prev, cur, i, arr) => {\r\n        const path = `${prev}/${cur}`.replace('//', '/') || '/';\r\n        const isLink = !['root', 'practice', 'test', 'experimental'].includes(cur);\r\n        const text = i === 0 ? 'Home' : cur.replaceAll('-', ' ').replace(' sharp', '#').replace(' flat', 'b');\r\n\r\n        const Tag = isLink ? Link : 'span';\r\n        const to = isLink ? path : undefined;\r\n\r\n        paths.push(\r\n            <li key={i}>\r\n                {i > 0 && <Icon iconId=\"next\" size={10} color=\"grey\" />}\r\n                <Tag to={to}>{text}</Tag>\r\n            </li>\r\n        );\r\n        return path;\r\n    }, '/');\r\n    return <StyledBreadcrumbList>{paths.slice(0, paths.length - 1)}</StyledBreadcrumbList>;\r\n}\r\n\r\nexport default BreadcrumbList;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport BreadcrumbList from '../breadcrumb-list/BreadcrumbList';\r\nimport SEO from \"../utils/SEO\";\r\n\r\nconst StyledPageTitle = styled.div`\r\n    width: 100%;\r\n\r\n    .header {\r\n        border-bottom: 1px solid ${({ theme }) => theme.utils.border};    \r\n        width: 100%;\r\n        margin: auto;\r\n        padding-bottom: 8px;\r\n        @media(min-width: 512px) {\r\n            padding-bottom: 16px;\r\n        }\r\n\r\n        > h1 {\r\n            width: 100%;\r\n            font-size: 150%;\r\n            @media(min-width: 512px) {\r\n                font-size: 300%;\r\n            }\r\n            text-align: left;\r\n            color: ${({ theme }) => theme.text.primary};;\r\n        }\r\n\r\n        > h2 {\r\n            margin-top: 4px;\r\n            width: 100%;\r\n            text-align: left;\r\n            color: ${({ theme }) => theme.text.secondary};;\r\n            font-size: 80%;\r\n            @media(min-width: 512px) {\r\n                font-size: 100%;\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst PageTitle: React.FC<any> = ({ title, subtitle, action, children }) => {\r\n    return (\r\n        <>\r\n            <SEO title={title} />\r\n            <BreadcrumbList />\r\n            <StyledPageTitle>\r\n                <div className=\"header\">\r\n                    <h1>{title}</h1>\r\n                    {subtitle && <h2>{subtitle}</h2>}\r\n                    {action}\r\n                </div>\r\n                {children}\r\n            </StyledPageTitle>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledDoublePane = styled.div`\r\n\tdisplay: grid;\r\n\tgap: 16px;\r\n\tgrid-template-columns: 1fr;\r\n\t@media(min-width: 512px) {\r\n\t\tgrid-template-columns: 3fr 2fr;\r\n\t}\r\n`\r\n\r\nexport const StyledPane = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: 16px;\r\n\tmargin: 16px 0;\r\n`\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Card, { CardHeader } from '../../components/ui/Card';\r\n\r\nconst NOTES = [\r\n    {\r\n        note: 'F5',\r\n        staff: 'treble',\r\n        line: true\r\n    },\r\n    {\r\n        note: 'E5',\r\n        staff: 'treble',\r\n        line: false\r\n    },\r\n    {\r\n        note: 'D5',\r\n        staff: 'treble',\r\n        line: true\r\n    },\r\n    {\r\n        note: 'C5',\r\n        staff: 'treble',\r\n        line: false\r\n    },\r\n    {\r\n        note: 'B5',\r\n        staff: 'treble',\r\n        line: true\r\n    },\r\n    {\r\n        note: 'A5',\r\n        staff: 'treble',\r\n        line: false\r\n    },\r\n    {\r\n        note: 'G4',\r\n        staff: 'treble',\r\n        line: true\r\n    },\r\n    {\r\n        note: 'F4',\r\n        staff: 'treble',\r\n        line: false\r\n    },\r\n    {\r\n        note: 'E4',\r\n        staff: 'treble',\r\n        line: true\r\n    },\r\n    {\r\n        note: 'D4',\r\n        staff: 'treble',\r\n        line: false\r\n    },\r\n    {\r\n        note: 'C4',\r\n        staff: null,\r\n        line: true\r\n    },\r\n    {\r\n        note: 'B4',\r\n        staff: 'bass',\r\n        line: false\r\n    },\r\n    {\r\n        note: 'A4',\r\n        staff: 'bass',\r\n        line: true\r\n    },\r\n    {\r\n        note: 'G3',\r\n        staff: 'bass',\r\n        line: false\r\n    },\r\n    {\r\n        note: 'F3',\r\n        staff: 'bass',\r\n        line: true\r\n    },\r\n    {\r\n        note: 'E3',\r\n        staff: 'bass',\r\n        line: false\r\n    },\r\n    {\r\n        note: 'D3',\r\n        staff: 'bass',\r\n        line: true\r\n    },\r\n    {\r\n        note: 'C3',\r\n        staff: 'bass',\r\n        line: false\r\n    },\r\n    {\r\n        note: 'B3',\r\n        staff: 'bass',\r\n        line: true\r\n    },\r\n    {\r\n        note: 'A3',\r\n        staff: 'bass',\r\n        line: false\r\n    },\r\n    {\r\n        note: 'G2',\r\n        staff: 'bass',\r\n        line: true\r\n    },\r\n];\r\n\r\nconst StyledGrandStaff = styled.div`\r\n    .staff {\r\n        border-right: 4px solid black;\r\n        border-left: 4px solid black;\r\n    }\r\n\r\n    .note {\r\n        margin: auto;\r\n        width: 32px;\r\n        &.treble, &.bass {\r\n            width: 100%;\r\n        }\r\n        &.line {\r\n            border-top: 1px solid black;\r\n        }\r\n        &:not(.line) {\r\n            height: 12px;\r\n        }\r\n    }\r\n`\r\n\r\nconst GrandStaff = ({ model }) => {\r\n    return null;\r\n    return (\r\n        <StyledGrandStaff>\r\n            <Card >\r\n                <CardHeader title=\"Grand Staff\" />\r\n                <div className='staff'>\r\n                    {NOTES.map(n => <div className={`note ${n.note} ${n.line ? 'line' : ''} ${n.staff || ''}`} />)}\r\n                </div>\r\n            </Card>\r\n        </StyledGrandStaff>\r\n    );\r\n}\r\n\r\nexport default GrandStaff;\r\n","import React from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport NumberUtils from \"../../core/general/Number.utils\";\r\nimport Note from \"../../core/models/Note\";\r\nimport { octaveState } from \"../../state/state\";\r\nimport { CardHeader, StyledCard } from \"../ui/Card\";\r\n\r\nconst StyledDetailsCard = styled(StyledCard)`\r\n    .header {\r\n        display: none;\r\n        @media(min-width: 512px) {\r\n            display: unset;\r\n        }\r\n    }\r\n    table {\r\n        margin: auto;\r\n        border-collapse: collapse;\r\n\r\n        &.mobile {\r\n            display: table;\r\n            @media(min-width: 512px) {\r\n                display: none;\r\n            }\r\n        }\r\n        &.desktop {\r\n            display: none;\r\n            @media(min-width: 512px) {\r\n                display: table;\r\n            }\r\n            th {\r\n                display: none;\r\n            }\r\n        }\r\n\r\n        td, th {\r\n            padding: 4px;\r\n            @media(min-width: 512px) {\r\n                padding: 4px 8px;\r\n            }\r\n            text-align: center;\r\n        }\r\n\r\n        th {\r\n            text-transform: uppercase;\r\n            font-size: 80%;\r\n        }\r\n\r\n        .featured {\r\n            font-weight: bold;\r\n            font-size: 150%;\r\n            @media(min-width: 512px) {\r\n                font-size: 200%;\r\n            }\r\n        }\r\n\r\n        .interval {\r\n            font-size: 120%;\r\n            @media(min-width: 512px) {\r\n                font-size: 150%;\r\n            }\r\n        }\r\n\r\n        .ratio, .frequency {\r\n            color: ${props => props.theme.text.secondary};\r\n            font-size: 80%;\r\n            @media(min-width: 512px) {\r\n                font-size: 100%;\r\n            }\r\n        }\r\n\r\n        .root {\r\n            color: red;\r\n        }\r\n    }\r\n`;\r\n\r\nconst NoteCell = ({ note, i }) => {\r\n    if (!note) return null;\r\n    return (\r\n        <td className={`note featured ${i === 0 ? 'root' : ''}`}>{note.name}<sub>{note.getOctave()}</sub></td>\r\n    );\r\n};\r\n\r\nconst IntervalCell = ({ interval, isFeatured }) => {\r\n    return (\r\n        <td className={`interval ${isFeatured ? 'featured' : ''}`}>{interval.getName()}</td>\r\n    );\r\n};\r\n\r\nconst PitchCell = ({ note }) => {\r\n    if (!note) return null;\r\n    return (\r\n        <td className={`frequency`}>{note.getFrequency(true)}</td>\r\n    );\r\n};\r\n\r\nconst RatioCell = ({ interval }) => {\r\n    return (\r\n        <td className={`ratio`}>{interval.getRatio()}</td>\r\n    );\r\n};\r\n\r\nconst DetailsCard: React.FC<any> = ({ model }) => {\r\n    const intervals = model.intervals;\r\n    const octave = useRecoilValue(octaveState);\r\n    const notes = model.notes && model.notes.map(n => new Note([\r\n        (octave - 4) * 12 + NumberUtils.modulo(n.pod[0], 12),\r\n        n.pod[1]\r\n    ]));\r\n\r\n    if (!intervals && !notes) return null;\r\n\r\n    return (\r\n        <StyledDetailsCard $n={intervals.length}>\r\n            <CardHeader title={notes ? 'Notes' : 'Intervals'} />\r\n            <table className=\"mobile\">\r\n                <thead>\r\n                    <tr>\r\n                        {notes && <th>Note</th>}\r\n                        <th>Interval</th>\r\n                        {notes && <th>Pitch</th>}\r\n                        <th>Ratio</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {intervals.map((ivl, i) => {\r\n                        const note = notes && notes[i];\r\n                        return (\r\n                            <tr key={ivl.modelId}>\r\n                                <NoteCell note={note} i={i} />\r\n                                <IntervalCell interval={ivl} isFeatured={!note} />\r\n                                <PitchCell note={note} />\r\n                                <RatioCell interval={ivl} />\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n            <table className=\"desktop\">\r\n                <tbody>\r\n                    {notes && <tr>\r\n                        <th>Note</th>\r\n                        {notes.map((note, i) => <NoteCell note={note} key={i} i={i} />)}\r\n                    </tr>}\r\n                    <tr>\r\n                        <th>Interval</th>\r\n                        {intervals.map((ivl, i) => <IntervalCell interval={ivl} key={i} isFeatured={!notes} />)}\r\n                    </tr>\r\n                    {notes && <tr>\r\n                        <th>Pitch</th>\r\n                        {notes.map((note, i) => <PitchCell note={note} key={i} />)}\r\n                    </tr>}\r\n                    <tr>\r\n                        <th>Ratio</th>\r\n                        {intervals.map((ivl, i) => <RatioCell interval={ivl} key={i} />)}\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </StyledDetailsCard >\r\n    );\r\n};\r\n\r\nexport default DetailsCard;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport Fretboard from \"../../viewers/fretboard/Fretboard\";\r\nimport Card from \"../ui/Card\";\r\n\r\nconst StyledGuitarCard = styled.div`\r\n\r\n`;\r\n\r\n\r\nconst GuitarCard: React.FC<any> = ({ model }) => {\r\n\r\n    if (!model.root || !model.intervals) return null;\r\n\r\n    const qp = new URLSearchParams({\r\n        modelId: model.modelId,\r\n        modelType: model.modelType,\r\n        rootId: model.root.modelId,\r\n    });\r\n\r\n    return (\r\n        <Card title=\"Guitar\" action={<Link to={`/view/fretboard?${qp.toString()}`}>Edit</Link>}>\r\n            <StyledGuitarCard>\r\n                <Fretboard\r\n                    model={model}\r\n                />\r\n            </StyledGuitarCard>\r\n        </Card >\r\n    );\r\n};\r\n\r\nexport default GuitarCard;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { useRootSuffix } from \"../../contexts/PagePropsContext\";\r\nimport { Tag } from \"../../core/models/Model.constants\";\r\nimport { SCALE_PRESETS } from \"../../core/models/Model.presets\";\r\nimport Card from \"../ui/Card\";\r\n\r\nconst StyledModeCard = styled.div`\r\n    ul {\r\n        display: flex;\r\n        justify-content: space-around;\r\n        gap: 4px;\r\n        flex-wrap: wrap;\r\n        a {\r\n            padding: 4px;\r\n            &.active {\r\n                font-weight: bold;\r\n                text-decoration: underline;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst ModeCard: React.FC<any> = ({ model }) => {\r\n\r\n    const rootSuffix = useRootSuffix();\r\n\r\n    const type = model.tags.find(t =>\r\n        t === Tag.Diatonic ||\r\n        t === Tag.Pentatonic ||\r\n        t === Tag.MelodicMode ||\r\n        t === Tag.HarmonicMode\r\n    );\r\n\r\n    if (!type) return null;\r\n\r\n    let modeType = '';\r\n    switch (type) {\r\n        case Tag.Diatonic:\r\n            modeType = 'Diatonic';\r\n            break;\r\n        case Tag.Pentatonic:\r\n            modeType = 'Pentatonic';\r\n            break;\r\n        case Tag.MelodicMode:\r\n            modeType = 'Melodic Minor';\r\n            break;\r\n        case Tag.HarmonicMode:\r\n            modeType = 'Harmonic Minor';\r\n            break;\r\n    }\r\n\r\n    const modes = SCALE_PRESETS.filter(p => p.tags.includes(type));\r\n\r\n    return (\r\n        <Card\r\n            title={`${modeType} Modes`}\r\n        >\r\n            <StyledModeCard>\r\n                <ul>\r\n                    {modes.map(n => (\r\n                        <li key={n.modelId}>\r\n                            <Link to={`/browse/${n.modelType}/${n.modelId}/${rootSuffix}`} className={model.modelId === n.modelId ? 'active' : ''}>{n.name}</Link>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </StyledModeCard>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ModeCard;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport Keyboard from \"../../viewers/keyboard/Keyboard\";\r\nimport DEFAULT_KEYBOARD_PROPS from \"../../viewers/keyboard/Keyboard.defaults\";\r\nimport Card from \"../ui/Card\";\r\n\r\nconst StyledPianoCard = styled.div`\r\n   \r\n`;\r\n\r\n\r\nconst PianoCard: React.FC<any> = ({ model }) => {\r\n\r\n    if (!model.root || !model.intervals) return null;\r\n\r\n    const qp = new URLSearchParams({\r\n        modelId: model.modelId,\r\n        modelType: model.modelType,\r\n        rootId: model.root.modelId,\r\n    });\r\n\r\n    return (\r\n        <Card title=\"Guitar\" action={<Link to={`/view/keyboard?${qp.toString()}`}>Edit</Link>}>\r\n            <StyledPianoCard>\r\n                <Keyboard\r\n                    keyRange={DEFAULT_KEYBOARD_PROPS.keyRange as [number, number]}\r\n                    model={model}\r\n                />\r\n            </StyledPianoCard>\r\n        </Card >\r\n    );\r\n};\r\n\r\nexport default PianoCard;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { useRoot, useRootSuffix } from \"../../contexts/PagePropsContext\";\r\nimport Chord from \"../../core/models/Chord\";\r\nimport { ModelType } from \"../../core/models/Model.constants\";\r\nimport Scale from \"../../core/models/Scale\";\r\n\r\nconst StyledCollectionList = styled.ul`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 8px;\r\n\r\n    a {\r\n        padding: 2px; \r\n    }\r\n    li {\r\n        &:not(:last-child) {\r\n            ::after {\r\n                content: ', ';\r\n                color: ${props => props.theme.text.secondary};\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\ninterface ICollectionListProps {\r\n    data: any[]\r\n}\r\n\r\nconst CollectionList: React.FC<ICollectionListProps> = ({ data }) => {\r\n    const rootSuffix = useRootSuffix();\r\n    const root = useRoot();\r\n    return (\r\n        <StyledCollectionList>\r\n            {\r\n                data.map(d => {\r\n                    const cl = d.modelType === ModelType.Chord ? Chord : Scale;\r\n                    // @ts-ignore\r\n                    const model = new cl(d.modelId, { root });\r\n\r\n                    return (\r\n                        <li key={d.modelId}>\r\n                            <Link to={`/browse/${d.modelType}/${d.modelId}/${rootSuffix}`}>\r\n                                {model.name}\r\n                            </Link>\r\n                        </li>\r\n                    );\r\n                })\r\n            }\r\n        </StyledCollectionList>\r\n    );\r\n};\r\n\r\nexport default CollectionList;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { useRootSuffix } from \"../../contexts/PagePropsContext\";\r\nimport { ModelType } from \"../../core/models/Model.constants\";\r\nimport { CHORD_PRESETS, NOTE_PRESETS, SCALE_PRESETS } from \"../../core/models/Model.presets\";\r\nimport CollectionList from \"../collection/CollectionList\";\r\nimport CollectionTable from \"../collection/CollectionTable\";\r\nimport Card from \"../ui/Card\";\r\n\r\nconst RelatedCard: React.FC<any> = ({ model }) => {\r\n\r\n    const rootSuffix = useRootSuffix();\r\n\r\n    const subchords = model.getSubchords();\r\n    const subscales = model.getSubscales();\r\n    const superchords = model.getSuperchords();\r\n    const superscales = model.getSuperscales();\r\n\r\n    const semitones = model.intervals.map(ivl => ivl.pod[0] + 1);\r\n\r\n    return (\r\n        <>\r\n\r\n            {false && <Card title=\"Other Roots\">\r\n                <ul>\r\n                    {NOTE_PRESETS.map(s => (\r\n                        <li key={s.modelId}><Link to={`/browse/chords/${model.modelId}/${s.modelId}/${rootSuffix}`}>{s.name} {/*model.name*/}</Link></li>\r\n                    ))}\r\n                </ul>\r\n            </Card>}\r\n\r\n            {subchords.length > 0 &&\r\n                <Card title=\"Child Chords\">\r\n                    <CollectionTable data={subchords} semitones={semitones} />\r\n                </Card>\r\n            }\r\n            {superchords.length > 0 &&\r\n                <Card title=\"Parent Chords\">\r\n                    <CollectionTable data={superchords} semitones={semitones} />\r\n                </Card>\r\n            }\r\n            {subscales.length > 0 &&\r\n                <Card title=\"Child Scales\">\r\n                    <CollectionTable data={subscales} semitones={semitones} />\r\n                </Card>\r\n            }\r\n            {superscales.length > 0 &&\r\n                <Card title=\"Parent Scales\">\r\n                    <CollectionTable data={superscales} semitones={semitones} />\r\n                </Card>\r\n            }\r\n            {model.modelType === ModelType.Chord &&\r\n                <Card title=\"Other Chords\">\r\n                    <CollectionList data={CHORD_PRESETS} />\r\n                </Card>\r\n            }\r\n            {model.modelType === ModelType.Scale &&\r\n                <Card title=\"Other Scales\">\r\n                    <CollectionList data={SCALE_PRESETS} />\r\n                </Card>\r\n            }\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RelatedCard;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport Card from \"../ui/Card\";\r\n\r\nconst StyledRomanNumeralsCard = styled.div`\r\n    table {\r\n        border-collapse: collapse;\r\n        width: 100%;\r\n\r\n        th {\r\n            //color: ${props => props.theme.brand.accent};\r\n            &:first-child {\r\n                text-align: right;\r\n            }\r\n            padding: 4px;\r\n        }\r\n        \r\n        td {\r\n            padding: 4px;\r\n            text-align: center;\r\n        }\r\n\r\n        .numeral td {\r\n            font-size: 160%;\r\n            font-family: serif;\r\n        }\r\n    }\r\n\r\n    sup {\r\n        font-size: 80%;\r\n    }\r\n`;\r\n\r\nconst RomanNumeralsCard: React.FC<any> = ({ model }) => {\r\n\r\n    const numerals = model.getAllNumerals();\r\n\r\n    if (!numerals.length) return null;\r\n\r\n    return (\r\n        <Card\r\n            title=\"Roman Numerals\"\r\n        >\r\n            <StyledRomanNumeralsCard>\r\n                <table>\r\n                    <tbody>\r\n                        <tr className=\"numeral\">\r\n                            <th>Numeral</th>\r\n                            {numerals.map((n, i) => {\r\n                                const [numeral, symbol] = n.getNumeralParts(i + 1)\r\n                                return (\r\n                                    <td key={i} className=\"numeral\">\r\n                                        {numeral}\r\n                                        <sup className=\"symbol\">{symbol}</sup>\r\n                                    </td>\r\n                                );\r\n                            })}\r\n                        </tr>\r\n                        <tr>\r\n                            <th>Degree</th>\r\n                            {numerals.map((n, i) => (\r\n                                <th key={i}>\r\n                                    {i + 1}\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            {numerals.map((n, i) => (\r\n                                <td key={i}>\r\n                                    <Link to={`/browse/${n.modelType}/${n.modelId}/${n.root ? `root/${n.root.modelId}` : ''}`}>{n.getShortName()}</Link>\r\n                                </td>\r\n                            ))}\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </StyledRomanNumeralsCard>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default RomanNumeralsCard;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport styled from 'styled-components';\r\nimport { usePageProps, useRoot } from \"../../contexts/PagePropsContext\";\r\nimport { NoteId } from \"../../core/models/Model.constants\";\r\nimport { NOTE_PRESET_MAP } from \"../../core/models/Model.presets\";\r\nimport { octaveState } from \"../../state/state\";\r\nimport InputRow from \"../ui/InputRow\";\r\nimport DropdownInput from \"./DropdownInput\";\r\n\r\nconst StyledRootInput = styled.div`\r\n    display: grid;\r\n    grid-template-rows: repeat(3, 1fr);\r\n    width: 100%;\r\n\r\n    @media(min-width: 512px) {\r\n\r\n    }\r\n\r\n    .spelling, .accidental {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        gap: 4px;\r\n    }\r\n\r\n    .accidental > a:nth-child(2) {\r\n        width: 64px\r\n    }\r\n\r\n    a {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n\r\n        height: 32px;\r\n        width: 32px;\r\n        border-radius: 4px;\r\n\r\n        &:hover, &.active {\r\n            background-color: ${props => props.theme.action.active};\r\n            color: white;\r\n        }\r\n    }\r\n`;\r\n\r\nconst OCTAVE_OPTIONS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map((x, i) => ({ id: i + 1, name: i + 1 }))\r\n\r\nconst RootInput: React.FC<any> = () => {\r\n    const root = useRoot();\r\n    const pageProps = usePageProps();\r\n    const { path } = pageProps;\r\n\r\n    const rootIndex = pageProps.path.lastIndexOf('root');\r\n    const basePath = root ?\r\n        path.slice(0, rootIndex) :\r\n        path;\r\n    const rootKey = root ?\r\n        path.slice(rootIndex + 5, rootIndex + 6) :\r\n        path;\r\n\r\n    const [octave, setOctave] = useRecoilState(octaveState);\r\n\r\n    return (\r\n        <StyledRootInput>\r\n            <InputRow label=\"Spelling\" y>\r\n                <div className=\"spelling\">\r\n                    <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.C}`} >{NOTE_PRESET_MAP.get(NoteId.C).name}</Link>\r\n                    <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.D}`} >{NOTE_PRESET_MAP.get(NoteId.D).name}</Link>\r\n                    <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.E}`} >{NOTE_PRESET_MAP.get(NoteId.E).name}</Link>\r\n                    <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.F}`} >{NOTE_PRESET_MAP.get(NoteId.F).name}</Link>\r\n                    <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.G}`} >{NOTE_PRESET_MAP.get(NoteId.G).name}</Link>\r\n                    <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.A}`} >{NOTE_PRESET_MAP.get(NoteId.A).name}</Link>\r\n                    <Link activeClassName=\"active\" to={`${basePath}root/${NoteId.B}`} >{NOTE_PRESET_MAP.get(NoteId.B).name}</Link>\r\n                </div>\r\n            </InputRow>\r\n            {root && (\r\n                <>\r\n                    <InputRow label=\"Accidental\" y>\r\n                        <div className=\"accidental\">\r\n                            <Link activeClassName=\"active\" to={`${basePath}root/${rootKey}-flat`} >b</Link>\r\n                            <Link activeClassName=\"active\" to={`${basePath}root/${rootKey}`} >none</Link>\r\n                            <Link activeClassName=\"active\" to={`${basePath}root/${rootKey}-sharp`} >#</Link>\r\n                        </div>\r\n                    </InputRow>\r\n                    <InputRow label=\"Octave\" y>\r\n                        <DropdownInput options={OCTAVE_OPTIONS} value={{ id: octave }} setValue={o => setOctave(o.id)} />\r\n                    </InputRow>\r\n                </>\r\n            )}\r\n        </StyledRootInput>\r\n    );\r\n};\r\n\r\nexport default RootInput;\r\n","import { navigate } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport styled from 'styled-components';\r\nimport { usePageProps, useRoot } from \"../../contexts/PagePropsContext\";\r\nimport { isEditingKeyState, octaveState } from \"../../state/state\";\r\nimport ButtonInput from \"../inputs/ButtonInput\";\r\nimport RootInput from \"../inputs/RootInput\";\r\nimport Card from \"../ui/Card\";\r\n\r\nconst StyledRoot = styled.div`\r\n    margin-top: 8px;\r\n    .preview {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        font-size: 300%;\r\n    }\r\n    .rootless {\r\n        margin: 8px 0 16px;\r\n    }\r\n`;\r\n\r\nconst RootCard: React.FC<any> = () => {\r\n    const root = useRoot();\r\n    const pageProps = usePageProps();\r\n    const [octave, setOctave] = useRecoilState(octaveState);\r\n    const [isEditing, setIsEditing] = useRecoilState(isEditingKeyState);\r\n\r\n    const modelType = pageProps.path.includes('chord') ? 'chord' : 'scale';\r\n\r\n    const onClear = () => {\r\n        const rootIndex = pageProps.path.lastIndexOf('root');\r\n        const sanitized = rootIndex === -1 ?\r\n            pageProps.path :\r\n            pageProps.path.slice(0, rootIndex);\r\n        navigate(sanitized);\r\n    }\r\n\r\n    const toggle = (\r\n        <ButtonInput isLink onClick={() => setIsEditing(!isEditing)}>\r\n            {isEditing ? 'Done' : 'Edit'}\r\n        </ButtonInput>\r\n    );\r\n\r\n    const remove = root ? (\r\n        <ButtonInput isLink onClick={onClear}>\r\n            Remove\r\n        </ButtonInput>\r\n    ) : null;\r\n\r\n    return (\r\n        <Card title=\"Root\" action={root && toggle}>\r\n            <StyledRoot>\r\n                {!root && (\r\n                    <div className=\"rootless\">\r\n                        <b>This {modelType} does not have a root.</b>\r\n                        <br />\r\n                        Please select a root to see the notes.\r\n                    </div>\r\n                )}\r\n                {(isEditing || !root) && (\r\n                    <RootInput />\r\n                )}\r\n\r\n                {(!isEditing && root) && (\r\n                    <div className=\"preview\">\r\n                        <b>{root.name}</b>\r\n                        <sub>{octave}</sub>\r\n                    </div>\r\n                )}\r\n            </StyledRoot>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default RootCard;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { useRoot } from \"../../contexts/PagePropsContext\";\r\nimport { getModelIdClass, getModelIdText, ModelType } from \"../../core/models/Model.constants\";\r\nimport GrandStaff from \"../../viewers/grand-staff/GrandStaff\";\r\nimport DetailsCard from \"../cards/DetailsCard\";\r\nimport GuitarCard from \"../cards/GuitarCard\";\r\nimport ModeCard from \"../cards/ModeCard\";\r\nimport PianoCard from \"../cards/PianoCard\";\r\nimport RelatedCard from \"../cards/RelatedCard\";\r\nimport RomanNumeralsCard from \"../cards/RomanNumeralsCard\";\r\nimport RootCard from \"../cards/RootCard\";\r\nimport ColumnManager from \"../column-manager/ColumnManager\";\r\nimport { StyledPageBody } from \"../layout/PageBody\";\r\nimport PageTitle from \"../layout/PageTitle\";\r\nimport { StyledPane } from \"../layout/Pane\";\r\n\r\nconst StyledPodlistPage = styled(StyledPageBody)`\r\n\r\n`;\r\n\r\ninterface IPodListPageProps {\r\n    pageContext: any;\r\n}\r\n\r\nconst PodlistPage: React.FC<IPodListPageProps> = props => {\r\n\r\n    const { modelType, modelId } = props.pageContext;\r\n    const root = useRoot();\r\n\r\n    const cl = getModelIdClass(modelType);\r\n    const clText = getModelIdText(modelType);\r\n\r\n    const podList = new cl(modelId, { root });\r\n    const title = `${podList.name} ${clText}`;\r\n\r\n    //const subtitle = podList.aliases.length ? `Also known as ${podList.aliases.join(', ')}` : 'Podlist';\r\n\r\n    return (\r\n        <StyledPodlistPage>\r\n            <PageTitle title={title} />\r\n            <StyledPane>\r\n                <ColumnManager tablet={['300px', 'auto']}>\r\n                    <RootCard />\r\n                    <DetailsCard model={podList} />\r\n                </ColumnManager>\r\n\r\n                {modelType === ModelType.Scale && <RomanNumeralsCard model={podList} />}\r\n                {modelType === ModelType.Scale && <ModeCard model={podList} />}\r\n                <GrandStaff model={podList} />\r\n                <ColumnManager tablet={['1fr', '1fr']}>\r\n                    <GuitarCard model={podList} />\r\n                    <PianoCard model={podList} />\r\n                </ColumnManager>\r\n                <RelatedCard model={podList} />\r\n            </StyledPane>\r\n        </StyledPodlistPage >\r\n    );\r\n};\r\n\r\nexport default PodlistPage;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledFretboard = styled.div`\r\n    display: inline-grid;\r\n\twidth: 100%;\r\n\tbackground-image: radial-gradient(ellipse, #E8DBB8 0%, #D0B27C 100%);\r\n\tfont-size: 90%;\r\n\tmargin: 16px 0;\r\n\r\n    .fret {\r\n        display: inline-flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        position: relative;\r\n        border-right: 2px solid darkgrey;\r\n    }\r\n\r\n    .fret.open {\r\n        border-right: 3px solid grey;\r\n        background-color: #D0B27C;;\r\n    }\r\n\r\n    /* Used to maintain aspect ratio */\r\n\r\n    .fret::before {\r\n        content: \"\";\r\n        display: block;\r\n        height: 0;\r\n        width: 0;\r\n        margin-top: calc(1/2 * 100%);\r\n    }\r\n\r\n    /* Fret String */\r\n\r\n    .fret-string {\r\n        border-top: 1px solid grey;\r\n        width: 100%;\r\n    }\r\n\r\n    /* Fret Numbers */\r\n\r\n    .fret-number {\r\n        position: absolute;\r\n        bottom: 100%;\r\n    }\r\n\r\n    /* Fret Dots */\r\n\r\n    .fret-dots {\r\n        position: absolute;\r\n        top: 95%;\r\n        font-size: 16px;\r\n        white-space: nowrap;\r\n    }\r\n\r\n    .fret-number, .fret-dots {\r\n        color: #888;\r\n    }\r\n`;\r\n\r\nexport default StyledFretboard;\r\n","\r\nimport * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { IFretProps } from \"./Fretboard.utils\";\r\n\r\nconst StyledFretLabel = styled.div`\r\n\tposition: absolute;\r\n\theight: 60%;\r\n\taspect-ratio: 1;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tborder-radius: 100%;\r\n\tbackground-color: ${({ $bgColor }) => $bgColor ? $bgColor : 'transparent'};\r\n\tcolor: ${({ $fgColor }) => $fgColor ? $fgColor : ''};\r\n\r\n\tcursor: pointer;\r\n\t&:hover {\r\n\t\theight: 80%;\r\n\t}\r\n`;\r\n\r\n\r\nconst FretLabel: React.FC<IFretProps> = props => {\r\n\r\n\tconst bgColor = props.colorMapFn(props);\r\n\r\n\tlet fgColor = 'white';\r\n\r\n\treturn (\r\n\t\t<StyledFretLabel $bgColor={bgColor} $fgColor={fgColor} onClick={null} className=\"fret-label\">\r\n\t\t\t{null}\r\n\t\t</StyledFretLabel>\r\n\t);\r\n};\r\n\r\nexport default FretLabel;\r\n","import * as React from \"react\";\r\nimport StyledFretboard from \"./Fretboard.styles\";\r\nimport { DEFAULT_FRETBOARD_PROPS, getDotsForFret, getFretRatios, IFretboardProps, IFretProps } from \"./Fretboard.utils\";\r\nimport FretLabel from \"./FretLabel\";\r\n\r\nexport const Fret: React.FC<IFretProps> = props => {\r\n\r\n\tconst { tuning, stringIndex, fretIndex, showFretNumbers, showFretDots } = props;\r\n\r\n\tconst classes = ['fret'];\r\n\tif (fretIndex === 0)\r\n\t\tclasses.push('open');\r\n\r\n\tconst isLowString = stringIndex === tuning.length - 1;\r\n\tconst isHighString = stringIndex === 0;\r\n\r\n\treturn (\r\n\t\t<div className={classes.join(' ')}>\r\n\t\t\t<div className=\"fret-number\">\r\n\t\t\t\t{showFretNumbers && isHighString && fretIndex > 0 && fretIndex}\r\n\t\t\t</div>\r\n\t\t\t<div className='fret-string' />\r\n\t\t\t<FretLabel {...props} />\r\n\t\t\t<div className=\"fret-dots\">\r\n\t\t\t\t{showFretDots && isLowString && fretIndex > 0 && getDotsForFret(fretIndex)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst getFrets = (props: IFretboardProps) => {\r\n\tconst { fretRange, tuning } = props;\r\n\tconst [lo, hi] = fretRange;\r\n\r\n\tconst allFrets = [];\r\n\tfor (let s = 0; s < tuning.length; s++) {\r\n\t\tfor (let f = lo; f <= hi; f++) {\r\n\t\t\tallFrets.push(\r\n\t\t\t\t<Fret\r\n\t\t\t\t\tkey={`s${s}-f${f}`}\r\n\t\t\t\t\tstringIndex={s}\r\n\t\t\t\t\tfretIndex={f}\r\n\t\t\t\t\ttuning={tuning}\r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\treturn allFrets;\r\n};\r\n\r\nconst Fretboard: React.FC<IFretboardProps> = (userProps) => {\r\n\tconst props = { ...DEFAULT_FRETBOARD_PROPS, ...userProps };\r\n\r\n\tconst [lo, hi] = props.fretRange;\r\n\tconst numFrets = hi - lo + 1;\r\n\tconst numStrings = props.tuning.length;\r\n\tconst gridTemplateColumns = getFretRatios(numFrets).map(n => n + 'fr').join(' ');\r\n\tconst gridTemplateRows = `repeat(${numStrings}, 1fr)`;\r\n\tconst fretboardStyles = {\r\n\t\tgridTemplateColumns,\r\n\t\tgridTemplateRows\r\n\t};\r\n\r\n\treturn (\r\n\t\t<StyledFretboard className='fretboard' style={fretboardStyles}>\r\n\t\t\t{getFrets(props)}\r\n\t\t</StyledFretboard>\r\n\t);\r\n};\r\n\r\nexport default Fretboard;\r\n","import ArrayUtils from \"../../core/general/Array.utils\";\r\nimport Note from '../../core/models/Note';\r\nimport { NoteId } from './../../core/models/Model.constants';\r\n\r\nexport enum TuningId {\r\n    Standard = 'standard',\r\n    StandardSeven = 'standard-seven',\r\n    StandardBass = 'standard-bass',\r\n    Flat = 'flat',\r\n    DoubleFlat = 'double-flat',\r\n    DropD = 'drop-d',\r\n    DADGAD = 'dadgad',\r\n    Banjo = 'banjo',\r\n    Violin = 'violin',\r\n    OpenA = 'open-a',\r\n    OpenB = 'open-b',\r\n    OpenC = 'open-c',\r\n    OpenD = 'open-d',\r\n    OpenE = 'open-e',\r\n    OpenF = 'open-f',\r\n    OpenG = 'open-g',\r\n}\r\n\r\nexport interface ITuning {\r\n    id: TuningId;\r\n    name: string;\r\n    value: number[]\r\n}\r\n\r\nconst formatPreset = (id: TuningId, name: string, value: number[]): ITuning => ({\r\n    id,\r\n    name,\r\n    value\r\n});\r\n\r\nconst getPitch = (noteId: NoteId, octave: number): number => Note.getNote(noteId, octave).pod[0];\r\n\r\nexport const TUNING_PRESET_MAP = new Map<TuningId, ITuning>([\r\n    [TuningId.Standard, formatPreset(\r\n        TuningId.Standard,\r\n        'Standard',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.E, 3)\r\n        ]\r\n    )],\r\n    [TuningId.Flat, formatPreset(\r\n        TuningId.Flat,\r\n        'Flat',\r\n        [\r\n            getPitch(NoteId.Eb, 5),\r\n            getPitch(NoteId.Bb, 4),\r\n            getPitch(NoteId.Gb, 4),\r\n            getPitch(NoteId.Db, 4),\r\n            getPitch(NoteId.Ab, 3),\r\n            getPitch(NoteId.Eb, 3)\r\n        ]\r\n    )],\r\n    [TuningId.DoubleFlat, formatPreset(\r\n        TuningId.DoubleFlat,\r\n        'Double Flat',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.F, 4),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    [TuningId.StandardSeven, formatPreset(\r\n        TuningId.StandardSeven,\r\n        'Standard 7-String',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.E, 3),\r\n            getPitch(NoteId.B, 3)\r\n        ]\r\n    )],\r\n    [TuningId.StandardBass, formatPreset(\r\n        TuningId.StandardBass,\r\n        'Standard Bass',\r\n        [\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.D, 3),\r\n            getPitch(NoteId.A, 2),\r\n            getPitch(NoteId.E, 2)\r\n        ]\r\n    )],\r\n    [TuningId.DropD, formatPreset(\r\n        TuningId.DropD,\r\n        'Drop D',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    [TuningId.DADGAD, formatPreset(\r\n        TuningId.DADGAD,\r\n        'DADGAD',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    // Unconfirmed\r\n    [TuningId.Banjo, formatPreset(\r\n        TuningId.Banjo,\r\n        'Banjo',\r\n        [\r\n            getPitch(NoteId.G, 5),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    // Unconfirmed\r\n    [TuningId.Violin, formatPreset(\r\n        TuningId.Violin,\r\n        'Violin',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.G, 4)\r\n        ]\r\n    )],\r\n    [TuningId.OpenA, formatPreset(\r\n        TuningId.OpenA,\r\n        'Open A',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.E, 4),\r\n            getPitch(NoteId.Cs, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.E, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenB, formatPreset(\r\n        TuningId.OpenB,\r\n        'Open B',\r\n        [\r\n            getPitch(NoteId.Ds, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.Fs, 4),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.Fs, 3),\r\n            getPitch(NoteId.B, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenC, formatPreset(\r\n        TuningId.OpenC,\r\n        'Open C',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.C, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenD, formatPreset(\r\n        TuningId.OpenD,\r\n        'Open D',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.Fs, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenE, formatPreset(\r\n        TuningId.OpenE,\r\n        'Open E',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.Gs, 4),\r\n            getPitch(NoteId.E, 4),\r\n            getPitch(NoteId.B, 3),\r\n            getPitch(NoteId.E, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenF, formatPreset(\r\n        TuningId.OpenF,\r\n        'Open F',\r\n        [\r\n            getPitch(NoteId.F, 5),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.F, 4),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.F, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenG, formatPreset(\r\n        TuningId.OpenG,\r\n        'Open G',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )]\r\n]);\r\n\r\nexport const FRETBOARD_TUNING_VALUES = ArrayUtils.mapToArray(TUNING_PRESET_MAP);\r\n","import Chord from '../../core/models/Chord';\r\nimport IntervalSpan from '../../core/models/Interval';\r\nimport { IModelConfig } from '../../core/models/Model.constants';\r\nimport Note from '../../core/models/Note';\r\nimport Scale from '../../core/models/Scale';\r\nimport { ITuning, TuningId, TUNING_PRESET_MAP } from './Fretboard.tuning';\r\nimport { IVoicing } from './Fretboard.voicing';\r\n\r\nexport interface IFretLabelProps {\r\n\tnote?: Note;\r\n\tcolor?: string;\r\n\tfreq?: number;\r\n}\r\n\r\nexport interface IFretboardProps {\r\n\tfretRange?: [number, number];\r\n\tshowFretDots?: boolean;\r\n\tshowFretNumbers?: boolean;\r\n\tcolorMapFn?: (fretProps: IFretProps) => string | undefined;\r\n\tvoicing?: IVoicing,\r\n\ttuning?: number[]; // ITuning,\r\n\tmodel?: Chord | Scale;\r\n}\r\n\r\nexport interface IFretProps extends IFretboardProps {\r\n\tstringIndex: number;\r\n\tfretIndex: number;\r\n}\r\n\r\nexport const DOTTED_FRET_INDICES = [true, false, false, true, false, true, false, true, false, true, false, false];\r\n\r\nexport const FRET_SIZE_RATIO = Math.pow((1 / 2), (1 / 12));\r\n\r\nconst isIntervalInVoicing = (interval: IntervalSpan, voicing: IVoicing, stringIndex: number) => {\r\n\tif (!voicing || !voicing.value) return true;\r\n\tconst v = voicing.value[stringIndex];\r\n\tconst d = interval.getDegree();\r\n\tif (Array.isArray(v)) {\r\n\t\treturn v.some(n => doesVoicingValueMatch(d, n));\r\n\t}\r\n\telse if (typeof v === 'number') {\r\n\t\treturn doesVoicingValueMatch(d, v);\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nexport const getFretColor = (props: IFretProps): string | undefined => {\r\n\tconst { stringIndex, fretIndex, tuning, model, voicing } = props;\r\n\tconst noteIndex = tuning[stringIndex] + fretIndex;\r\n\tconst [interval, note] = model.tryGetPodPairAtPitch(noteIndex);\r\n\r\n\tif (!note) return;\r\n\r\n\tif (voicing && !isIntervalInVoicing(interval, voicing, stringIndex)) {\r\n\t\treturn `#00000033`\r\n\t}\r\n\r\n\treturn interval.getColor();\r\n}\r\n\r\nexport const DEFAULT_FRETBOARD_PROPS: IFretboardProps = {\r\n\tfretRange: [1, 12],\r\n\ttuning: TUNING_PRESET_MAP.get(TuningId.Standard).value,\r\n\tshowFretDots: true,\r\n\tshowFretNumbers: true,\r\n\tcolorMapFn: getFretColor\r\n};\r\n\r\nexport const getFretRatios = (numFrets: number): number[] => {\r\n\tconst ratios = [];\r\n\tfor (let i = 1; i <= numFrets; i++) {\r\n\t\tratios.push((i <= 1) ? 1 : ratios[i - 2] * FRET_SIZE_RATIO);\r\n\t}\r\n\treturn ratios;\r\n};\r\n\r\nexport const getDotsForFret = (fretNumber: number): string => {\r\n\tconst mod = fretNumber % 12;\r\n\tif (mod === 0)\r\n\t\treturn '• •';\r\n\telse if (DOTTED_FRET_INDICES[mod])\r\n\t\treturn '•';\r\n\treturn '';\r\n};\r\n\r\nconst doesVoicingValueMatch = (d: number, v: number) => {\r\n\treturn d + 1 === v;\r\n}\r\n"],"names":["StyledCollectionTable","styled","props","theme","surface","bg","nav","text","inverted","SEMITONES","data","semitones","rootSuffix","useRootSuffix","root","useRoot","React","colSpan","map","d","i","model","modelType","ModelType","Chord","Scale","modelId","key","Link","to","getShortName","h","index","intervals","findIndex","ivl","pod","className","includes","mod","notes","getName","StyledColumnManager","$tablet","join","$desktop","children","tablet","desktop","StyledBreadcrumbList","secondary","pieces","usePageProps","path","split","paths","reduce","prev","cur","arr","replace","isLink","replaceAll","Tag","undefined","push","Icon","iconId","size","color","slice","length","StyledPageTitle","utils","border","primary","title","subtitle","action","SEO","BreadcrumbList","StyledDoublePane","StyledPane","StyledDetailsCard","StyledCard","withConfig","NoteCell","note","name","getOctave","IntervalCell","interval","isFeatured","PitchCell","getFrequency","RatioCell","getRatio","octave","useRecoilValue","octaveState","n","Note","NumberUtils","$n","CardHeader","StyledGuitarCard","qp","URLSearchParams","rootId","Card","toString","Fretboard","StyledModeCard","type","tags","find","t","modeType","modes","SCALE_PRESETS","p","StyledPianoCard","Keyboard","keyRange","DEFAULT_KEYBOARD_PROPS","StyledCollectionList","subchords","getSubchords","subscales","getSubscales","superchords","getSuperchords","superscales","getSuperscales","CollectionTable","CollectionList","CHORD_PRESETS","StyledRomanNumeralsCard","numerals","getAllNumerals","getNumeralParts","numeral","symbol","StyledRootInput","active","OCTAVE_OPTIONS","x","id","pageProps","rootIndex","lastIndexOf","basePath","rootKey","useRecoilState","setOctave","InputRow","label","y","activeClassName","NoteId","NOTE_PRESET_MAP","DropdownInput","options","value","setValue","o","StyledRoot","isEditingKeyState","isEditing","setIsEditing","toggle","ButtonInput","onClick","RootInput","StyledPodlistPage","StyledPageBody","pageContext","cl","getModelIdClass","clText","getModelIdText","podList","PageTitle","ColumnManager","RootCard","DetailsCard","RomanNumeralsCard","ModeCard","GrandStaff","GuitarCard","PianoCard","RelatedCard","StyledFretLabel","$bgColor","$fgColor","bgColor","colorMapFn","Fret","tuning","stringIndex","fretIndex","showFretNumbers","showFretDots","classes","isLowString","isHighString","FretLabel","getDotsForFret","userProps","DEFAULT_FRETBOARD_PROPS","fretRange","lo","numFrets","numStrings","fretboardStyles","gridTemplateColumns","getFretRatios","gridTemplateRows","StyledFretboard","style","hi","allFrets","s","f","getFrets","TuningId","formatPreset","getPitch","noteId","TUNING_PRESET_MAP","Map","Standard","Flat","DoubleFlat","StandardSeven","StandardBass","DropD","DADGAD","Banjo","Violin","OpenA","OpenB","OpenC","OpenD","OpenE","OpenF","OpenG","FRETBOARD_TUNING_VALUES","ArrayUtils","DOTTED_FRET_INDICES","FRET_SIZE_RATIO","Math","pow","voicing","noteIndex","tryGetPodPairAtPitch","v","getDegree","Array","isArray","some","doesVoicingValueMatch","isIntervalInVoicing","getColor","ratios","fretNumber"],"sourceRoot":""}