{"version":3,"file":"component---src-pages-scales-scale-id-tsx-bb6519b8c38c667349ee.js","mappings":"0KAKMA,EAAuBC,EAAAA,GAAAA,GAAH,oQA+B1B,IAjBuB,SAAC,GAAuB,EAArBC,GAAqB,EAAjBC,KAAkB,IACxCC,EADuC,EAAXC,KACdC,MAAM,KACxBF,EAASA,EAAOG,MAAM,EAAGH,EAAOI,OAAS,GACzC,IAAMC,EAAQ,GAWd,OAVAL,EAAOM,QAAO,SAACC,EAAMC,EAAKC,EAAGC,GACzB,IAAMT,GAAUM,EAAH,IAAWC,GAAMG,QAAQ,KAAM,KAO5C,OANAN,EAAMO,KACF,sBAAIC,IAAKJ,GACJA,EAAI,GAAK,gBAAC,KAAD,CAAMK,OAAO,OAAOC,KAAM,GAAIC,MAAM,SAC9C,gBAAC,KAAD,CAAMC,GAAIhB,GAAQ,KAAY,IAANQ,EAAU,OAASD,EAAIU,WAAW,IAAK,QAGhEjB,IACR,KACI,gBAACL,EAAD,KAAuBS,K,2LCtB5Bc,EAAatB,EAAAA,GAAAA,IAAH,oMAUVuB,EAAY,CACd,CACItB,GAAI,aACJC,KAAM,QAHI,eAKXsB,EAAAA,KAGDC,EAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGC,KAAI,SAACC,EAAGf,GAAJ,MAAW,CAAEX,GAAIW,EAAI,EAAGV,KAAMU,EAAI,MA4B5F,EA1BgC,YACVgB,EAAAA,EAAAA,KAAlB,IACA,GAAwBC,EAAAA,EAAAA,IAAeC,EAAAA,IAAhCC,EAAP,KAAaC,EAAb,KAEMC,EAASF,GAAQA,EAAKG,aAAe,EAMrCC,EAAeJ,GAAc,CAAE9B,GAAI,cAEzC,OAEI,gBAACqB,EAAD,KACI,gBAACc,EAAA,EAAD,CAAUC,MAAM,QACZ,gBAACC,EAAA,EAAD,CAAeC,QAAShB,EAAciB,MAAOL,EAAalC,GAAIwC,SAAU,SAAAC,GAAI,OAAIV,EAAoB,eAAZU,EAAKzC,QAAsB0C,EAAY,IAAIC,EAAAA,EAAKF,EAAKF,YAEjJ,gBAACJ,EAAA,EAAD,CAAUC,MAAM,UACZ,gBAACC,EAAA,EAAD,CAAeC,QAASd,EAAgBe,MAAO,CAAEvC,GAAIgC,GAAUQ,SAAU,SAAAC,GAAI,OAdvE,SAAAG,GACd,IAAMH,EAAO,IAAIE,EAAAA,EAAK,CAAW,IAATC,EAAI,GAAUC,EAAAA,EAAAA,OAAmBf,EAAKgB,IAAI,GAAI,IAAKhB,EAAKgB,IAAI,KACpFf,EAAQU,GAYiFM,CAAUN,EAAKzC,UC7C1GgD,GAAoBjD,EAAAA,EAAAA,IAAOkD,EAAAA,EAAPlD,CAAH,grBAsBE,qBAAGmD,MAAkBC,KAAKC,aAiCnD,EAzBmC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC5BC,EAAYD,EAAMC,UAClBC,EAAQF,EAAME,MAEpB,OAAKD,GAAcC,EAGf,gBAACP,EAAD,KACI,0BACKM,EAAU7B,KAAI,SAAC+B,EAAK7C,GACjB,OACI,sBAAII,IAAKyC,EAAIxD,GAAIyD,UAAS,OACrBF,GAAS,uBAAKE,UAAS,iBAAoBF,EAAM5C,GAAGV,KAAK,2BAAMsD,EAAM5C,GAAGsB,cACzE,uBAAKwB,UAAS,aAAcF,EAAQ,GAAK,aAAeC,EAAIE,WAC3DH,GAAS,uBAAKE,UAAS,aAAgBF,EAAM5C,GAAGgD,cAAa,IAC9D,uBAAKF,UAAS,SAAYD,EAAII,iBAK9C,gBAAC,EAAD,OAhByB,O,qIC7B/BC,EAAmB9D,EAAAA,GAAAA,IAAH,8BAIhB+D,EAAe,CACjB,CACI9D,GAAI+D,EAAAA,GAAAA,KACJ9D,KAAM,MACNsC,WAAOG,IAJM,eAMdsB,EAAAA,KAiCP,IA9BkC,SAAC,GAAe,IAAbX,EAAY,EAAZA,MAEjC,IAAKA,EAAMvB,OAASuB,EAAMC,UAAW,OAAO,KAE5C,OAA8BW,EAAAA,EAAAA,UAASH,EAAgB,IAAhDI,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAASG,EAAAA,GAAAA,IAA9BC,EAAP,KAAeC,EAAf,KAEMC,GAAiBC,EAAAA,EAAAA,IACnBnB,EACAa,EAAQlE,KAAO+D,EAAAA,GAAAA,UAAiBrB,EAAYwB,EAC5CG,GAGJ,OACI,gBAAC,IAAD,CAAMI,MAAM,UACR,gBAACZ,EAAD,KACI,gBAAC,IAAcU,GACf,gBAAC,IAAD,CAAUnC,MAAM,UACZ,gBAAC,IAAD,CAAeG,MAAO8B,EAAQ7B,SAAU8B,EAAWhC,QAAS8B,EAAAA,MAE/DC,EAAOrE,KAAO0E,EAAAA,GAAAA,UACX,gBAAC,IAAD,CAAUtC,MAAM,WACZ,gBAAC,IAAD,CAAeG,MAAO2B,EAAS1B,SAAU2B,EAAY7B,QAASwB,S,oFCvChFa,EAAgB5E,EAAAA,GAAAA,IAAH,iKA8EnB,IAlEmC,SAAC,GAAe,IAAbsD,EAAY,EAAZA,MAE5BuB,EAAYvB,EAAMwB,eAClBC,EAAYzB,EAAM0B,eAClBC,EAAc3B,EAAM4B,iBACpBC,EAAc7B,EAAM8B,iBAE1B,OACI,gCACI,gBAAC,IAAD,CAAMV,MAAM,eACR,gBAACE,EAAD,KACI,0BACKpD,EAAAA,GAAAA,KAAiB,SAAA6D,GAAC,OACf,sBAAIrE,IAAKqE,EAAEpF,IAAI,gBAAC,KAAD,CAAMmB,GAAE,WAAakC,EAAMrD,GAAnB,IAAyBoF,EAAEpF,IAAOoF,EAAEnF,KAA5C,YAK9B2E,EAAUtE,OAAS,GAChB,gBAAC,IAAD,CAAMmE,MAAM,gBACR,gBAACE,EAAD,KACI,0BACKC,EAAUnD,KAAI,SAAA2D,GAAC,OACZ,sBAAIrE,IAAKqE,EAAEpF,IAAI,gBAAC,KAAD,CAAMmB,GAAE,WAAaiE,EAAEpF,IAAOoF,EAAEnF,aAMlE+E,EAAY1E,OAAS,GAClB,gBAAC,IAAD,CAAMmE,MAAM,iBACR,gBAACE,EAAD,KACI,0BACKK,EAAYvD,KAAI,SAAA2D,GAAC,OACd,sBAAIrE,IAAKqE,EAAEpF,IAAI,gBAAC,KAAD,CAAMmB,GAAE,WAAaiE,EAAEpF,IAAOoF,EAAEnF,aAMlE6E,EAAUxE,OAAS,GAChB,gBAAC,IAAD,CAAMmE,MAAM,gBACR,gBAACE,EAAD,KACI,0BACKG,EAAUrD,KAAI,SAAA2D,GAAC,OACZ,sBAAIrE,IAAKqE,EAAEpF,IAAI,gBAAC,KAAD,CAAMmB,GAAE,WAAaiE,EAAEpF,IAAOoF,EAAEnF,aAMlEiF,EAAY5E,OAAS,GAClB,gBAAC,IAAD,CAAMmE,MAAM,iBACR,gBAACE,EAAD,KACI,0BACKO,EAAYzD,KAAI,SAAA2D,GAAC,OACd,sBAAIrE,IAAKqE,EAAEpF,IAAI,gBAAC,KAAD,CAAMmB,GAAE,WAAaiE,EAAEpF,IAAOoF,EAAEnF,gB,sFCnEvDF,EAAAA,GAAAA,IAAH,qJAwBrB,IAdiC,WAC7B,OAAO,O,8ECQEsF,GAxBmBtF,EAAAA,GAAAA,IAAH,4XAwBHA,EAAAA,GAAAA,IAAH,wG,6JChBFuF,EAAAA,SAAAA,GAEjB,WAAYtF,EAAasC,GAAqB,gBAArBA,IAAAA,OAAUI,GAC/B,YAAM6C,EAAAA,GAAkBvF,EAAIsC,IADc,MAF7BgD,EAAAA,EAAAA,GAAAA,EAAAA,GAIhB,kBA2EA,OA3EA,EAIDE,QAAA,SAAQC,GACJ,IAAIC,GAAO,OAAOC,KAAKC,SACvBF,EAAUG,EAAAA,EAAAA,OAAkBH,EAASD,GACrC,IAAK,IAAI9E,EAAKgF,KAAKC,QAAQtF,OAASmF,EAAI9E,EAAI+E,EAAQpF,OAAQK,IAAK,CAC7D,IAAMmF,EAASJ,EAAQ/E,GACvB+E,EAAQ/E,GAAK,CAACmF,EAAO,GAAK,GAAIA,EAAO,GAAK,GAK9C,IAFA,IAAMC,EAAkB,CAAC,CAAC,EAAG,IACvBC,EAAe,CAAC,IAAIC,EAAAA,EAAaC,EAAAA,GAAAA,KAC9BvF,EAAI,EAAGA,EAAI+E,EAAQpF,OAAS,EAAGK,IAAK,CACzC,IAAMwF,GAASC,EAAAA,EAAAA,IAAaV,EAAQ/E,EAAI,GAAI+E,EAAQ,IACpDK,EAAQjF,KAAKqF,GACb,IAAME,EAASJ,EAAAA,EAAAA,UAAuBE,GACtCH,EAAalF,KAAKuF,GAQtB,OANaf,EAAMgB,UAAUP,IAOhC,EAEDQ,YAAA,WACI,IAAMC,EAAQ,GACd,GAAIb,KAAKc,KAAKC,SAASC,EAAAA,GAAAA,WACnBhB,KAAKc,KAAKC,SAASC,EAAAA,GAAAA,aACnBhB,KAAKc,KAAKC,SAASC,EAAAA,GAAAA,cACnBhB,KAAKc,KAAKC,SAASC,EAAAA,GAAAA,cAEnB,IAAK,IAAIhG,EAAI,EAAGA,EAAIgF,KAAKC,QAAQtF,OAAQK,IACrC6F,EAAM1F,KAAK6E,KAAKH,QAAQ7E,IAGhC,OAAO6F,GACV,EAEDI,WAAA,SAAWnB,GAGP,IADA,IAAMoB,EAAe,GACZlG,EAAI,EAAGA,EAAIgF,KAAKC,QAAQtF,OAAQK,GAAQ,EAAG,CAChD,IAAMmG,EAAOjE,EAAAA,EAAAA,UAAsB4C,EAAG9E,EAAGgF,KAAKC,QAAQtF,QAChDyG,EAASpB,KAAKrC,UAAUwD,GAC9BD,EAAa/F,KAAKiG,GAKtB,IAFA,IAAMhB,EAAkB,CAAC,CAAC,EAAG,IAEpBpF,EAAI,EAAGA,EAAIkG,EAAavG,OAAS,EAAGK,IAAK,CAC9C,IAAMwF,GAASC,EAAAA,EAAAA,IAAaS,EAAalG,EAAI,GAAGmC,IAAK+D,EAAa,GAAG/D,KACrEiD,EAAQjF,KAAKqF,GAIjB,IAAMa,EAAUC,EAAAA,EAAAA,UAAgBlB,GAIhC,OAHIJ,KAAK7D,MACLkF,EAAQE,UAAUvB,KAAKpC,MAAMkC,IAE1BuB,GACV,EAEDG,eAAA,WACI,IAAMC,EAAW,GACjB,GAAIzB,KAAKc,KAAKC,SAASC,EAAAA,GAAAA,UACnB,IAAK,IAAIhG,EAAI,EAAGA,EAAIgF,KAAKC,QAAQtF,OAAQK,IACrCyG,EAAStG,KAAK6E,KAAKiB,WAAWjG,IAGtC,OAAOyG,GACV,EA/EgB9B,C,QAAc+B,GAAd/B,EAMVgB,UAAY,SAAC/D,GAAD,OAAmB+E,EAAAA,EAAAA,UAAgBC,EAAAA,GAAejC,EAAO/C,EAAOiF,EAAAA,GAAkBC,EAAAA,M,0MCPnGC,EAAiB3H,EAAAA,GAAAA,IAAH,4OA6CpB,EA/BgC,SAAC,GAAe,IAAbsD,EAAY,EAAZA,MAE/B,IADkB1B,EAAAA,EAAAA,MACMC,EAAAA,EAAAA,IAAeC,EAAAA,KAAvC,UAEA,GAAKwB,EAAMkD,YAAX,CAEA,IAAIC,EAAQnD,EAAMkD,cAEdoB,EAAW,GAMf,OALItE,EAAMoD,KAAKC,SAASC,EAAAA,GAAAA,UAAoBgB,EAAW,WAC9CtE,EAAMoD,KAAKC,SAASC,EAAAA,GAAAA,YAAsBgB,EAAW,aACrDtE,EAAMoD,KAAKC,SAASC,EAAAA,GAAAA,aAAuBgB,EAAW,gBACtDtE,EAAMoD,KAAKC,SAASC,EAAAA,GAAAA,gBAAwBgB,EAAW,kBAG5D,gBAACC,EAAA,EAAD,CACInD,MAAUkD,EAAL,UAEL,gBAACD,EAAD,KACI,0BACKlB,EAAM/E,KAAI,SAAAoG,GAAC,OACR,sBAAI9G,IAAK8G,EAAE7H,IACP,gBAAC,KAAD,CAAMmB,GAAE,IAAM0G,EAAEC,QAAR,IAAmBD,EAAE7H,GAAMyD,UAAWJ,EAAMrD,KAAO6H,EAAE7H,GAAK,SAAW,IAAK6H,EAAE5H,e,UCrC1G8H,EAA0BhI,EAAAA,GAAAA,IAAH,iKAoC7B,EAzByC,SAAC,GAAe,IAAbsD,EAAY,EAAZA,MAExC,IADkB1B,EAAAA,EAAAA,MACMC,EAAAA,EAAAA,IAAeC,EAAAA,KAEjCuF,GAFN,UAEiB/D,EAAM8D,kBAEvB,OAAKC,EAAS9G,OAGV,gBAACsH,EAAA,EAAD,CACInD,MAAM,kBAEN,gBAACsD,EAAD,KACI,0BACKX,EAAS3F,KAAI,SAACoG,EAAGlH,GAAJ,OACV,sBAAII,IAAKJ,GACL,gBAAC,KAAD,CAAMQ,GAAE,IAAM0G,EAAEC,QAAR,IAAmBD,EAAE7H,IAAO6H,EAAE5H,aAVjC,M,wCCT3B+H,GAAkBjI,EAAAA,EAAAA,IAAOkI,EAAAA,EAAPlI,CAAH,6BCdrB,EDmBiC,SAAAmI,GAE7B,IAAMpG,GAAOqG,EAAAA,EAAAA,IAAetG,EAAAA,IAEtBuG,EAAQ,IAAI9C,EAAAA,EAAM4C,EAAMG,OAAOrI,GAAI,CAAE8B,KAAAA,IAE3C,OACI,gBAACkG,EAAD,KACI,gBAACM,EAAA,EAAD,CAAgBtI,GAAIoI,EAAMpI,GAAIC,KAAMmI,EAAMnI,KAAME,KAAM+H,EAAM/H,OAC5D,gBAACoI,EAAA,EAAD,CAAW9D,MAAO2D,EAAMnI,KAAMuI,SAAS,UACvC,gBAAC,IAAD,KACI,gBAACC,EAAA,EAAD,CAAapF,MAAO+E,IACpB,gBAACM,EAAA,EAAD,CAAYrF,MAAO+E,IACnB,gBAAC,EAAD,CAAmB/E,MAAO+E,IAC1B,gBAAC,EAAD,CAAU/E,MAAO+E,IACjB,gBAACO,EAAA,EAAD,CAAatF,MAAO+E,IACpB,gBAACQ,EAAA,EAAD,CAAWvF,MAAO+E","sources":["webpack://play-what/./src/components/_shared/breadcrumb-list/BreadcrumbList.tsx","webpack://play-what/./src/components/_shared/cards/RootCard.tsx","webpack://play-what/./src/components/_shared/cards/DetailsCard.tsx","webpack://play-what/./src/components/_shared/cards/GuitarCard.tsx","webpack://play-what/./src/components/_shared/cards/RelatedCard.tsx","webpack://play-what/./src/components/_shared/cards/SoundCard.tsx","webpack://play-what/./src/components/_shared/layout/Pane.tsx","webpack://play-what/./src/core/models/Scale.ts","webpack://play-what/./src/components/_shared/cards/ModeCard.tsx","webpack://play-what/./src/components/_shared/cards/RomanNumeralsCard.tsx","webpack://play-what/./src/components/scales/ScalePage.tsx","webpack://play-what/./src/pages/scales/{Scale.id}.tsx"],"sourcesContent":["import { Link } from \"gatsby\";\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport Icon from \"../ui/Icon\";\r\n\r\nconst StyledBreadcrumbList = styled.ul`\r\n    font-size: 110%;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    gap: 8px;\r\n    padding: 0 0 16px 0;\r\n    white-space: nowrap;\r\n    text-transform: capitalize;\r\n    svg {\r\n        margin-right: 8px;\r\n    }\r\n`\r\n\r\nconst BreadcrumbList = ({ id, name, path }) => {\r\n    let pieces = path.split('/');\r\n    pieces = pieces.slice(0, pieces.length - 1);\r\n    const paths = [];\r\n    pieces.reduce((prev, cur, i, arr) => {\r\n        const path = `${prev}/${cur}`.replace('//', '/');\r\n        paths.push(\r\n            <li key={i}>\r\n                {i > 0 && <Icon iconId=\"next\" size={10} color=\"grey\" />}\r\n                <Link to={path || '/'}>{i === 0 ? 'Home' : cur.replaceAll('-', ' ')}</Link>\r\n            </li>\r\n        );\r\n        return path;\r\n    }, '/');\r\n    return <StyledBreadcrumbList>{paths}</StyledBreadcrumbList>;\r\n}\r\n\r\nexport default BreadcrumbList;\r\n","import Note from \"@pw-core/models/Note\";\r\nimport React from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport styled from 'styled-components';\r\nimport { usePageProps } from \"../../../contexts/PagePropsContext\";\r\nimport NumberUtils from \"../../../core/general/Number.utils\";\r\nimport { NOTE_PRESETS } from \"../../../core/models/Model.presets\";\r\nimport { rootState } from \"../../../state/state\";\r\nimport InputRow from \"../../_shared/ui/InputRow\";\r\nimport DropdownInput from \"../inputs/DropdownInput\";\r\n\r\nconst StyledRoot = styled.div`\r\n    margin-top: 16px;\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    gap: 16px;\r\n    @media(min-width: 512px) {\r\n        grid-template-columns: 1fr 1fr;\r\n    }\r\n`;\r\n\r\nconst NOTE_OPTIONS = [\r\n    {\r\n        id: 'unselected',\r\n        name: '---'\r\n    },\r\n    ...NOTE_PRESETS\r\n];\r\n\r\nconst OCTAVE_OPTIONS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map((x, i) => ({ id: i + 1, name: i + 1 }))\r\n\r\nconst RootCard: React.FC<any> = () => {\r\n    const pageProps = usePageProps();\r\n    const [root, setRoot] = useRecoilState(rootState);\r\n\r\n    const octave = root && root.getOctave() || 4;\r\n    const setOctave = v => {\r\n        const note = new Note([(v - 4) * 12 + NumberUtils.modulo(root.pod[0], 12), root.pod[1]]);\r\n        setRoot(note);\r\n    };\r\n\r\n    const selectedRoot = root ? root : { id: 'unselected' };\r\n\r\n    return (\r\n\r\n        <StyledRoot>\r\n            <InputRow label=\"Root\">\r\n                <DropdownInput options={NOTE_OPTIONS} value={selectedRoot.id} setValue={note => setRoot(note.id === 'unselected' ? undefined : new Note(note.value))} />\r\n            </InputRow>\r\n            <InputRow label=\"Octave\">\r\n                <DropdownInput options={OCTAVE_OPTIONS} value={{ id: octave }} setValue={note => setOctave(note.id)} />\r\n            </InputRow>\r\n        </StyledRoot>\r\n\r\n    );\r\n};\r\n\r\nexport default RootCard;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { StyledCard } from \"../ui/Card\";\r\nimport RootCard from \"./RootCard\";\r\n\r\nconst StyledDetailsCard = styled(StyledCard)`\r\n    ul {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n\r\n        flex-direction: column;\r\n        @media(min-width: 512px) {\r\n            flex-direction: row;\r\n        }\r\n\r\n        .box {\r\n            padding: 8px 16px;\r\n            text-align: center;\r\n            font-size: 140%;\r\n            .featured {\r\n                font-weight: bold;\r\n                @media(min-width: 512px) {\r\n                    font-size: 200%;\r\n                }\r\n            }\r\n            .frequency, .ratio {\r\n                color: ${({ theme }) => theme.text.secondary};\r\n                font-size: 80%;\r\n                padding: 4px;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst DetailsCard: React.FC<any> = ({ model }) => {\r\n    const intervals = model.intervals;\r\n    const notes = model.notes;\r\n\r\n    if (!intervals && !notes) return null;\r\n\r\n    return (\r\n        <StyledDetailsCard>\r\n            <ul>\r\n                {intervals.map((ivl, i) => {\r\n                    return (\r\n                        <li key={ivl.id} className={`box`}>\r\n                            {notes && <div className={`note featured`}>{notes[i].name}<sub>{notes[i].getOctave()}</sub></div>}\r\n                            <div className={`interval ${notes ? '' : 'featured'}`}>{ivl.getName()}</div>\r\n                            {notes && <div className={`frequency`}>{notes[i].getFrequency(true)}</div>}\r\n                            <div className={`ratio`}>{ivl.getRatio()}</div>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n            <RootCard />\r\n        </StyledDetailsCard>\r\n    );\r\n};\r\n\r\nexport default DetailsCard;\r\n","import React, { useState } from \"react\";\r\nimport styled from 'styled-components';\r\nimport Fretboard from \"../../../viewers/fretboard/Fretboard\";\r\nimport { FRETBOARD_TUNING_VALUES, TuningId } from \"../../../viewers/fretboard/Fretboard.tuning\";\r\nimport { getFretboardProps } from \"../../../viewers/fretboard/Fretboard.utils\";\r\nimport { VoicingId, VOICING_PRESETS } from \"../../../viewers/fretboard/Fretboard.voicing\";\r\nimport DropdownInput from \"../../_shared/inputs/DropdownInput\";\r\nimport Card from \"../../_shared/ui/Card\";\r\nimport InputRow from \"../../_shared/ui/InputRow\";\r\n\r\nconst StyledGuitarCard = styled.div`\r\n    \r\n`;\r\n\r\nconst VOICING_OPTIONS = [\r\n    {\r\n        id: VoicingId.None,\r\n        name: '---',\r\n        value: undefined\r\n    },\r\n    ...VOICING_PRESETS\r\n]\r\n\r\nconst GuitarCard: React.FC<any> = ({ model }) => {\r\n\r\n    if (!model.root || !model.intervals) return null;\r\n\r\n    const [voicing, setVoicing] = useState(VOICING_OPTIONS[0]);\r\n    const [tuning, setTuning] = useState(FRETBOARD_TUNING_VALUES[0]);\r\n\r\n    const fretboardProps = getFretboardProps(\r\n        model,\r\n        voicing.id === VoicingId.None ? undefined : voicing,\r\n        tuning\r\n    );\r\n\r\n    return (\r\n        <Card title=\"Guitar\">\r\n            <StyledGuitarCard>\r\n                <Fretboard {...fretboardProps} />\r\n                <InputRow label=\"Tuning\">\r\n                    <DropdownInput value={tuning} setValue={setTuning} options={FRETBOARD_TUNING_VALUES} />\r\n                </InputRow>\r\n                {tuning.id === TuningId.Standard &&\r\n                    <InputRow label=\"Voicing\">\r\n                        <DropdownInput value={voicing} setValue={setVoicing} options={VOICING_OPTIONS} />\r\n                    </InputRow>\r\n                }\r\n            </StyledGuitarCard>\r\n        </Card >\r\n    );\r\n};\r\n\r\nexport default GuitarCard;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { NOTE_PRESETS } from \"../../../core/models/Model.presets\";\r\nimport Card from \"../../_shared/ui/Card\";\r\n\r\nconst StyledRelated = styled.div`\r\n    ul {\r\n        display: flex;\r\n        gap: 4px;\r\n        flex-wrap: wrap;\r\n        a {\r\n            padding: 4px;\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nconst RelatedCard: React.FC<any> = ({ model }) => {\r\n\r\n    const subchords = model.getSubchords();\r\n    const subscales = model.getSubscales();\r\n    const superchords = model.getSuperchords();\r\n    const superscales = model.getSuperscales();\r\n\r\n    return (\r\n        <>\r\n            <Card title=\"Other Roots\">\r\n                <StyledRelated>\r\n                    <ul>\r\n                        {NOTE_PRESETS.map(s => (\r\n                            <li key={s.id}><Link to={`/chords/${model.id}/${s.id}`}>{s.name} {/*model.name*/}</Link></li>\r\n                        ))}\r\n                    </ul>\r\n                </StyledRelated>\r\n            </Card>\r\n            {subchords.length > 0 &&\r\n                <Card title=\"Child Chords\">\r\n                    <StyledRelated>\r\n                        <ul>\r\n                            {subchords.map(s => (\r\n                                <li key={s.id}><Link to={`/chords/${s.id}`}>{s.name}</Link></li>\r\n                            ))}\r\n                        </ul>\r\n                    </StyledRelated>\r\n                </Card>\r\n            }\r\n            {superchords.length > 0 &&\r\n                <Card title=\"Parent Chords\">\r\n                    <StyledRelated>\r\n                        <ul>\r\n                            {superchords.map(s => (\r\n                                <li key={s.id}><Link to={`/chords/${s.id}`}>{s.name}</Link></li>\r\n                            ))}\r\n                        </ul>\r\n                    </StyledRelated>\r\n                </Card>\r\n            }\r\n            {subscales.length > 0 &&\r\n                <Card title=\"Child Scales\">\r\n                    <StyledRelated>\r\n                        <ul>\r\n                            {subscales.map(s => (\r\n                                <li key={s.id}><Link to={`/scales/${s.id}`}>{s.name}</Link></li>\r\n                            ))}\r\n                        </ul>\r\n                    </StyledRelated>\r\n                </Card>\r\n            }\r\n            {superscales.length > 0 &&\r\n                <Card title=\"Parent Scales\">\r\n                    <StyledRelated>\r\n                        <ul>\r\n                            {superscales.map(s => (\r\n                                <li key={s.id}><Link to={`/scales/${s.id}`}>{s.name}</Link></li>\r\n                            ))}\r\n                        </ul>\r\n                    </StyledRelated>\r\n                </Card>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RelatedCard;\r\n","import Model from \"@pw-core/models/Model\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport ButtonInput from \"../../_shared/inputs/ButtonInput\";\r\nimport Card from \"../../_shared/ui/Card\";\r\nimport Icon from \"../../_shared/ui/Icon\";\r\n\r\nconst StyledSoundCard = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    button {\r\n        padding: 8px 32px;\r\n    }\r\n`;\r\n\r\n\r\nconst SoundCard: React.FC<any> = () => {\r\n    return null;\r\n\r\n    const intervals = null;\r\n\r\n    return (\r\n        <Card title=\"Sound\">\r\n            <StyledSoundCard>\r\n                <ButtonInput onClick={() => Model.playSoundList(intervals.value)}><Icon iconId=\"speaker\" size={32} color=\"white\" /></ButtonInput >\r\n            </StyledSoundCard>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default SoundCard;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledDoublePane = styled.div`\r\n\tpadding: 16px 0;\r\n\r\n\tdisplay: grid;\r\n\tgap: 16px;\r\n\tgrid-template-columns: 1fr;\r\n\t@media(min-width: 512px) {\r\n\t\tgrid-template-columns: 2fr 3fr;\r\n\t}\r\n\r\n\t.card {\r\n\t\tbackground: white;\r\n\t\theight: 100%;\r\n\t\twidth: 100%;\r\n\t\tborder-radius: 16px;\r\n\t\tpadding: 16px;\r\n\r\n\t\tlabel {\r\n\t\t\tfont-weight: bold;\r\n\t\t\tmargin-right: 4px;\r\n\t\t}\r\n\t}\r\n`\r\n\r\nexport const StyledPane = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: 16px;\r\n\tmargin: 16px 0;\r\n`\r\n","import IntervalSpan from '@pw-core/models/Interval';\r\nimport ArrayUtils from '../general/Array.utils';\r\nimport NumberUtils from '../general/Number.utils';\r\nimport Chord from './Chord';\r\nimport Model from './Model';\r\nimport { IntervalId, IPod, ScaleId, ScaleTag } from './Model.constants';\r\nimport { SCALE_PRESETS, SCALE_PRESET_MAP } from './Model.presets';\r\nimport { arePodListsEqual, reducePodList, subtractPods } from './Pod.static';\r\nimport PodList from './PodList';\r\n\r\nexport default class Scale extends PodList {\r\n\r\n    constructor(id: ScaleId, options = undefined) {\r\n        super(SCALE_PRESET_MAP, id, options);\r\n    }\r\n\r\n    static fromValue = (value: IPod[]) => Model.fromValue(SCALE_PRESETS, Scale, value, arePodListsEqual, reducePodList);\r\n\r\n    getMode(d) {\r\n        let rotated = [...this.podList];\r\n        rotated = ArrayUtils.rotate(rotated, d);\r\n        for (let i = (this.podList.length - d); i < rotated.length; i++) {\r\n            const curPod = rotated[i];\r\n            rotated[i] = [curPod[0] + 12, curPod[1] + 7];\r\n        }\r\n        // Get difference between each interval\r\n        const newPods: IPod[] = [[0, 0]];\r\n        const newIntervals = [new IntervalSpan(IntervalId.P1)];\r\n        for (let i = 0; i < rotated.length - 1; i++) {\r\n            const newPod = subtractPods(rotated[i + 1], rotated[0])\r\n            newPods.push(newPod);\r\n            const newIvl = IntervalSpan.fromValue(newPod);\r\n            newIntervals.push(newIvl);\r\n        }\r\n        const mode = Scale.fromValue(newPods);\r\n\r\n        /*if (this.root) {\r\n            numeral.applyRoot(this.notes[d]);\r\n            console.log('dpb num root', numeral);\r\n        }*/\r\n        return mode;\r\n    };\r\n\r\n    getAllModes() {\r\n        const modes = [];\r\n        if (this.tags.includes(ScaleTag.Diatonic) ||\r\n            this.tags.includes(ScaleTag.Pentatonic) ||\r\n            this.tags.includes(ScaleTag.MelodicMode) ||\r\n            this.tags.includes(ScaleTag.HarmonicMode)\r\n        ) {\r\n            for (let i = 0; i < this.podList.length; i++) {\r\n                modes.push(this.getMode(i));\r\n            }\r\n        }\r\n        return modes;\r\n    };\r\n\r\n    getNumeral(d) {\r\n        // Get every other interval\r\n        const curIntervals = [];\r\n        for (let i = 0; i < this.podList.length; i = i + 2) {\r\n            const curD = NumberUtils.moduloSum(d, i, this.podList.length);\r\n            const curIvl = this.intervals[curD];\r\n            curIntervals.push(curIvl);\r\n        }\r\n        // Get difference between each interval\r\n        const newPods: IPod[] = [[0, 0]];\r\n        //const newIntervals = [new IntervalSpan(IntervalId.P1)];\r\n        for (let i = 0; i < curIntervals.length - 1; i++) {\r\n            const newPod = subtractPods(curIntervals[i + 1].pod, curIntervals[0].pod)\r\n            newPods.push(newPod);\r\n            //const newIvl = IntervalSpan.fromValue(newPod);\r\n            //newIntervals.push(newIvl);\r\n        }\r\n        const numeral = Chord.fromValue(newPods);\r\n        if (this.root) {\r\n            numeral.applyRoot(this.notes[d]);\r\n        }\r\n        return numeral;\r\n    };\r\n\r\n    getAllNumerals() {\r\n        const numerals = [];\r\n        if (this.tags.includes(ScaleTag.Diatonic)) {\r\n            for (let i = 0; i < this.podList.length; i++) {\r\n                numerals.push(this.getNumeral(i));\r\n            }\r\n        }\r\n        return numerals;\r\n    };\r\n}\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport styled from 'styled-components';\r\nimport { usePageProps } from \"../../../contexts/PagePropsContext\";\r\nimport { ScaleTag } from \"../../../core/models/Model.constants\";\r\nimport { rootState } from \"../../../state/state\";\r\nimport Card from \"../../_shared/ui/Card\";\r\n\r\nconst StyledModeCard = styled.div`\r\n    ul {\r\n        display: flex;\r\n        gap: 4px;\r\n        flex-wrap: wrap;\r\n        a {\r\n            padding: 4px;\r\n            &.active {\r\n                font-weight: bold;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst ModeCard: React.FC<any> = ({ model }) => {\r\n    const pageProps = usePageProps();\r\n    const [root, setRoot] = useRecoilState(rootState);\r\n\r\n    if (!model.getAllModes) return;\r\n\r\n    let modes = model.getAllModes();\r\n\r\n    let modeType = '';\r\n    if (model.tags.includes(ScaleTag.Diatonic)) modeType = 'Diatonic';\r\n    else if (model.tags.includes(ScaleTag.Pentatonic)) modeType = 'Pentatonic';\r\n    else if (model.tags.includes(ScaleTag.MelodicMode)) modeType = 'Melodic Minor';\r\n    else if (model.tags.includes(ScaleTag.HarmonicMode)) modeType = 'Harmonic Minor';\r\n\r\n    return (\r\n        <Card\r\n            title={`${modeType} Modes`}\r\n        >\r\n            <StyledModeCard>\r\n                <ul>\r\n                    {modes.map(n => (\r\n                        <li key={n.id}>\r\n                            <Link to={`/${n.modelId}/${n.id}`} className={model.id === n.id ? 'active' : ''}>{n.name}</Link>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </StyledModeCard>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ModeCard;\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport styled from 'styled-components';\r\nimport { usePageProps } from \"../../../contexts/PagePropsContext\";\r\nimport { rootState } from \"../../../state/state\";\r\nimport Card from \"../../_shared/ui/Card\";\r\n\r\nconst StyledRomanNumeralsCard = styled.div`\r\n    ul {\r\n        display: flex;\r\n        gap: 4px;\r\n        flex-wrap: wrap;\r\n        a {\r\n            padding: 4px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst RomanNumeralsCard: React.FC<any> = ({ model }) => {\r\n    const pageProps = usePageProps();\r\n    const [root, setRoot] = useRecoilState(rootState);\r\n\r\n    const numerals = model.getAllNumerals();\r\n\r\n    if (!numerals.length) return null;\r\n\r\n    return (\r\n        <Card\r\n            title=\"Roman Numerals\"\r\n        >\r\n            <StyledRomanNumeralsCard>\r\n                <ul>\r\n                    {numerals.map((n, i) => (\r\n                        <li key={i}>\r\n                            <Link to={`/${n.modelId}/${n.id}`}>{n.name}</Link>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </StyledRomanNumeralsCard>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default RomanNumeralsCard;\r\n","import Scale from \"@pw-core/models/Scale\";\r\nimport React from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport styled from 'styled-components';\r\nimport { rootState } from \"../../state/state\";\r\nimport BreadcrumbList from \"../_shared/breadcrumb-list/BreadcrumbList\";\r\nimport DetailsCard from \"../_shared/cards/DetailsCard\";\r\nimport GuitarCard from \"../_shared/cards/GuitarCard\";\r\nimport ModeCard from \"../_shared/cards/ModeCard\";\r\nimport RelatedCard from \"../_shared/cards/RelatedCard\";\r\nimport RomanNumeralsCard from \"../_shared/cards/RomanNumeralsCard\";\r\nimport SoundCard from \"../_shared/cards/SoundCard\";\r\nimport { StyledPageBody } from \"../_shared/layout/PageBody\";\r\nimport PageTitle from \"../_shared/layout/PageTitle\";\r\nimport { StyledPane } from \"../_shared/layout/Pane\";\r\n\r\nconst StyledScalePage = styled(StyledPageBody)`\r\n   \r\n`;\r\n\r\n\r\nconst ScalePage: React.FC<any> = props => {\r\n\r\n    const root = useRecoilValue(rootState)\r\n\r\n    const scale = new Scale(props.params.id, { root });\r\n\r\n    return (\r\n        <StyledScalePage>\r\n            <BreadcrumbList id={scale.id} name={scale.name} path={props.path} />\r\n            <PageTitle title={scale.name} subtitle=\"Scale\" />\r\n            <StyledPane>\r\n                <DetailsCard model={scale} />\r\n                <GuitarCard model={scale} />\r\n                <RomanNumeralsCard model={scale} />\r\n                <ModeCard model={scale} />\r\n                <RelatedCard model={scale} />\r\n                <SoundCard model={scale} />\r\n            </StyledPane>\r\n        </StyledScalePage >\r\n    );\r\n};\r\n\r\nexport default ScalePage;\r\n","import ScalePage from \"../../components/scales/ScalePage\";\r\n\r\nexport default ScalePage;\r\n"],"names":["StyledBreadcrumbList","styled","id","name","pieces","path","split","slice","length","paths","reduce","prev","cur","i","arr","replace","push","key","iconId","size","color","to","replaceAll","StyledRoot","NOTE_OPTIONS","NOTE_PRESETS","OCTAVE_OPTIONS","map","x","usePageProps","useRecoilState","rootState","root","setRoot","octave","getOctave","selectedRoot","InputRow","label","DropdownInput","options","value","setValue","note","undefined","Note","v","NumberUtils","pod","setOctave","StyledDetailsCard","StyledCard","theme","text","secondary","model","intervals","notes","ivl","className","getName","getFrequency","getRatio","StyledGuitarCard","VOICING_OPTIONS","VoicingId","VOICING_PRESETS","useState","voicing","setVoicing","FRETBOARD_TUNING_VALUES","tuning","setTuning","fretboardProps","getFretboardProps","title","TuningId","StyledRelated","subchords","getSubchords","subscales","getSubscales","superchords","getSuperchords","superscales","getSuperscales","s","StyledPane","Scale","SCALE_PRESET_MAP","getMode","d","rotated","this","podList","ArrayUtils","curPod","newPods","newIntervals","IntervalSpan","IntervalId","newPod","subtractPods","newIvl","fromValue","getAllModes","modes","tags","includes","ScaleTag","getNumeral","curIntervals","curD","curIvl","numeral","Chord","applyRoot","getAllNumerals","numerals","PodList","Model","SCALE_PRESETS","arePodListsEqual","reducePodList","StyledModeCard","modeType","Card","n","modelId","StyledRomanNumeralsCard","StyledScalePage","StyledPageBody","props","useRecoilValue","scale","params","BreadcrumbList","PageTitle","subtitle","DetailsCard","GuitarCard","RelatedCard","SoundCard"],"sourceRoot":""}