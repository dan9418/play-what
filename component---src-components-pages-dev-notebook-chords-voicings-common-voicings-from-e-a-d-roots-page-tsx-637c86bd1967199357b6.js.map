{"version":3,"file":"component---src-components-pages-dev-notebook-chords-voicings-common-voicings-from-e-a-d-roots-page-tsx-637c86bd1967199357b6.js","mappings":"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","sources":["webpack://play-what/./src/components/pages/dev/notebook/chords/voicings/common-voicings-from-e-a-d-roots.page.tsx","webpack://play-what/./src/components/ui/Card.tsx","webpack://play-what/./src/components/ui/FretboardCell.tsx","webpack://play-what/./src/components/ui/SmartCard.tsx","webpack://play-what/./src/components/ui/Table.tsx","webpack://play-what/./src/viewers/fret-table/FretFlag.tsx","webpack://play-what/./src/viewers/fret-table/FretTable.tsx","webpack://play-what/./src/viewers/fretboard/Fretboard.tuning.ts","webpack://play-what/./src/viewers/fretboard/Fretboard.utils.ts","webpack://play-what/./src/viewers/fretboard/Fretboard.voicing.ts"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Chord from \"../../../../../../core/models/Chord\";\r\nimport { ChordId, NoteId } from \"../../../../../../core/models/Model.constants\";\r\nimport Note from \"../../../../../../core/models/Note\";\r\nimport {\r\n  VoicingId,\r\n  VOICING_PRESET_MAP,\r\n} from \"../../../../../../viewers/fretboard/Fretboard.voicing\";\r\nimport PageLayout from \"../../../../../layout/PageLayout\";\r\nimport FretboardCell from \"../../../../../ui/FretboardCell\";\r\nimport SmartCard, { ICardConfig } from \"../../../../../ui/SmartCard\";\r\n\r\nconst StyledVoicingsPage = styled(PageLayout)``;\r\n\r\nconst THEAD = [\"Model\", \"Triad\", \"Seventh\", \"Drop 3-7\", \"Drop 7-3\"];\r\n\r\nconst CHORD_IDS = [ChordId.Maj7, ChordId.Min7, ChordId.Dom7, ChordId.HalfDim7];\r\n\r\nconst CHORD_ROOT = Note.fromId(NoteId.C);\r\n\r\ninterface IRootCard {\r\n  stringRoot: string;\r\n  fretRange: [number, number];\r\n  voicingids: VoicingId[];\r\n}\r\n\r\nconst CARDS: IRootCard[] = [\r\n  {\r\n    stringRoot: \"E\",\r\n    fretRange: [6, 10],\r\n    voicingids: [\r\n      VoicingId.Chord_Triad_EShape_1,\r\n      VoicingId.Chord_Seventh_EShape_1,\r\n      VoicingId.Chord_Shell_E_37,\r\n      VoicingId.Chord_Shell_E_73,\r\n    ],\r\n  },\r\n  {\r\n    stringRoot: \"A\",\r\n    fretRange: [2, 6],\r\n    voicingids: [\r\n      VoicingId.Chord_Triad_AShape_1,\r\n      VoicingId.Chord_Seventh_AShape_1,\r\n      VoicingId.Chord_Shell_A_37,\r\n      VoicingId.Chord_Shell_A_73,\r\n    ],\r\n  },\r\n  {\r\n    stringRoot: \"D\",\r\n    fretRange: [8, 12],\r\n    voicingids: [\r\n      VoicingId.Chord_Triad_DShape_1,\r\n      VoicingId.Chord_Seventh_DShape_1,\r\n      VoicingId.Chord_Shell_D_37,\r\n      VoicingId.Chord_Shell_D_73,\r\n    ],\r\n  },\r\n];\r\n\r\nconst getVoicingCols = ({ voicingIds, modelId, root, fretRange }) =>\r\n  voicingIds.map((voicingId, i) => {\r\n    const instance = new Chord(modelId, { root });\r\n    const voicing = VOICING_PRESET_MAP.get(voicingId);\r\n    return {\r\n      content: (\r\n        <FretboardCell\r\n          fretboardConfig={{\r\n            model: instance,\r\n            voicing,\r\n            fretRange,\r\n            showFretNumbers: false,\r\n            showFretDots: false,\r\n          }}\r\n        />\r\n      ),\r\n    };\r\n  });\r\n\r\nconst getChordRows = (\r\n  chordIds: ChordId[],\r\n  voicingIds: VoicingId[],\r\n  root: Note,\r\n  fretRange: [number, number]\r\n) => {\r\n  return chordIds.map((modelId, i) => {\r\n    return {\r\n      cols: [\r\n        new Chord(modelId).getName(),\r\n        ...getVoicingCols({\r\n          voicingIds,\r\n          modelId,\r\n          root,\r\n          fretRange,\r\n        }),\r\n      ],\r\n    };\r\n  });\r\n};\r\n\r\nconst getRootCard = (\r\n  chordIds: ChordId[],\r\n  root: Note,\r\n  stringRoot: string,\r\n  voicingIds: VoicingId[],\r\n  fretRange: [number, number]\r\n) => {\r\n  return {\r\n    title: `${stringRoot} Root`,\r\n    table: {\r\n      thead: [{ cols: THEAD }],\r\n      tbody: getChordRows(chordIds, voicingIds, root, fretRange),\r\n      headerColIndicies: [0],\r\n    },\r\n  };\r\n};\r\n\r\nconst getCardConfigs = (\r\n  cards: IRootCard[],\r\n  chordIds: ChordId[],\r\n  root: Note\r\n): ICardConfig[] => {\r\n  return cards.map(({ stringRoot, voicingids, fretRange }) =>\r\n    getRootCard(chordIds, root, stringRoot, voicingids, fretRange)\r\n  );\r\n};\r\n\r\nconst Page: React.FC = () => {\r\n  return (\r\n    <StyledVoicingsPage title=\"Chord Voicings\">\r\n      <SmartCard cards={getCardConfigs(CARDS, CHORD_IDS, CHORD_ROOT)} />\r\n    </StyledVoicingsPage>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import React, { PropsWithChildren } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const StyledCard = styled.div`\r\n  background: ${(props) => props.theme.surface.card};\r\n  width: 100%;\r\n  border-radius: 16px;\r\n  padding: 16px;\r\n\r\n  .header {\r\n    margin-bottom: 16px;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nexport const CardHeader: React.FC<any> = ({\r\n  title,\r\n  level = 2,\r\n  action = null,\r\n}) => {\r\n  const AsTag: any = `h${level}`;\r\n  return (\r\n    <div className=\"header\">\r\n      <AsTag>{title}</AsTag>\r\n      {action}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport interface ICardProps extends PropsWithChildren<any> {\r\n  title?: string;\r\n  subtitle?: string;\r\n  action?: any;\r\n  level?: number;\r\n}\r\n\r\nconst Card: React.FC<ICardProps> = ({\r\n  title,\r\n  subtitle,\r\n  action,\r\n  children,\r\n  level = 1,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <StyledCard {...rest}>\r\n      {title && <CardHeader title={title} action={action} level={level} />}\r\n      {subtitle && <CardHeader title={subtitle} level={level + 1} />}\r\n      {children}\r\n    </StyledCard>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport FretTable from \"../../viewers/fret-table/FretTable\";\r\nimport { IFretboardProps } from \"../../viewers/fretboard/Fretboard.utils\";\r\n\r\nexport const StyledFretboardCell = styled.div`\r\n  padding: 8px;\r\n  .caption {\r\n    font-weight: bold;\r\n    font-size: 90%;\r\n    text-align: center;\r\n    margin-top: 8px;\r\n  }\r\n`;\r\n\r\ninterface IFretboardCellProps {\r\n  fretboardConfig: IFretboardProps;\r\n  caption?: string;\r\n}\r\n\r\nconst FretboardCell: React.FC<IFretboardCellProps> = ({\r\n  fretboardConfig,\r\n  caption,\r\n}) => {\r\n  return (\r\n    <StyledFretboardCell>\r\n      <FretTable {...fretboardConfig} />\r\n      {caption && <div className=\"caption\">{caption}</div>}\r\n    </StyledFretboardCell>\r\n  );\r\n};\r\n\r\nexport default FretboardCell;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Card, { StyledCard } from \"./Card\";\r\nimport { ITableConfig, Table } from \"./Table\";\r\n\r\nexport const StyledSmartCard = styled.div`\r\n  overflow-x: scroll;\r\n  ${StyledCard} {\r\n    min-width: 1024px;\r\n    margin-top: 16px;\r\n    > table {\r\n      table-layout: fixed;\r\n      width: 100%;\r\n      > tbody > tr > td {\r\n        vertical-align: top;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface ICardConfig {\r\n  title: string;\r\n  table: ITableConfig;\r\n}\r\n\r\ninterface ISmartCardProps {\r\n  cards: ICardConfig[];\r\n}\r\n\r\nconst SmartCard: React.FC<ISmartCardProps> = ({ cards }) => {\r\n  return (\r\n    <StyledSmartCard>\r\n      {cards.map((card) => {\r\n        return (\r\n          <Card title={card.title}>\r\n            <Table {...card.table} />\r\n          </Card>\r\n        );\r\n      })}\r\n    </StyledSmartCard>\r\n  );\r\n};\r\n\r\nexport default SmartCard;\r\n","import { Link } from \"gatsby\";\r\nimport React, { Fragment, ReactNode } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledTable = styled.table``;\r\n\r\ntype TOmit = undefined | null | false;\r\n\r\nconst getIsTypeOmit = (data: any): data is TOmit =>\r\n  data === undefined || data === null || data === false;\r\n\r\n// Col\r\n\r\nexport interface IColConfig {\r\n  isHeader?: boolean;\r\n  content: any;\r\n  colSpan?: number;\r\n  className?: string;\r\n  link?: string;\r\n}\r\n\r\ninterface IColProps extends IColConfig {\r\n  index: number;\r\n}\r\n\r\ntype TCol = string | number | IColConfig | ReactNode;\r\n\r\nconst Col: React.FC<IColProps> = ({\r\n  index,\r\n  isHeader,\r\n  content,\r\n  colSpan,\r\n  className,\r\n  link,\r\n}) => {\r\n  const ColTag = isHeader ? \"th\" : \"td\";\r\n  const WrapperTag = link ? Link : Fragment;\r\n  const wrapperProps: any = link ? { to: link } : {};\r\n\r\n  return (\r\n    <ColTag colSpan={colSpan} className={className}>\r\n      <WrapperTag {...wrapperProps}>{content || \"\"}</WrapperTag>\r\n    </ColTag>\r\n  );\r\n};\r\n\r\n// Row\r\n\r\nexport interface IRowConfig {\r\n  cols: (TCol | TOmit)[];\r\n  className?: string;\r\n  isHeader?: boolean;\r\n  headerColIndicies?: number[];\r\n}\r\n\r\nconst getIsConfig = (col: TCol): col is IColConfig =>\r\n  typeof col === \"object\" && col !== null && col.hasOwnProperty(\"content\");\r\n\r\nconst Row: React.FC<IRowConfig> = ({\r\n  cols,\r\n  isHeader,\r\n  className,\r\n  headerColIndicies = [],\r\n}) => {\r\n  return (\r\n    <tr className={className}>\r\n      {cols.map((col: any, i) => {\r\n        if (getIsTypeOmit(col)) return null;\r\n        const isConfig = getIsConfig(col);\r\n        const colConfig = !isConfig ? { content: col } : col;\r\n        return (\r\n          <Col\r\n            key={i}\r\n            index={i}\r\n            isHeader={isHeader || headerColIndicies.includes(i)}\r\n            {...colConfig}\r\n          />\r\n        );\r\n      })}\r\n    </tr>\r\n  );\r\n};\r\n\r\n// Table Section\r\n\r\ninterface ITableSectionConfig {\r\n  Tag: \"thead\" | \"tfoot\" | \"tbody\";\r\n  rows: (IRowConfig | TOmit)[];\r\n  headerColIndicies?: number[];\r\n}\r\n\r\nconst TableSection: React.FC<ITableSectionConfig> = ({\r\n  Tag,\r\n  rows,\r\n  headerColIndicies,\r\n}) => (\r\n  <Tag>\r\n    {rows.map((row, i) => {\r\n      if (getIsTypeOmit(row)) return null;\r\n      return (\r\n        <Row\r\n          key={i}\r\n          isHeader={Tag !== \"tbody\"}\r\n          headerColIndicies={headerColIndicies}\r\n          {...row}\r\n        />\r\n      );\r\n    })}\r\n  </Tag>\r\n);\r\n\r\n// Table\r\n\r\ninterface IColGroup {\r\n  span?: number;\r\n  className?: string;\r\n}\r\n\r\nexport interface ITableConfig {\r\n  thead?: (IRowConfig | TOmit)[];\r\n  tfoot?: (IRowConfig | TOmit)[];\r\n  tbody: (IRowConfig | TOmit)[];\r\n  styles?: any;\r\n  caption?: string;\r\n  colGroups?: IColGroup[];\r\n  className?: string;\r\n  headerColIndicies?: number[];\r\n}\r\n\r\nexport const Table: React.FC<ITableConfig> = ({\r\n  thead,\r\n  tfoot,\r\n  tbody,\r\n  styles,\r\n  colGroups,\r\n  caption,\r\n  headerColIndicies,\r\n  className,\r\n}) => {\r\n  return (\r\n    <StyledTable css={styles} className={className}>\r\n      {colGroups && (\r\n        <colgroup>\r\n          {colGroups.map((cg, i) => (\r\n            <col key={i} {...cg} />\r\n          ))}\r\n        </colgroup>\r\n      )}\r\n      {caption && <caption>{caption}</caption>}\r\n      {thead && (\r\n        <TableSection\r\n          Tag=\"thead\"\r\n          rows={thead}\r\n          headerColIndicies={headerColIndicies}\r\n        />\r\n      )}\r\n      {tfoot && (\r\n        <TableSection\r\n          Tag=\"tfoot\"\r\n          rows={tfoot}\r\n          headerColIndicies={headerColIndicies}\r\n        />\r\n      )}\r\n      {tbody && (\r\n        <TableSection\r\n          Tag=\"tbody\"\r\n          rows={tbody}\r\n          headerColIndicies={headerColIndicies}\r\n        />\r\n      )}\r\n    </StyledTable>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IFretFlagProps {\r\n  color?: string;\r\n  text?: string | number;\r\n  opacity?: number;\r\n}\r\n\r\nexport const StyledFretFlag = styled.div<{\r\n  $color?: string;\r\n  $opacity?: number;\r\n}>`\r\n  height: 16px;\r\n  width: 16px;\r\n  background: ${(props) => props.$color || \"\"};\r\n  opacity: ${(props) => props.$opacity || 1};\r\n  border-radius: 100%;\r\n  z-index: 1;\r\n`;\r\n\r\nconst FretFlag: React.FC<IFretFlagProps> = ({ color, text, opacity }) => {\r\n  return (\r\n    <StyledFretFlag $color={color} $opacity={opacity}>\r\n      {text}\r\n    </StyledFretFlag>\r\n  );\r\n};\r\n\r\nexport default FretFlag;\r\n","import * as React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { IColConfig, IRowConfig, Table } from \"../../components/ui/Table\";\r\nimport {\r\n  DEFAULT_FRETBOARD_PROPS,\r\n  getDotsForFret,\r\n  IFretboardProps,\r\n} from \"../fretboard/Fretboard.utils\";\r\nimport FretFlag from \"./FretFlag\";\r\n\r\nexport const StyledFretTable = styled.div``;\r\n\r\nconst tableStyles = css`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  td,\r\n  th {\r\n    min-width: 18px;\r\n    text-align: center;\r\n  }\r\n  tbody td {\r\n    background-color: #e8dbb8;\r\n\r\n    border-right: 1px solid grey;\r\n    &:first-child {\r\n      border-left: 1px solid grey;\r\n    }\r\n    .fret-content {\r\n      min-height: 32px;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      position: relative;\r\n    }\r\n    .fret-string {\r\n      height: 1px;\r\n      background: #bbb;\r\n      width: 100%;\r\n      position: absolute;\r\n      margin: auto 0;\r\n    }\r\n  }\r\n  tbody tr {\r\n    &:first-child {\r\n      border-top: 1px solid grey;\r\n    }\r\n    &:last-child {\r\n      border-bottom: 1px solid grey;\r\n    }\r\n  }\r\n`;\r\n\r\nconst FretTable: React.FC<IFretboardProps> = (userProps) => {\r\n  const props = { ...DEFAULT_FRETBOARD_PROPS, ...userProps };\r\n\r\n  const { fretRange, showFretDots, showFretNumbers, tuning, colorMapFn } =\r\n    props;\r\n  const [lo, hi] = fretRange as [number, number];\r\n\r\n  const numFrets = hi - lo + 1;\r\n  const numStrings = (tuning as number[]).length;\r\n\r\n  const fretNums: number[] = [];\r\n  for (let i = 0; i < numFrets; i++) {\r\n    fretNums.push(lo + i);\r\n  }\r\n\r\n  const fretDots: string[] = [];\r\n  for (let i = 0; i < numFrets; i++) {\r\n    fretDots.push(getDotsForFret(lo + i));\r\n  }\r\n\r\n  const strings: IRowConfig[] = [];\r\n  for (let s = 0; s < numStrings; s++) {\r\n    const frets: IColConfig[] = [];\r\n    for (let f = lo; f <= hi; f++) {\r\n      frets.push({\r\n        content: (\r\n          <div className=\"fret-content\">\r\n            <div className=\"fret-string\" />\r\n            <FretFlag\r\n              color={(colorMapFn as any)({\r\n                stringIndex: s,\r\n                fretIndex: f,\r\n                ...props,\r\n              })}\r\n              text=\"\"\r\n              opacity={1}\r\n            />\r\n          </div>\r\n        ),\r\n      });\r\n    }\r\n    strings.push({\r\n      cols: frets,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <StyledFretTable>\r\n      <Table\r\n        thead={showFretNumbers ? [{ cols: fretNums }] : undefined}\r\n        tfoot={showFretDots ? [{ cols: fretDots }] : undefined}\r\n        tbody={strings}\r\n        styles={tableStyles}\r\n      />\r\n    </StyledFretTable>\r\n  );\r\n};\r\n\r\nexport default FretTable;\r\n","import ArrayUtils from \"../../core/general/Array.utils\";\r\nimport Note from '../../core/models/Note';\r\nimport { NoteId } from './../../core/models/Model.constants';\r\n\r\nexport enum TuningId {\r\n    Standard = 'standard',\r\n    StandardSeven = 'standard-seven',\r\n    StandardBass = 'standard-bass',\r\n    Flat = 'flat',\r\n    DoubleFlat = 'double-flat',\r\n    DropD = 'drop-d',\r\n    DADGAD = 'dadgad',\r\n    Banjo = 'banjo',\r\n    Violin = 'violin',\r\n    OpenA = 'open-a',\r\n    OpenB = 'open-b',\r\n    OpenC = 'open-c',\r\n    OpenD = 'open-d',\r\n    OpenE = 'open-e',\r\n    OpenF = 'open-f',\r\n    OpenG = 'open-g',\r\n}\r\n\r\nexport interface ITuning {\r\n    id: TuningId;\r\n    name: string;\r\n    value: number[]\r\n}\r\n\r\nconst formatPreset = (id: TuningId, name: string, value: number[]): ITuning => ({\r\n    id,\r\n    name,\r\n    value\r\n});\r\n\r\nconst getPitch = (noteId: NoteId, octave: number): number => Note.getNote(noteId, octave).pod[0];\r\n\r\nexport const TUNING_PRESET_MAP = new Map<TuningId, ITuning>([\r\n    [TuningId.Standard, formatPreset(\r\n        TuningId.Standard,\r\n        'Standard Guitar',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.E, 3)\r\n        ]\r\n    )],\r\n    [TuningId.Flat, formatPreset(\r\n        TuningId.Flat,\r\n        'Flat Gtr',\r\n        [\r\n            getPitch(NoteId.Eb, 5),\r\n            getPitch(NoteId.Bb, 4),\r\n            getPitch(NoteId.Gb, 4),\r\n            getPitch(NoteId.Db, 4),\r\n            getPitch(NoteId.Ab, 3),\r\n            getPitch(NoteId.Eb, 3)\r\n        ]\r\n    )],\r\n    [TuningId.DoubleFlat, formatPreset(\r\n        TuningId.DoubleFlat,\r\n        'Double Flat Gtr',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.F, 4),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    [TuningId.StandardSeven, formatPreset(\r\n        TuningId.StandardSeven,\r\n        'Standard 7-String Gtr',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.E, 3),\r\n            getPitch(NoteId.B, 3)\r\n        ]\r\n    )],\r\n    [TuningId.StandardBass, formatPreset(\r\n        TuningId.StandardBass,\r\n        'Standard Bass',\r\n        [\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.D, 3),\r\n            getPitch(NoteId.A, 2),\r\n            getPitch(NoteId.E, 2)\r\n        ]\r\n    )],\r\n    [TuningId.DropD, formatPreset(\r\n        TuningId.DropD,\r\n        'Drop D Gtr',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    [TuningId.DADGAD, formatPreset(\r\n        TuningId.DADGAD,\r\n        'DADGAD',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    // Unconfirmed\r\n    /*[TuningId.Banjo, formatPreset(\r\n        TuningId.Banjo,\r\n        'Banjo',\r\n        [\r\n            getPitch(NoteId.G, 5),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],*/\r\n    // Unconfirmed\r\n    [TuningId.Violin, formatPreset(\r\n        TuningId.Violin,\r\n        'Violin',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.G, 4)\r\n        ]\r\n    )],\r\n    [TuningId.OpenA, formatPreset(\r\n        TuningId.OpenA,\r\n        'Open A',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.E, 4),\r\n            getPitch(NoteId.Cs, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.E, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenB, formatPreset(\r\n        TuningId.OpenB,\r\n        'Open B',\r\n        [\r\n            getPitch(NoteId.Ds, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.Fs, 4),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.Fs, 3),\r\n            getPitch(NoteId.B, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenC, formatPreset(\r\n        TuningId.OpenC,\r\n        'Open C',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.C, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenD, formatPreset(\r\n        TuningId.OpenD,\r\n        'Open D',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.A, 4),\r\n            getPitch(NoteId.Fs, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenE, formatPreset(\r\n        TuningId.OpenE,\r\n        'Open E',\r\n        [\r\n            getPitch(NoteId.E, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.Gs, 4),\r\n            getPitch(NoteId.E, 4),\r\n            getPitch(NoteId.B, 3),\r\n            getPitch(NoteId.E, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenF, formatPreset(\r\n        TuningId.OpenF,\r\n        'Open F',\r\n        [\r\n            getPitch(NoteId.F, 5),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.F, 4),\r\n            getPitch(NoteId.C, 4),\r\n            getPitch(NoteId.A, 3),\r\n            getPitch(NoteId.F, 3)\r\n        ]\r\n    )],\r\n    [TuningId.OpenG, formatPreset(\r\n        TuningId.OpenG,\r\n        'Open G',\r\n        [\r\n            getPitch(NoteId.D, 5),\r\n            getPitch(NoteId.B, 4),\r\n            getPitch(NoteId.G, 4),\r\n            getPitch(NoteId.D, 4),\r\n            getPitch(NoteId.G, 3),\r\n            getPitch(NoteId.D, 3)\r\n        ]\r\n    )]\r\n]);\r\n\r\nexport const FRETBOARD_TUNING_VALUES = ArrayUtils.mapToArray(TUNING_PRESET_MAP);\r\n","import Chord from \"../../core/models/Chord\";\r\nimport IntervalSpan from \"../../core/models/Interval\";\r\nimport { IModelConfig } from \"../../core/models/Model.constants\";\r\nimport Note from \"../../core/models/Note\";\r\nimport Scale from \"../../core/models/Scale\";\r\nimport { ITuning, TuningId, TUNING_PRESET_MAP } from \"./Fretboard.tuning\";\r\nimport { IVoicing } from \"./Fretboard.voicing\";\r\n\r\nexport interface IFretLabelProps {\r\n  note?: Note;\r\n  color?: string;\r\n  freq?: number;\r\n}\r\n\r\nexport interface IFretboardProps {\r\n  fretRange?: [number, number];\r\n  showFretDots?: boolean;\r\n  showFretNumbers?: boolean;\r\n  colorMapFn?: (fretProps: IFretProps) => string | undefined;\r\n  voicing?: IVoicing;\r\n  tuning?: number[]; // ITuning,\r\n  model?: Chord | Scale;\r\n}\r\n\r\nexport interface IFretProps extends IFretboardProps {\r\n  stringIndex: number;\r\n  fretIndex: number;\r\n}\r\n\r\nexport const DOTTED_FRET_INDICES = [\r\n  true,\r\n  false,\r\n  false,\r\n  true,\r\n  false,\r\n  true,\r\n  false,\r\n  true,\r\n  false,\r\n  true,\r\n  false,\r\n  false,\r\n];\r\n\r\nexport const FRET_SIZE_RATIO = Math.pow(1 / 2, 1 / 12);\r\n\r\nexport const isIntervalInVoicing = (\r\n  interval: IntervalSpan,\r\n  voicing: IVoicing,\r\n  stringIndex: number\r\n) => {\r\n  if (!voicing || !voicing.value) return true;\r\n  const v = voicing.value[stringIndex];\r\n  const d = interval.getDegree();\r\n  if (Array.isArray(v)) {\r\n    return v.some((n) => doesVoicingValueMatch(d, n));\r\n  } else if (typeof v === \"number\") {\r\n    return doesVoicingValueMatch(d, v);\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const getFretColor = (props: IFretProps): string | undefined => {\r\n  const { stringIndex, fretIndex, tuning, model, voicing } = props;\r\n  const noteIndex = tuning[stringIndex] + fretIndex;\r\n  const [interval, note] = model.tryGetPodPairAtPitch(noteIndex);\r\n\r\n  if (!note) return;\r\n\r\n  if (voicing && !isIntervalInVoicing(interval, voicing, stringIndex)) {\r\n    return `#00000011`;\r\n  }\r\n\r\n  return interval.getColor();\r\n};\r\n\r\nexport const DEFAULT_FRETBOARD_PROPS: IFretboardProps = {\r\n  fretRange: [1, 12],\r\n  tuning: TUNING_PRESET_MAP.get(TuningId.Standard).value,\r\n  showFretDots: true,\r\n  showFretNumbers: true,\r\n  colorMapFn: getFretColor,\r\n};\r\n\r\nexport const getFretRatios = (numFrets: number): number[] => {\r\n  const ratios = [];\r\n  for (let i = 1; i <= numFrets; i++) {\r\n    ratios.push(i <= 1 ? 1 : ratios[i - 2] * FRET_SIZE_RATIO);\r\n  }\r\n  return ratios;\r\n};\r\n\r\nexport const getDotsForFret = (fretNumber: number): string => {\r\n  if (fretNumber === 0) return \"\";\r\n  const mod = fretNumber % 12;\r\n  if (mod === 0) return \"• •\";\r\n  else if (DOTTED_FRET_INDICES[mod]) return \"•\";\r\n  return \"\";\r\n};\r\n\r\nconst doesVoicingValueMatch = (d: number, v: number) => {\r\n  return d + 1 === v;\r\n};\r\n","import ArrayUtils from \"../../core/general/Array.utils\";\r\n\r\nexport enum VoicingId {\r\n    None = 'None',\r\n    Chord_Triad_CShape_1 = 'Chord_Triad_CShape_1',\r\n    Chord_Triad_AShape_1 = 'Chord_Triad_AShape_1',\r\n    Chord_Triad_GShape_1 = 'Chord_Triad_GShape_1',\r\n    Chord_Triad_EShape_1 = 'Chord_Triad_EShape_1',\r\n    Chord_Triad_DShape_1 = 'Chord_Triad_DShape_1',\r\n    Chord_Sixth_CShape_1 = 'Chord_Sixth_CShape_1',\r\n    Chord_Sixth_AShape_1 = 'Chord_Sixth_AShape_1',\r\n    Chord_Sixth_GShape_1 = 'Chord_Sixth_GShape_1',\r\n    Chord_Sixth_EShape_1 = 'Chord_Sixth_EShape_1',\r\n    Chord_Sixth_DShape_1 = 'Chord_Sixth_DShape_1',\r\n    Chord_Seventh_CShape_1 = 'Chord_Seventh_CShape_1',\r\n    Chord_Seventh_AShape_1 = 'Chord_Seventh_AShape_1',\r\n    Chord_Seventh_GShape_1 = 'Chord_Seventh_GShape_1',\r\n    Chord_Seventh_EShape_1 = 'Chord_Seventh_EShape_1',\r\n    Chord_Seventh_DShape_1 = 'Chord_Seventh_DShape_1',\r\n    Chord_Shell_E_37 = 'Chord_Shell_E_37',\r\n    Chord_Shell_E_73 = 'Chord_Shell_E_73',\r\n    Chord_Shell_A_37 = 'Chord_Shell_A_37',\r\n    Chord_Shell_A_73 = 'Chord_Shell_A_73',\r\n    Chord_Shell_D_37 = 'Chord_Shell_D_37',\r\n    Chord_Shell_D_73 = 'Chord_Shell_D_73',\r\n    Scale_DoubleOctave_CShape_1 = 'Scale_DoubleOctave_CShape_1',\r\n    Scale_DoubleOctave_CShape_2 = 'Scale_DoubleOctave_CShape_2',\r\n    Scale_DoubleOctave_AShape_1 = 'Scale_DoubleOctave_AShape_1',\r\n    Scale_DoubleOctave_GShape_1 = 'Scale_DoubleOctave_GShape_1',\r\n    Scale_DoubleOctave_EShape_1 = 'Scale_DoubleOctave_EShape_1',\r\n    Scale_DoubleOctave_EShape_2 = 'Scale_DoubleOctave_EShape_2',\r\n    Scale_DoubleOctave_DShape_1 = 'Scale_DoubleOctave_DShape_1',\r\n}\r\n\r\nexport interface IVoicing {\r\n    id: VoicingId;\r\n    name: string;\r\n    value: (number | number[])[]\r\n}\r\n\r\nconst formatPreset = (id: VoicingId, name: string, value: (number | number[])[]): IVoicing => ({\r\n    id,\r\n    name,\r\n    value\r\n});\r\n\r\nexport const VOICING_PRESET_MAP = new Map<VoicingId, IVoicing>([\r\n    // Triads\r\n    [VoicingId.Chord_Triad_CShape_1, formatPreset(\r\n        VoicingId.Chord_Triad_CShape_1,\r\n        'C Shape Triad',\r\n        [3, 1, 5, 3, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Triad_AShape_1, formatPreset(\r\n        VoicingId.Chord_Triad_AShape_1,\r\n        'A Shape Triad',\r\n        [5, 3, 1, 5, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Triad_GShape_1, formatPreset(\r\n        VoicingId.Chord_Triad_GShape_1,\r\n        'G Shape Triad',\r\n        [1, 5, 1, 5, 3, 1]\r\n    )],\r\n    [VoicingId.Chord_Triad_EShape_1, formatPreset(\r\n        VoicingId.Chord_Triad_EShape_1,\r\n        'E Shape Triad',\r\n        [1, 5, 3, 1, 5, 1]\r\n    )],\r\n    [VoicingId.Chord_Triad_DShape_1, formatPreset(\r\n        VoicingId.Chord_Triad_DShape_1,\r\n        'D Shape Triad',\r\n        [3, 1, 5, 1, null, null]\r\n    )],\r\n    // Sixths\r\n    [VoicingId.Chord_Sixth_CShape_1, formatPreset(\r\n        VoicingId.Chord_Sixth_CShape_1,\r\n        'C Shape 6th Chord',\r\n        [3, 6, 5, 3, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Sixth_AShape_1, formatPreset(\r\n        VoicingId.Chord_Sixth_AShape_1,\r\n        'A Shape 6th Chord',\r\n        [5, 3, 6, 5, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Sixth_GShape_1, formatPreset(\r\n        VoicingId.Chord_Sixth_GShape_1,\r\n        'G Shape 6th Chord',\r\n        [6, 5, 1, 5, 3, 1]\r\n    )],\r\n    [VoicingId.Chord_Sixth_EShape_1, formatPreset(\r\n        VoicingId.Chord_Sixth_EShape_1,\r\n        'E Shape 6th Chord',\r\n        [1, 5, 3, 6, 5, 1]\r\n    )],\r\n    [VoicingId.Chord_Sixth_DShape_1, formatPreset(\r\n        VoicingId.Chord_Sixth_DShape_1,\r\n        'D Shape 6th Chord',\r\n        [3, 6, 5, 1, null, null]\r\n    )],\r\n    // Sevenths\r\n    [VoicingId.Chord_Seventh_CShape_1, formatPreset(\r\n        VoicingId.Chord_Seventh_CShape_1,\r\n        'C Shape 7th Chord',\r\n        [3, 7, 5, 3, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Seventh_AShape_1, formatPreset(\r\n        VoicingId.Chord_Seventh_AShape_1,\r\n        'A Shape 7th Chord',\r\n        [5, 3, 7, 5, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Seventh_GShape_1, formatPreset(\r\n        VoicingId.Chord_Seventh_GShape_1,\r\n        'G Shape 7th Chord',\r\n        [7, 5, 1, 5, 3, 1]\r\n    )],\r\n    [VoicingId.Chord_Seventh_EShape_1, formatPreset(\r\n        VoicingId.Chord_Seventh_EShape_1,\r\n        'E Shape 7th Chord',\r\n        [1, 5, 3, 7, 5, 1]\r\n    )],\r\n    [VoicingId.Chord_Seventh_DShape_1, formatPreset(\r\n        VoicingId.Chord_Seventh_DShape_1,\r\n        'D Shape 7th Chord',\r\n        [3, 7, 5, 1, null, null]\r\n    )],\r\n    // Shells\r\n    [VoicingId.Chord_Shell_E_37, formatPreset(\r\n        VoicingId.Chord_Shell_E_37,\r\n        'Shell E 3-7',\r\n        [null, null, null, 7, 3, 1]\r\n    )],\r\n    [VoicingId.Chord_Shell_E_73, formatPreset(\r\n        VoicingId.Chord_Shell_E_73,\r\n        'Shell E 7-3',\r\n        [null, null, 3, 7, null, 1]\r\n    )],\r\n    [VoicingId.Chord_Shell_A_37, formatPreset(\r\n        VoicingId.Chord_Shell_A_37,\r\n        'Shell A 3-7',\r\n        [null, null, 7, 3, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Shell_A_73, formatPreset(\r\n        VoicingId.Chord_Shell_A_73,\r\n        'Shell A 7-3',\r\n        [null, 3, 7, null, 1, null]\r\n    )],\r\n    [VoicingId.Chord_Shell_D_37, formatPreset(\r\n        VoicingId.Chord_Shell_D_37,\r\n        'Shell D 3-7',\r\n        [null, 7, 3, 1, null, null]\r\n    )],\r\n    [VoicingId.Chord_Shell_D_73, formatPreset(\r\n        VoicingId.Chord_Shell_D_73,\r\n        'Shell D 7-3',\r\n        [3, 7, null, 1, null, null]\r\n    )],\r\n    // CAGED Scales\r\n    [VoicingId.Scale_DoubleOctave_EShape_1, formatPreset(\r\n        VoicingId.Scale_DoubleOctave_EShape_1,\r\n        'E Shape Scale (Locrian)',\r\n        [[1, 2, 3], [6, 7], [3, 4, 5], [7, 1, 2], [4, 5, 6], [1, 2, 3]]\r\n    )],\r\n    [VoicingId.Scale_DoubleOctave_EShape_2, formatPreset(\r\n        VoicingId.Scale_DoubleOctave_EShape_2,\r\n        'E Shape Scale (Ionian)',\r\n        [[7, 1, 2], [5, 6], [2, 3, 4], [6, 7, 1], [3, 4, 5], [1, 2]]\r\n    )],\r\n    [VoicingId.Scale_DoubleOctave_DShape_1, formatPreset(\r\n        VoicingId.Scale_DoubleOctave_DShape_1,\r\n        'D Shape Scale (Dorian)',\r\n        [[1, 2, 3], [5, 6, 7], [2, 3, 4], [6, 7, 1], [4, 5], [1, 2, 3]]\r\n    )],\r\n    [VoicingId.Scale_DoubleOctave_CShape_1, formatPreset(\r\n        VoicingId.Scale_DoubleOctave_CShape_1,\r\n        'C Shape Scale (Phrygian)',\r\n        [[1, 2, 3], [5, 6, 7], [3, 4], [7, 1, 2], [4, 5, 6], [1, 2, 3]]\r\n    )],\r\n    [VoicingId.Scale_DoubleOctave_CShape_2, formatPreset(\r\n        VoicingId.Scale_DoubleOctave_CShape_2,\r\n        'C Shape Scale (Lydian)',\r\n        [[7, 1, 2], [4, 5, 6], [2, 3], [6, 7, 1], [3, 4, 5], [1, 2]]\r\n    )],\r\n    [VoicingId.Scale_DoubleOctave_AShape_1, formatPreset(\r\n        VoicingId.Scale_DoubleOctave_AShape_1,\r\n        'A Shape Scale (Mixolydian)',\r\n        [[1, 2], [5, 6, 7], [2, 3, 4], [6, 7, 1], [3, 4, 5], [1, 2]]\r\n    )],\r\n    [VoicingId.Scale_DoubleOctave_GShape_1, formatPreset(\r\n        VoicingId.Scale_DoubleOctave_GShape_1,\r\n        'G Shape Scale (Aeolian)',\r\n        [[1, 2, 3], [5, 6, 7], [2, 3, 4], [7, 1], [4, 5, 6], [1, 2, 3]]\r\n    )]\r\n])\r\n\r\nexport const VOICING_PRESETS = ArrayUtils.mapToArray(VOICING_PRESET_MAP);\r\n"],"names":["StyledVoicingsPage","styled","PageLayout","displayName","componentId","THEAD","CHORD_IDS","ChordId","CHORD_ROOT","Note","NoteId","CARDS","stringRoot","fretRange","voicingids","VoicingId","getVoicingCols","_ref","voicingIds","modelId","root","map","voicingId","i","instance","Chord","voicing","VOICING_PRESET_MAP","content","React","FretboardCell","fretboardConfig","model","showFretNumbers","showFretDots","getChordRows","chordIds","cols","getName","getCardConfigs","cards","_ref2","title","table","thead","tbody","headerColIndicies","getRootCard","SmartCard","StyledCard","props","theme","surface","card","CardHeader","level","action","AsTag","className","subtitle","children","rest","StyledFretboardCell","caption","FretTable","StyledSmartCard","Card","Table","StyledTable","getIsTypeOmit","data","Col","index","isHeader","colSpan","link","ColTag","WrapperTag","Link","Fragment","wrapperProps","to","Row","col","isConfig","hasOwnProperty","getIsConfig","colConfig","key","includes","TableSection","_ref3","Tag","rows","row","_ref4","tfoot","styles","colGroups","cg","StyledFretFlag","$color","$opacity","color","text","opacity","StyledFretTable","tableStyles","css","userProps","DEFAULT_FRETBOARD_PROPS","tuning","colorMapFn","lo","hi","numFrets","numStrings","length","fretNums","push","fretDots","getDotsForFret","strings","s","frets","f","FretFlag","stringIndex","fretIndex","undefined","TuningId","formatPreset","id","name","value","getPitch","noteId","octave","pod","TUNING_PRESET_MAP","Map","Standard","Flat","DoubleFlat","StandardSeven","StandardBass","DropD","DADGAD","Violin","OpenA","OpenB","OpenC","OpenD","OpenE","OpenF","OpenG","FRETBOARD_TUNING_VALUES","ArrayUtils","DOTTED_FRET_INDICES","isIntervalInVoicing","Math","pow","interval","v","d","getDegree","Array","isArray","some","n","doesVoicingValueMatch","noteIndex","note","tryGetPodPairAtPitch","getColor","fretNumber","mod","Chord_Triad_CShape_1","Chord_Triad_AShape_1","Chord_Triad_GShape_1","Chord_Triad_EShape_1","Chord_Triad_DShape_1","Chord_Sixth_CShape_1","Chord_Sixth_AShape_1","Chord_Sixth_GShape_1","Chord_Sixth_EShape_1","Chord_Sixth_DShape_1","Chord_Seventh_CShape_1","Chord_Seventh_AShape_1","Chord_Seventh_GShape_1","Chord_Seventh_EShape_1","Chord_Seventh_DShape_1","Chord_Shell_E_37","Chord_Shell_E_73","Chord_Shell_A_37","Chord_Shell_A_73","Chord_Shell_D_37","Chord_Shell_D_73","Scale_DoubleOctave_EShape_1","Scale_DoubleOctave_EShape_2","Scale_DoubleOctave_DShape_1","Scale_DoubleOctave_CShape_1","Scale_DoubleOctave_CShape_2","Scale_DoubleOctave_AShape_1","Scale_DoubleOctave_GShape_1","VOICING_PRESETS"],"sourceRoot":""}