{"version":3,"file":"component---src-components-pages-dev-notebook-roman-numerals-deriving-numerals-from-scales-page-tsx-498857299294172736a5.js","mappings":"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","sources":["webpack://play-what/./src/components/cards/RomanNumeralsCard.tsx","webpack://play-what/./src/components/pages/dev/notebook/roman-numerals/deriving-numerals-from-scales.page.tsx","webpack://play-what/./src/components/ui/Card.tsx","webpack://play-what/./src/components/ui/Table.tsx","webpack://play-what/./src/core/routing/Routing.utils.ts"],"sourcesContent":["import React from \"react\";\r\nimport { css } from \"styled-components\";\r\nimport { NoteId } from \"../../core/models/Model.constants\";\r\nimport Scale from \"../../core/models/Scale\";\r\nimport { getModelRoute } from \"../../core/routing/Routing.utils\";\r\nimport Card from \"../ui/Card\";\r\nimport { Table } from \"../ui/Table\";\r\n\r\nconst tableStyles = css`\r\n  border-collapse: collapse;\r\n  width: 100%;\r\n\r\n  th {\r\n    //color: ${(props) => props.theme.brand.accent};\r\n    &:first-child {\r\n      text-align: right;\r\n    }\r\n    padding: 4px;\r\n  }\r\n\r\n  td {\r\n    padding: 4px;\r\n    text-align: center;\r\n    sup {\r\n      font-size: 80%;\r\n    }\r\n  }\r\n\r\n  .numeral td {\r\n    font-size: 160%;\r\n    font-family: serif;\r\n  }\r\n`;\r\n\r\ninterface IRomanNumeralsCardProps {\r\n  model: Scale;\r\n  title?: string;\r\n}\r\n\r\nconst RomanNumeralsCard: React.FC<IRomanNumeralsCardProps> = ({\r\n  model,\r\n  title = \"Roman Numerals\",\r\n}) => {\r\n  const numerals = model.getAllNumerals();\r\n\r\n  if (!numerals.length || numerals.find((n) => !n)) return null;\r\n\r\n  return (\r\n    <Card title={title}>\r\n      <Table\r\n        styles={tableStyles}\r\n        headerColIndicies={[0]}\r\n        tbody={[\r\n          {\r\n            className: \"numeral\",\r\n            cols: [\r\n              \"Numeral\",\r\n              ...numerals.map((n, i) => {\r\n                const [numeral, symbol] = n.getNumeralParts(i + 1);\r\n                return {\r\n                  content: (\r\n                    <>\r\n                      {numeral}\r\n                      <sup className=\"symbol\">{symbol}</sup>\r\n                    </>\r\n                  ),\r\n                };\r\n              }),\r\n            ],\r\n          },\r\n          {\r\n            cols: [\"Degree\", ...numerals.map((n, i) => i + 1)],\r\n          },\r\n          {\r\n            cols: [\r\n              \"Name\",\r\n              ...numerals.map((n, i) => ({\r\n                link: getModelRoute(\r\n                  n.modelType,\r\n                  n.modelId,\r\n                  n.root && n.root.modelId\r\n                ),\r\n                content: n.getShortName(),\r\n              })),\r\n            ],\r\n          },\r\n        ]}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default RomanNumeralsCard;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n    NoteId,\r\n    ScaleId,\r\n    Tag\r\n} from \"../../../../../core/models/Model.constants\";\r\nimport { SCALE_PRESETS } from \"../../../../../core/models/Model.presets\";\r\nimport Note from \"../../../../../core/models/Note\";\r\nimport Scale from \"../../../../../core/models/Scale\";\r\nimport RomanNumeralsCard from \"../../../../cards/RomanNumeralsCard\";\r\nimport PageLayout from \"../../../../layout/PageLayout\";\r\nimport { StyledCard } from \"../../../../ui/Card\";\r\n\r\nconst StyledPage = styled(PageLayout)`\r\n    ${StyledCard} {\r\n        margin-top: 16px;\r\n    }\r\n`;\r\n\r\nconst ROOT = Note.fromId(NoteId.C);\r\n\r\nconst DIATONIC_SCALES = SCALE_PRESETS.filter(scale => scale.tags.includes(Tag.Diatonic));\r\n\r\n\r\nconst Page: React.FC<any> = () => {\r\n    return (\r\n        <StyledPage title=\"Deriving Numerals From Scales\">\r\n\r\n            {DIATONIC_SCALES.map(scale => {\r\n                const model = new Scale(scale.modelId, { root: ROOT });\r\n                return (\r\n                    <RomanNumeralsCard model={model} title={model.getName()} />\r\n                );\r\n            })}\r\n        </StyledPage>\r\n    );\r\n};\r\n\r\nexport default Page;\r\n","import React, { PropsWithChildren } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const StyledCard = styled.div`\r\n  background: ${(props) => props.theme.surface.card};\r\n  width: 100%;\r\n  border-radius: 16px;\r\n  padding: 16px;\r\n\r\n  .header {\r\n    margin-bottom: 16px;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nexport const CardHeader: React.FC<any> = ({\r\n  title,\r\n  level = 2,\r\n  action = null,\r\n}) => {\r\n  const AsTag: any = `h${level}`;\r\n  return (\r\n    <div className=\"header\">\r\n      <AsTag>{title}</AsTag>\r\n      {action}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport interface ICardProps extends PropsWithChildren<any> {\r\n  title?: string;\r\n  subtitle?: string;\r\n  action?: any;\r\n  level?: number;\r\n}\r\n\r\nconst Card: React.FC<ICardProps> = ({\r\n  title,\r\n  subtitle,\r\n  action,\r\n  children,\r\n  level = 1,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <StyledCard {...rest}>\r\n      {title && <CardHeader title={title} action={action} level={level} />}\r\n      {subtitle && <CardHeader title={subtitle} level={level + 1} />}\r\n      {children}\r\n    </StyledCard>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { Link } from \"gatsby\";\r\nimport React, { Fragment, ReactNode } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledTable = styled.table``;\r\n\r\ntype TOmit = undefined | null | false;\r\n\r\nconst getIsTypeOmit = (data: any): data is TOmit =>\r\n  data === undefined || data === null || data === false;\r\n\r\n// Col\r\n\r\nexport interface IColConfig {\r\n  isHeader?: boolean;\r\n  content: any;\r\n  colSpan?: number;\r\n  className?: string;\r\n  link?: string;\r\n}\r\n\r\ninterface IColProps extends IColConfig {\r\n  index: number;\r\n}\r\n\r\ntype TCol = string | number | IColConfig | ReactNode;\r\n\r\nconst Col: React.FC<IColProps> = ({\r\n  index,\r\n  isHeader,\r\n  content,\r\n  colSpan,\r\n  className,\r\n  link,\r\n}) => {\r\n  const ColTag = isHeader ? \"th\" : \"td\";\r\n  const WrapperTag = link ? Link : Fragment;\r\n  const wrapperProps: any = link ? { to: link } : {};\r\n\r\n  return (\r\n    <ColTag colSpan={colSpan} className={className}>\r\n      <WrapperTag {...wrapperProps}>{content || \"\"}</WrapperTag>\r\n    </ColTag>\r\n  );\r\n};\r\n\r\n// Row\r\n\r\nexport interface IRowConfig {\r\n  cols: (TCol | TOmit)[];\r\n  className?: string;\r\n  isHeader?: boolean;\r\n  headerColIndicies?: number[];\r\n}\r\n\r\nconst getIsConfig = (col: TCol): col is IColConfig =>\r\n  typeof col === \"object\" && col !== null && col.hasOwnProperty(\"content\");\r\n\r\nconst Row: React.FC<IRowConfig> = ({\r\n  cols,\r\n  isHeader,\r\n  className,\r\n  headerColIndicies = [],\r\n}) => {\r\n  return (\r\n    <tr className={className}>\r\n      {cols.map((col: any, i) => {\r\n        if (getIsTypeOmit(col)) return null;\r\n        const isConfig = getIsConfig(col);\r\n        const colConfig = !isConfig ? { content: col } : col;\r\n        return (\r\n          <Col\r\n            key={i}\r\n            index={i}\r\n            isHeader={isHeader || headerColIndicies.includes(i)}\r\n            {...colConfig}\r\n          />\r\n        );\r\n      })}\r\n    </tr>\r\n  );\r\n};\r\n\r\n// Table Section\r\n\r\ninterface ITableSectionConfig {\r\n  Tag: \"thead\" | \"tfoot\" | \"tbody\";\r\n  rows: (IRowConfig | TOmit)[];\r\n  headerColIndicies?: number[];\r\n}\r\n\r\nconst TableSection: React.FC<ITableSectionConfig> = ({\r\n  Tag,\r\n  rows,\r\n  headerColIndicies,\r\n}) => (\r\n  <Tag>\r\n    {rows.map((row, i) => {\r\n      if (getIsTypeOmit(row)) return null;\r\n      return (\r\n        <Row\r\n          key={i}\r\n          isHeader={Tag !== \"tbody\"}\r\n          headerColIndicies={headerColIndicies}\r\n          {...row}\r\n        />\r\n      );\r\n    })}\r\n  </Tag>\r\n);\r\n\r\n// Table\r\n\r\ninterface IColGroup {\r\n  span?: number;\r\n  className?: string;\r\n}\r\n\r\nexport interface ITableConfig {\r\n  thead?: (IRowConfig | TOmit)[];\r\n  tfoot?: (IRowConfig | TOmit)[];\r\n  tbody: (IRowConfig | TOmit)[];\r\n  styles?: any;\r\n  caption?: string;\r\n  colGroups?: IColGroup[];\r\n  className?: string;\r\n  headerColIndicies?: number[];\r\n}\r\n\r\nexport const Table: React.FC<ITableConfig> = ({\r\n  thead,\r\n  tfoot,\r\n  tbody,\r\n  styles,\r\n  colGroups,\r\n  caption,\r\n  headerColIndicies,\r\n  className,\r\n}) => {\r\n  return (\r\n    <StyledTable css={styles} className={className}>\r\n      {colGroups && (\r\n        <colgroup>\r\n          {colGroups.map((cg, i) => (\r\n            <col key={i} {...cg} />\r\n          ))}\r\n        </colgroup>\r\n      )}\r\n      {caption && <caption>{caption}</caption>}\r\n      {thead && (\r\n        <TableSection\r\n          Tag=\"thead\"\r\n          rows={thead}\r\n          headerColIndicies={headerColIndicies}\r\n        />\r\n      )}\r\n      {tfoot && (\r\n        <TableSection\r\n          Tag=\"tfoot\"\r\n          rows={tfoot}\r\n          headerColIndicies={headerColIndicies}\r\n        />\r\n      )}\r\n      {tbody && (\r\n        <TableSection\r\n          Tag=\"tbody\"\r\n          rows={tbody}\r\n          headerColIndicies={headerColIndicies}\r\n        />\r\n      )}\r\n    </StyledTable>\r\n  );\r\n};\r\n","import { ModelId, ModelType, NoteId } from \"../models/Model.constants\";\r\n\r\nexport const getModelRoute = (\r\n  modelType: ModelType,\r\n  modelId?: ModelId,\r\n  rootId?: NoteId\r\n) => {\r\n  const modelSuffix = modelId ? `/${modelId}` : \"\";\r\n  const rootSuffix = rootId ? `/root/${rootId}` : \"\";\r\n\r\n  return `/browse/${modelType}${modelSuffix}${rootSuffix}/`;\r\n};\r\n"],"names":["tableStyles","css","_ref","model","title","numerals","getAllNumerals","length","find","n","React","Card","Table","styles","headerColIndicies","tbody","className","cols","map","i","numeral","symbol","getNumeralParts","content","link","getModelRoute","modelType","modelId","root","getShortName","StyledPage","styled","PageLayout","displayName","componentId","StyledCard","ROOT","Note","NoteId","DIATONIC_SCALES","SCALE_PRESETS","scale","tags","includes","Tag","Scale","RomanNumeralsCard","getName","props","theme","surface","card","CardHeader","level","action","AsTag","_ref2","subtitle","children","rest","StyledTable","getIsTypeOmit","data","Col","index","isHeader","colSpan","ColTag","WrapperTag","Link","Fragment","wrapperProps","to","Row","col","isConfig","hasOwnProperty","getIsConfig","colConfig","key","TableSection","_ref3","rows","row","_ref4","thead","tfoot","colGroups","caption","cg","rootId"],"sourceRoot":""}